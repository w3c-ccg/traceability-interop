{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3b550f49-cba6-4bcb-9781-d0fff8d8c740",
        "name": "Clear Cache",
        "item": [
          {
            "id": "08ebd3b2-36ec-4a44-89ad-0f978009a3d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95110324-5187-4866-a8f3-1a87646354e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9c5e63a0-bc72-4b3e-812b-e922b5ecc47f"
                }
              }
            ]
          },
          {
            "id": "e62a9c58-1aca-45c3-827f-458f1207112f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05a2edf6-30f9-4619-9211-243c57bf4ddc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ba5c2b30-9911-401e-945b-255db585e767"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7fcf69d2-eae8-41e3-b247-739649052d58",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4ec1f8b3-3af6-48ee-b045-7970f6be1c4a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34e75a72-82aa-4fad-bd27-a5bb97787805",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca8e4339-521c-41e0-a6f8-13bafc24f99d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a304804-5285-4994-9828-362cd285e7bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48279574-6bb4-417e-a9d6-5cb57a6106af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34c1c3c1-3c97-4b25-b61b-1ecd9b7db48c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0c25acb-725b-413c-a382-ecd214206f6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65a9b2a4-1788-472a-bc7a-1186a79e132b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18ad3902-5ccc-4482-b0f8-d9e90683c454",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8ec062e7-536f-40de-9c88-0c70a54f63de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8891265-68c0-40e7-9f2a-6b660550de12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf6c51d2-1509-40de-93a1-be59695a7783"
            }
          }
        ]
      },
      {
        "id": "ab820d22-3bc6-4e6d-8aa3-105f4249e096",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "45bce1b6-4053-49e8-abb5-5ceaa48edd08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db7193db-b998-414a-a92b-3a5e7fa48b6e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ba1fd30-04a6-4a20-894c-dbcc8ea2cbd8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a75df9-eadf-4d44-97a1-2adf7956b315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57488d5f-22e0-4efc-a381-7e9f67a7b8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53904e7c-746f-41a1-93ef-652e8c213bfb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aebde51-ea8e-4c1e-95d9-cd1821f7a5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63f3beb6-fcee-4859-99ed-15d63e5166c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15809fe5-b078-4d2c-8b12-9167ad42a2e9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c0276f-2ef3-4312-99a9-f0f3d08d7448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0304e498-6fb5-4376-a8ca-7a0b369c3cd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23028393-a9f8-4b0b-89ab-c850293a8846",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11d56630-4425-44dd-a2b7-184963eda02a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a73a94-1ff1-4f05-bbd6-694df40299a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d40d3e94-92c9-436b-9884-2a70a60e42ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a04fc9-f1a0-42ee-93e2-ca90122f99ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38523483-41e3-4cf9-a210-c1a76e3938c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b417a078-0af6-446d-9727-d664d0115b55",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b70d6d2-ce68-479e-ba19-74edd0d1c14b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab7ce26f-5b98-467f-b6c9-3a7fd94f4216",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cc42666d-5fff-4c07-abb3-095b7f169551"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "733a6e3b-c73d-417f-8ae6-cd28f5354840",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "07bc759a-f66b-4a6e-8dc9-c8ec8f975fdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba1a07f8-8cf6-4dc4-9f19-76ca48ec4f33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e493a7b6-bb7f-4725-996a-49e53f6e66bc"
            }
          }
        ]
      },
      {
        "id": "66f9d432-8256-4f26-a47b-b5e9ab55b621",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "09171092-8059-4ff3-9b2c-818eab448fe2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b5424f7-1b7a-4554-a32c-4acff2bbc1b6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d85b4cbf-624b-4299-a614-9d66467961e1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6001a270-0c16-4807-8516-361eab46f611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97a37de-7678-41c0-a875-05ed7daf8dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d107042-a999-40b1-8ca4-ebe00ad48849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "940f743c-b055-4899-94c8-d4a14edc83bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517586c2-4bd5-4ebc-aadb-133264e135ae",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef94e63f-3745-4b60-86e5-697f537562e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f629df48-2a00-4648-ac42-05267cb7fee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccc5920-724d-4b0f-9dc1-8e3fcd5690d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69d1a667-c52f-4fd5-beaf-fa2f95884b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21e3c6d-37e8-4b02-92a1-30f50bd135ac",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb814b57-208d-4cd5-81ab-1b04c2457088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd79513-7197-44f1-9fcf-750c44475d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9644abed-0915-40fa-b667-422c3c08d069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e81645d-6af5-435a-af7c-4b2f75790184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fea260-67be-4d1f-a1c2-506a085ddbd6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14779de4-b27c-4329-a787-9a1d79fb0651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d17808-4ec3-45c0-b094-ab7127fd1d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbfb84e-7717-4b80-b061-91a2dcdf4932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ac942ab-79ec-46b0-af7d-1855a750d82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7bd42b-b78f-433c-bcf9-677b617f2a83",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486d4a79-e478-4471-a121-01b26a1a0944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3ddaf8-fd55-47b0-bccf-2f7f624b0272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e00181-3b96-4bb3-8cdb-423b41a416ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b081b3a2-f43b-49c0-83f1-988066f866af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08f229b-9d4d-4033-a799-299ba4f44f25",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06441e79-0633-4557-8621-38f992721f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b26d1b-05af-4757-bec1-fcddfcff3703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be71e62-532e-44e1-8de4-3dbc9512aed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c0eef3e-21c8-4182-86b5-f734a032a04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbfe0d4-c6aa-49e6-ae95-1352ae8b3e6a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e16136d-3120-45c4-86bb-dd618ed81efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cd0ceb-48a9-4a9f-8785-e6210b8aa780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5f8e3d-971d-4159-a280-8c7dae6e09a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ead245b7-58ab-4b32-943f-0b796dcad98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bf1705-d97b-4bce-ba31-570c285a1c09",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8d18e0-09de-4801-9ade-635cf8d121a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91699b61-fadc-40fb-9ed1-716b5a5fb032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2cecd4-7bc8-48dd-8e50-7ba095dd6bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd97b624-0459-4887-a9d6-8b6fbdae06f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f5376-1dfa-4f61-b068-92f4606c6719",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8bf954-a425-487b-899e-eb2bc6de61d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ee3085-fabb-4e12-9ac9-077f5c432537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86259c7-05cb-4d03-a514-40f43105673e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd51bd01-559d-4175-b253-174174b17a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13589ede-b31a-4415-b462-cb80cb1765cf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a29097-d74e-45fe-b487-79a657931332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3391a88-bb8b-4c95-8423-8337c281a066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a781c710-a506-41d4-83c1-11022237fe78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0beccab-a5a5-4449-b6ce-ab9ad6f13b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20f8f7d-29a0-4c8c-8374-6a6987ddeb52",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77458270-c323-4669-8b3f-a063141acaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f0da7c-1500-43f5-bcdf-c9cd3b5bc4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29da6d65-4775-431e-af5d-6747fc07c322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e021161b-19d7-407e-913b-1b772b9c2fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf573573-f660-4ef1-97e9-46db53f4071d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e635b5f4-b545-410c-af1e-a96e98423153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dbc206-4f26-46d7-9574-3c14110b0ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9bd652-34b1-4894-a628-9d1502113f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78e99843-d06c-4d58-b700-9c609cd2aa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a9aa3b-b1ab-4ab3-8d18-2fa3dfb304ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529b7f48-7f37-456a-8ffb-bac2eda69a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13a4d1e-b0fc-42ac-8e87-63625227b0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cdc0ee-e01e-4237-9d11-8d3f13bfba2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b33fe37-ecba-44ce-bc3b-b333b0a4380b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db3b8fe-3e79-463c-af34-0da533b28f64",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd31cf70-43c8-42b3-b4fe-bd5accdad35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb17ffb-0c96-458c-b018-ca20d9484232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6016a5-5d55-4274-ad8a-b8e59747d324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "752e1ae3-dcbb-4fc6-976f-6b2dcb3622ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bf4940-bad5-42bd-b0c3-8a51486df4e7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c3ad2d-875e-46e5-9a63-8e93c4b3e95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8014ac-4d38-47eb-8c15-67efbf261821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99367e79-09bc-4c8b-bf44-cbab89915b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b0c9504-ee75-41b1-aee8-833b8b2e37ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9253bfc9-7a2e-4cff-a663-0a9a48bce5d4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0824fafa-3271-41e2-88cd-bddeabb6cffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1a3da1-4fa9-4a3b-8001-346f323a0fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a4e077-9cc6-4df1-bc56-cf46e57c8138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "489f683b-2c0d-442d-a98e-754676f0cbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0710133-e8b4-4e87-82f0-7ebcc9088cf8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a444d30-3882-4090-9848-7dd650f8877f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2840dd-2864-4634-ac87-a5182309f4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d413a0-b41a-4dbc-abba-79571f851193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89800862-7aa1-4545-9570-505ad590b82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97e7fd4-6def-4044-8cfa-a869383f6230",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ce51cf-8fe0-416a-b655-3126deff7e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0480a258-a9f2-4621-9829-2fddd1b0e393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877c35bd-b557-4627-a018-8f9e42eccc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f77a508-f7a4-461a-ba6a-4edf03d72333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff9e2f3-c30c-4cb8-a4b2-85adee77e46f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094e484d-e1c0-43e0-b67f-ab858bb4439f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b61947-44f3-47cc-9283-9fc523893446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bd7d93-0c16-4d0a-bccc-c5edc05414a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df5a2781-4252-4596-b3a4-c973e0cd1cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8628c643-8cc9-4177-8e59-d8f93cd75b94",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ce611b-bc21-48a7-9644-379d19e8d217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b23e3f-5534-46d5-ba9e-a5f4db45bd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1728fcef-479f-4ba0-b5c6-ba72b8650dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e60863-55db-4314-8016-084f302e8f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52dac03-0085-4038-9d16-f091387f9aa1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5580e0-eef6-45b8-8a5b-1e192e053409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef99884-050a-4f7d-8e07-37c63368deac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562bca8f-151e-48f8-b02e-b13354085ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b2321c-4b6b-4dc1-b81f-4271d0488b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f350cbb9-eeac-4b29-84da-6f2189955e8c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9f5a72-a6f2-4002-b60d-5329e6dcd104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8136a778-3751-4cb7-8eac-6c021cadd320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103131d9-1a20-4ed1-8058-6e7719c80e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e14a6c2-9d41-470e-8835-dbf05412fdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf06f329-b194-4345-ad36-1f2b09eee6c0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea470b35-84e1-4811-b85d-6cdb0515a82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b80c112-f063-4e36-9d52-853ed198da18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39838970-59cd-456e-86b3-0841a66699e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25192170-48da-4dde-ae1e-3ad24e9c3ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0a07a2-24f5-4f80-9b82-0448321324c8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8473c984-3e52-4db7-bb41-ffc3e89fa0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c876e56-9bbe-4caa-9ae0-5f45eb928932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af90d29-aa32-4b1e-a52d-22b70ee7b2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "83da96f9-7236-4706-9726-232483ef96a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfa2669-b831-4a5e-a09d-9914bdda3c08",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65a1a02-6e7a-4784-8e26-87cc38b9a53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3958a806-8122-448d-b589-c4308eb9e1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c60817-f817-4800-8e41-ab59832b7414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "299371df-bae0-4058-a33e-d568f41b5a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7df7467-3104-48dd-a94e-6c629fce71dd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba2c166-928d-40f8-9115-a9705ba98a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182e69c1-a4cd-4323-af52-328a5aacc650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9633c418-d431-4fca-bad2-6ec8e945eb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da75e32e-28ed-443c-8efe-3c37ceb0c033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cd3165-5062-49e8-b302-3cc93b0d32c7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb4279e-e0e1-4079-a1c7-68c373f08c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57df56dc-7277-4e37-b424-53185468bb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdbfdcc-a8f4-441a-aeae-3d12be095912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "455b65de-73cc-4bf9-a3ec-15d40371aa76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95e17a6-d380-47e1-abd9-1a514dc2fffc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5ca095-2704-4eb3-9f68-851f53d287e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cfe8ff-217d-41ab-9089-5094228ccde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e475a8-810f-4066-b4a1-348750dc2f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb25fc44-7965-47bb-89b3-0acc939dfdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6251af-9ae6-4efc-8d46-d96f2afb0e33",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2413e00-429d-4299-9b5f-35963320685e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8903ef63-403b-4da7-bca2-f82dbd3a27fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29a7fd5-102a-4827-ab97-dce7579242c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6ac6cc-d23a-41c8-888e-15d556cfa50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5335def-6fc8-48ec-8882-dd5d117e3f65",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a364331-ba1f-46e4-9f0d-3b97c908d4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74085411-a8ba-41c4-80bc-6f047815e587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc10826-6945-4713-a7d3-c995f386c99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "434c4c09-751c-44ba-8a15-361c1889e3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5a21db-0912-4894-860d-5c8ac95eec26",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f111c4-f5c9-40a3-9f6f-55d9d1821ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ffe644-14bc-44e7-907e-1bac9040fb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8076e5e2-64a5-41d5-8f30-70e7914d36de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f12c954-5e7f-47fc-bda1-5eabd2c474c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067ce429-e430-4be6-9eb8-eb2884586bc3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f5582f-fe3d-48d1-88a7-a7e22701aec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7436cb19-0aa6-4e54-a197-ee3612d38c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd8900b-311d-4334-993d-73dcfbdf7f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef7ba77-7d57-430b-b74e-5887264799b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc60b5e5-7de5-4bd1-b289-936452886de4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0318c315-c522-4791-8eaf-773b232ee919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe904f1-d311-46d9-84a9-2f95fdae2861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efda2a93-678a-4d58-8e46-51359d5cba96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade50035-4198-4d99-ad1a-526395118e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956d1a53-a7e8-4367-9107-680cbb0afa2d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52da0dfc-aab7-490e-ada3-9ace992c369e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25cfefe-3938-4106-8383-2c17b12cf376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5c8306-de20-41a2-b976-820b42966c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4a6305-b2bf-403f-901b-15d10d5dd2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957988ea-a154-49b4-b904-ab75bfecb681",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5f6440-7906-4f05-877d-477a631a8e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46249b6e-8bc2-4132-a450-b25e2d5dc344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579a7667-0ea9-4ded-b47d-85010c32bb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7f982fbe-409c-49b8-ab82-e7dcc21e260e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7af562-5568-4066-915e-d68675b58e37",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac295b4-2258-40c0-a78c-ad0a89c0cdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3fe6d96-489b-4fe6-99cd-7ec4f9ff9cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dd5e1b-7854-4a8b-9b13-a45ea9aad5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "341276aa-68cc-41cc-9cb0-9dcb6f40c37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2552b1-17b3-4be1-9e7d-d2519a5803cb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f437737-a5a0-4f96-85e6-b9aabe65cc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024e5d84-2eb1-4dcc-8c63-a179e0b0e480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a0c0b2-62f7-48a0-9af0-b57a447665dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fc89ba-34d4-4cd6-b39b-4fbd21aad220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f940dfe9-6dba-4fc4-9a8a-2963f8d14f54",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bce8172-8c74-4fd6-a398-d947efc7ecff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31da0172-bac7-46bd-9454-f252c4e9feb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348a64e4-bec3-4233-beb9-66767f0e1d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3662c4-94b8-48c2-bd3e-81d06e1947ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0113205-adde-4fb9-bdd6-64928b183fba",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43013ac-3ea5-4faf-9ddc-02685c2ac982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e85b23e-dea3-41df-a296-08aad123c942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e75a0c5-b230-43ed-bf7c-43ddd95100b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "581a4152-7d36-406e-9e9c-5e8f53797934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad45b86-1121-4d0f-bd06-24556b638501",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbd5ca3-f6fa-4bd3-96c1-36cfd668c95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd10fc9a-4f77-453a-878a-3ed098f08cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff49cd6f-1a60-4414-bcf9-557f2f1a090d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e188b667-2ea2-4e4d-bb19-47effe9015c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace54922-8668-424c-ba2a-f6a8b938d6ba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60cda1c-3f7d-4b63-949c-a2b160f3dea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846d12b2-8f4d-4319-a9c6-562261ea0e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078952f3-e4d4-450e-9c2b-369e171a7b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9c67e2-79fc-4d7c-8a2b-a75355880240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9dce24-3503-435f-a856-0061e17e0d06",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559ccb9a-e00b-4969-9c86-e6edb8d0efe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3561d6d5-8ec5-4989-a3f0-b4dbcff05dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7592648f-cd1f-44b5-aec1-9109bc1b5ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d22f0384-3792-486e-9ac3-dca1bf342b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f751bd61-1da7-4e30-b3f0-3a7909b1668b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0489f9ea-627a-4a67-be0a-7e735a892cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb86baf-2d26-4bf6-b7e1-842314b45e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d27298-225c-4ee3-b14d-62c1189311e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "03fbff0b-b04d-4944-8e37-2dcc5283b676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16122177-cb0a-4615-bc80-3fe496fb1d2b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5c44fb-d722-4601-aa2b-8728649c794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf274c9-9378-46bd-9aa8-aec758d91e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6961d3a0-0682-4b94-bb81-8895818b7069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "091a52fd-db35-4056-98e0-959d562db346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1463adfe-083e-46cf-bd18-2c87059e5b85",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffe9f84-55db-462d-8ed4-28644f6588ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83b661e-7fbf-4f55-951e-32bb1f3eb7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23869115-aac2-4655-b64e-2fe2feaa7a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b762f3d-9279-4ea1-9ef5-0e1a6b81b7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8cdc5d-ea7f-480a-be14-206605ab892d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051befbb-f6da-4d94-a84b-743d40ae051b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac976f02-3d02-4de1-8253-9079f69f37d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126172f7-a11f-484f-a816-e241488384c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9bf9d1-1f8a-48f8-8901-37092eb7e641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b42f247-acb4-4878-bbfc-5b9d1fdfbe83",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6996747e-1bcf-4646-87f8-a9238bed3a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d06721b-6d47-451c-b067-2290f3443d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3851ff12-e6ff-491b-a524-cf863d79484e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5676184b-b336-4ecb-8370-90dd48bbd369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861e2b63-dc08-4286-8ff1-c40b1866a697",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5b0247-ed7d-44c6-a49b-39edffbc60c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcefc81-62c3-4a02-8e1f-5c244b5c4753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e8091f-2ab1-4848-8a81-8da18b0f260e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1235816a-495c-43c6-ba65-039dd4861cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfeeb81-951e-459e-953c-9c62312bba32",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6b2e46-ae69-4a51-9869-831211de0ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e58cf3-c30a-48bd-8b32-bc08207bc188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f54eebb-1611-4977-afaf-716a49e2917d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea8e2ac-b0b6-4ae9-b46a-dedff4c571a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8088a0-5e2d-4147-9ac3-7210c0432336",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f579cc-159d-46e3-8a97-b1f68b1f9155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b6d46e-b85f-43bf-b883-1c7c56cba591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a0ede9-8988-436d-9b4f-137d1258f32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca43012-f601-4929-b200-9559c66d6951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002e8302-8561-42db-a066-c897d271e5f5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0461cc1-f635-4d93-8bd9-6460d625c7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245390d0-c81d-43c6-9ab1-d3ed8a9542b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb3886d-a429-44b4-8289-b12519240eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f700c8e2-8506-4ac4-966f-4ff4f6c63e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eb9b1d-5383-4928-9775-c7b6798195ee",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0890c42-0025-4244-81b9-1a4e904ea1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f2b463-64ba-4497-9548-bdc50340f055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239f3a1d-f325-4778-aa10-a4f741b5baf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d05901-cae1-441d-a79a-ce5bdddd3422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa10b322-b219-4cd7-8764-1a3370cbfff1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008ab9ad-f98c-4dde-bb38-f5062fab0d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8441e5-4684-443b-8e9f-ac4862a83213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f22f1ca-4941-4c2e-8ff5-d9d3e53b1c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af74b27-f308-4ab4-ae9c-fffbe589c915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38db0154-5689-449e-a993-64385e9b76bc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da377da7-4636-4d76-814d-7f0f0796966e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039a0813-973b-4378-b95d-4784e1cbdbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea8ada6-3bc8-4496-a288-945ded827d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b6259f-b5a9-4dd2-999a-e5bbb6ab431c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602a4239-6bc3-4509-9448-079264c65fc2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25148a9b-6e6c-418d-a485-ea41c4b458d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726ddd1b-7120-4f50-b011-c8ac536428c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1a1bc3-7ea6-46e7-ab22-624ac4aa9a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13b607a-66ef-445f-9288-ba7000ef0b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c0016e-c445-4bbd-9d89-fa2defdcca85",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0926af3-ec01-475e-a07e-b9eaa3b5e67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f9af50-ac02-4024-a938-b33d23714b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac012fd1-6493-4bb5-b029-b798465023f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e433e1ce-63ad-42fb-9259-fbfb9815f4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e52684a-22e1-4266-8cd5-8a5763d61927",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095ef534-82c9-4ae4-b718-92c5fd9230ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7984f4-a2e5-4382-8ed9-8e419ced95bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986cb384-7c9d-40c9-a77f-b587072d06e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0d1a34-e4a7-436b-9995-e72f04dbdbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b98b8c-44ef-4d70-b559-5406e6a73d43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039097f6-2a96-4b3d-b352-c019e5ee7750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9131683-daf8-4a28-883b-63bb54e9a7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb695a6-f5f4-401a-ac01-09446fd7a95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eeb37fb-395a-41a7-88da-70cf8e8af27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd9383e-8e16-49d7-8b80-800e786118c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c688dc3-1b55-4d61-bb2f-8d9642fe0f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23783535-d619-4bbb-8764-68ea2e6a0789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e6cdfb-809a-4aca-9363-05dee54d3c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d96c4e7-e0b8-4bbe-955b-5e7714977144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a0125b-ac42-4fc7-a3b0-64420586fbc7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c1e70f-f865-4de4-88ac-b88917c1e59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73615b92-4981-473a-85c2-1debcd6942e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f829ba1-f5ff-47b5-822c-3c041ac9d432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5001a46c-7015-49dd-80ca-93dbcdb2efe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d77c95-77be-43c1-92b5-28d6afda39bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006b29c4-5c75-41dc-88e8-31cdc9c57636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01dc39e-cea7-4da0-b014-28b0cc9c67a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52df412-2241-4285-b8cf-216c0c77d649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c977c135-4e95-43d9-b47c-24ea04d87234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d745edda-bc42-4594-8061-b1e10bf8dc9c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701235ea-6086-4ba0-8181-9ff704c9a306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f0eacc-4be2-4739-85b3-6bdb9e3b28b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd9e8dd-bc92-4de4-8357-6c2c2267dc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d89292e-e673-4fb0-adec-1d35ca43a92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d84d22a-c4b2-4c26-885a-98c17e4b63f7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36cb284-1d22-437f-a0a1-1553ca0b1f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e579e6c9-8651-4dd6-93d8-112e208cc13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32902b88-9c37-487a-81d9-57e05f51b254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8873b940-2e3d-4d24-9cac-0c265af61a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8805cafe-699d-48a4-9518-455bd5f84d45",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578d0c12-d583-4c31-a648-627aa3e27726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9279fdd8-3ea6-4d17-ad82-e36590aaac5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e812f46-8288-4766-babb-57ea170f2aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d097964-e1e1-4359-959a-dcfeed61b4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0987768a-6305-455e-bb7b-711866a1f362",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2914b1-3e24-4aef-8107-084bd3931060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be7d0ed-050d-4e19-837d-74e45badb76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f263626-3cfb-4c8d-8f31-9c4d50c2c83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "554e1793-bc33-4172-8383-67c00914caaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4dc7bb-97c2-4550-9c14-425a05071e50",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a891583a-27af-4196-bd02-944886790602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340f8ade-9642-4806-8a23-6ac41e395b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b2d042-dd8b-43b0-a794-fe68178d0a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c405ede9-7912-4d9e-a4a8-7ef2b871ba63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc165043-c1f2-482c-bc67-2914e540bde2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bde8b4-5ac7-43f0-a7b6-86345d60c680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9b62ad-7899-4bbe-ad0f-5ca0f0d166fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24742c5-d187-4a35-a03e-4a8539293e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b47d87b-074b-43aa-80ca-54ee1f9bbde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f32377-bd5d-461f-ab00-bb2780655d17",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0fba0c-7c6e-4f9e-8755-a129b7f62471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5fecb9-f82f-4737-a3fe-35d788783535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084b4b4b-462a-48f8-bccb-de73117acfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "57553ea6-4198-4001-96e6-774b262235b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7b13c6-ab44-48eb-b0fb-ce7c71151a52",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5370c1-2e0a-42ae-ad5d-f489f7b3ba3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d551ea9-bf18-419c-8377-aabc097096f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3206eb43-664b-485c-8d0e-5c19b1fabe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae433be6-4a37-41ae-91ce-b6e7fa0fb4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6e489e-8771-4601-8dd4-bcecd29f9967",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6805562-a4ee-4122-b97d-c9bc85f762e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf5cff6-ec18-41ca-ae33-c9a93b1c42c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2e4468-8bcc-483b-ac09-d34a9a5be892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d13f9782-c569-494e-802d-50651f422fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12a2103-464c-4b1d-8089-77e88dd871a5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325d2cd8-f633-4d19-ba41-b3cfe854c76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9524f3-aed4-4c55-82fd-d7f5c9e9b8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5c16b4-8ab5-4d24-bc76-58e0bcdc3c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa803abe-746a-426f-9af5-5a704a14d7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e502107f-9acc-48e4-8ebc-3fcce4c793e1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a311732-6010-4054-811e-eb447bfcee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab409802-c479-4923-87fa-5833c7e08d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547ea24d-6566-4bc3-818f-03ab539534b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "033ec842-6baa-4000-b763-a193657d9f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c578d54a-2ba9-47a2-9879-5785df6cf929",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f6ec25-00aa-44eb-8c9e-e6e47c2c1122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b205be-46a5-420e-9ea4-7e557b06b879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d3aa2c-5f07-4e34-b2c5-f506ab74d865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b706f9-2735-4d4a-8d2f-21c6a54445d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c2d068-bf65-4ca1-85f4-dcbc52eb3792",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8682d20b-ffdd-4b9f-b157-9712b1c64031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4461086-3847-49f1-ae2b-5eb7d9295844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c9181a-17d3-4693-a7e0-a63e56dde35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b14552c7-34c4-4866-904d-37c607cac4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1225e2f2-3ad8-43bd-b8d9-7efa4e826021",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb32463b-e659-4f6c-8161-70ff34731ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f286228c-c4d9-408e-aa3b-9d1f62ac06a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ebbe65-cc9f-44ce-8b5b-db2fe0abe007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff5a899-51d1-44ed-ba62-05495843242b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79296327-c5ab-4471-b49b-021ab84a59b0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3dd480-ffda-4a7f-acbd-a4044067b537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e968437-25f0-4bc4-b235-eb2998aa09c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa211592-c3ac-4f46-abe6-c31c26306b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "353e4986-eba9-4f07-94c7-10126b7c2100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aef4fd3-a362-4839-9db0-6260e4ce0e09",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faa07b6-3b45-40ad-8b24-1a66ea616a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05603a7-17b5-40a6-a1e6-a6edb02f0916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6a357f-1d8a-452b-a490-8ac4389e2f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd46b1a-dc39-426e-8cf0-16c5ac0881e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a3f91d-14dd-46b4-adc2-1163f83fa89c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1a405e-29c6-4656-9854-e47ec0e7b3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c47304f-6547-46ca-af14-07d142b8de86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cda9cac-6043-4cd0-9648-0f6f590f25a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5fdb7e-e4ba-45c2-88e4-473d443853d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7488853-2393-4df2-ae49-1fa756fc59e4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a81dd6e-d7bb-40ca-9846-aff4841775b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacaec51-cf6a-4576-ba2a-656f41571f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1233136a-9f7f-47f5-8d65-f99ebb107108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c732de0-a934-4e91-b599-cf06cae9493c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc4a3a1-9c0a-4585-a270-4be623db09b0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b7f57a-973f-41a1-8ace-3b436784cf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd913820-8de2-470d-91c9-d450bbe0a26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3012a015-9c4a-483e-b73a-43674077bfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a48d2509-fe53-4531-925d-e40fac446c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54516aa1-73fa-4a65-9447-dc012e2c5f7a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95b18d6-fce5-4b9c-a0eb-f5de6e8fb283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2291b9-37ba-44f8-86e2-466508f0b41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c164912-96a2-460e-b520-bd188ce40c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d1684a-5d0b-489f-8524-9ae3920e83eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1555f27-d522-405d-9772-a30345e4a8e1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a327fa58-0852-48ed-84a5-151c55e347c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d612f6f2-1fcc-4d3c-acf4-88b43bf41d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742282c6-d80e-4a54-a8f4-d7d0e448ab7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a67a45-2e11-4813-9880-2f7de8974ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d466a61-2fd4-4779-8832-ffc8b18a6051",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3e13e0-2167-4125-a5b5-bba3196b49de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c76139b-5262-4ebf-95de-27660a779cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d6e98d-6c7e-4abf-ae85-4d3b6146b61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f994967d-604d-4c2c-8f7c-6196159ab538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00bc144-1b0d-41ee-87ef-6a8f830268fe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7a3a48-1863-4e00-a847-43fd718784e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93800f9c-b4c2-4771-aa89-badc4b046bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b88b51-7274-49cc-96f3-461e48fa67bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6570a4a8-48c7-4536-a8dc-b58280a5f224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a91c07-ee8e-448e-bf7b-e4946bcb5c83",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c41b9b6-ca6e-4b7b-98d8-7c5fbeb37ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9061776-d1b7-46ec-846c-ccf9a2cfaa45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ecc9aa-dd21-44af-b402-cb19e3abea9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86915fad-2d2a-4d4b-9321-cd28b2f7691d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd352543-52c3-400a-81aa-d3b279370d8e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5410cf-9915-4431-87a0-4433e5891e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a451323-1d22-484c-84e4-6822c20b185b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2295089-d885-444c-ab29-5d2542cd9a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c84a81d2-181c-49f7-9c3f-d75f9d6e4a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60d1501-3581-468b-b9b2-e4e8b50d780a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19da9fb4-553f-4e73-ba7e-5c3b9410eb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4fced1-4a56-44a5-9493-9a7a1300835f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90342bc-7656-406a-ad33-b689655168f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8af3fc1e-36c7-4d51-b846-7c4b0b7f809c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963cca13-984b-45f5-99ce-1ce1b8ddae59",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888c74b6-d8cc-4ff8-8bbd-657d08c7cddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3012facf-1fdd-4608-9252-6d4473396a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a77ecd-c89a-4807-8c08-a63a63249735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67af5c8f-de0c-40d6-98c4-ac93442510bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a732dd-e582-4f46-a22a-7b8a599d876c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea598367-8311-4574-ba6c-b40c60636e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc0156f-8c20-4e58-8209-fd7409b69afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f191323-9387-450c-808d-f248b8968c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "922703ef-6107-4919-aa29-383119ac1caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d8dbdb-d890-46d7-885f-b235012b176d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04b67c3-80d4-4bf7-a04d-b01bbc9e75ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d52a8cd-3301-406b-99e0-8d5b70c861e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db14dbf6-fc41-49b2-8e91-e7ee919fcb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "55d8f353-5d4f-4aa9-8981-bb9757e496be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d7bf03-7974-4a03-828b-a6d3db9fcb0b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8cad23-0eef-4427-9d9c-4604da724bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a32a003-ab38-476a-9039-346bf4f880ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6ca2d3-3565-4d58-94cb-1327488738ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9410667c-56d2-42b2-81e6-959a86b5c4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bbaf7d-5c01-4a68-85d5-65f8ab046344",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8af4a47-ae00-42d7-8b3f-4c28f7267e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "98d70479-11a4-49d4-bf57-1a9eae45ac48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5247545-e695-4a73-afbc-dc92266d920d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3a0274-78de-47f2-a100-5ee9b0adcaf4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35e2ca9a-e290-4612-90fe-08462e25ebf3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a509ed3-687c-41fe-b099-be8390847cab",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b65ed2-d997-4e11-9ef6-10276a9b2499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4485502c-2769-43f3-b98d-1fd77d67dea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15a8d8f-8cfa-4b2e-af96-1e1496599f9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bdf703e-ff77-4dcb-bde0-6f3ecc9548ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77427ed8-c6fb-4a06-93fe-2a097298b3d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c17efec-9f93-40c1-8265-e2f74b4497bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f42ae6a1-bdab-41bd-b375-b4873ef0a8e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46292587-a715-4faf-90fd-58d066c1b50e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3d448e7-2869-4a51-8b42-970841f4123e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f334a5ee-456d-4646-b959-11afbebf9e79"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9e6e99ba-f113-4de8-8920-a631f015b48c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e198952-65a6-4308-be3c-9501d78d4b5d"
                }
              }
            ]
          },
          {
            "id": "1c1bc0ec-34ed-4986-9387-4f8a1f2eaec2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "829ed5f0-9b14-47ee-902e-85adcf199ae9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "330c2e79-fe37-4f56-a2d4-0f9f162b099e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385b3074-2635-416c-94fe-f47db6687025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "afe34ead-74b7-47a0-8f66-f2e66f2c87df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd63ea9f-60bf-45a7-8e22-b3e0211d2055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89ad4f6-e5a6-475e-86ee-1bdab0d62353"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cdaca0b0-cb9b-4cff-ae65-97fe4506c08d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1c6ca22-459b-4232-a134-166d1cd69b73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9748c4a1-8214-4f34-a97a-68c4da460d52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3b24778-be2c-40cb-91df-71ad4edfcaa3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8fd458c5-b032-4416-b084-a2c416a4a3db"
                    }
                  }
                ]
              },
              {
                "id": "83137c1f-1728-42a3-b2b4-6433c25e00ba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "612a010c-06d0-4e4d-bda6-b0b97f31babb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad40a80f-c1ce-41dd-9219-5e781b92c83a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3904c045-23d4-42a9-ae43-4aee7d11a330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c3f2fbb-26a8-4019-ab4d-47ca739a6f66"
                    }
                  }
                ]
              },
              {
                "id": "27507d4e-e63b-4e20-ada9-a82fe11df80e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "102d8127-6f3a-49f7-8bb5-e132816551b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29fd1c76-e830-4003-91d2-3d560648ae5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39a625a3-86a5-47e1-8b27-ed221e7c2f90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb933655-1960-4564-9ba1-703fdc3de18b"
                    }
                  }
                ]
              },
              {
                "id": "b9e5f290-9904-4f0c-93e9-1904a8ce105e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61d2ae6f-558a-4a0c-800d-80b511033c04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00da532b-d720-492b-a06c-54c52cc2b2df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd1697ef-82cd-48ce-8455-4efe1860e9ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9e443b01-b4af-4c20-81c8-7fd6d90c1170"
                    }
                  }
                ]
              },
              {
                "id": "c9026d9d-4f6a-43e3-996f-7851be526f3c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02954259-54b8-42e6-b8cc-83b6668825de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1c8a2d6-a34e-4bff-b205-abfa603ba666"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0775ff6b-4b51-4ec7-b5d9-596a4b449456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1dae1495-b730-41f4-a541-c85f33e6faa4"
                    }
                  }
                ]
              },
              {
                "id": "8fb36315-fd64-4123-8a4e-70ea8f898170",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61af91cd-cfa6-45d5-835c-8b9f14cb57af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acec6e28-db8a-40bf-aed7-5d1492a534b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dba58926-4a51-4e54-812b-dfd4efffec19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04b5c852-467b-4d47-ba70-ee09ce7697b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60a2cb36-3dc7-49a9-9b3f-0c9b02e4baf6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00fc637a-2100-4bd2-9072-661c83a8a731"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "db399af9-47b8-4ad2-b0c0-6489958b9fa8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a617d5b8-bc08-40b1-a0b8-c90652a9b66f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28392401-2263-4ffc-a06a-dbbde1125205",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1191c7fb-1ba1-41f7-a904-880cf27362d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8072b2b-d550-4f68-bae3-19f68fd7d73c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f118fd9-472a-4f3d-9cbd-823e40293db0"
            }
          }
        ]
      },
      {
        "id": "32633bb8-0341-4655-b886-dd9e36a59ab0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f3468547-b0f4-4a63-96fe-24a4ea9c928c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d641dc6-0b06-4146-a405-019dcd535621",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9e37291f-91cc-40e2-85ce-30e09100dbc0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756cd08e-1a59-45ce-911e-d012ab93320e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1508e100-08b3-428b-bdd0-eb76f0b71777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6631d747-521d-4063-a1ed-a83606e1ac02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d27235-a759-4468-b7d7-d40c1a062f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cb7d72-6a8d-4f4d-88a0-a33d70362e41",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d28b8ec-9799-4a95-9129-070480d71963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f492ad98-6ddc-4813-89f9-715095369849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0c81c3-f377-4906-9870-dd278fc93975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d96e4886-0c42-4ccc-a58e-8749b1186409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b213fe-438c-4710-9064-d3725374fe80",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d14c83-e67b-4e70-ad91-d3c2e96ef40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a55db20-8796-434c-b223-de0ec420dff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bbec15-cfb7-4ac2-85cb-d007a5d44052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7af953-9bd6-42b9-ae4b-ae794408eee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd76353-b048-4958-a39d-b596d986b2d6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b60cc1-faa0-4ead-bd11-27b2125f61bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0e1d7f-9f43-453d-8123-c0572ad34ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da74598b-7965-4093-a9db-f0fa0bd20a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46042605-d5f1-4bc0-aced-4d3cb2fd422d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431d2881-d45f-44d4-ad8c-db665b8ea099",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d5b2fd-0fc2-468a-909f-31672fbf32b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c69d4d3-0b55-495b-8d48-ea88ae2b1bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c0dfaf-5aa2-45ed-bdb8-2dd5638c30aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6db2baf-0671-4115-b219-2638d69f79d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a0dfdd-b4ad-4223-b3aa-685bf1fabf1b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961afa48-a7fe-4745-b442-a6344dcb8600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2144e2fc-c252-4005-a84f-7bdd67773376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495b91a2-86c3-4aea-9b70-4883e4d69523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f260cda4-bea6-4a9e-8896-d6765ba02d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094cb22d-dd7f-46ee-a620-65fa094599bf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaa7605-07f5-49ac-8be1-1571531f8d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a033c6-d456-49c4-9746-ebaeafec8850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1abf50-0c57-4e7f-aa7c-a7882150111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "688d1c3b-4aec-4b74-a559-bf0ccf6e2420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa12d87-d8c8-4956-81dc-6148562db7ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905ccc58-d5be-47ef-8f75-f5e09373ece6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6601c8bf-9b3d-4c99-8105-108e1b8bfb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68a868c-8a7f-4a34-8229-b64a1ca500e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a9dda2-9e48-4cdd-b376-73d6a4c54993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9926960-15d0-40fe-a435-89e1b72bd273",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35f4cd6-24ae-4238-ae1f-52aa9fa82dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3452222-8b4b-43ed-822b-a8dfd27e92b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7be81b8-53c7-4e3b-87af-c6886c62f771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "145db675-9560-4444-8466-a19ed8949184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f51b3e-dbb3-4e45-a030-71c90d8ce1ab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3456adb8-b5a5-49ea-8c71-eea27e4ba61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6442acb8-4b38-4d99-8960-ca22917d3421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352490f9-a6b5-461b-9ffe-69102af9b98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "352836f7-ac7e-4081-b46f-aa048e03bce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e2b02-ce28-4711-8eb7-fef0d6463b6f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d44bfc5-d154-42ad-ad98-ddcd6dc6fe0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087f8a9d-0c96-491f-9a18-c234f65f2593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f02918-9574-42a5-86ae-42be8f574198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eac25a86-7ac2-4fe7-86f6-1efd831e0fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c9832a-aece-47f2-896e-8145646d8c6c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b66e62b-c736-4cdd-ba0f-c660c2cd294f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbcfcef-5b84-4ffa-90a8-f5a83c9a6755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db02c87-f109-4f2a-aeb5-bdce2c60a573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9888979e-ca23-4311-9ca6-ae65a2c53162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89d1c02-68b6-4ad8-a296-dcfcace5443c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cda41f-adb3-4754-a018-493778dc53cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73f379f-6f2a-4786-bd7f-579f90ba1c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d2c3a1-e195-462c-9dde-c77c4d2a64ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c204bd23-72d5-4798-b0aa-13e03ce2eea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2a7665-8973-4553-87bf-b10505e98e1b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e25f580-47c7-4de2-99a6-a30918b24ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd341e52-1d09-478a-bee5-42f90d600b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d1e9fb-89fa-4034-884f-2bdadc568125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e750538-0a59-487b-a266-2dda05f3daea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351e198d-9d7a-4d90-a9bb-cd3a85fffe45",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29934f56-7e01-484e-8dd5-e8c67b3091f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f406577a-0726-4b80-99d0-0d7cb6a6e52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba13a545-7db9-4d3e-9362-0436995c9baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d43c5a-966e-457f-a6b6-50050a517781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec13646-0420-4e24-9407-b76ba0ab81d1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6097121-d005-4135-852d-d1773531cc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120191ac-a051-4b40-b997-a035f8bad5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005e43f9-e7ac-44f7-91bb-71a701711cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b73a6e-195b-42f2-b285-d896d700f708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1301ca42-d516-47a7-9f49-25ac8396d517",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1575c66-e9a9-47fa-8667-94945f6a57f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30811430-c786-495c-bd6d-a4bed27bedb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92d6cff-9837-4860-98be-822884a48b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8678f22-e604-4155-be45-42f563d1b36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f7a88d-3082-4773-b1c0-faf87a5f6dad",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9f13f8-e5d7-44cf-be44-525903155bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0634f8c9-3751-4949-a18f-b2ccbae84417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3563869a-3079-447f-8f2f-f230a8efaa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f09b4885-5e38-47b8-a24e-9e30309714e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e0f681-5e59-4418-80fb-42fc04d2b48b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b232f4e-9d48-477b-beb4-8de2588f767f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ad1800-1f49-4537-968f-52dce386a77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e721035-8b52-44f3-8fe2-b12bf520bdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ea43a8-3991-4fc7-964a-6679f792746b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e5c767-f3c5-4dba-94f4-0f8294f22654",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45d911f-8968-4e20-9e6e-9334fdea12ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab2a666-62e2-4cb0-84df-6d089ff7fe0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d95f5d-6c1b-44ad-b80d-6b19983859ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4573308a-76f9-4b07-bcc0-6406fbd1a210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657c43c7-14c1-475b-a086-870d9911dd45",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662159c3-79a4-427d-ad6b-c0ba4e3da8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7585d59b-3bb7-428e-9206-3594f767db7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eb5b43-50ca-4239-85d5-9eefe2fc1c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f418ee-5c3d-4f3a-8a44-56fc9f215bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80de553-01d2-4590-afc1-7cc6ebf8928e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae16d0d-7eb4-4c16-9a7c-af3c7ebbd9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d37210a-f993-4c7b-b312-845f0f37d869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bca5ec-9718-4f56-9ca6-503785a8f590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38682b22-8756-4a81-b2ba-6620e87ba4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f79fec-0e15-4ef1-abf5-8d0ebdae6cdc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4544206e-5725-4863-bb94-c4fd571110a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644c82ea-8803-4d90-ab2d-363b08f84c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab3146e-baec-444d-88dd-1af05761886b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e9f2d4-3702-4b23-bfe6-cca384cdc759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c848bfd8-35f6-46b9-a665-abecccc4a5d4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31236f5e-6003-409c-8615-934003e9b1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06081331-8b0c-4a81-9427-170e1a064817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708ae802-eb89-4c64-920a-3cdfa6674199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8953929-c202-4303-a003-8970a9e3a31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677721c2-dbb6-4752-ad5f-cdaaca16b2c0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a28ec3-860e-4dc2-b2b3-f2bfe073d7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcd0e59-46bc-4559-bd08-8eb745514662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b116718-bab4-4cb4-9846-c4facaf73998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5301e84-5d03-4416-a64a-8dacc19e43d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cade60ef-9e38-43a7-ab12-e2fb3bfb7965",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78fa515-2c30-4cf0-9308-91107dbfe59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d771964-7656-4a92-a2d7-7d3749feb181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2060243-6da3-4e77-bd51-1240798e70f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff8eb11-f467-4689-a859-be7eac458d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2e9201-aa52-48ea-9133-f0d46f678416",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fad4c38-e722-4e68-afcc-3cc00699ee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f251318-1cda-4730-a816-7c8dd68db492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bee98d2-c212-4653-8bd2-e6c92da9f7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c92139-aa72-49d6-8d10-b68fae6ff7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3510c1c6-848f-4224-946c-f2f32fd3f2df",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314a7453-8401-401c-9f8e-29e7b03cfea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b491e0dd-f8e1-4d3d-b052-7fad8ceb5629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e646a93a-9d69-48b0-8029-9cefd4bf942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e829042-da94-40ef-9521-f6d20df5b57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da1ec37-53ae-409c-a4f9-8ee16e0350df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e3f219-21d1-4278-92a0-0a7f420e1211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35ac710-d928-4c3e-874b-a5b75b61cfa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cecc774-ea6c-4aa4-8eee-534b18f8ab7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11afe409-8aaf-40ac-8175-575ddacc114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934c7789-3a58-47e4-a87f-76519238a925",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3656fad6-e0cc-455f-bb9f-e59206d96e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724f35b7-4084-439f-ad8b-f6cfdf027967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54da92bb-42ae-4a9d-bd72-cf8e812b8c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ff08ee-1e1d-4f47-a796-fc60b48f7e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0188eeab-597b-4b59-a1db-a4e8883092e1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d784b5a0-7f94-4a65-8b94-ecd4220dfee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3578edd0-eb84-4158-ac21-2de70fd12e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138cc7b7-c6fd-493f-896e-a8457f61b1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3985e829-2bb3-425a-bf44-0cd49e530648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8b9cbe-96df-4974-9de5-906a757b5d99",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2093470e-83a9-489e-a368-998f2af9e367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b9bf3c-0f42-4e65-bf28-3028c7b1dc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbeb8106-3098-4c08-8c09-759f43cf055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "838748f3-9f26-41b5-9aea-36347696be63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86e55a7-f282-4cca-ac4a-b6caee1e3115",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c2901d-aae1-467d-9073-fc6402f95e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55badced-c681-45f1-a382-2faa53f5f9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a55d8d-fa7a-4463-a7ef-bbc760d39106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be23e7d-dd5a-465b-a3e9-b8ed3976dc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7391cba5-c05d-41f0-a66a-4230e2da0b7d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc1f550-ef6d-42d6-be42-c2311d25e406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b407a2a5-2690-4c58-9be7-5e40aae1368d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb892f93-e720-48a8-8ce0-fbc958137e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56349054-e6de-422e-baca-859831eadc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f223f3-3e19-462f-bb74-9d9299da6f0b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3a0bbe-7e36-4607-a7f7-8db1802d8d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c49a34d-f7fb-41e7-9e99-2586e2490eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d28415c-a742-43f8-b2a0-a86b15b501fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "008d8bc6-2dab-41c8-92ca-37e5cca2790d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb63cc55-7374-49b4-96f2-766ed4779c79",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb795cd6-7def-4f6f-bd09-85e5ae9aae73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841d611d-c369-42d1-b819-5a9f1e3f24da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a667f7b6-dd89-4885-a38a-0383aae6f2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf6914a-ce10-4ce4-9a15-c162f35d5ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb614da-ac05-4513-a1a5-925cd55387e3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be622f5f-123d-484a-9548-a6b484f1308d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42efd2e9-c7a8-4ccc-9d51-e6e19f654f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0408e260-eeec-4fa6-94b3-e5e4334e4147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d969f0-e9cd-4ce4-9067-33ad3688359b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62ecd382-103f-472d-91ce-76274f506076",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58e9cf78-bc6c-4296-8363-1367dc8d76cd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bd3c6c-c47f-48f8-9462-2551e7f33896",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c888d1-87ca-4a6a-b576-4a1ccdaff40c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a157d9-bad1-4983-a7f3-4c6fba810128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9eb9b2b-06ac-4329-b9aa-9650abbb5375"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a4a288b-0c4e-4398-9ca5-50acd77dc132",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6378c50a-1717-43bf-976c-b1c5196152b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30d35179-1000-4692-92ec-bb59143dbdb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8742d726-f8b4-47f1-a868-fe0b1899c30b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ea6eee3-9152-4656-a0dd-b6a669a216fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ad7a19b-0501-4b2d-b3e2-69e75a7cacdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71f5ca05-c134-4dd9-9698-7754f787ab06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d6d17c5-c578-4914-897f-a0be6f795eed"
            }
          }
        ]
      },
      {
        "id": "da256c18-7dd9-412d-9ef6-0f1fb9967009",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1e7e5c3c-6ae4-4bdb-9ec0-50a32a7fff71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69106d89-f6b5-4b1d-aebe-75af58653f28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6a87b19-bf6f-4f73-bc96-50f8fa1abfb3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361d18af-0a8d-422c-8404-7dc294c3d1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b05392d-f7e5-4c41-973d-489c31cd4419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0830d012-c077-4c02-bf38-c4459fbf80dd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55290982-6ec7-4576-b0ed-41da5fb8893d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44db6150-6f40-4cba-928a-3cca52a2bdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8db06a-19da-4b96-8249-b4ea55635d73",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81dea8d-c673-474c-a999-e20ca29e1247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ce0f9e-944f-4d49-8646-ec3292964669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2f99d8-35f8-4ebd-b5ba-cfce497d41a0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fd1228-89e4-41a2-acf3-2955ac9fdf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea9c308-8a86-4d2e-abf3-ff6684f3a23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1e4458-1e9f-478a-91a8-0e9d92cee33e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326a169a-7709-4208-8566-abd7ff47afa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcbe9fa-1b30-4e13-bd72-54707004597d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48eacac-a878-4372-b13c-c552deda30d9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e88d39d-99c4-4c04-8628-9554fd1fcc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b732932-3c4e-436b-b134-786ec86374c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b43ee12-8109-46c8-ba3f-9cc5feecb929",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675e5e90-d36c-4165-88e1-73512dcde3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c315d0fc-7731-4c69-ad15-e183766f195a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9726f0a5-de40-4153-a795-eb77e12ac816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820c9c7c-71c8-4733-b494-f927dcbd02f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad08ddd4-f353-4689-b166-eb815bf5df8e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd4ba4-e081-4d21-82b8-eb5b52c0d808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6fae67e-9e34-4230-bcb9-5c18214c4d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d933f14a-833a-420c-9534-c23f4f139c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a12687-7878-46f6-803d-a681017fcb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b38cc26-bf89-454e-8802-bb20ef1ee0cd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb29725-b1fa-4f1e-83ef-c6376bbc6604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6fde34c-0eb9-4bf4-91eb-cd5dfcb936f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5f0c8d-6692-4654-b8d9-660f77663f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb66b65-b8f5-43cf-9e34-1a9aafc6746a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a6a0bc-70b3-43ed-a428-bd851762f6d3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed150600-8939-4c02-8505-2fda2ba1ef92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae4b127-f4dc-40eb-b23b-43abddaca8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dd4f87-5c99-4331-8146-8d35d6ca75d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1318b2a-440c-473f-b3b9-59034c0d697c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc42928-9f31-447d-a88e-8a6db825b385",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365b127f-5f78-4061-9d51-7464a04c661a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25aa7fdb-99d7-4d28-92dc-f72135bbe5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342663e4-621e-4bc3-a495-226bc4787593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2eacbf-7092-451e-81a0-7d899b26b93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47aea987-1925-43fb-a682-2ca3ab874003",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096870e8-7132-4cbd-8722-5760cfac192b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e0d8cc-2b8a-4b5e-9efc-2c53c5949185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ce395-48b3-4974-b977-a78b15bc1598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdb9188-1d3e-4221-9ef1-b59cc8d474d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baa47e6-1491-401c-a67c-d4b98d08147a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d490a5-fffe-45ba-b9e9-0cd7bccb63ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d0cf6e-740f-4358-8052-df066a7f5065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca914cf-efde-464f-bb17-89a2339120f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd88ef1-6e26-4f49-aaf9-b85962c5a79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c396c524-3c7f-48c6-b4c7-545286551f44",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90034bcb-b4d7-4ecf-9c92-f2ebbea29d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c54d6eb-c847-4c6e-9fa5-4ea797bef96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7b517e-dc12-4145-bb1a-e7180e08c023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f8f90e-68dd-4018-a397-a9445bd026bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45296545-092c-4646-886e-31a39dd92ce7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fa80b7-b3dc-4ef1-9035-b03b210e6a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd6dcab-90fd-4f41-9cba-a933de2d8e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352b7c67-ec0d-4f92-98fe-8296fba04f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c61550c-0e2a-4184-8549-0c0cea2bef43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b733ea3-6a25-445d-9302-0bac4d17086b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b338afc9-2370-4d73-a2c9-1ec993545f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0ad38d5-9e70-439d-a15e-68228d96cac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c204c6-372c-4eac-a673-bad8560b33db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572be66c-f562-4f32-9f46-49661ec76a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabcfa34-e636-441c-bbb5-760f00efb36b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af82347-2a3e-414a-8391-a2172a2689bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b0c510-1919-49f5-b049-f35937026dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c2d8c2-b53c-4037-a477-ccf387c3ddb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa3e638-1e41-4b13-a683-468e1cdb42d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aee0d7-ff73-4cf6-bd53-d677b686831f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c7e4f3-a90d-4ba0-acbe-1a15a2288fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab4de38-4e63-4bd5-b8af-8e5fc5b22125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bf4beb-b58e-4510-a6f1-f15a71b59fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7828b2-fc95-404f-b813-527f37d9e8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a056d07c-66d8-44c9-95d8-50328c459561",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe882910-44eb-43ce-8aff-be5d4f146873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174c8aa0-261a-406b-aaa7-7faa18fbd6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f49ea57-83d3-4d9e-81ae-770eab30b41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf09507-8c1b-4330-90c0-3d43b2bf7ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e38583c-1c1c-4da4-9899-693f7ef819dc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37031e93-2f91-4321-8afd-2e474e38a035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276594ac-a594-4d28-b64c-73061ab4c1f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcb12b4-a770-4090-8a82-fb1586ae2804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569c36c6-49ae-4a77-83b6-c8c3342e3bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3b975e-1b24-4dd0-80ba-5232f123b255",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e406d8-86cf-4586-93f0-4b79b90400c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20ed999-075d-4f1a-a3ad-3f4e7423b481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c283d5b8-f4bd-4e4a-83b1-67e9ce48f4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa9aade-9c48-4e4e-92eb-312f62d1144f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b46746-95cd-40cc-a7f6-c1a77ae8f1bd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2eaa73-ede0-40a6-a839-6eabc90cdda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab2c292-5e3a-423c-a2a0-30022534ac73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b0739f-ceb2-42fd-9b17-48caaa3979c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a3b7ec-3bed-44cf-aa38-1505d2c992bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7718bf8d-0a05-4ac2-91a4-ebd0d0305bea",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24905a39-2379-4856-89ba-4ccddbb1e9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faefb362-44f3-40db-a2fe-117152186e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808d85ec-cab9-4d06-be5a-a28d587af58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041be216-1c94-4011-8b99-717775de0816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b5e069-bd61-46e5-9802-1c5c4cc6740d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd1414d-980e-43eb-95da-9c3ff82d3784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e39ac7-1c84-4303-92c6-e7f81a9633c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64661fba-8265-4bc8-93a9-f903f9b3ccc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3921370-4b9e-4938-b9fe-775215441153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d42bf37-6619-48b6-addb-980f492acbad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2517e6-a563-4bc0-809c-b8c86296654d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f44c5f-b6db-4859-972e-2f5dd8112c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de811597-7614-4eb6-80f4-83f49311c7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e190fdff-5957-4a03-ad77-125409c83b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbc53e4-71fa-4dad-87cf-57286ed4dfbc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795895a0-718e-4c94-84e9-41a21910d524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a037cbc-3514-4821-a7a8-b307bd5295ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1bf765-011f-4f3c-b3d4-f4a205aacb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b49fc1a-3fe0-4bc6-9a7b-889654b276c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2481cab8-fbdd-4e4c-9fa8-ec61a548fedc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b588d3ac-43e8-47e4-bfc1-a20890eca08d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf33e0e9-ba07-4741-9bd5-107cccd074fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1703d3-f5c7-4b9f-921f-8f908572ae63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8c0cfe-aaa9-4216-9578-a744655ff256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee9a99b-a8df-4ab3-b803-58b248be1f4c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e01f8e3-a3dd-4dff-9cda-0a951c7e25a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dc9fc6-2c3a-4024-9ca8-b8226749e98d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180407db-69ed-4518-b67b-80d468e6c885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446bcd4b-9ce9-418a-b76e-4329703bc77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0bc467-d91d-421b-a2c5-fc90203a0c96",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15025c38-0093-4bd6-87cd-1072c769fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55775010-ab3b-4fc8-a866-60e0887b7a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d326d4bf-f015-44d7-9964-e7888fa8a596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f9fe43-30e0-4fd0-91b5-677bbd267496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2e264e-1ce9-41ba-a0ca-7b0288ed0001",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df5fd55-5eb8-4c81-b13f-7ede4b294e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df2b0f3-efc3-4899-945f-6feb2c9f755b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79745db2-c340-45da-996f-83d7fb0c7312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08bc0a6-ba40-4e7f-8892-8e8a8bac3ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9c3562-caaa-494d-b247-c56c49b64f5c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e3cd7f-74f5-4a32-8058-d9a5351d8336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7dbbb25-f874-4adf-bb43-6d6bd7e6d4bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcbb613-4440-4484-a17d-ae50227f81e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae80f959-fb83-4d2b-b3c3-bc71d34db97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5583a071-51b2-47ae-91d7-f348c06be38b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4995005f-7fdb-49ca-8857-62aac723f285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a17a6c-aa0f-4cd7-adc8-554eb59f3595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0d3b4d-67fe-4b9b-b425-6c3fda32dec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcc0e3b-81d1-4612-b887-a5508573d77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f389121-df78-47c3-8f0f-336a059781ca",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9bec13-5beb-4db3-9f92-362ccc21d3e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae52c6d-e7cc-4af3-b47f-39ec07765107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57fbd60-479a-40c7-aefc-f5bec7a53d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235f67b8-587c-4b84-9db3-faf1b1694525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9a012a-8b6c-4d63-a866-1a0038311cf6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf2f5c3-9436-4d6e-b859-d5d0a4a6e28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15b4683-120d-4f6c-b0d8-f88757ec120f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b4db1b-9123-4b62-b517-79a8d92c0ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251646a2-deee-4c46-b27f-cd20f9bd8161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e10d8e-ced6-47e3-b1f4-f797e5c9bd1d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eae2894-8e36-45a4-95f0-f858196f2a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60f6967-74cb-4b82-88d9-1893c4a81045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20aaccd-0698-4909-99b4-e68bdd5a7ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbad939-b07a-48f2-b7f1-36e7b7bb3ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723a645c-fad9-40e6-9d80-4cf539c25c3d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6b3628-1e1c-4eaf-be96-fd6da1b72c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ac226e-804c-4fa3-a584-8b0ac8a1f48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e92eec0-25ad-4890-a2fd-1a7873151781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7a4b71-c0af-4044-9f4f-f65fe44fe61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a80da73-73ab-4567-a4b6-75ac5c4901e8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec87efc8-88d1-4f40-8f33-244ac332daea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039a726c-d268-4521-b321-8852a77cfd13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8525a746-44fc-48b0-a5d9-1065d7798474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13471267-807b-42b3-ad8f-0c41a0c18b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e07430-8bd7-47ed-af43-ec59cf137692",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ddbce3-795a-4271-8a6c-39562a6fbafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ec2036-aa00-4d4c-a7c3-9eb38afe2936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fde94c4-bbde-4417-a5b3-ae916193700d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dd35e1-4fdb-4ff6-ab6b-de5c84a756d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb658677-4628-4d8d-b442-850bff252c3f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c185a3a9-d0de-48d8-993e-709ccdb12b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebf8d71-6624-4215-af59-37d3258d21f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8915f16-b2ad-4020-91aa-f8d679dcad28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b4e9bf-edff-4b1b-9fff-94c985bc761e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7983d5b7-4412-4c25-872c-5cdc3eab77b1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c574f51-96f0-469d-8446-2fc24277cfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb63afe-326b-4137-a21a-3942b762bbc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe38fa2-b228-4325-9426-1d07b6983677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4d9536-9c61-45ec-9829-d43a66a433b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bcd77b-ddb9-433b-8105-f0ef99a1b6e9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5859c383-8331-4df9-a9ec-c4bb00b70157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bebfe74-44e1-44a2-a8db-bca7c2679fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a3acfa-e273-4808-9629-f6bb633686e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97f61f5-93b2-48a6-9c72-7fedf9a63879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86de836-bd21-44c4-9fac-379cb05d1645",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a316fe-e1e0-42d7-88bb-3a56a16d5003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2797607-28da-4311-8456-c777514fffe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d150e2b-485a-42ba-9227-185231fccc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2896118b-86e4-4361-87a1-7a05332ec22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ce268c-43e0-45f1-a26e-f4e30711bdf2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cde2949-0406-469a-8930-1a516a1b869b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07102a83-0568-4408-bd60-165974b02744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede82317-325f-44bd-959d-cc2558bd2303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c37be69-b5ac-4ce8-a624-2b2f565d07b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4e6ca2-ab67-4860-83f8-621226b563b2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ed5175-adac-44dd-9c49-fcabdb3fc987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44feccc-7c67-408a-a6ed-e187f2a06f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8860b88a-915f-4732-9042-8f2486108649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6119b513-066e-4431-965a-b08e37cd5949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b254320-ade9-407e-b727-f6d60f06a052",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9502c820-09d6-403e-baa4-17d917a96f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb677425-4334-442e-87a4-1f6de1ba2a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f1f155-0237-4248-a812-c92e284e60d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fec6b9-50da-4607-8a3f-8316d8b769a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05459d11-0f31-4500-b668-e0835a8e359a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f283ae88-245b-4b3e-b704-384658adc80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a54b85b-7ead-480c-8f43-c33118e1cd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4916f0ad-6bde-4b19-89ff-f0aa1cf3702a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe7e3d1-b490-4d09-8d0c-eefeb02cb702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f6d206-c33b-401d-9df0-b151d661face",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b079683-68d7-4a1c-917d-4c9a25421dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fffd6fa-0591-4478-a829-af1ceb3438d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7928ea-169b-4da4-a808-08c6f88817ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3ec3a2-c52f-45d1-9425-4dca6b4f1085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f05741f-b692-4706-8165-5b94b3ac2180",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4ff6a0-4ba7-47b4-b4d7-552dfbd81c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2409725a-8830-4342-991f-9e6fa4958a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd41f9f-6456-4c89-912e-a9702ca4957a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d761fb-89f2-406b-9938-7a8b664f0eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc44faf-1e70-4f54-a3cd-1b46eacb03b4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f72e6e-0825-40d8-8d6c-10e195c78015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbb2d33-eb2d-431e-86b5-fff2a7635a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9d0e3c-ba97-4d0f-b66f-6d6b3f91b0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724a06f8-568d-447d-9366-b104bedecd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b5fd1c-3edb-441e-b5a5-49a7f165534e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11555135-0e6f-4909-940b-96dab3a2c8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afed04a5-b891-40ab-9665-b55574ad6017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d334a1-55c7-4500-b129-bc30e5235a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540eeee4-e934-4d19-bba9-d7ed45d879e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a986572f-d071-4201-ba96-2ccb48d68883",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6361d8ef-a392-4d3f-bf6e-a88262188d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323db23c-aebe-4107-b5e6-51c4d2e1cad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28610ea-b154-473a-a5ec-9d2cafa8acc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f27fc4e-d152-4fa2-85ae-74ed2e21ef1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beae5cf2-5f94-4353-a5cf-1ffe4fa8f5cb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909dbbde-c37f-43fc-9ca5-eb41284ae2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222af249-6f22-48ab-b905-847e05af11ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c344b002-6606-4482-9197-708af72fedd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2ea141-5526-4b6c-a67e-ec9ade1c05ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb68a95-60d2-4f81-9c2a-5b0a8e5935ca",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bccd750-d24c-445b-b562-1442a7405214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa507a84-d630-41f6-841a-51d0aa6379fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f5c27c-a463-4698-82fb-1e70366913c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf55b030-c9a4-4e54-9d6a-aa2fcc21dc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99262b7-6471-49a6-839c-67ad7631e429",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f89a54-082e-4abc-aee5-8c936998a8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09eded2-e0a0-43a9-b3aa-92920641bbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce6c402-2595-4b80-981c-ef5cd9909ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b28f73-7665-4f1f-8e35-6fd4ae022c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979e859f-31fb-44ed-9746-fa9b3dc39543",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a97aeb-499b-40c4-9690-a782a33335ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11080461-29d3-47ea-8f1c-3d303137c63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb9b986-14db-4223-b885-58c865f12eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92acf27-b262-4fd2-8dc5-62b8aafb86ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f8c393-53a9-4c1a-ab5e-d137e24d898f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f22ef91-451c-420c-b875-afd6fa92fb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4877581e-b11b-4c91-a218-a049f9f03254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8bb2a2-61b6-44d2-9de3-59ea97dcaf6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d70925-5a2d-4a46-8c38-927b35a33945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3927d6-e29b-4fe8-b6e9-f13f44f42ecc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bc9679-dbe1-4383-9e52-7bf0f78ce419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749669f8-b252-4b70-a476-8931cd8b68d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765dd216-e8df-4807-85c1-dd4bff170a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d157f9-7ff6-495d-aa69-a4ed49aa35ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d477bf-d37f-434a-98bd-90962396b152",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383420a5-23a0-4315-8a0d-6fd76deb2e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10498fa7-eede-4be3-951f-c2aeb6248c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f1c4af-6613-4462-a542-e990af180ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9e4e60-7276-4201-b5ee-12acf7ba28c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dd2aa7-e349-4848-9d6a-0a8aeb05197a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff2b3c0-2bae-46e8-bd7d-8b591b2af936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb80c8e-0af0-4cf0-a734-7d1920d7f400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02c23bc-631e-41d9-88af-cc05c4be3e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f5b4d6-2672-45fd-867a-f85249ad5c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3040e215-534e-40ba-8f7b-83b075b8f146",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72bb34c-e6b7-4962-aac1-39098e0edaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66a0edf-ae59-4575-91b4-c954397afb1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ec75bb-b8ec-4f82-b941-0cbc970bdb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33461b7a-3b1e-4e51-9542-167b2110cb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c5acf6-a313-447d-b019-6aeda3a75b40",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b7151-39c7-4737-9722-a77668bd07e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef3c752-e427-437a-bb66-9f07cd22918c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6733cba4-e190-4631-822e-704d6cf11704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23be33c2-0c3c-43b5-8ac5-e3f98fc5fcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4e7716-17e2-4e6b-bbe8-addd3e042f4c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb07577-b59c-46e4-8459-bbbf0a22acce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43e7953-c1eb-4259-81e6-bb4fc3aa2eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5752074-5ca6-40df-84b5-4f3f7055f7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc22035-e8d9-4117-828a-f77d88464382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23b7a53-d371-43c2-ba67-e18de370186b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98319e55-abee-43f6-9df1-0cd1145e0752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27ea351-41d5-42c4-bfea-2bb9b7ba5deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae24db3-0dba-4b5e-b661-bb6293490947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b220fc-2be4-4046-ba9f-d7d2c9362952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aac6aab-33fa-421c-aaa4-bb8f026251a4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1642ea-16e6-4e59-a25e-49b997ce3f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5439bfb5-bfeb-439c-8d05-735a90a3c44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26b4e59-b41a-4403-beb3-b5a2807ce410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926f7b2e-ea77-45db-8ac8-9315f36d3af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d484e5-97a4-4105-928c-378c90497675",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940b8152-6eb7-4fdb-92da-da862a75193c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8dd511-f982-48a5-b280-3d80fde1ae3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02efb94-d961-4088-9dd9-71e2d660c77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56576988-61ff-44bd-8417-2b2da82e235d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb692722-2cdb-4cd8-8805-c02bc22edd8c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeec701-90b5-4e09-a1d9-faf130894e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa4432b-ef62-40d2-9113-a1c0c9d2a95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55bf7b5-484d-4eea-b6c6-4368629ce1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8348a97d-1f5c-44b9-870d-24b90f6dc942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5f730b-be77-4b15-933a-ffb957aa5b4e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84312fd-1a19-4534-8eaa-cb922b0f2ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a1592b-70eb-445b-a798-8a4d5d9d1281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74051fa5-8878-44bf-a9a2-70f0ec4c025e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4b2f70-2eb8-4f08-9de4-ca847bef20dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2acc44-333a-4cb9-b735-e6d900e7f858",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f260a3-4629-427c-b2a1-ce1f9d21f9aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ea6101-89bb-4526-a3fa-6fa74f3b17cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166da648-844b-4f02-806a-b45b73175220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254daf64-30a9-478a-bb5c-55c9b4099a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230651e1-1870-41b1-a0d1-c12d7679a489",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4e246d-419d-435e-8538-42d195c6b388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aab366d-21b8-4e54-9931-50566f8b4764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dd87e1-4e29-4b25-a857-6fb28a9824fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ca96f2-9c5e-451b-8d44-9a35f854a452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0228e411-f600-4ea4-a6c8-f9174b27a448",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607aeda5-ec70-48d5-a79b-4951fa0c02ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe25c006-d1a5-45a4-ab9a-170d4baa058c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0905727e-d61c-46d6-b2bd-16f1a0ac9320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a04559-42c4-4d3a-9cd1-b169de9d6a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8ae4e1-5ea6-49f2-86c8-8513b365acb7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c95ccad-d9a6-4cba-921f-0703af0005c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210e5b91-edee-4973-87b5-b1d7c923f7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8f1ee0-7d3f-456e-8282-e8f461aefbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54933af-91fb-4f79-8b8e-f169287e3735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ec6c58-1a8f-4342-8722-99e8c80af826",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20305941-564c-451b-902a-87fbd38ed041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8399e16-74eb-47a0-a53a-d480dad6827e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425b7547-213f-4937-92da-64ccfdae5313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0782a725-5187-4263-a008-ac1c023046ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6b2329-a032-4c6c-9ed9-34c547cfcccc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4fc2d7-e1c1-41e4-a30b-e79845bc7142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7127cda-ad42-4af8-a6b9-dcfb02ecfd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e911c48-ec80-4fc7-945b-226a90d4dee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579c3fbd-5127-4fbd-be99-70e70d2f8e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffa07ff-eaf2-4c85-b839-6fec10cf1fda",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b416c17a-5b47-4903-8c4e-1d4bcd3dcea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc49b34-4787-4492-89c8-8505534391e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85205afb-fd3e-41fc-adfb-d120da97df0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc21f5a2-d01c-4250-86dd-406daacc5e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25578ccc-44d9-49f2-a62d-754f18650d32",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3619885-c599-406a-8c1c-bb53ca8616c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac8a63bb-2efd-42ba-b8e9-bae8de166b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a5058d-54d1-43fc-b701-8036d437e0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8ac2e5-e057-4a2a-b6b8-8724aee02115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ab9013-b38f-4b29-899d-c97088b9902e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924dfbec-17e3-4282-8f1f-be103ae46ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2221c32-d044-45f9-beb3-8945ca362645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7c4781-20c0-445d-9170-e438f2cacda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6161184-5f34-4d2d-8889-14afb461b6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567bcdea-c3bf-4613-ad4f-3713696c7425",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50115df9-ee12-4790-8ebc-d8fdeb77e240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024c912d-27d1-4102-bad8-9c5fb5182651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ee8fca-aabb-4063-ab46-f8a4101433a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83abbdb6-1936-46ea-bff4-c90851ffcbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19974b1d-2b76-46d2-a8e1-511c4cc6b0c2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72a64df-a1b6-446a-894b-dcfaa987c95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a4179f2-554a-4e8a-9910-3280696986b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78893906-acf6-4080-b614-d6ee2e906a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36acd280-cecc-48d8-b2f1-4cc33de23aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9329d8cf-d8af-464c-a5e7-1176c9d995b9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416b18f3-9304-4923-955a-65956936e378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02385d23-1f6c-4a9d-87cb-56d132d23cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aeacd45-63d6-4d05-be39-b8e83e4da999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed0afab-2b95-4014-ac93-fbfc88b500c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16306547-bc06-49ba-a87f-04a183ccd1b6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c7590e-9296-4fa0-98d7-72743b2b4def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101c3a42-c258-4bf4-babf-1554bbdc1dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89752377-4515-483c-a407-5e08d07d3b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b556427-0942-4b8b-8111-37a49f4afc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f2e160-2a72-4d6c-8cc5-1e5006c154dd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d2ac39-7b23-4d9a-8d11-c7746b9d21c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ffe122-ba30-44aa-be83-ba97aee5656c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1335eced-01c9-4ae0-ad3a-79ecead2f886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed21b43-aaac-4167-b745-a464e2b90c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4d90a6-f8b6-481a-85f8-47dfb3a7e9d2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7ffc8a-f964-4591-b5ff-e33bdbfd70a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6a3dda2-b230-44cc-aa6d-ec057257ddf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d76abc4-9423-4f99-9d6b-98b0a3e7a739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59eb9d2-b041-446b-9fcc-30dc8657b9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd65420-42b9-4505-bc02-9943b0a88cb0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3582ca8c-ec4b-4e4d-9ea4-6981fe250473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd098116-660a-4e1d-a355-6892e44bd6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d570b735-e40c-486b-a18d-5ff7625277c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d5ac6f-4f42-4718-ab7b-48597e00f328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8824252-a1f4-4b3d-9d18-14b4fa909113",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364b0392-c577-4caa-a817-7e4355665952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583bdf01-8a54-43a0-8a4a-a4f7b0feeaa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dacf34-7ef7-4d69-81af-75355d8f0ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3261b6-687b-4948-a017-894b3d580da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd8e9d1-8824-4b93-ab8f-3e6a48c5227e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744f3946-125f-41ad-bedf-ee7a1e065d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9645abf5-35f2-40ab-b322-bd2c8fc0d25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062c3b65-c388-4768-9642-2f91d26c7aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c938db45-4cdf-4abc-ace2-ba8aca900d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f033431-2315-45e3-965b-6a45a0060942",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903b272e-2c46-4967-b13d-fd0aec957711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9221320e-4cab-4375-8b6d-ae29e8672d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc1610a-7224-45c7-8f3b-26cf657d018f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed5ae0b-cac3-4338-bcd8-613775a2189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73fe975-adbe-4366-b916-d3d8a7994134",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410d6f99-d220-402d-b573-0d910d38ee8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98bf9ad0-85c7-4c78-a61c-d8da2a7a31cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d16055-bb59-4178-a1e2-fa20d48263f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dad2711-25a9-4743-950a-8ee58c02fcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01750ada-5292-4351-b7a7-5b63abee529d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24bb4fb-9e36-4045-81ef-4ec95e4c21b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be450bd-769a-4257-a20a-007086fc0659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f680451b-4e0d-4b36-ad4e-23680c43332a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7d57fe-626b-45df-8757-e9e785398a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86440147-4350-4197-8df3-efaae0cc3b82",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594d088b-17ad-454f-ac2e-075299457617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ff58b0-95df-44c2-9713-a617eb788c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54b16eb-e212-487c-acb2-3b4f58429d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a03b50-f5d8-469f-a0fc-68eaacb2ed6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73770660-62f3-476a-bb9c-6bba04e48c78",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab56d2c7-4f57-4d9e-9cec-1cc4354a6e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51b2497d-6417-4c19-9cf9-15f3479a6b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45814bf8-6e61-4cb8-bc8e-24d19f693eb6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b5d9bb-4d71-4411-ba5b-32679c7b862b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d879246a-54ee-406c-a691-5d3d99e7ff68",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a4538a-e145-4606-b96f-1c444bc9970e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "605fdb73-4d8d-4273-bd66-78003d7f391c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad8c0ca-1c02-4d7d-b8e5-1ce4a41712e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe7d15f-779e-4e5f-9e13-1de31610d807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1761d0-2433-4b48-ae3c-39a9dc96cfeb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bbdaaf-b9b2-41f7-bdb6-bf6ac1e189dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce39fe8-82a0-4d59-839b-0614b75af781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058bbd38-4a7e-40f7-b2b0-c6a02f8b79b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011a8e96-71a1-409e-8ac2-8a53debfa40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d5dfb3-5337-473c-99ba-17deb722dd36",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3209803-cfc7-4e04-a724-4cfaa5500c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7107e7e9-dcd5-40ed-bb65-d66232deae1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbfb13d-a0fa-4e9b-b19c-1bc819d50a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5484609-211d-42fb-b5f2-49df15e97a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b423dd-e618-41c0-a4e3-71bd867a1d8f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7965f32-bbc9-4003-9af5-8425c6a4654b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "153c41d5-7d48-4867-a3f4-2b263ab6a6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b6ddda-a6c4-4162-8474-a954096b58c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4f6938-4f0c-4b98-bdb9-31afdd13e1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40d7233-207a-4e52-b227-334252d163ea",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2985c97e-22e2-4437-bf89-89f8073c724d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1edaccf8-5455-4b39-841a-052ad7837f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d02c4f-1278-4310-9db6-400623baa3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a1636f-063c-4e77-b108-6b4e1c5b6b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d68e1b-781d-4ead-80c3-f82a0e23bd65",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020a5761-688a-4964-aea1-26c56fc1611a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ba52b8-8943-47d6-9648-6dddeef7a6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa8762b-21f8-4768-95b7-79772ad21097",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c6cca2-8133-46e3-a0a0-8214c2cc28e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529d81f6-83f3-4849-b782-c231fc91e09f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9528a0-bf1f-40d6-8018-58c2bc1673d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d60817-99b5-4dcb-9aa3-8d9c6d1eec70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23198fbc-7110-4aeb-aacc-e3affbb1dd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a024568-4e50-4db7-9373-f4fe4992d90a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e29a8d8-0fc3-4b99-9663-f14fbe836ab9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ec49064-b694-4ad9-8994-39d8824198b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49c506f2-ba9c-4386-8dee-67048386c6ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f079b4a-e2d4-4488-a999-41802c1adde8"
                    }
                  }
                ]
              },
              {
                "id": "eef0cbb1-03b2-4c1b-ba2e-7d5d2427945a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05428bd0-9065-4f79-9e61-d8d1e848134f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff3d4c8-798e-48c6-9e2e-4952a2836cf3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4fe6c1fa-6534-41d9-a032-892470a9038e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dc4e73-0525-4ba0-9f68-5f385df09c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f705fcc-f36f-4902-8d87-5fba69992326"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e821c3a9-1052-43ac-a193-7474043f39d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf63c373-6675-48b6-966f-8e97346dea97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f517710-ca03-4cfd-8810-9e43ec2b9314",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48ef9c98-09fb-4b6a-8a6c-bef8627776f9"
                    }
                  }
                ]
              },
              {
                "id": "be3fe516-4ea4-4200-846c-7326c3672619",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b134c322-d259-45c1-8b11-61ae0259cad5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce065d4-5688-4ce3-b7ab-b2416257cef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6866d1cc-252b-4339-a921-0321efdc1d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6998480a-d4b1-4435-ad48-f0eacc71f520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1880d02d-9646-46ba-b68f-4f185e352544"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81f72415-4e04-4c1b-b18b-20415b99fe9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "935d04a5-0d7a-49d6-bddb-528ef1dfe1a8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5854c08-48bf-47af-a43d-d402ec0297ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "67962cfc-f8a1-4357-959a-abc79f847243"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72fc2d32-b477-4e3f-b866-ee8ee7b0b712",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "747858af-b1da-440d-888b-3d9ae182c4f2"
                    }
                  }
                ]
              },
              {
                "id": "03ecd6d0-8d55-4845-b061-dd9a65506c90",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b8169bb-b284-4f9e-b25d-87d216516f0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "34a571be-8725-46bd-a3d0-c5dafb40f0b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7a6b2e1-8351-4568-a485-2e50f1bc4f98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb8bb83f-e5f0-4923-9c1f-a1d8937d08ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e238166-a6fd-4c80-be96-512e35d9a106",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "07931acd-395f-45e6-9fb0-10aaf49010de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd3c7b8a-1d1e-4c2c-b613-ec82f978e7c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "329fd707-95d1-48a3-9e77-8bbdfb492641"
            }
          }
        ]
      },
      {
        "id": "26ef701c-f387-4f23-938f-631acf7d9c2c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a1c24a33-be7f-41ae-998a-205401d1e0f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c946164-06a6-4182-b9ab-2ced791a0c2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a44293af-59e8-47a8-8611-a12bd0f0a8e8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54632b20-b8c9-4d17-84b7-4a8e7b773826",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1e2efbd1-96cd-4063-9e01-9f6d4c0bbabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3857c86a-3da7-4b8f-868e-ab0c6ea86860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9fb3813-a245-4366-a0c4-d532ae48c19f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "138bb29d-39f7-484a-b8a0-067d7aa0c6e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00cacf22-508e-46f9-9fa2-9cdb0cfdb5ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9306ab99-fa8e-4478-ae74-9d551aa15f4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9228d241-f623-4351-9dae-bf77b6a51c90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57d824a6-814f-41b2-8c03-e8b89d3cd878",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8038e838-0eaf-4c59-8b1b-a92c56ff2a11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13fac4e7-42e4-47d9-9bdf-a72198c6b9ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b33ff7fd-f64d-4971-adfb-8c2e416f7e9b"
            }
          }
        ]
      },
      {
        "id": "86ab72f1-9e46-49d9-be6f-ef193adc9e12",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aa2541bf-79bc-4bf5-8a27-414764e6e4d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b658ac6-a83d-47b6-a312-c99be063bb3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a68a664-d88a-43c6-a743-a601b3f23ef5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6687dd6d-b5b8-4e20-9b5c-7fd2d01e93d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "726d5b79-0af5-4b8c-b305-f2e9ad4cee36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0280aada-973e-4663-906a-2dddb87f1f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ffa72b4-3ca9-4ab9-867d-12b48c36ea47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "211aa53a-9dc6-47b2-ac24-66af98e47643",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d988797-8906-433a-b62c-77bdfb5b9cc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9273f22a-cd3e-443a-9543-20b30a3d07b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2173df6e-30fe-418c-935e-bd34bfa19f4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a2853ca-e9cd-47e6-b04a-35afee453afc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c33ae9ba-f4f6-49d9-af60-d536f62c5092"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d500f438-efbb-4af0-80dd-257e9226ffd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "260ca662-f80f-4bf4-94fb-e5456f6b7e63"
            }
          }
        ]
      },
      {
        "id": "0fb15261-a2f6-4344-9312-a67608496fd1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e83ed4e3-b1f1-49e8-a0c2-ee2403d4875f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0af545d-c480-4fe8-9125-7c9098a38b5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80f14466-e501-4112-a617-873a034f53cb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea57e78-7dc4-421d-a26d-5c70a2fbae45",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b0b84b4-a9f3-4f20-b612-ea750d61cf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdd1cd6-e3d8-4321-88c2-88eb0bc13add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f65ee54d-bda8-41cb-9f4a-29b6b905ce3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5c79a82-b6cc-4c34-9dd3-93d08b2ff868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c32b8d87-1b61-4e53-894f-83e1f4ab7315"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93ab5238-c17d-4c28-8628-dfd6b417cd2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47578f00-ca16-40ab-afaf-aa01b84c8b0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc5313f0-6a32-4c85-bc13-72f9c7f14788",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "134474cc-1034-4c64-99fa-822ebb73f115"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1025aaef-4a19-4075-be2a-c445e4cee5f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddfa951b-1894-47b6-af63-39825c3c4d10"
            }
          }
        ]
      },
      {
        "id": "ce830a50-324c-4387-8669-3b06ec448e3a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56a26459-8a78-43ab-9b74-89d2d6c8cb7c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed1c2b4f-965e-4ea9-b57d-b3cc2bafd85d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f4b2fb04-25ba-4acb-b794-54287b5bbb40",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04bcdb9b-cfba-4a3f-b1ed-dc69a2f04588",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecfb8b5a-1e50-4563-84b2-0d18dabacbe6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 459.8690476190474,
      "responseMin": 7,
      "responseMax": 13933,
      "responseSd": 2072.958432150271,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725410566675,
      "completed": 1725410691301
    },
    "executions": [
      {
        "id": "08ebd3b2-36ec-4a44-89ad-0f978009a3d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f0a7b30a-8c65-4f63-99dd-6dd59199e30c",
          "httpRequestId": "e1a0d115-4bf8-4274-be58-d144db9a241c"
        },
        "item": {
          "id": "08ebd3b2-36ec-4a44-89ad-0f978009a3d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b3885425-2987-436e-8257-39fc66452631",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "e62a9c58-1aca-45c3-827f-458f1207112f",
        "cursor": {
          "ref": "6b03779c-a85d-4e67-a858-47109d69b906",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "25bcd417-30a2-4829-b9a8-3cd3d3c31934"
        },
        "item": {
          "id": "e62a9c58-1aca-45c3-827f-458f1207112f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "648a3142-1dae-4be1-a189-f2e3856c49d6",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "34e75a72-82aa-4fad-bd27-a5bb97787805",
        "cursor": {
          "ref": "45ba85d2-d35e-4041-a0e5-b2d673c6d143",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "49eb89dd-ff4f-440c-851f-547046a774ca"
        },
        "item": {
          "id": "34e75a72-82aa-4fad-bd27-a5bb97787805",
          "name": "did_json"
        },
        "response": {
          "id": "ddedc977-0b57-4bcf-b5eb-c78f072a614c",
          "status": "OK",
          "code": 200,
          "responseTime": 455,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba1fd30-04a6-4a20-894c-dbcc8ea2cbd8",
        "cursor": {
          "ref": "992483d4-6a3c-44b4-853b-c14b9b6ddc51",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dc6b7612-e73c-4eec-aa55-ef1726bf378b"
        },
        "item": {
          "id": "1ba1fd30-04a6-4a20-894c-dbcc8ea2cbd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "9fec5eef-285e-4c4d-9b8e-31f1bccf93ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2193,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba1fd30-04a6-4a20-894c-dbcc8ea2cbd8",
        "cursor": {
          "ref": "992483d4-6a3c-44b4-853b-c14b9b6ddc51",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dc6b7612-e73c-4eec-aa55-ef1726bf378b"
        },
        "item": {
          "id": "1ba1fd30-04a6-4a20-894c-dbcc8ea2cbd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "9fec5eef-285e-4c4d-9b8e-31f1bccf93ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2193,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53904e7c-746f-41a1-93ef-652e8c213bfb",
        "cursor": {
          "ref": "6689fcb4-f062-44a6-9fa8-abb095869552",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d4054231-c655-45ce-bdbd-7c71316b4f88"
        },
        "item": {
          "id": "53904e7c-746f-41a1-93ef-652e8c213bfb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fcabd5d2-6578-47b0-8102-e5d6361b739f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2529,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15809fe5-b078-4d2c-8b12-9167ad42a2e9",
        "cursor": {
          "ref": "5e6280e5-1807-4c77-b954-34792fb569e0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f871d2e5-7c35-4d22-9413-4fef73afa674"
        },
        "item": {
          "id": "15809fe5-b078-4d2c-8b12-9167ad42a2e9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "88abcaca-6e9e-4b9a-93c6-d9e1b90df41a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2046,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d56630-4425-44dd-a2b7-184963eda02a",
        "cursor": {
          "ref": "286163c8-3cf6-4a31-bda0-36c6184a9705",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "28973e9f-c061-4afe-a18b-55510d2f0bad"
        },
        "item": {
          "id": "11d56630-4425-44dd-a2b7-184963eda02a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "113f48df-ddb1-43a6-8fb5-36a9d25824b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b70d6d2-ce68-479e-ba19-74edd0d1c14b",
        "cursor": {
          "ref": "5e004378-8ba0-41f8-b67c-eb0a06b38550",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a36dfd5f-e6c4-447a-8def-154cf596af86"
        },
        "item": {
          "id": "5b70d6d2-ce68-479e-ba19-74edd0d1c14b",
          "name": "identifiers"
        },
        "response": {
          "id": "bb2b54da-219b-46d5-868a-62efda9b43ce",
          "status": "OK",
          "code": 200,
          "responseTime": 2547,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85b4cbf-624b-4299-a614-9d66467961e1",
        "cursor": {
          "ref": "c07a1831-f449-424c-8ebd-aace16b2cfce",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "69669f67-4ca4-4f92-9813-bb0ce8632e94"
        },
        "item": {
          "id": "d85b4cbf-624b-4299-a614-9d66467961e1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d4dd9d14-b5d5-4fd5-9251-c8821e348525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517586c2-4bd5-4ebc-aadb-133264e135ae",
        "cursor": {
          "ref": "94182396-c786-43a1-afd6-b692ae038cd6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7bcb65ed-affc-4a70-bea0-9bfa5451800f"
        },
        "item": {
          "id": "517586c2-4bd5-4ebc-aadb-133264e135ae",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "db70489c-9f20-4c9b-9e71-b35312896ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21e3c6d-37e8-4b02-92a1-30f50bd135ac",
        "cursor": {
          "ref": "0414dcad-5154-4b6d-9794-b28611054f23",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c271f0a6-adc8-4485-b25b-df9b8fe97c7c"
        },
        "item": {
          "id": "e21e3c6d-37e8-4b02-92a1-30f50bd135ac",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "798bd511-f61d-4f35-a36e-4eef5609e510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fea260-67be-4d1f-a1c2-506a085ddbd6",
        "cursor": {
          "ref": "2d895c1e-e410-406f-8969-d6b9380f3416",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6dcce48b-a7b9-49d3-9951-1d0296ce514e"
        },
        "item": {
          "id": "c9fea260-67be-4d1f-a1c2-506a085ddbd6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "667456e1-1d4f-4862-b113-26e4b88c7de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7bd42b-b78f-433c-bcf9-677b617f2a83",
        "cursor": {
          "ref": "9c8711aa-abcb-4d2b-9d5f-d3102bfab650",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0f825b05-9511-4629-910f-98842e431a34"
        },
        "item": {
          "id": "7b7bd42b-b78f-433c-bcf9-677b617f2a83",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f425096c-3dd2-4b44-bab4-cddd8f88e659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08f229b-9d4d-4033-a799-299ba4f44f25",
        "cursor": {
          "ref": "66429c7e-f5e6-43e2-bdc6-a554042a6fca",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2cc59615-2499-4476-9534-a2f4f6184468"
        },
        "item": {
          "id": "a08f229b-9d4d-4033-a799-299ba4f44f25",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6fa18c2e-c07b-4586-ae66-d36cd43db99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbfe0d4-c6aa-49e6-ae95-1352ae8b3e6a",
        "cursor": {
          "ref": "2839bb71-e7d4-48a0-914f-491c7ddb8a9d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "032f6c85-fae9-49db-930f-e93a069b2857"
        },
        "item": {
          "id": "dfbfe0d4-c6aa-49e6-ae95-1352ae8b3e6a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "34e8bf30-8336-4673-823b-336b0979c3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bf1705-d97b-4bce-ba31-570c285a1c09",
        "cursor": {
          "ref": "efd0f7fb-e356-4f70-ad25-5eccebfb5e4a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7741926e-f89e-4c95-8de6-d81d508c08cb"
        },
        "item": {
          "id": "72bf1705-d97b-4bce-ba31-570c285a1c09",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "41ed83ab-8b44-4af1-ab43-993f53835d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f5376-1dfa-4f61-b068-92f4606c6719",
        "cursor": {
          "ref": "8b426e09-8ad6-4138-b4b5-9d907603dffc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "77632966-1aac-453e-a01e-850173438850"
        },
        "item": {
          "id": "1b7f5376-1dfa-4f61-b068-92f4606c6719",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "82e75984-6b17-4d4a-b50e-30812728b4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13589ede-b31a-4415-b462-cb80cb1765cf",
        "cursor": {
          "ref": "5f01c37f-1e13-4f70-9d39-9a88a7f119f3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2de3b652-8988-492d-829b-b1823f8b5426"
        },
        "item": {
          "id": "13589ede-b31a-4415-b462-cb80cb1765cf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "16a0e7cb-b979-4b00-8f54-2307699ff1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20f8f7d-29a0-4c8c-8374-6a6987ddeb52",
        "cursor": {
          "ref": "ac230fc0-87ab-4524-97eb-dc1b770f9c30",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cbf7ef18-cab0-439d-ac68-3c3964899b20"
        },
        "item": {
          "id": "a20f8f7d-29a0-4c8c-8374-6a6987ddeb52",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6b336d2f-ba87-4d55-85a4-7dca0ce58c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf573573-f660-4ef1-97e9-46db53f4071d",
        "cursor": {
          "ref": "8aea1808-d860-4e83-bb38-70f052250693",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8f899af6-1ce8-452d-9ede-b0610e3660d8"
        },
        "item": {
          "id": "cf573573-f660-4ef1-97e9-46db53f4071d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "27f5fda6-b5b0-49a4-95b3-f0e0b9a9289d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a9aa3b-b1ab-4ab3-8d18-2fa3dfb304ec",
        "cursor": {
          "ref": "cc88e0c2-dde3-4bb8-a9e4-a35ad016d51b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d0aa7f0a-1def-49e5-b476-66ec9770bb8a"
        },
        "item": {
          "id": "11a9aa3b-b1ab-4ab3-8d18-2fa3dfb304ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "876b86b5-77fe-4f68-b1b2-fb67cbd6b789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db3b8fe-3e79-463c-af34-0da533b28f64",
        "cursor": {
          "ref": "fb8741d9-8fb7-4952-b57e-e106a8e81765",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d02e75d0-4673-4a74-9816-4421497cc075"
        },
        "item": {
          "id": "4db3b8fe-3e79-463c-af34-0da533b28f64",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "649f1a69-ed5d-473f-aedb-5d6f3014fe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bf4940-bad5-42bd-b0c3-8a51486df4e7",
        "cursor": {
          "ref": "db4290ae-bb1a-4a01-badb-a6022880ef4e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6d1ff050-ca4f-4943-8ded-2a927a6e29eb"
        },
        "item": {
          "id": "45bf4940-bad5-42bd-b0c3-8a51486df4e7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b921e933-cf5c-4141-a354-edafd8105cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9253bfc9-7a2e-4cff-a663-0a9a48bce5d4",
        "cursor": {
          "ref": "5384cb29-3877-472f-a52e-b2bdd87aa339",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d555797e-f781-4b5a-81ec-19ab04bb5327"
        },
        "item": {
          "id": "9253bfc9-7a2e-4cff-a663-0a9a48bce5d4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f7ddf9d2-5f2c-4158-8a74-055b0854c90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0710133-e8b4-4e87-82f0-7ebcc9088cf8",
        "cursor": {
          "ref": "65044604-3572-4843-9dbd-4155f4994fdb",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c09ef58c-1d60-4e55-8fa6-82ee8c0b8f3c"
        },
        "item": {
          "id": "b0710133-e8b4-4e87-82f0-7ebcc9088cf8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0420aef2-f4fc-4440-9822-f2a2df025ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e7fd4-6def-4044-8cfa-a869383f6230",
        "cursor": {
          "ref": "87cfa76b-042d-4022-8be3-0e89749f1cd0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2b912474-a7ad-420a-b676-a7ce5ea81f8d"
        },
        "item": {
          "id": "a97e7fd4-6def-4044-8cfa-a869383f6230",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "22fe2b17-49b8-40b0-8e34-c784cb2b244e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff9e2f3-c30c-4cb8-a4b2-85adee77e46f",
        "cursor": {
          "ref": "e3d37192-9e70-4339-8897-7b14fd71ed8f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c1cdd634-d75a-4e53-b219-82edb6c50402"
        },
        "item": {
          "id": "0ff9e2f3-c30c-4cb8-a4b2-85adee77e46f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "846a8fc4-ffcc-4304-94e0-4d6f1e437177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8628c643-8cc9-4177-8e59-d8f93cd75b94",
        "cursor": {
          "ref": "1a2e1c50-9fd8-4e33-bc0a-b394b3487c5d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0e8238a7-dcac-467b-bc3d-3eda78a7acf2"
        },
        "item": {
          "id": "8628c643-8cc9-4177-8e59-d8f93cd75b94",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e20cfafa-dce7-400a-b13c-83029b9eca3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52dac03-0085-4038-9d16-f091387f9aa1",
        "cursor": {
          "ref": "372a01ce-a072-489e-ad11-303a44e3576e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c076506a-8017-4d3e-ad43-6cdd8d775dd4"
        },
        "item": {
          "id": "a52dac03-0085-4038-9d16-f091387f9aa1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8f5d9acd-a57d-4c1f-bd10-2c958f406fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f350cbb9-eeac-4b29-84da-6f2189955e8c",
        "cursor": {
          "ref": "323b8abd-3978-418e-af5d-e318c71a7bcf",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "302e0e4e-ff4a-44bd-81b9-42804f026857"
        },
        "item": {
          "id": "f350cbb9-eeac-4b29-84da-6f2189955e8c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f7bc1a35-f1bc-46c8-83a2-8cf8b1f181c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf06f329-b194-4345-ad36-1f2b09eee6c0",
        "cursor": {
          "ref": "4a61ba0e-4ce8-43f6-bf31-386cfb7f0122",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "eab28c0d-40c8-4a49-94bb-54570717b4b2"
        },
        "item": {
          "id": "bf06f329-b194-4345-ad36-1f2b09eee6c0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "50aa1fe8-08b3-4167-93cb-969904d6e359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0a07a2-24f5-4f80-9b82-0448321324c8",
        "cursor": {
          "ref": "c99606bf-7545-43e7-b92d-519530635410",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "26574653-59a4-4b9b-88a7-3cf688a54d08"
        },
        "item": {
          "id": "8a0a07a2-24f5-4f80-9b82-0448321324c8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1c5d20f1-c1c6-4880-89ec-32832166193e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfa2669-b831-4a5e-a09d-9914bdda3c08",
        "cursor": {
          "ref": "3fdb21ea-809c-4fb4-b076-7261248b8937",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bde4bd49-e606-4cdf-8af7-2855244c3e79"
        },
        "item": {
          "id": "ebfa2669-b831-4a5e-a09d-9914bdda3c08",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ed76b8ab-2f0c-42d5-9120-9246c1be4635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7df7467-3104-48dd-a94e-6c629fce71dd",
        "cursor": {
          "ref": "b27898f3-9e3d-48ff-b321-fd7bb6a90893",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5a233427-68c7-497b-a8fa-f50433f06785"
        },
        "item": {
          "id": "c7df7467-3104-48dd-a94e-6c629fce71dd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f2d171cd-3701-4291-b178-ecbed9ae7397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cd3165-5062-49e8-b302-3cc93b0d32c7",
        "cursor": {
          "ref": "f9f41235-f3ec-498e-bace-9d79a673a079",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a5229089-0885-48ac-9aae-914e4655e42f"
        },
        "item": {
          "id": "02cd3165-5062-49e8-b302-3cc93b0d32c7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b80d1873-6973-40c7-80d0-ce2ccc3c71da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95e17a6-d380-47e1-abd9-1a514dc2fffc",
        "cursor": {
          "ref": "b944cb95-1739-4253-a8cd-808d10ee99ed",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d67a1d5a-7d8d-459e-a99c-ce60ff14044f"
        },
        "item": {
          "id": "b95e17a6-d380-47e1-abd9-1a514dc2fffc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2d5683ba-beb7-4036-8918-f176439527e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6251af-9ae6-4efc-8d46-d96f2afb0e33",
        "cursor": {
          "ref": "dc5f3d02-74db-46b2-90c5-8536af0d65e4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d49ba004-7e97-46b6-80f3-28474da37f12"
        },
        "item": {
          "id": "6f6251af-9ae6-4efc-8d46-d96f2afb0e33",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8277aea1-649d-4f86-a17f-11629eaa02f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5335def-6fc8-48ec-8882-dd5d117e3f65",
        "cursor": {
          "ref": "c5984aef-69ef-49b3-8800-e53d935b8c86",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cdf09622-d1e1-4fc7-ab86-dcaa6b6eb595"
        },
        "item": {
          "id": "c5335def-6fc8-48ec-8882-dd5d117e3f65",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "158fcef0-eaca-4fa8-b5c9-d60ff3a78885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5a21db-0912-4894-860d-5c8ac95eec26",
        "cursor": {
          "ref": "0b38c466-98b7-450a-bbb8-de124dd0f5d9",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e48697ca-e122-47bc-b90f-de23fd911e42"
        },
        "item": {
          "id": "2f5a21db-0912-4894-860d-5c8ac95eec26",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "85649bf4-21bc-48e1-91c8-776e42e7920c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067ce429-e430-4be6-9eb8-eb2884586bc3",
        "cursor": {
          "ref": "21bd8754-f269-48f3-932a-3f4e011ec56e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "20514b48-7c73-43b0-a852-c4141da16194"
        },
        "item": {
          "id": "067ce429-e430-4be6-9eb8-eb2884586bc3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6db9105b-1f59-4a90-b5cf-59beb992690a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc60b5e5-7de5-4bd1-b289-936452886de4",
        "cursor": {
          "ref": "ec0ad22a-65be-4ed6-ae8b-f5ad9f06b56e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a51126c6-64b9-4cb6-ac50-dbd21377b542"
        },
        "item": {
          "id": "dc60b5e5-7de5-4bd1-b289-936452886de4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "09eb3059-104a-47fc-9be2-f1d413148a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956d1a53-a7e8-4367-9107-680cbb0afa2d",
        "cursor": {
          "ref": "a9740290-f08c-43b2-ad6e-1f58c2674e10",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cf6ac41e-c265-4a68-b97e-b9fbdb993203"
        },
        "item": {
          "id": "956d1a53-a7e8-4367-9107-680cbb0afa2d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c0dfff77-997c-4fe7-98ae-fb166c2d348d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957988ea-a154-49b4-b904-ab75bfecb681",
        "cursor": {
          "ref": "c7128857-f823-438a-9599-beaaf289e5e9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "719eb441-639b-4fe8-a7ca-690744025706"
        },
        "item": {
          "id": "957988ea-a154-49b4-b904-ab75bfecb681",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f7bc39dd-7133-4222-ad85-4a8843613602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7af562-5568-4066-915e-d68675b58e37",
        "cursor": {
          "ref": "5d507819-49cb-4ba5-b7af-a5e038369707",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "70102bb1-e061-4386-9caa-3fac0d2f5137"
        },
        "item": {
          "id": "0d7af562-5568-4066-915e-d68675b58e37",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2f847173-9dc6-451c-aace-d15ab3e901f2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2552b1-17b3-4be1-9e7d-d2519a5803cb",
        "cursor": {
          "ref": "6a192702-015a-44c3-9520-55db68d8d1c1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ffc84509-164f-4ff9-ab45-6e3656d75abd"
        },
        "item": {
          "id": "df2552b1-17b3-4be1-9e7d-d2519a5803cb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "74433d9b-7bbe-48e5-9cb8-20fdf9d458d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f940dfe9-6dba-4fc4-9a8a-2963f8d14f54",
        "cursor": {
          "ref": "fc148861-611e-4597-a7ee-fa2a17ed9bef",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3f443950-e6b0-48c9-b0df-764640d1d549"
        },
        "item": {
          "id": "f940dfe9-6dba-4fc4-9a8a-2963f8d14f54",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ba171cea-fe1c-44e7-ac1a-714d44618ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0113205-adde-4fb9-bdd6-64928b183fba",
        "cursor": {
          "ref": "a50cb3a4-9fdb-426c-b56f-8eb54bdf5ef4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5ccb6508-3285-4479-becb-54501bcec081"
        },
        "item": {
          "id": "b0113205-adde-4fb9-bdd6-64928b183fba",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0c238e60-bf3c-44ed-be6b-2b535da80643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad45b86-1121-4d0f-bd06-24556b638501",
        "cursor": {
          "ref": "9ae0a1e7-2d52-4575-89ee-d2ede908f09f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3adfeecf-b9c6-43f2-a17e-9363b15f834a"
        },
        "item": {
          "id": "2ad45b86-1121-4d0f-bd06-24556b638501",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fd9d1c3c-54c1-44c8-b6b1-0500e920a66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace54922-8668-424c-ba2a-f6a8b938d6ba",
        "cursor": {
          "ref": "cb396b70-3096-4d1c-95e1-e5ce41a40f4a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0708fc96-de21-4706-9cf8-f85c669a2992"
        },
        "item": {
          "id": "ace54922-8668-424c-ba2a-f6a8b938d6ba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f26b0304-b773-471b-90a9-1c901b64a7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9dce24-3503-435f-a856-0061e17e0d06",
        "cursor": {
          "ref": "5d40dbc5-b02e-4885-88ff-e7749678e596",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f3b9a7b9-292f-4f21-9306-4bb90c78060f"
        },
        "item": {
          "id": "ef9dce24-3503-435f-a856-0061e17e0d06",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b57754d6-bb04-4ad1-a5d7-cf02e69b3be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f751bd61-1da7-4e30-b3f0-3a7909b1668b",
        "cursor": {
          "ref": "05242da3-1a29-449c-a698-514d7aef4bd8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4bba49c1-a442-4e07-a88c-f14cc5bd900b"
        },
        "item": {
          "id": "f751bd61-1da7-4e30-b3f0-3a7909b1668b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3eb909f3-ffe2-4849-8511-832faeb8d380",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16122177-cb0a-4615-bc80-3fe496fb1d2b",
        "cursor": {
          "ref": "748b9f8d-4848-472b-bd91-bd06b98594d8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8140e4b6-2d33-4faf-b5c3-1c2c25e181ae"
        },
        "item": {
          "id": "16122177-cb0a-4615-bc80-3fe496fb1d2b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b970795b-67e4-4c98-a91e-0a3a07a045ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1463adfe-083e-46cf-bd18-2c87059e5b85",
        "cursor": {
          "ref": "688e8c09-0245-41bd-8054-bdc1365d9274",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5dd721d9-1bd6-4e45-8126-2451fbeb0c22"
        },
        "item": {
          "id": "1463adfe-083e-46cf-bd18-2c87059e5b85",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5fa36f65-eb8e-40c6-9dd6-935331677408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8cdc5d-ea7f-480a-be14-206605ab892d",
        "cursor": {
          "ref": "03a6914d-452f-4dd5-8309-5c4454554885",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f32cf178-6a5c-4687-9853-83659248ae81"
        },
        "item": {
          "id": "2a8cdc5d-ea7f-480a-be14-206605ab892d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a13a17c8-84ea-45c6-9add-3b9d04dbd7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b42f247-acb4-4878-bbfc-5b9d1fdfbe83",
        "cursor": {
          "ref": "13d88c14-fc03-4477-977d-181d9431e0c3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a24e1de6-a866-44a8-af9d-c6d1851dc032"
        },
        "item": {
          "id": "7b42f247-acb4-4878-bbfc-5b9d1fdfbe83",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "28f1af45-2f90-4516-a44e-f5e8b622cf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861e2b63-dc08-4286-8ff1-c40b1866a697",
        "cursor": {
          "ref": "884183a5-434d-4fd4-8b91-21afe7daf186",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c27d5269-7482-4d09-83c7-9752d266cb99"
        },
        "item": {
          "id": "861e2b63-dc08-4286-8ff1-c40b1866a697",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6b3056f7-2b09-46d0-8953-e173f390c900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfeeb81-951e-459e-953c-9c62312bba32",
        "cursor": {
          "ref": "8d223b77-1236-4a89-ab95-826b343d86b5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ae63ec71-fb57-46d8-89c3-74ad5cda5c9d"
        },
        "item": {
          "id": "0bfeeb81-951e-459e-953c-9c62312bba32",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ad995dcd-d0b4-41bc-a257-3a66a8bde9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8088a0-5e2d-4147-9ac3-7210c0432336",
        "cursor": {
          "ref": "0089ac12-986b-47a1-8d99-cfcbfa5441fd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4071a209-031d-41bd-b66a-4dd0c99004e7"
        },
        "item": {
          "id": "1d8088a0-5e2d-4147-9ac3-7210c0432336",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "51bf1977-5fa2-4d68-b377-8ea4cdf68ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002e8302-8561-42db-a066-c897d271e5f5",
        "cursor": {
          "ref": "7bf14d87-efad-4626-9596-331bd484dec7",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b52b02dd-8e3b-4455-b8e7-48977b350444"
        },
        "item": {
          "id": "002e8302-8561-42db-a066-c897d271e5f5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b2f4ad38-d633-4b3b-8d5b-8b699d238682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eb9b1d-5383-4928-9775-c7b6798195ee",
        "cursor": {
          "ref": "1fc06392-4891-4a2d-b433-8b2f71ca2e8e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a7d5567a-17e4-4356-9d05-a7b9562ffe03"
        },
        "item": {
          "id": "01eb9b1d-5383-4928-9775-c7b6798195ee",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cf6fc8c7-7bb9-463b-9ce3-aa111b35b988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa10b322-b219-4cd7-8764-1a3370cbfff1",
        "cursor": {
          "ref": "9608f3eb-7900-4fb0-a65b-cd55c2938fae",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "875be5a5-5d73-4492-99b5-0f612ef6410c"
        },
        "item": {
          "id": "fa10b322-b219-4cd7-8764-1a3370cbfff1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3cac8be5-1820-4d32-8ab1-3aa6ebd67285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38db0154-5689-449e-a993-64385e9b76bc",
        "cursor": {
          "ref": "d53237d7-a60f-44e8-a372-1f688b36b507",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "76114983-8f4d-4bff-85a7-6ba1c854e273"
        },
        "item": {
          "id": "38db0154-5689-449e-a993-64385e9b76bc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "25c74373-602c-409d-b46d-1f34a659fb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602a4239-6bc3-4509-9448-079264c65fc2",
        "cursor": {
          "ref": "d4320e01-61fe-4206-92ca-1ba023ae0c20",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4c658911-845e-4342-a6ed-1a6cdde738ca"
        },
        "item": {
          "id": "602a4239-6bc3-4509-9448-079264c65fc2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "847ec2af-ffba-4cfb-aa12-f53c37dec30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c0016e-c445-4bbd-9d89-fa2defdcca85",
        "cursor": {
          "ref": "154a5f15-4f66-44b4-897a-e68502e2a724",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f3c3d377-c860-439b-b570-444a1e8d6621"
        },
        "item": {
          "id": "c3c0016e-c445-4bbd-9d89-fa2defdcca85",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1c1922d6-423a-496c-b8bf-2310b61e9e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e52684a-22e1-4266-8cd5-8a5763d61927",
        "cursor": {
          "ref": "09215390-14fa-4afd-8e19-cfe18beef1aa",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4d0c8c40-5ae4-4333-9f7d-77f5cdb182b1"
        },
        "item": {
          "id": "0e52684a-22e1-4266-8cd5-8a5763d61927",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d83c115d-8dfa-49b8-a99c-39f877019f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b98b8c-44ef-4d70-b559-5406e6a73d43",
        "cursor": {
          "ref": "488de4c3-e296-4e9a-97a9-58a3d8e33a8f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f98cc841-2dfd-426b-81e1-c5219b478ed7"
        },
        "item": {
          "id": "62b98b8c-44ef-4d70-b559-5406e6a73d43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "05baab72-e047-4d54-9d33-3bb47e5670dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd9383e-8e16-49d7-8b80-800e786118c6",
        "cursor": {
          "ref": "039bdd5a-07cd-4808-bd15-181b34fa44e0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "60b26634-e224-440d-8d9e-75e37b896b0e"
        },
        "item": {
          "id": "7fd9383e-8e16-49d7-8b80-800e786118c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1b2bc33b-7080-410a-b578-2481cc28089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a0125b-ac42-4fc7-a3b0-64420586fbc7",
        "cursor": {
          "ref": "00dca50a-e53e-4618-aede-0a00162fd54b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0b6fad90-a3a6-4f71-9748-b11b59795c88"
        },
        "item": {
          "id": "c8a0125b-ac42-4fc7-a3b0-64420586fbc7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "655dd074-dca2-47ea-a200-0b952a3077a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d77c95-77be-43c1-92b5-28d6afda39bb",
        "cursor": {
          "ref": "8bb08cf9-67c4-4a2a-b8a7-59641d42cb16",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6abda6bd-698f-4deb-bc53-7faf161007de"
        },
        "item": {
          "id": "d9d77c95-77be-43c1-92b5-28d6afda39bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3e1ced1b-d206-4e2e-9b46-2106420a5af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d745edda-bc42-4594-8061-b1e10bf8dc9c",
        "cursor": {
          "ref": "35b20353-ebc1-46f7-8df4-a6fa0ea08f95",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f5b0a3ce-4409-4eba-a3cb-4f9ac89d4f3e"
        },
        "item": {
          "id": "d745edda-bc42-4594-8061-b1e10bf8dc9c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4c0c20a4-1e53-4588-a2a5-1d05fb393914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d84d22a-c4b2-4c26-885a-98c17e4b63f7",
        "cursor": {
          "ref": "e2e4da72-e56a-4656-9c19-5d5818e92ed4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c1d0732d-b78c-43d8-8602-8ec3fee4cc52"
        },
        "item": {
          "id": "8d84d22a-c4b2-4c26-885a-98c17e4b63f7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "371d4818-1410-4d52-a353-5c03f6d24404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8805cafe-699d-48a4-9518-455bd5f84d45",
        "cursor": {
          "ref": "cb75c16f-f2ea-47fc-87bb-1a6ca7ef41c0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "90c13138-1e6f-4062-a0f6-d4700dadaa67"
        },
        "item": {
          "id": "8805cafe-699d-48a4-9518-455bd5f84d45",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9f8ef04b-8798-4cca-89f6-1c7ec2d3b41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0987768a-6305-455e-bb7b-711866a1f362",
        "cursor": {
          "ref": "9d890694-43b5-497b-9dd4-0e24d15a42f6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c9ffb0bc-0c70-48e4-b0e9-31480132fb9e"
        },
        "item": {
          "id": "0987768a-6305-455e-bb7b-711866a1f362",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2b0128da-e8af-49a7-a554-1b275d5dd1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4dc7bb-97c2-4550-9c14-425a05071e50",
        "cursor": {
          "ref": "69542a22-fe47-4e90-8a27-434ff98248fb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e81ed7a2-ae9d-413d-8009-4f658f57f856"
        },
        "item": {
          "id": "9d4dc7bb-97c2-4550-9c14-425a05071e50",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "23c1653c-4207-4865-ac75-c573879f4aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc165043-c1f2-482c-bc67-2914e540bde2",
        "cursor": {
          "ref": "ec523024-1523-445f-b87e-fe8b707112e1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1b2fc8aa-bd74-44dc-a626-851e28fe016d"
        },
        "item": {
          "id": "fc165043-c1f2-482c-bc67-2914e540bde2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f1fd4e90-349b-4bc9-b4c4-db67b7e9fefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f32377-bd5d-461f-ab00-bb2780655d17",
        "cursor": {
          "ref": "1695f3fb-705f-4ef3-9ee7-b5121de9d9d4",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6a9fd9a9-91f6-469b-bf34-7d5887165830"
        },
        "item": {
          "id": "22f32377-bd5d-461f-ab00-bb2780655d17",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "285bd435-00db-40cd-9949-627ba454c7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7b13c6-ab44-48eb-b0fb-ce7c71151a52",
        "cursor": {
          "ref": "3b8855c1-2f7e-4356-8c88-e3625d270dd0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dae8cc18-d94e-4bff-8bc7-f14a2e3aa49d"
        },
        "item": {
          "id": "1c7b13c6-ab44-48eb-b0fb-ce7c71151a52",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "42ffc18c-b083-4152-81e2-c74472ac20b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6e489e-8771-4601-8dd4-bcecd29f9967",
        "cursor": {
          "ref": "447c3a6d-3923-4513-ac5e-5eaff71429b9",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cdfbb5dd-a988-4512-8022-fce653029f28"
        },
        "item": {
          "id": "3f6e489e-8771-4601-8dd4-bcecd29f9967",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e65e9be8-d861-4fe6-8513-d320984bfe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12a2103-464c-4b1d-8089-77e88dd871a5",
        "cursor": {
          "ref": "3c171ba9-714a-4a1f-b152-4eab6ff3ba57",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5ebdc63c-929b-4b5d-853a-fa26490f26b3"
        },
        "item": {
          "id": "a12a2103-464c-4b1d-8089-77e88dd871a5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "58065fc8-619c-447c-8519-d70d4b9ceee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e502107f-9acc-48e4-8ebc-3fcce4c793e1",
        "cursor": {
          "ref": "3eeb66d4-efcf-4c42-a42e-6840a1bbda80",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "14611623-021d-47e4-9fa6-6621c95d4765"
        },
        "item": {
          "id": "e502107f-9acc-48e4-8ebc-3fcce4c793e1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bc6bd9fc-390c-4faa-9323-fea84371540c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c578d54a-2ba9-47a2-9879-5785df6cf929",
        "cursor": {
          "ref": "1af0b365-a44d-4016-8d26-f3d8e58e4b2e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ca7f2631-0e22-479c-9711-3156f02cb51c"
        },
        "item": {
          "id": "c578d54a-2ba9-47a2-9879-5785df6cf929",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "62e25b5f-1210-46d4-a8f1-49fb642df25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c2d068-bf65-4ca1-85f4-dcbc52eb3792",
        "cursor": {
          "ref": "0c154154-65d2-4a5d-8715-e1728739c391",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f4620d0c-5664-4854-a5ba-80a128e4ff7b"
        },
        "item": {
          "id": "02c2d068-bf65-4ca1-85f4-dcbc52eb3792",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "08753a4a-46bf-49ca-8405-c92d4d5c4ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1225e2f2-3ad8-43bd-b8d9-7efa4e826021",
        "cursor": {
          "ref": "c690a426-5bfb-42ed-b6f8-8629753247dd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "675eb519-403c-45c0-9945-7322df175578"
        },
        "item": {
          "id": "1225e2f2-3ad8-43bd-b8d9-7efa4e826021",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "030a8abe-41ba-4b83-b824-639c14820178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79296327-c5ab-4471-b49b-021ab84a59b0",
        "cursor": {
          "ref": "a8418095-9214-42ea-99a3-c735fc3f7412",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "597f3c14-4362-4513-8f45-ef2363ff822b"
        },
        "item": {
          "id": "79296327-c5ab-4471-b49b-021ab84a59b0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d4bf9783-11c2-4d30-a794-083215d45c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aef4fd3-a362-4839-9db0-6260e4ce0e09",
        "cursor": {
          "ref": "36971b34-bf4b-4069-a7f9-706102940a55",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b7b6c530-e4d7-44a9-9302-c30ba51c3be0"
        },
        "item": {
          "id": "4aef4fd3-a362-4839-9db0-6260e4ce0e09",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0db5d156-b67b-4e53-be1b-8271198a5fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a3f91d-14dd-46b4-adc2-1163f83fa89c",
        "cursor": {
          "ref": "2011b6d9-a797-4e09-9036-20cf7917eb19",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8bdd7694-b27f-40cd-aff6-2730e6e823ba"
        },
        "item": {
          "id": "c9a3f91d-14dd-46b4-adc2-1163f83fa89c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f773c336-11b3-4e46-b853-571bb6f08b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7488853-2393-4df2-ae49-1fa756fc59e4",
        "cursor": {
          "ref": "043b0da4-3a36-44c2-80b8-d0c14267bb94",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6d10e114-3e83-4f63-8d75-5baefeb4c3d9"
        },
        "item": {
          "id": "f7488853-2393-4df2-ae49-1fa756fc59e4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9e9704c2-f9cd-4b09-b818-a2fe7313a74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc4a3a1-9c0a-4585-a270-4be623db09b0",
        "cursor": {
          "ref": "37156a4c-2447-4d6f-a3cb-b2c3e58fdd6c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aebf3c11-6060-417b-9a03-94a0e7f2adc8"
        },
        "item": {
          "id": "7bc4a3a1-9c0a-4585-a270-4be623db09b0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e143e8a1-5f14-4b2e-b838-06784e29b67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54516aa1-73fa-4a65-9447-dc012e2c5f7a",
        "cursor": {
          "ref": "7582b404-3129-4819-8820-cf29f556fb6a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d77b1309-4233-4f81-b8c8-3a9260040088"
        },
        "item": {
          "id": "54516aa1-73fa-4a65-9447-dc012e2c5f7a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "232ae73a-0249-412c-ba47-5988030ff7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1555f27-d522-405d-9772-a30345e4a8e1",
        "cursor": {
          "ref": "32777db1-88d5-4ced-b3e8-c71e3b7c73b8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e4b46040-afbc-4346-93c7-bae818f9117c"
        },
        "item": {
          "id": "e1555f27-d522-405d-9772-a30345e4a8e1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5b2ae150-b29a-4547-929f-e94a20db679c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d466a61-2fd4-4779-8832-ffc8b18a6051",
        "cursor": {
          "ref": "e610f366-9425-4bea-92b0-acd19ff343a2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c7218b72-d52b-4a3a-878a-c18551a930b6"
        },
        "item": {
          "id": "0d466a61-2fd4-4779-8832-ffc8b18a6051",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "91a48d01-e13b-457d-a833-51d2e76a189d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00bc144-1b0d-41ee-87ef-6a8f830268fe",
        "cursor": {
          "ref": "6a756337-aeb4-4d2d-b57c-6ac2ebab37da",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f5488df6-fa0d-4bfc-84e0-33ad766c4948"
        },
        "item": {
          "id": "c00bc144-1b0d-41ee-87ef-6a8f830268fe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6f8c35e7-af7d-4f61-a257-7f2dfde82bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a91c07-ee8e-448e-bf7b-e4946bcb5c83",
        "cursor": {
          "ref": "9b5f3717-416d-4f18-be42-7f96400d0915",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ab07f538-8152-46b5-aba3-8a6ee426aa02"
        },
        "item": {
          "id": "83a91c07-ee8e-448e-bf7b-e4946bcb5c83",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1218c2a8-7169-47c2-83f7-ddffb1517c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd352543-52c3-400a-81aa-d3b279370d8e",
        "cursor": {
          "ref": "756883df-c9f7-4975-b88b-7930956579e9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7f99813d-6907-4f18-9ac5-312293e0127e"
        },
        "item": {
          "id": "dd352543-52c3-400a-81aa-d3b279370d8e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c4431d5c-5611-4ac5-9306-7751a1ce0cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60d1501-3581-468b-b9b2-e4e8b50d780a",
        "cursor": {
          "ref": "0562812e-a941-4eb2-a30a-07cb67510d59",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "15f82bfa-7f66-4776-b521-c067cfd994f6"
        },
        "item": {
          "id": "d60d1501-3581-468b-b9b2-e4e8b50d780a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "10da8ea5-1727-4989-b81d-f116050ebc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963cca13-984b-45f5-99ce-1ce1b8ddae59",
        "cursor": {
          "ref": "e6605d32-d503-4cfd-b739-0869d8ee2843",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9735f10f-266a-4719-9915-182084677ade"
        },
        "item": {
          "id": "963cca13-984b-45f5-99ce-1ce1b8ddae59",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "46ee71dd-4f42-4a34-992c-d6a3b8c0528f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a732dd-e582-4f46-a22a-7b8a599d876c",
        "cursor": {
          "ref": "04c209b8-bbbc-4f66-ac5e-1a362f50e2dd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1c97f750-2dfc-4ca7-900e-f59405fefca1"
        },
        "item": {
          "id": "32a732dd-e582-4f46-a22a-7b8a599d876c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "30879d24-546d-4341-968e-8b3949a6a523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d8dbdb-d890-46d7-885f-b235012b176d",
        "cursor": {
          "ref": "7e8dff84-cae4-4d6d-8dae-6b28f1146d5f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fb2c74fc-9545-4c0c-84c1-08a6212b36dc"
        },
        "item": {
          "id": "06d8dbdb-d890-46d7-885f-b235012b176d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6eb174a4-55ff-40a7-87d4-a07ecd5ed21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d7bf03-7974-4a03-828b-a6d3db9fcb0b",
        "cursor": {
          "ref": "36611931-a557-4fc7-b583-0e972f61ec03",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "61e370de-04b7-40c4-9cb9-9f51aafcfa9f"
        },
        "item": {
          "id": "32d7bf03-7974-4a03-828b-a6d3db9fcb0b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b722fdb5-d2c2-4428-be83-c32f1f895e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bbaf7d-5c01-4a68-85d5-65f8ab046344",
        "cursor": {
          "ref": "c5b96214-b4cc-469d-87ec-dce79f6efae6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2829f95b-fde0-4c1f-a224-2489738b8e56"
        },
        "item": {
          "id": "03bbaf7d-5c01-4a68-85d5-65f8ab046344",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "307543af-aa14-4d58-9a80-0d656947ccd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a509ed3-687c-41fe-b099-be8390847cab",
        "cursor": {
          "ref": "0d1ca711-cfbc-4496-aecc-76ce52098911",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2a9c61bd-876c-4ce0-abd1-9af8a49d549c"
        },
        "item": {
          "id": "2a509ed3-687c-41fe-b099-be8390847cab",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f042cede-12da-48fa-b5e1-8899e10b2ada",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330c2e79-fe37-4f56-a2d4-0f9f162b099e",
        "cursor": {
          "ref": "8e200f97-7d02-43e7-85ea-8b7bd1038432",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1bb09bdb-a57b-49ae-b2d0-b082ebdef80e"
        },
        "item": {
          "id": "330c2e79-fe37-4f56-a2d4-0f9f162b099e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "569d1b73-78a7-4bfb-9306-bc0e9750c5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cdaca0b0-cb9b-4cff-ae65-97fe4506c08d",
        "cursor": {
          "ref": "73e9c248-65fe-48c0-ae2f-b19563b64a3c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "387dd4f6-a0de-4c6c-95ec-04e436981a30"
        },
        "item": {
          "id": "cdaca0b0-cb9b-4cff-ae65-97fe4506c08d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "03772278-e709-46ee-939b-4fdc94d63609",
          "status": "Created",
          "code": 201,
          "responseTime": 13933,
          "responseSize": 1218
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "83137c1f-1728-42a3-b2b4-6433c25e00ba",
        "cursor": {
          "ref": "f3539134-0509-47e9-9ed1-d2852bddba89",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "54eb5aca-4029-4572-9a2b-ef5e865bae48"
        },
        "item": {
          "id": "83137c1f-1728-42a3-b2b4-6433c25e00ba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "23a0366f-6ad3-40d7-a3eb-d6bc7c77cf28",
          "status": "Created",
          "code": 201,
          "responseTime": 13845,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "27507d4e-e63b-4e20-ada9-a82fe11df80e",
        "cursor": {
          "ref": "81a04d00-a9d0-4477-8afe-25f19c0d6f3f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2747e8ce-8099-4b04-bcc2-9acd25c86f83"
        },
        "item": {
          "id": "27507d4e-e63b-4e20-ada9-a82fe11df80e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5f275f04-1087-459c-9483-c1b725955971",
          "status": "Created",
          "code": 201,
          "responseTime": 13534,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e5f290-9904-4f0c-93e9-1904a8ce105e",
        "cursor": {
          "ref": "f1534023-fd63-4d8a-9924-078b581f4dbc",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "acecfb0e-8d20-4ef6-9812-e2c6ce39df64"
        },
        "item": {
          "id": "b9e5f290-9904-4f0c-93e9-1904a8ce105e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2a6f351a-d449-4379-9248-0a840ad9b7cd",
          "status": "Created",
          "code": 201,
          "responseTime": 13640,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9026d9d-4f6a-43e3-996f-7851be526f3c",
        "cursor": {
          "ref": "01ea4313-5d91-47b3-9e17-1a2876624006",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cc3ecbcc-7308-4ddb-a4e7-932cad8c123f"
        },
        "item": {
          "id": "c9026d9d-4f6a-43e3-996f-7851be526f3c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b159d456-fb13-4d5e-a679-c8273db67d84",
          "status": "Created",
          "code": 201,
          "responseTime": 12964,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-04T00:44:14Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-04T00:44:14Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8fb36315-fd64-4123-8a4e-70ea8f898170",
        "cursor": {
          "ref": "53b18fa4-6716-4469-856a-e3bca9866c38",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "57a24c64-2d9e-474f-973c-f80beb7703c9"
        },
        "item": {
          "id": "8fb36315-fd64-4123-8a4e-70ea8f898170",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d65b22e3-a5b5-46d2-8a46-5d85c3a8500f",
          "status": "Created",
          "code": 201,
          "responseTime": 12769,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e37291f-91cc-40e2-85ce-30e09100dbc0",
        "cursor": {
          "ref": "61fc9b1f-eedd-4bb9-ae0a-985ed23cd6b5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0865becf-9ef6-461d-967f-5e27b7d69e6a"
        },
        "item": {
          "id": "9e37291f-91cc-40e2-85ce-30e09100dbc0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7f157aab-cc9e-42c3-94b9-9e329411eacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cb7d72-6a8d-4f4d-88a0-a33d70362e41",
        "cursor": {
          "ref": "0dfd7a0c-8cd5-4171-95f5-e38af722c922",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7fc12878-8ee7-4331-8f79-e7de9763fbe5"
        },
        "item": {
          "id": "68cb7d72-6a8d-4f4d-88a0-a33d70362e41",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "32e33c44-e77b-4fb1-9897-d14f3095dc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b213fe-438c-4710-9064-d3725374fe80",
        "cursor": {
          "ref": "0d79a3b3-04ab-4ce6-a9b4-65da5cad1742",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7df14cd2-7347-4332-a783-624f99a3423a"
        },
        "item": {
          "id": "32b213fe-438c-4710-9064-d3725374fe80",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "50b2f53f-1552-4a5f-bde5-9478e026aa23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd76353-b048-4958-a39d-b596d986b2d6",
        "cursor": {
          "ref": "1c386f85-3b78-4468-99a9-51a4b6d92b43",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f09ff389-5ce8-4dcb-adf2-5495405cc413"
        },
        "item": {
          "id": "abd76353-b048-4958-a39d-b596d986b2d6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2e09108b-3824-4d2d-945b-c935ec15f796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431d2881-d45f-44d4-ad8c-db665b8ea099",
        "cursor": {
          "ref": "3d20680b-be1f-47bb-ac26-f7fc64f1748d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f2c858a7-478f-4414-a471-ccde8ce5af24"
        },
        "item": {
          "id": "431d2881-d45f-44d4-ad8c-db665b8ea099",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "44f0b7e3-7da3-45a9-a68f-787b0f802f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a0dfdd-b4ad-4223-b3aa-685bf1fabf1b",
        "cursor": {
          "ref": "b14d232b-988f-4e53-b4a4-706482adecb9",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "076f1a06-9905-4667-83c6-2ed389f925fe"
        },
        "item": {
          "id": "90a0dfdd-b4ad-4223-b3aa-685bf1fabf1b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5d16b547-7f1b-46db-b358-1c0678ca3212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094cb22d-dd7f-46ee-a620-65fa094599bf",
        "cursor": {
          "ref": "a30277ab-7f55-484e-99f4-204489cf314c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4b0de2de-5e5c-4f56-af86-80ab9dcd9237"
        },
        "item": {
          "id": "094cb22d-dd7f-46ee-a620-65fa094599bf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "015a3c50-08f7-456f-a9c0-2ba9834d48ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa12d87-d8c8-4956-81dc-6148562db7ca",
        "cursor": {
          "ref": "431f321c-57f9-4fee-aa4a-57b880e67d05",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f65a0fc2-21bf-4084-bfc4-bdd00bb293e2"
        },
        "item": {
          "id": "dfa12d87-d8c8-4956-81dc-6148562db7ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4bd0755b-5769-436a-a086-069057343049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9926960-15d0-40fe-a435-89e1b72bd273",
        "cursor": {
          "ref": "f4c2cf92-690f-4660-9dbe-0e6d4b6e7a38",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2baf9287-3c32-437b-b05f-02f8aad84bde"
        },
        "item": {
          "id": "b9926960-15d0-40fe-a435-89e1b72bd273",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8956a38f-c4c8-4885-8614-23b7f25512d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f51b3e-dbb3-4e45-a030-71c90d8ce1ab",
        "cursor": {
          "ref": "e3c2ead3-826a-4e28-ab1b-3fcea12df20a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bc50e350-56f0-485a-9f09-bcdde83186d8"
        },
        "item": {
          "id": "92f51b3e-dbb3-4e45-a030-71c90d8ce1ab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "05f33cdd-5d29-40f1-ae14-82f7737a3716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e2b02-ce28-4711-8eb7-fef0d6463b6f",
        "cursor": {
          "ref": "a0a4b559-349c-4346-9d27-3fdd9df91682",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "21a15959-9375-4d11-bf32-101a62fa59e3"
        },
        "item": {
          "id": "cd4e2b02-ce28-4711-8eb7-fef0d6463b6f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "df979e62-e445-454f-8891-9e4194200e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c9832a-aece-47f2-896e-8145646d8c6c",
        "cursor": {
          "ref": "f91ccf9d-a02a-447d-b2ed-7199833db3a4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "94dbd822-38d3-4d28-8f79-77fc36b85903"
        },
        "item": {
          "id": "89c9832a-aece-47f2-896e-8145646d8c6c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "61aec46f-ebd9-4e3e-8b16-f51691f822bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89d1c02-68b6-4ad8-a296-dcfcace5443c",
        "cursor": {
          "ref": "e0d56d06-01a8-4e85-9cf3-0d30ff3b7554",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5e4f0ea8-56c7-410b-a309-23ea187ab736"
        },
        "item": {
          "id": "b89d1c02-68b6-4ad8-a296-dcfcace5443c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "59934a52-b13f-47e5-8c94-6d28e7db62cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2a7665-8973-4553-87bf-b10505e98e1b",
        "cursor": {
          "ref": "90900b27-37f0-430f-9a61-28a08db60387",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dbc1f3d9-e685-46b0-b756-08aa70ad9b6e"
        },
        "item": {
          "id": "6a2a7665-8973-4553-87bf-b10505e98e1b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b064fb6a-9d20-4b0a-80bf-5c34749ba248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351e198d-9d7a-4d90-a9bb-cd3a85fffe45",
        "cursor": {
          "ref": "e4de1cc1-aa49-48ac-8837-cfaae42822e3",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b838e7d3-5f97-4579-a7ac-8920f31dfef9"
        },
        "item": {
          "id": "351e198d-9d7a-4d90-a9bb-cd3a85fffe45",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f6970808-fc95-4016-a814-920b6294ca25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec13646-0420-4e24-9407-b76ba0ab81d1",
        "cursor": {
          "ref": "96baaaac-738a-488a-bb9d-89ac258ab98a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a1e80b59-354c-4b64-aa76-a35ea65acc28"
        },
        "item": {
          "id": "0ec13646-0420-4e24-9407-b76ba0ab81d1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "84757f89-6851-46ca-bf93-cfb1a283c441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1301ca42-d516-47a7-9f49-25ac8396d517",
        "cursor": {
          "ref": "bbfa945e-e9f9-4625-9dbc-745ffecfb9ac",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "aa159880-a5e6-4b81-b9bb-ccf78d3f8364"
        },
        "item": {
          "id": "1301ca42-d516-47a7-9f49-25ac8396d517",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea608982-dd68-4476-a1a0-30db23932a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f7a88d-3082-4773-b1c0-faf87a5f6dad",
        "cursor": {
          "ref": "484f56b2-4026-4d88-bab8-bdbecd970281",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "00eaa808-d725-4aca-a4b6-9088f0076f70"
        },
        "item": {
          "id": "b4f7a88d-3082-4773-b1c0-faf87a5f6dad",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fabe71d8-1962-4a5c-b1a5-92bcca1fd64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e0f681-5e59-4418-80fb-42fc04d2b48b",
        "cursor": {
          "ref": "ad6bd110-1079-4f9f-aee3-0cf87fa2a2f0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "112c5502-c764-4c11-a399-bccf03120c04"
        },
        "item": {
          "id": "c0e0f681-5e59-4418-80fb-42fc04d2b48b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d60be474-cb94-41bb-bc93-cf1693c22444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e5c767-f3c5-4dba-94f4-0f8294f22654",
        "cursor": {
          "ref": "bcb3f6c3-5734-4085-9edf-36192bbf1fbe",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b8b3b107-67d3-49f5-bf0c-d395a4e2d373"
        },
        "item": {
          "id": "86e5c767-f3c5-4dba-94f4-0f8294f22654",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "110c944b-c303-4b68-a8c9-87936d7dddaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657c43c7-14c1-475b-a086-870d9911dd45",
        "cursor": {
          "ref": "c18d8696-8ecc-4af2-9f33-ae0b0ea7a64a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5c3a5c80-cb85-4062-a3a5-7362f4ba73c8"
        },
        "item": {
          "id": "657c43c7-14c1-475b-a086-870d9911dd45",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "220ef160-410b-4869-b488-b78f3a5925d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80de553-01d2-4590-afc1-7cc6ebf8928e",
        "cursor": {
          "ref": "09bfb83a-747b-47bf-b082-b1f73a4a2a1a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "11200300-a276-41cf-9e55-390585f6cba9"
        },
        "item": {
          "id": "f80de553-01d2-4590-afc1-7cc6ebf8928e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7d7377c6-c4c8-4c41-87dd-95d07a895c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f79fec-0e15-4ef1-abf5-8d0ebdae6cdc",
        "cursor": {
          "ref": "75ebb7cc-c4a6-4a65-ab6a-b4dc1c04b225",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "40f6abdd-ff45-4a24-a904-8ce1408ea9fa"
        },
        "item": {
          "id": "b3f79fec-0e15-4ef1-abf5-8d0ebdae6cdc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e982f9e-d0ab-4e53-9c4e-4b65ab886c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c848bfd8-35f6-46b9-a665-abecccc4a5d4",
        "cursor": {
          "ref": "a011d7ed-5301-473e-92d5-1e863017f898",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "08327c13-e0e3-474c-90dd-f29a9f9fc3e4"
        },
        "item": {
          "id": "c848bfd8-35f6-46b9-a665-abecccc4a5d4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6269c84c-25e4-40ff-b67f-78d3136475f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677721c2-dbb6-4752-ad5f-cdaaca16b2c0",
        "cursor": {
          "ref": "5a879e61-c091-4c93-937e-90baad2c2928",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fc3b1367-1035-40fc-9f73-d388b9e865a7"
        },
        "item": {
          "id": "677721c2-dbb6-4752-ad5f-cdaaca16b2c0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bad8a85b-23aa-4308-a0ed-3662f9cb2a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cade60ef-9e38-43a7-ab12-e2fb3bfb7965",
        "cursor": {
          "ref": "69d3aa64-6781-4993-987b-344ead3f2c3e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "71e22f73-d651-4bd5-a90e-b0efb4ac4ebd"
        },
        "item": {
          "id": "cade60ef-9e38-43a7-ab12-e2fb3bfb7965",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a64d9bb8-74f0-46a4-b712-a8d8b6f6ea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2e9201-aa52-48ea-9133-f0d46f678416",
        "cursor": {
          "ref": "a4c77c23-aa28-46eb-b2c5-90b73e4e55cb",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b3703dba-555c-48d4-883e-05dd6082a89d"
        },
        "item": {
          "id": "7e2e9201-aa52-48ea-9133-f0d46f678416",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2526c038-cffa-4e9d-ab10-d759cc2d2ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3510c1c6-848f-4224-946c-f2f32fd3f2df",
        "cursor": {
          "ref": "5757b588-f5ed-4bc8-a48a-f06b8cca85db",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "089cf6f6-3d32-4e5e-a876-a5430787fcb1"
        },
        "item": {
          "id": "3510c1c6-848f-4224-946c-f2f32fd3f2df",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "752940e2-de33-432e-adc4-040b69f6329c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da1ec37-53ae-409c-a4f9-8ee16e0350df",
        "cursor": {
          "ref": "a1999684-410b-4054-83ee-9fdaa5edf35f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d38b4d5f-d44f-41e8-a877-ce558e3620dd"
        },
        "item": {
          "id": "1da1ec37-53ae-409c-a4f9-8ee16e0350df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5f36e977-50ab-40ec-8ac9-dd4338b011c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934c7789-3a58-47e4-a87f-76519238a925",
        "cursor": {
          "ref": "26e5ee9b-a137-461f-92c9-b6749c5ea9f1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "84680b92-3a40-4a4c-b9be-b971a89c8c88"
        },
        "item": {
          "id": "934c7789-3a58-47e4-a87f-76519238a925",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c24c89be-f97e-48b3-a9b6-9883ac300a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0188eeab-597b-4b59-a1db-a4e8883092e1",
        "cursor": {
          "ref": "7c309db2-cb6f-4b17-a16b-cb08fa110048",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b77181f3-c4b4-4204-a213-92631a960522"
        },
        "item": {
          "id": "0188eeab-597b-4b59-a1db-a4e8883092e1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1bdf3d6e-f9f3-4928-9488-02ef33e16823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8b9cbe-96df-4974-9de5-906a757b5d99",
        "cursor": {
          "ref": "f23e99fd-c966-4711-a3e3-9921519a119a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0f13acdf-b0e2-42e2-9773-5223bcf96a2b"
        },
        "item": {
          "id": "dc8b9cbe-96df-4974-9de5-906a757b5d99",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "14f2d1fa-f2c0-441b-b9b5-02e5058cc4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86e55a7-f282-4cca-ac4a-b6caee1e3115",
        "cursor": {
          "ref": "a5c01c42-171b-4b61-aff7-a6a2d045e1f3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2df133c4-fe70-4fbb-84c3-af4b4856d991"
        },
        "item": {
          "id": "f86e55a7-f282-4cca-ac4a-b6caee1e3115",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "934fae32-48bf-4d05-a447-2eca01bb242c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7391cba5-c05d-41f0-a66a-4230e2da0b7d",
        "cursor": {
          "ref": "79d87bfb-3be0-48f3-9fe0-68573ad9d84a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f6774466-f43c-4154-a369-8acc670279f1"
        },
        "item": {
          "id": "7391cba5-c05d-41f0-a66a-4230e2da0b7d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1aa38b92-5ad8-4b36-8bbb-19b316a8029f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f223f3-3e19-462f-bb74-9d9299da6f0b",
        "cursor": {
          "ref": "819af1f5-cf6c-4856-a6ab-66c127f0d86b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "688fbd36-31d7-4629-a4b5-f8ad0e7f0293"
        },
        "item": {
          "id": "33f223f3-3e19-462f-bb74-9d9299da6f0b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6802c979-7777-40c1-bfba-dbfc7869ea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb63cc55-7374-49b4-96f2-766ed4779c79",
        "cursor": {
          "ref": "c9718670-0134-47ac-8f78-8653e381050a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "624ba5a1-b7ad-4a87-9a90-01d6237417bc"
        },
        "item": {
          "id": "fb63cc55-7374-49b4-96f2-766ed4779c79",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "574e7a08-f729-4278-9889-1583e500e121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb614da-ac05-4513-a1a5-925cd55387e3",
        "cursor": {
          "ref": "39914d7c-4c66-41f5-8818-f3183b9a63ba",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "faaed593-d5c7-4259-a97d-c66c46644ad2"
        },
        "item": {
          "id": "3bb614da-ac05-4513-a1a5-925cd55387e3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2619ae8e-d093-4937-a3d5-cb53105be136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e9cf78-bc6c-4296-8363-1367dc8d76cd",
        "cursor": {
          "ref": "17dad975-966b-4d18-97b4-9e5aaad7d202",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c613f957-a7bd-4e81-8d00-725c0bf5d3e3"
        },
        "item": {
          "id": "58e9cf78-bc6c-4296-8363-1367dc8d76cd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "197b06a2-06ed-46a9-9563-6ee485c96074",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a87b19-bf6f-4f73-bc96-50f8fa1abfb3",
        "cursor": {
          "ref": "c8d577a7-070e-4443-bbc3-f1b509ca4df4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2c6b468f-ef0c-49da-ab32-718473bb8757"
        },
        "item": {
          "id": "e6a87b19-bf6f-4f73-bc96-50f8fa1abfb3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8260e851-f1cf-4b59-9da9-c82bf526796b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0830d012-c077-4c02-bf38-c4459fbf80dd",
        "cursor": {
          "ref": "026c25b0-5bcf-4501-b25a-d51106df21c2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a32bdcb7-6767-4518-bd94-404687fdc797"
        },
        "item": {
          "id": "0830d012-c077-4c02-bf38-c4459fbf80dd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "78971d9b-6228-4db5-a308-14cb1c92a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8db06a-19da-4b96-8249-b4ea55635d73",
        "cursor": {
          "ref": "fcb658dc-023b-4d67-b97f-50c087df898e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "74905001-3eff-47cd-a0ca-bd0a6b2bda90"
        },
        "item": {
          "id": "1f8db06a-19da-4b96-8249-b4ea55635d73",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0189c0a3-8fc2-4087-be2f-e42172a9208c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2f99d8-35f8-4ebd-b5ba-cfce497d41a0",
        "cursor": {
          "ref": "b14067b6-f9eb-4add-a26b-2a225188fc08",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "62fd1273-405f-4db7-861f-6bc18f20fb9b"
        },
        "item": {
          "id": "ae2f99d8-35f8-4ebd-b5ba-cfce497d41a0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "473c31b2-9c66-4102-9455-3e12e7e16eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1e4458-1e9f-478a-91a8-0e9d92cee33e",
        "cursor": {
          "ref": "73888ed9-6337-4229-9e92-1103e0f99d8d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6d297ba8-291f-47e0-bc92-4aa9b068fcbf"
        },
        "item": {
          "id": "ec1e4458-1e9f-478a-91a8-0e9d92cee33e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6fd7028b-4012-4c22-8fce-2fa25e2745ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48eacac-a878-4372-b13c-c552deda30d9",
        "cursor": {
          "ref": "e36bc0fc-9c1a-4d2d-bf11-a716572340cc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "32e71d4d-4579-42f6-9db0-f8062b93ece2"
        },
        "item": {
          "id": "a48eacac-a878-4372-b13c-c552deda30d9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e5cfd605-d18a-4d0c-9b69-fc35aaa2bb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b43ee12-8109-46c8-ba3f-9cc5feecb929",
        "cursor": {
          "ref": "a009de23-fbff-43fc-9ce5-c8ed375773cd",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e14f6e66-b1b2-41ed-bf47-76ff474c5763"
        },
        "item": {
          "id": "1b43ee12-8109-46c8-ba3f-9cc5feecb929",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2b289947-3721-41cc-8631-c5fa3cd8ee72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad08ddd4-f353-4689-b166-eb815bf5df8e",
        "cursor": {
          "ref": "4ab361f8-3895-48d0-ac40-bbd941aa7b04",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5a1469f7-f55b-4917-8e85-2dc67918532f"
        },
        "item": {
          "id": "ad08ddd4-f353-4689-b166-eb815bf5df8e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "168161e5-07ec-467f-b74b-49e3a2ec2958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b38cc26-bf89-454e-8802-bb20ef1ee0cd",
        "cursor": {
          "ref": "e00276ce-e81a-452b-b6d7-83d6b80642bc",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cc0003b3-6602-4260-87ed-ec87bd0b5a79"
        },
        "item": {
          "id": "5b38cc26-bf89-454e-8802-bb20ef1ee0cd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "21c3fc4f-10fc-426a-ba7b-2e216dc97ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a6a0bc-70b3-43ed-a428-bd851762f6d3",
        "cursor": {
          "ref": "1bdcc38b-b640-4661-a59a-032cc068838b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f584d130-1cca-46ff-91dc-b91e6ba42f3a"
        },
        "item": {
          "id": "a6a6a0bc-70b3-43ed-a428-bd851762f6d3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c48ae138-2803-4b79-9ad2-167c0df2b288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc42928-9f31-447d-a88e-8a6db825b385",
        "cursor": {
          "ref": "4a5f4219-3b4a-4818-9361-654cdddde4e8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "849e80a5-bd19-4ad0-b51b-da2129ef8a40"
        },
        "item": {
          "id": "ecc42928-9f31-447d-a88e-8a6db825b385",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0c8d4718-6291-4f8a-920e-ac2d93035310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47aea987-1925-43fb-a682-2ca3ab874003",
        "cursor": {
          "ref": "8d8003cb-f4a3-4342-a1ec-582db58b9fe7",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1027c0a9-d070-4cea-a067-f7aeb6ab10aa"
        },
        "item": {
          "id": "47aea987-1925-43fb-a682-2ca3ab874003",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4f2e0b5f-4e9f-4e5b-9634-d62fd81cc655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baa47e6-1491-401c-a67c-d4b98d08147a",
        "cursor": {
          "ref": "e3a8f6a8-e9e2-470d-986a-ddc37e7d6fe4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "04936b97-fa6e-4274-aeca-0f8dbbb22bcf"
        },
        "item": {
          "id": "8baa47e6-1491-401c-a67c-d4b98d08147a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fe89f286-0c8b-4bf8-8953-8868232d42f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c396c524-3c7f-48c6-b4c7-545286551f44",
        "cursor": {
          "ref": "8dab39ad-1591-498f-b9b6-de3735099afc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "24d1e6cf-9a0a-45b2-a70c-77c629233a0e"
        },
        "item": {
          "id": "c396c524-3c7f-48c6-b4c7-545286551f44",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e44dceda-9d10-4109-aa53-9dcff82ad378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45296545-092c-4646-886e-31a39dd92ce7",
        "cursor": {
          "ref": "6f92b259-bffd-4fe4-95a9-67d4146fa095",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f8720a32-a66e-4ce8-ac6c-31e4d07f0f3e"
        },
        "item": {
          "id": "45296545-092c-4646-886e-31a39dd92ce7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b24cd78d-e5e7-48a8-9ee1-4858e0742539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b733ea3-6a25-445d-9302-0bac4d17086b",
        "cursor": {
          "ref": "01d9f4ee-1635-4b37-8317-1d1a4a52ce3f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dd45fcb1-17d2-48c1-bc26-02d457563b4c"
        },
        "item": {
          "id": "9b733ea3-6a25-445d-9302-0bac4d17086b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9934f359-0760-457c-96f0-ac0e2fad2de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabcfa34-e636-441c-bbb5-760f00efb36b",
        "cursor": {
          "ref": "f2dd129c-4fe1-4467-ac30-36f341478cff",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dbab07df-9722-46b0-83bf-9d58c3901efa"
        },
        "item": {
          "id": "fabcfa34-e636-441c-bbb5-760f00efb36b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f42c540b-606c-4a05-9467-8d2e81bed929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aee0d7-ff73-4cf6-bd53-d677b686831f",
        "cursor": {
          "ref": "3988b4af-94da-45b4-9c1d-33319251e1c4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "de7fb7a3-9f75-4f40-bbb1-e18c2c11f4fd"
        },
        "item": {
          "id": "e4aee0d7-ff73-4cf6-bd53-d677b686831f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a2430bce-3b99-4e5f-a645-c3179fdc7b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a056d07c-66d8-44c9-95d8-50328c459561",
        "cursor": {
          "ref": "9c0520bd-0c3f-41d8-abac-534e8d845d10",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "55333277-8527-4fa8-9a74-b8503f87ea1b"
        },
        "item": {
          "id": "a056d07c-66d8-44c9-95d8-50328c459561",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "255228a5-8241-48e1-b3e7-6806470dd4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e38583c-1c1c-4da4-9899-693f7ef819dc",
        "cursor": {
          "ref": "f9210b5b-009f-42b8-831a-001cff8d21df",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bcd64c92-6b98-466d-a523-5c56967abcb1"
        },
        "item": {
          "id": "2e38583c-1c1c-4da4-9899-693f7ef819dc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a6a4a5ae-2fb8-43fa-87bb-f4b9eba68b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3b975e-1b24-4dd0-80ba-5232f123b255",
        "cursor": {
          "ref": "daf0fd44-bb07-4e97-a8b2-e50589e779f8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "71edaf80-412a-4f0d-9fb8-d111e3d622fd"
        },
        "item": {
          "id": "fe3b975e-1b24-4dd0-80ba-5232f123b255",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2242f60a-7b17-4111-8d32-e80cf2df25dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b46746-95cd-40cc-a7f6-c1a77ae8f1bd",
        "cursor": {
          "ref": "866ca152-533c-4f8e-87f0-4ba5905167eb",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5ce8fc95-4306-49b2-991d-59bae18ef664"
        },
        "item": {
          "id": "43b46746-95cd-40cc-a7f6-c1a77ae8f1bd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "74032b94-9788-4a5c-9316-0b1f9ef750c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7718bf8d-0a05-4ac2-91a4-ebd0d0305bea",
        "cursor": {
          "ref": "d923d35b-14c5-4a83-b2ae-62a648c54bce",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "349e38cd-5158-492b-9dc1-d230f72cc2b4"
        },
        "item": {
          "id": "7718bf8d-0a05-4ac2-91a4-ebd0d0305bea",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3a73c5a4-9401-42c5-b60a-a293e61edbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b5e069-bd61-46e5-9802-1c5c4cc6740d",
        "cursor": {
          "ref": "6415f6c1-cdc7-4892-b932-32eb0339a300",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9a25f781-8b01-4756-978a-676a5c53503f"
        },
        "item": {
          "id": "61b5e069-bd61-46e5-9802-1c5c4cc6740d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f52a5b50-b137-4ecf-9c9a-7943f93ff383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d42bf37-6619-48b6-addb-980f492acbad",
        "cursor": {
          "ref": "48754a39-5041-4d21-b454-7ff2370ee730",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "531cbd59-10ed-4e5c-a59e-b0f88b3acaf3"
        },
        "item": {
          "id": "1d42bf37-6619-48b6-addb-980f492acbad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "033610d9-c6db-4cda-aa37-6d97bc8c43b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbc53e4-71fa-4dad-87cf-57286ed4dfbc",
        "cursor": {
          "ref": "b0e3ea46-70dd-45ba-a8ef-77300b7b5e7d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b3e683f9-bffd-45b7-a4f1-c687c7e4ab5f"
        },
        "item": {
          "id": "8bbc53e4-71fa-4dad-87cf-57286ed4dfbc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "401a9ef5-6766-4d03-9f5f-99627e0182bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2481cab8-fbdd-4e4c-9fa8-ec61a548fedc",
        "cursor": {
          "ref": "05048500-bd4b-42a0-a1b7-89ae5bf82e4e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "405b5de0-24ed-48e4-bebb-c21752b7c325"
        },
        "item": {
          "id": "2481cab8-fbdd-4e4c-9fa8-ec61a548fedc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cfb5590c-11ea-4679-a715-592b40a7c387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee9a99b-a8df-4ab3-b803-58b248be1f4c",
        "cursor": {
          "ref": "1193f715-c36f-4780-9dd8-3bed9e23d691",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bc6bb24c-1b3d-41b3-bc84-2cda382e370c"
        },
        "item": {
          "id": "fee9a99b-a8df-4ab3-b803-58b248be1f4c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2aa29e48-85f9-4da2-92cd-3f24794da54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0bc467-d91d-421b-a2c5-fc90203a0c96",
        "cursor": {
          "ref": "cf9f07fe-666f-4add-ab2b-e35c9f3c6dc5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2a639130-2492-4fc2-ae4a-dc2fc1ece261"
        },
        "item": {
          "id": "ea0bc467-d91d-421b-a2c5-fc90203a0c96",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cb8c53cc-d798-441a-b965-6f02268cb4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2e264e-1ce9-41ba-a0ca-7b0288ed0001",
        "cursor": {
          "ref": "c26b3cae-5b49-439d-80a1-384f075f576e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "901d0b12-8181-4a63-826b-96f9922a4a3c"
        },
        "item": {
          "id": "7e2e264e-1ce9-41ba-a0ca-7b0288ed0001",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b1de7e9e-76a9-41d6-9599-6e323e508e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9c3562-caaa-494d-b247-c56c49b64f5c",
        "cursor": {
          "ref": "ecfad9a3-5bd8-49f9-9742-619995dc9a9f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "78cc0349-9f97-4e88-bebe-66a7df992597"
        },
        "item": {
          "id": "eb9c3562-caaa-494d-b247-c56c49b64f5c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9b22eecc-3c2f-43ae-abc7-720a8a3cf2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5583a071-51b2-47ae-91d7-f348c06be38b",
        "cursor": {
          "ref": "9d4407cd-d95c-4758-832b-c49fc0ac3e9c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "53bac8b4-7735-4371-9894-50100bdce6c7"
        },
        "item": {
          "id": "5583a071-51b2-47ae-91d7-f348c06be38b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "51aaa979-499e-4b69-814c-3a72fde66ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f389121-df78-47c3-8f0f-336a059781ca",
        "cursor": {
          "ref": "6d41b5af-3578-49de-a5c8-75e80fc1dc45",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aa8285b9-4621-4379-8720-cd2fbbb3a59b"
        },
        "item": {
          "id": "9f389121-df78-47c3-8f0f-336a059781ca",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0e2d83d2-7ca8-4395-8a1b-8f9c196c97e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9a012a-8b6c-4d63-a866-1a0038311cf6",
        "cursor": {
          "ref": "bdce040f-2ab0-41af-8f3d-63432c0e0a56",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "428dcc40-69bd-4003-a59c-8a3181935e99"
        },
        "item": {
          "id": "fc9a012a-8b6c-4d63-a866-1a0038311cf6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ac2550e2-2098-4c81-a470-1ab910a61013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e10d8e-ced6-47e3-b1f4-f797e5c9bd1d",
        "cursor": {
          "ref": "bb05e391-fbba-4b30-a41c-c4136b19cc74",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6519d599-9549-4730-80b6-594355f1aec7"
        },
        "item": {
          "id": "79e10d8e-ced6-47e3-b1f4-f797e5c9bd1d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b54421bd-f3e4-45ff-853d-0d13aff97e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723a645c-fad9-40e6-9d80-4cf539c25c3d",
        "cursor": {
          "ref": "5358198a-4368-4503-8702-bd1edfd01217",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "88ecb45f-2a1c-4359-9b63-e763da446679"
        },
        "item": {
          "id": "723a645c-fad9-40e6-9d80-4cf539c25c3d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3c1db945-a603-4296-aa3a-35bf6be460a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a80da73-73ab-4567-a4b6-75ac5c4901e8",
        "cursor": {
          "ref": "a2bcd0e8-c935-4393-9ea0-da9c8928901a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "11278f9d-4fd2-442f-8707-11d3c161dba5"
        },
        "item": {
          "id": "9a80da73-73ab-4567-a4b6-75ac5c4901e8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0860996f-33ed-4632-bb1c-81514b76e024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e07430-8bd7-47ed-af43-ec59cf137692",
        "cursor": {
          "ref": "d979178e-6c46-4fdc-8030-c64ecfc568ba",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f7e89d41-afe7-4866-ba83-ed9e6a1bb95d"
        },
        "item": {
          "id": "47e07430-8bd7-47ed-af43-ec59cf137692",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4f60f21a-9bcb-4a24-9383-f36ab61a3e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb658677-4628-4d8d-b442-850bff252c3f",
        "cursor": {
          "ref": "5f0f2dec-4c6f-4a6d-8ae7-66b9715a54da",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3408aaf1-6ba1-48ca-aa6c-165daab212ff"
        },
        "item": {
          "id": "fb658677-4628-4d8d-b442-850bff252c3f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a42a9506-817d-4fbf-a875-068b71b39dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7983d5b7-4412-4c25-872c-5cdc3eab77b1",
        "cursor": {
          "ref": "3e79c455-abbb-4886-b3be-c977d968c75c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bb67d1b8-5f45-4036-8a79-584f945cf44a"
        },
        "item": {
          "id": "7983d5b7-4412-4c25-872c-5cdc3eab77b1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "631418c9-d468-4d3c-abb3-c31f9aee277a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bcd77b-ddb9-433b-8105-f0ef99a1b6e9",
        "cursor": {
          "ref": "0b72a62b-6587-4340-8cbe-feab393a6f0d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e07732fe-ae11-40d0-b51c-749a42621c82"
        },
        "item": {
          "id": "c7bcd77b-ddb9-433b-8105-f0ef99a1b6e9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "55158bb0-63d1-4dcc-b2c1-564b62a78748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86de836-bd21-44c4-9fac-379cb05d1645",
        "cursor": {
          "ref": "26f10002-8e1f-41bb-9133-573345956b7a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f7fc4503-3fc0-462a-9077-100433d34054"
        },
        "item": {
          "id": "a86de836-bd21-44c4-9fac-379cb05d1645",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f9b0bc4c-52b7-4b17-aa02-39dc61356a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ce268c-43e0-45f1-a26e-f4e30711bdf2",
        "cursor": {
          "ref": "167f2881-ce23-4b08-a458-2f8fa9ccf968",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d393af5c-2fb4-4990-9bd2-eb07f08d8780"
        },
        "item": {
          "id": "72ce268c-43e0-45f1-a26e-f4e30711bdf2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bc192484-dda3-4654-a90f-9dc01817a557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4e6ca2-ab67-4860-83f8-621226b563b2",
        "cursor": {
          "ref": "d9d69a88-9d0f-496f-a59e-8d0f62f63ba9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5689c23b-082a-4f8a-8aea-9e0a0f60c02e"
        },
        "item": {
          "id": "dd4e6ca2-ab67-4860-83f8-621226b563b2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e72e94d7-f444-4a94-b317-a92214a1db0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b254320-ade9-407e-b727-f6d60f06a052",
        "cursor": {
          "ref": "829ababf-f527-4a88-8b8b-a82eb2fe93f6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2a0a6b22-101b-4744-a40c-a677a8359a0c"
        },
        "item": {
          "id": "0b254320-ade9-407e-b727-f6d60f06a052",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "426a9f4d-4820-45b1-93e9-f4186f3e216e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05459d11-0f31-4500-b668-e0835a8e359a",
        "cursor": {
          "ref": "d052f9a1-ffc9-486f-a343-d7a2d0678f5d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "62e9b4a1-1ff5-47ff-a510-fdcc1359de68"
        },
        "item": {
          "id": "05459d11-0f31-4500-b668-e0835a8e359a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "78121112-0616-4fab-ac7b-a3b5c91d9aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f6d206-c33b-401d-9df0-b151d661face",
        "cursor": {
          "ref": "42ca0a5b-774c-4038-9ab1-b384fce76b54",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1c9b5aa1-84ec-4076-b65f-d7c6c31d56f2"
        },
        "item": {
          "id": "39f6d206-c33b-401d-9df0-b151d661face",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9f332ba7-f7fc-4a9b-a4ab-a0aacc4952d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f05741f-b692-4706-8165-5b94b3ac2180",
        "cursor": {
          "ref": "3b0d297d-d830-4321-b206-0f6381ccfa20",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "56fb997c-047c-4042-802c-1e291d76f08b"
        },
        "item": {
          "id": "6f05741f-b692-4706-8165-5b94b3ac2180",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2a91b814-129a-43d8-888a-5feb936fd981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc44faf-1e70-4f54-a3cd-1b46eacb03b4",
        "cursor": {
          "ref": "974b347a-32f8-4791-bed2-93f77b6564da",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "12dd3035-2e83-4b3b-99dc-27dcfc60979a"
        },
        "item": {
          "id": "ddc44faf-1e70-4f54-a3cd-1b46eacb03b4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2916373d-5711-4a52-8484-3e15d6411308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b5fd1c-3edb-441e-b5a5-49a7f165534e",
        "cursor": {
          "ref": "381fcff6-540a-4263-96a6-77a1bc4e9b79",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1a0abd97-0b6f-4960-ad32-3bf8de3a4553"
        },
        "item": {
          "id": "03b5fd1c-3edb-441e-b5a5-49a7f165534e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "140ea765-9a93-4c43-8344-cecd49531a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a986572f-d071-4201-ba96-2ccb48d68883",
        "cursor": {
          "ref": "10ef8e69-a233-4247-8b46-05af7aa3bfb2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "56f9ad40-69b1-4f32-8933-63f9b05cbc90"
        },
        "item": {
          "id": "a986572f-d071-4201-ba96-2ccb48d68883",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "35ad4f0c-8e4e-45a4-8f94-46a103f4ccb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beae5cf2-5f94-4353-a5cf-1ffe4fa8f5cb",
        "cursor": {
          "ref": "885c7a03-b616-49f5-9abd-b075688c5536",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "011cec0b-324d-43a2-bcb4-b2fe63115cdd"
        },
        "item": {
          "id": "beae5cf2-5f94-4353-a5cf-1ffe4fa8f5cb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "07d511f4-8432-4cbd-8598-6e36d6c6dd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb68a95-60d2-4f81-9c2a-5b0a8e5935ca",
        "cursor": {
          "ref": "8e99e88c-d17d-49a2-bc1b-93c5722ce40e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "aa15a73f-096b-4be3-bde5-b1796d1be020"
        },
        "item": {
          "id": "8cb68a95-60d2-4f81-9c2a-5b0a8e5935ca",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "804ae2ab-0aee-4420-a5f5-88c0430f2555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99262b7-6471-49a6-839c-67ad7631e429",
        "cursor": {
          "ref": "83caab4b-6b0f-412f-add9-85c0d023b74a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "798d2397-da67-4ec6-a403-24c87a5900d7"
        },
        "item": {
          "id": "a99262b7-6471-49a6-839c-67ad7631e429",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "81d032c2-becb-4a6c-bf06-902537d65297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979e859f-31fb-44ed-9746-fa9b3dc39543",
        "cursor": {
          "ref": "92bbd633-cf0c-43ae-b519-82f4c909879e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "61965ebc-2afa-4a67-824a-425ca6128674"
        },
        "item": {
          "id": "979e859f-31fb-44ed-9746-fa9b3dc39543",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ac255a87-5683-4dcf-b4c8-07e524bec28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f8c393-53a9-4c1a-ab5e-d137e24d898f",
        "cursor": {
          "ref": "b383a67a-2cab-44e1-b425-30268af57321",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ca45a7c3-564d-4947-8161-11f48b46fdfc"
        },
        "item": {
          "id": "10f8c393-53a9-4c1a-ab5e-d137e24d898f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "506e8e75-a522-44e6-99a7-dee0d18b881c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3927d6-e29b-4fe8-b6e9-f13f44f42ecc",
        "cursor": {
          "ref": "60efe925-d40f-4626-8231-7551369019c9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e9318d22-803b-46cb-85f3-0ac1bfea5a88"
        },
        "item": {
          "id": "bd3927d6-e29b-4fe8-b6e9-f13f44f42ecc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d3e61a88-d1ca-4f05-86ab-d8c2821c25bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d477bf-d37f-434a-98bd-90962396b152",
        "cursor": {
          "ref": "113a38f4-e57d-4ef9-9100-8593df0a9d91",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b1c0673e-5c9a-4dfb-9e71-6930a3e05de8"
        },
        "item": {
          "id": "e3d477bf-d37f-434a-98bd-90962396b152",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a6572f0d-ad27-4955-87b5-b110a46377a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dd2aa7-e349-4848-9d6a-0a8aeb05197a",
        "cursor": {
          "ref": "bd23e2b2-c0b7-4e33-87a0-12cc8cdee1ca",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b8793c9b-8d47-405d-9a3f-bbadb7cbb145"
        },
        "item": {
          "id": "44dd2aa7-e349-4848-9d6a-0a8aeb05197a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0934fbe8-8cb2-4708-b513-2660f955e4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3040e215-534e-40ba-8f7b-83b075b8f146",
        "cursor": {
          "ref": "b0eb2f70-f14b-4694-a3fe-5b19fb54ec7f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "132eec26-1c28-4761-9ba6-66c6865816d8"
        },
        "item": {
          "id": "3040e215-534e-40ba-8f7b-83b075b8f146",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8bbc028f-80b0-49ae-8801-b046031dd05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c5acf6-a313-447d-b019-6aeda3a75b40",
        "cursor": {
          "ref": "a1a61584-6187-476b-a9d6-638c12c397b1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "631aa937-0b74-4b88-9d22-929533e483b1"
        },
        "item": {
          "id": "59c5acf6-a313-447d-b019-6aeda3a75b40",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "26956bec-e244-4488-9aac-75a3cfaded75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4e7716-17e2-4e6b-bbe8-addd3e042f4c",
        "cursor": {
          "ref": "2e665fa2-9dff-47bc-b774-3912db48a973",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "849e7347-96c3-4319-bef6-31194b231bd2"
        },
        "item": {
          "id": "cb4e7716-17e2-4e6b-bbe8-addd3e042f4c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1a4a8c12-0c16-42ac-874a-0e1c201abe4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23b7a53-d371-43c2-ba67-e18de370186b",
        "cursor": {
          "ref": "27858635-b346-4ade-8125-200e143e3438",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "158b0455-cc44-49f6-b507-f23f5921cb5c"
        },
        "item": {
          "id": "a23b7a53-d371-43c2-ba67-e18de370186b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "64711fe9-785f-4fc9-8873-b02feea54ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aac6aab-33fa-421c-aaa4-bb8f026251a4",
        "cursor": {
          "ref": "a0b348c0-9094-4a88-9785-78b4fd7d811a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "19805156-f3b0-417f-9b17-0c31ae8e620f"
        },
        "item": {
          "id": "2aac6aab-33fa-421c-aaa4-bb8f026251a4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a9a5d456-8147-4254-b8d1-e06c63a692e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d484e5-97a4-4105-928c-378c90497675",
        "cursor": {
          "ref": "52a94027-eb29-4408-ad25-b4d1a457e19f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "354e3eb3-c9ae-4820-a8db-4ecf055dddc3"
        },
        "item": {
          "id": "b2d484e5-97a4-4105-928c-378c90497675",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "543bf8a3-9c29-48d1-8f9d-7ae69dfae829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb692722-2cdb-4cd8-8805-c02bc22edd8c",
        "cursor": {
          "ref": "e87a32dc-f94c-450a-8c99-0040f7fd0ab6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c128ac2f-d1bb-45f0-a903-5af4bc8851d4"
        },
        "item": {
          "id": "bb692722-2cdb-4cd8-8805-c02bc22edd8c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cff46cfe-33cb-4928-890c-bf9b18b5729b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5f730b-be77-4b15-933a-ffb957aa5b4e",
        "cursor": {
          "ref": "e9fb9860-b696-4252-9ef9-489fbe57c017",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b17fd7f8-44d9-4912-944f-c39f35e276f9"
        },
        "item": {
          "id": "8a5f730b-be77-4b15-933a-ffb957aa5b4e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e1c0dc32-c60f-4a68-9f07-d305a449060b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2acc44-333a-4cb9-b735-e6d900e7f858",
        "cursor": {
          "ref": "54f371d9-89dc-42f7-ab67-6ebcfc234a29",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3de38df8-1fa8-4c72-9c91-44dc31c37581"
        },
        "item": {
          "id": "3a2acc44-333a-4cb9-b735-e6d900e7f858",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6985321b-976b-40e1-a775-645b511418aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230651e1-1870-41b1-a0d1-c12d7679a489",
        "cursor": {
          "ref": "04826684-d0cf-43db-b4c4-56306159971a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d6483cf7-b5ab-4ef6-8d16-5eee00b95d7f"
        },
        "item": {
          "id": "230651e1-1870-41b1-a0d1-c12d7679a489",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "604af99a-864d-46b1-9c17-12ea1c5b337b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0228e411-f600-4ea4-a6c8-f9174b27a448",
        "cursor": {
          "ref": "e22e0f90-de79-4338-8837-1cc8f12de360",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c8124ac3-947e-4b05-82f7-27a020f5bf3e"
        },
        "item": {
          "id": "0228e411-f600-4ea4-a6c8-f9174b27a448",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c17a2a2f-57f5-43c9-b66f-a44db0e55d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8ae4e1-5ea6-49f2-86c8-8513b365acb7",
        "cursor": {
          "ref": "93af3354-7bfe-48b6-947b-fe4650fb9a59",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "efcdf0a8-d861-4410-b7fe-b5a5b909220e"
        },
        "item": {
          "id": "0a8ae4e1-5ea6-49f2-86c8-8513b365acb7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b569dfc5-7fb3-4744-885b-64a03297d57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ec6c58-1a8f-4342-8722-99e8c80af826",
        "cursor": {
          "ref": "a65f73b3-0a43-4e94-9f76-2cca67096373",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "06bd0c07-5559-49d9-896b-d248b152f84d"
        },
        "item": {
          "id": "e2ec6c58-1a8f-4342-8722-99e8c80af826",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a9c5c90a-6fda-40b2-a4a8-8d9b729d1930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6b2329-a032-4c6c-9ed9-34c547cfcccc",
        "cursor": {
          "ref": "3fac9f97-2a25-47cb-956c-49b5ee09d976",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ee08b4b3-ec7e-4e49-9fa5-a755193ee05b"
        },
        "item": {
          "id": "bb6b2329-a032-4c6c-9ed9-34c547cfcccc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f69668fe-c52b-4e86-9b75-635523cae6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffa07ff-eaf2-4c85-b839-6fec10cf1fda",
        "cursor": {
          "ref": "708c6389-c6e1-4c2c-999f-e7fae9ed0119",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b1730236-76c4-4ecf-8ea4-2056bb4bb221"
        },
        "item": {
          "id": "7ffa07ff-eaf2-4c85-b839-6fec10cf1fda",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6903363e-3c8d-4eea-ab75-44d7f01aad21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25578ccc-44d9-49f2-a62d-754f18650d32",
        "cursor": {
          "ref": "4065e50e-f596-425a-a954-402e8f77030f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d5e306b1-0b02-4e55-8bed-cbbeb126b45b"
        },
        "item": {
          "id": "25578ccc-44d9-49f2-a62d-754f18650d32",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b19528a4-eece-4685-8cbc-80d8e2332afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ab9013-b38f-4b29-899d-c97088b9902e",
        "cursor": {
          "ref": "89751af0-a397-47c7-bbaf-c14fba20e596",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b12c76d8-5ef6-466e-a93f-fb073bd23b0c"
        },
        "item": {
          "id": "f5ab9013-b38f-4b29-899d-c97088b9902e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "50067f58-e477-42ea-8737-48ed33f40a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567bcdea-c3bf-4613-ad4f-3713696c7425",
        "cursor": {
          "ref": "c37b701e-a5cc-46b8-998c-b543a6d5af66",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c8413054-9f2c-442f-b40a-4cf90bf311e6"
        },
        "item": {
          "id": "567bcdea-c3bf-4613-ad4f-3713696c7425",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a63587f2-5793-4a01-8aa2-0b7d69705de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19974b1d-2b76-46d2-a8e1-511c4cc6b0c2",
        "cursor": {
          "ref": "aef3027a-1ce9-4c8b-9fe4-ba951034b446",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "02f6b96b-2ca8-421e-b431-0a736f6c3f30"
        },
        "item": {
          "id": "19974b1d-2b76-46d2-a8e1-511c4cc6b0c2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7a5e69a9-3371-4550-8bf4-d2423f2a6106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9329d8cf-d8af-464c-a5e7-1176c9d995b9",
        "cursor": {
          "ref": "836729cf-96e8-4212-b1d3-d20ae8d9a501",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ce430999-0062-4cc2-8d76-d624923486a1"
        },
        "item": {
          "id": "9329d8cf-d8af-464c-a5e7-1176c9d995b9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b9f13099-f6f0-4f13-83e6-e98c3fb8c755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16306547-bc06-49ba-a87f-04a183ccd1b6",
        "cursor": {
          "ref": "fab3a785-1ba6-44b0-a8a7-12f7abd8241a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6746f975-5816-4655-8acb-7785f24578c4"
        },
        "item": {
          "id": "16306547-bc06-49ba-a87f-04a183ccd1b6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "65b176fb-ddee-4858-b96a-e4463a2b049c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f2e160-2a72-4d6c-8cc5-1e5006c154dd",
        "cursor": {
          "ref": "bf2415b9-e628-4c20-bdbe-529ae4761b84",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4c129f66-8171-43da-9e0b-37c07db70b48"
        },
        "item": {
          "id": "62f2e160-2a72-4d6c-8cc5-1e5006c154dd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5d75ee1d-2383-40a8-bbf3-d5ad66b7f424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4d90a6-f8b6-481a-85f8-47dfb3a7e9d2",
        "cursor": {
          "ref": "b098fa42-7e5b-45c9-b89b-5d9a3de6b6c6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "39479998-1186-4321-9b80-ed0df3aba621"
        },
        "item": {
          "id": "af4d90a6-f8b6-481a-85f8-47dfb3a7e9d2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "aa72a173-3cc9-4a78-b64e-e29def6c83e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd65420-42b9-4505-bc02-9943b0a88cb0",
        "cursor": {
          "ref": "540373de-122a-4514-b079-dcbf8670b053",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6daee4b9-293f-4853-9866-289b460b3a38"
        },
        "item": {
          "id": "4cd65420-42b9-4505-bc02-9943b0a88cb0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d8f9258f-b2c2-4f7a-83f4-49a3b80c2a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8824252-a1f4-4b3d-9d18-14b4fa909113",
        "cursor": {
          "ref": "d1ec740e-593b-4617-8298-025c964013c6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3122c0b2-d015-45c2-8165-377552cc8f90"
        },
        "item": {
          "id": "b8824252-a1f4-4b3d-9d18-14b4fa909113",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "60497a29-d83a-4735-8c00-cb89e3ea8e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd8e9d1-8824-4b93-ab8f-3e6a48c5227e",
        "cursor": {
          "ref": "8c829b43-c677-4026-966c-a93921b422d4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c3f85324-f185-4bf9-91e6-b3af7136a003"
        },
        "item": {
          "id": "ddd8e9d1-8824-4b93-ab8f-3e6a48c5227e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "21e99a9e-8bec-4772-b034-5704d66b834a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f033431-2315-45e3-965b-6a45a0060942",
        "cursor": {
          "ref": "90b37965-3cdd-43f9-b43f-37c317bbb491",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c5963110-4ffa-4b88-9ed2-899acedefa59"
        },
        "item": {
          "id": "3f033431-2315-45e3-965b-6a45a0060942",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7e194740-a32d-4f5c-a766-9bd78f7d8ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73fe975-adbe-4366-b916-d3d8a7994134",
        "cursor": {
          "ref": "021985c9-d17a-45c0-9c30-509022c713ab",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "eea23b58-6545-4380-83f3-bd03db88aa53"
        },
        "item": {
          "id": "e73fe975-adbe-4366-b916-d3d8a7994134",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38df8985-62b7-48a0-8934-b39c4f197cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01750ada-5292-4351-b7a7-5b63abee529d",
        "cursor": {
          "ref": "85bc2bb8-d030-4d13-81eb-92c163f82d3e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f3e6e9c7-1298-44d5-bad8-99a668bf82d1"
        },
        "item": {
          "id": "01750ada-5292-4351-b7a7-5b63abee529d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "98f170ed-4372-4b5a-bebf-26d8dbb1ebb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86440147-4350-4197-8df3-efaae0cc3b82",
        "cursor": {
          "ref": "76229cd3-7e98-4841-9a64-991278ec6937",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2f95174b-40f1-4205-86b0-8d42c1a4c819"
        },
        "item": {
          "id": "86440147-4350-4197-8df3-efaae0cc3b82",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f3eaf8c0-80db-474a-96df-b754f3f1989d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73770660-62f3-476a-bb9c-6bba04e48c78",
        "cursor": {
          "ref": "b3411b79-d9f6-4e54-8730-40c89ff5def4",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "536f42a2-8ffc-49b7-8a0c-a67b768a1f6f"
        },
        "item": {
          "id": "73770660-62f3-476a-bb9c-6bba04e48c78",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b994c774-2713-4312-85cb-42c5043a39d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d879246a-54ee-406c-a691-5d3d99e7ff68",
        "cursor": {
          "ref": "c69095b7-726e-4c3d-bb32-35790600e711",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "751b8c77-c26d-4d37-ba53-e68aa036d2e9"
        },
        "item": {
          "id": "d879246a-54ee-406c-a691-5d3d99e7ff68",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c1017b73-b656-4810-8d58-ec0fd75da951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1761d0-2433-4b48-ae3c-39a9dc96cfeb",
        "cursor": {
          "ref": "daf7656c-9f53-4d2e-8df8-1a22ec9447c1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e7fb3b67-a672-408a-ba7e-dd46c2b8bdbb"
        },
        "item": {
          "id": "7f1761d0-2433-4b48-ae3c-39a9dc96cfeb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e1b88808-0bea-465d-8c06-a0c0eaf435af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d5dfb3-5337-473c-99ba-17deb722dd36",
        "cursor": {
          "ref": "ede8931e-88ad-4e9a-9167-2bc74fb2e34f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ca48928a-f938-4907-8878-b71194cd485c"
        },
        "item": {
          "id": "03d5dfb3-5337-473c-99ba-17deb722dd36",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3754e512-1766-4012-a9a6-80d255216207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b423dd-e618-41c0-a4e3-71bd867a1d8f",
        "cursor": {
          "ref": "4b9f3121-6cec-4dec-8274-78e60e917277",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0eca2cb6-f796-479e-b1b0-a7a848c411e7"
        },
        "item": {
          "id": "63b423dd-e618-41c0-a4e3-71bd867a1d8f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e7190347-9abd-4979-bbd3-09d7c6f06520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40d7233-207a-4e52-b227-334252d163ea",
        "cursor": {
          "ref": "94fdc3ee-8ccd-45be-bf89-0e542cc60559",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b5dbaf49-c53e-490a-af33-7d4a4266fe9b"
        },
        "item": {
          "id": "d40d7233-207a-4e52-b227-334252d163ea",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2081783d-ea45-425e-baa1-84f0cab428b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d68e1b-781d-4ead-80c3-f82a0e23bd65",
        "cursor": {
          "ref": "30217348-ad3e-42c1-9096-4766a85c0ee4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cb29b3bf-d1c9-4b95-a396-ab55bd8f0dee"
        },
        "item": {
          "id": "d8d68e1b-781d-4ead-80c3-f82a0e23bd65",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5ea6e618-f6d2-4271-92ea-79007713e46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529d81f6-83f3-4849-b782-c231fc91e09f",
        "cursor": {
          "ref": "0d7d9b30-abe9-43f7-a8e5-32dd999bf324",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eacb5570-7165-4974-a2e8-3c42942c788a"
        },
        "item": {
          "id": "529d81f6-83f3-4849-b782-c231fc91e09f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6cd731be-fa75-424e-9fbb-fb881b4bf9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05428bd0-9065-4f79-9e61-d8d1e848134f",
        "cursor": {
          "ref": "5664ef6b-c2b9-4b7b-bcc2-2ddbc557029e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8a894e21-8e8a-43d6-873b-0b93fb3dafcb"
        },
        "item": {
          "id": "05428bd0-9065-4f79-9e61-d8d1e848134f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a229334a-a745-4839-bd0b-537ed6af9962",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b134c322-d259-45c1-8b11-61ae0259cad5",
        "cursor": {
          "ref": "d376071d-84a1-4043-b5f3-ea7587425479",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ce9c1ef3-6a45-4e01-91e3-1a61dfa94e79"
        },
        "item": {
          "id": "b134c322-d259-45c1-8b11-61ae0259cad5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e937fb95-dc68-43d8-95f7-dbe51c88add3",
          "status": "OK",
          "code": 200,
          "responseTime": 2298,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "935d04a5-0d7a-49d6-bddb-528ef1dfe1a8",
        "cursor": {
          "ref": "d1558675-9f55-4f26-ae41-c194691a5e5f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "80509b92-fe3c-4e7f-85a7-35881c735929"
        },
        "item": {
          "id": "935d04a5-0d7a-49d6-bddb-528ef1dfe1a8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a53d8473-ffe6-43b6-8ba2-88878301c1d4",
          "status": "OK",
          "code": 200,
          "responseTime": 3346,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ecd6d0-8d55-4845-b061-dd9a65506c90",
        "cursor": {
          "ref": "75ad13f0-d038-4437-8aa7-0f719b2706f7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2732f855-b1d9-4fbe-a19c-b29593db5a69"
        },
        "item": {
          "id": "03ecd6d0-8d55-4845-b061-dd9a65506c90",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bd71fb63-e45a-4a07-a33d-21d29c5fb29d",
          "status": "OK",
          "code": 200,
          "responseTime": 3187,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44293af-59e8-47a8-8611-a12bd0f0a8e8",
        "cursor": {
          "ref": "35e00bf4-5727-41e9-a53b-a785fa127705",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "21581823-17c8-4e85-8c51-fd8b59c9cba0"
        },
        "item": {
          "id": "a44293af-59e8-47a8-8611-a12bd0f0a8e8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "908536b8-63b6-4e61-b4ed-a493a8a01631",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44293af-59e8-47a8-8611-a12bd0f0a8e8",
        "cursor": {
          "ref": "35e00bf4-5727-41e9-a53b-a785fa127705",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "21581823-17c8-4e85-8c51-fd8b59c9cba0"
        },
        "item": {
          "id": "a44293af-59e8-47a8-8611-a12bd0f0a8e8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "908536b8-63b6-4e61-b4ed-a493a8a01631",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a68a664-d88a-43c6-a743-a601b3f23ef5",
        "cursor": {
          "ref": "f37b4231-23e4-4b1a-b61a-e22aa531cf9c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "21956992-5070-4ab1-80c5-35f428867887"
        },
        "item": {
          "id": "3a68a664-d88a-43c6-a743-a601b3f23ef5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bd7bfcff-cafb-4483-8684-9428fd3023d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f14466-e501-4112-a617-873a034f53cb",
        "cursor": {
          "ref": "546993e0-cffc-407b-8bb4-7e9cadeb3cc7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ccb39652-dbb4-4bcb-85b4-08c96be77dce"
        },
        "item": {
          "id": "80f14466-e501-4112-a617-873a034f53cb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "69b2fe12-2bcd-47ed-be28-4d78a35b32d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}