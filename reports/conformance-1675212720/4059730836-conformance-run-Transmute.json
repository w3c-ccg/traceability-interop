{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fbeb975a-ff83-485f-b5bc-9a528abf16af",
        "name": "Clear Cache",
        "item": [
          {
            "id": "032ec474-6cf3-4f45-843a-328d86236c43",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b6c0b43-3a11-4cb1-b4ce-c987425cdbdc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8312d2ba-105c-4345-adc0-88b16bedbb36"
                }
              }
            ]
          },
          {
            "id": "35adf662-aef5-4d12-b276-aaf467c4d71d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "148061ea-a40b-414c-a2b4-44ee55a1f36b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75ddd117-41f6-4710-9b87-fb6c7884d2ba"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7af12d4b-e957-44df-9d28-709a29fc9782",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b6c46a23-13ee-45d8-9d2d-d3d7ad75cd06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "88a44bd9-16d7-40ae-a283-6a04096b6f2b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e547da14-4591-43e9-992d-a21d0c6c8ce1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fe6a631-098a-4a3a-91d0-15a4e28ee1bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b217921-63f3-48e4-be0e-f9d31adeab0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "acaa08fc-a214-488b-9a22-a58acd83ecd6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "30c0c855-5957-4538-913e-41ad2815560b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3daa24d5-60b9-4031-a9fc-98fe98a997b5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79bf4e2d-aaab-4a1b-8beb-98a15dfeae52",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4ba55a50-57e7-49e2-a583-f56f417d948e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86298a1e-2fe6-4f10-a2f8-6ee2abe58adc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e1c2c3f-53e7-4775-badc-bfbcfac3062b"
            }
          }
        ]
      },
      {
        "id": "70f62b7b-7ad2-4a1b-bd40-0520436d96bc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "165c50ea-9ce9-4342-a240-458c1c9047bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2127361d-1f02-4c66-80a4-6834a1366578",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "359ae9d4-408c-4d8b-8588-5d09fdf1de95",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1ec9ce-7dd9-4ac4-810a-84ae97bdaa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6392987f-dcfb-4bf1-b145-68503ac2fc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de8ac6a-95ae-4137-a989-a400f41ef9ac",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75ca6c5-90c7-446d-a44a-f1aa002bfafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8df01fb-cc2c-4908-b6b8-f6e2f5a5dacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5812b8-3a51-4651-81ee-6ab39ccc6693",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663ae555-bf0a-4d07-a24f-a11c97789ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04088efe-1d70-4622-845a-2fad03ce1cfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2eae5d3-f5ee-4dd9-afb7-3500ec53bfe4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8eb2c11-aff5-4885-a5f4-edad18155f21",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98715ab-f09a-4cd5-988e-8863be5cc87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ccc4043-d6a2-41cc-9cd6-753aac7cd0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b0b24a-f1ab-4ba1-9d83-8cc71845eb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dacc092-3ffe-49ff-b412-a9e568b638d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f16750-5d30-4f53-a6bd-932925d477c4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3401230-5cfb-4fae-961c-43b969a111c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59fc0258-7bf8-4de5-9b8d-bc442182a675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b8f0c3-be14-476e-9f47-20d4903ad323",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fc570a76-faf9-4eae-9a9f-46b08d06cb60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "27d2c998-8dd3-46b5-91fe-eb97af6ba0ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ebd7650-14ed-434a-bf9a-bb29c1dcd0ad",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa11d522-5973-48e1-8779-335d493dc32a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "707dd4a0-9522-4ac7-9f93-8887135bccf3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "290b63fa-0b86-436a-aa6b-2728505a8a82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a22577f1-53e6-4ac1-a1d7-8d50bcc62c33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5e62a97-83a7-4c82-b661-776dee8176d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e585ca55-7fe1-434a-b018-140d62e54574"
            }
          }
        ]
      },
      {
        "id": "7cf49b97-9e28-4589-88ec-2b2e606c3135",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "65e2184d-94d7-4cf1-9505-42bf1a9cc898",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97a0827f-bb3c-4fbb-a28b-74b4572a9e54",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f70b5af4-da46-4bc3-9c2c-8befb94344ad",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7262944f-21d5-490b-a2fc-28d644002e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973490a3-563d-4409-a6da-e8150cfd8877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c753d4d4-67d3-4683-8a75-1de1d2510daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b4c0913-59f2-4d18-9bee-0f3e050a1a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bf20f5-0863-43c2-b851-c8c5d7f4e2ae",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8360971-d903-458d-afca-8375c374a95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc906c80-f2bd-43cc-a3c6-28b0565130e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa26ab2-49d8-4891-8c87-3217da31f255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "576797a9-6e9a-4992-9c6f-adcf86e8a723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2329a6e-67f2-425d-b423-c42ed7a5ca33",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85276408-bc9f-4877-814d-45508aac8cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595551f8-d17e-4ab7-918a-88be217bce28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99612478-bd21-470c-b905-0881b70242de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9c1fc85-2815-428b-bd89-1629e267b87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a6a74d-ca5e-4e60-9326-e851f24e6988",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d188e62c-89fa-445f-81d8-58c3bc69d085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10b2754-3ce5-4c52-8a52-26875697f6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d892a43-9e26-4eea-8323-60d5c9844116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1850643d-0e84-4812-9092-427119cdf993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc9ac39-a37b-43d4-9890-a5287cc3f752",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15494997-264e-4273-b6b7-5f456a59ed53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a39ee98-5e7c-4792-8269-3f27b7e3afe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1f8143-2ea0-45df-a534-8a2bdc3813d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a68ffb9c-aecf-4c8e-8365-409dd8df17ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfaafc3c-de90-4270-bef0-793658d5296c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041b6f31-d241-4e51-ab92-3b6b365dc0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b73c424-49b1-4277-9c8c-c318051e75e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ff3ff6-0874-4154-8970-da72fc1b3aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "966bc146-dd43-4042-ae60-48d2a5ddf678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa23b7c-c95b-4866-84e2-53a2478196fb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f7a9b4-120c-4868-b5d1-92b99be5ac02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81091af-34a4-4d4a-869f-cc89fadeed9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e53df4f-46e1-453e-b058-1b1a68c49fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d22809b6-559c-40cf-8538-46a7b92e01f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f0a8f3-daca-44d7-ab83-ad37430189d0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33bd54e-24d7-432d-bd97-5e512de9f402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5789f5c0-a286-43d7-8e40-5a025293d725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400cb80a-378a-4688-b509-924f11ee0a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d0f5e16-2042-4ccc-abe8-634ef891a074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab940a3-360d-4420-86c2-586bb9453dc0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9daf01e-f2fd-4e8d-b0f0-42e2c20a4517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0849fa-0338-44ff-8349-a4e7b69d0092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d014375-6f24-4a1b-8e6b-133977ff4751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f87da5a-12e8-4086-8970-ae0724b7a5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be73d200-fc61-4f59-af2e-cdc511d22022",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139fe494-3a54-4bac-8e66-9d96f6f00696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9aa92a-086d-4577-93e4-1cbf78ad77eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deab1adf-988b-4153-8013-63e206102e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d0e244c-7420-4c68-a34b-4f97d1e284a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddadd0f-1e4b-4ce8-8165-c2d5e3ab4229",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9929cb-8686-4a77-a90a-8d906c00c8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7172558-ee9a-4043-a95b-461a0dfcaffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d05c74-fdf2-4e35-8558-1c6eeb550bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbe5f797-e20d-43b6-add5-af352c56d7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f3ede6-e681-4335-be24-91b2c58c8ba3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d74b46-6816-48db-a2d1-81998b1670f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c97c48-eb91-4264-87d0-0f9dd1940df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b530c6-4b93-4e29-aedb-320f227ea352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6ba6f6d-a069-4579-b44c-878244e86758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fce27c-846e-46bc-ae4a-eddbf37baf0b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25011b40-9c54-42db-a37b-65c60b94b1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494631bf-1cf1-4be8-8f40-5583ba0fed42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46295427-9a6b-4f13-89fa-5c318b227c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd37b7f7-b18b-46df-8ea8-5c9e993ab27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf56e07-d086-4b68-bbf7-9d36ad12b84f",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890fc7e0-6745-4a0a-a771-166d1b756d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae406cf-9720-40e9-963a-c0a0a0e932c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b52080c-de21-4c63-87f7-d15632d5bdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b9489e-4cda-4e0b-b4cb-a9bfaeafb0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2d7c8f-2e77-404d-a564-aafac9d9dabf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b459381-62bc-4c24-9b44-6755d37e427b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c1d0a6-1834-4c92-b050-7307b0c9d01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b04e49-e19c-4799-b24b-29154db69e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "502047a7-3822-4ece-801d-0c34d7a874a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37f1d48-8b44-45d6-ab03-4809425d1c18",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fee812b-782a-410a-a59c-3ceba410efd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25959e9-2043-4aea-b10a-add136680062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b84b469-ad98-4aa9-bd07-3675ee44c118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aa7473b-6240-4f7a-81b7-09a849b82868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7402e0-c015-4fe9-99b9-fccdaf90efe8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65755864-2bf2-46a8-9cbe-5a5fc3cfc440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af20219-4b1a-4b87-b2dd-74f312696e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fab418-0752-440a-9e0e-633baf035646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1984aee3-cd5d-429d-bb2f-48e86cb03db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca9132c-7631-49e4-93e5-d5697fd1c976",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b34ef39-9d3a-4a64-869f-df273b13870e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7108af8e-ffe9-4334-9953-bd30dc2715b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5014965-fac8-4384-9dfc-a92ff95e7758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f643b3e9-b7bd-4251-9290-d3e0bc740f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81df8ab-a51a-4a00-a2cc-f1e6653e4633",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7e938c-b082-4f02-89af-4984950727ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168da732-2135-4079-802f-732a0cebadad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19ed6c4-c422-4a3a-86eb-6e917df4ad29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4097e16-c99b-4abe-9d5f-128531ba12ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897dd921-a802-476a-841e-bde6fe4fbd19",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9438b003-103a-48e0-a7aa-73176bd6bd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f9b25c-4d85-48a4-938d-93d7e5582aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d242ba8c-3900-403c-bced-8885b394d60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a43578-b8c9-4c56-ac2c-2b9621d0c0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f361fe01-e3c0-41e4-bc7e-4c03bd0047b2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77ba63a-e2cb-4ae9-b7ea-fb624a9811e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef0b5b0-e666-4375-9715-4978c3393349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773576b8-ce20-488e-9124-e8422dd6faaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64da0718-6f66-4e5c-9547-7cd0c21d4474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73739b97-9b5e-41b5-b290-dc7a383a5d61",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dd1387-7036-43de-8ae9-d050806cc3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352d837a-f5e5-40b1-aabd-578ca4e0b3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579d3db5-0581-45a8-a11c-25bda1f256d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "041aaf10-b6c1-4a5c-9a0d-3d4b3d215020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56da7a25-5f5a-4da3-a171-eb7e40ad8ebe",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc400c87-bec5-4f70-b273-aff5c3d42323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6a88fb-8de0-4bf3-8f6f-285b15549229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851a2cd9-a4e3-480b-94c7-c8dfa6b2073f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc37989-b8d3-45f9-9684-78125ae82d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f228b47e-ad77-4a26-b2f9-09e903dfbc9f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1fd246-d4a5-4f78-b4c5-0adf74151957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf5278b-92f6-4ba4-a67d-8f9519dd92a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b2422e-c97f-4f10-83f4-6015b98958fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f7f697-49f3-4316-a36c-79065489fbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ccf88c-4bb1-4cc3-9266-4a2ecc8fc208",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cd1560-aaf9-41c7-ade5-db6da7d127fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc6ade1-2652-4980-923c-361143fd0195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72db51df-4b8b-4089-93f5-c410422f928d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8df6d472-9a69-4ce4-ad02-0bcb317d6b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1093b4f-750e-44ff-bfa9-0d6a27d6ceb4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1449cd09-8380-48d8-90bb-7b429e8a1ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fdd3d5-84a9-44e8-8f62-3f885b1b5512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f5913f-a247-407c-aa20-fa23c563fe64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e427d49b-a092-48e2-8c51-4f421af75202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05c1bfe-0836-40f6-9851-f42b29f3c71b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5f9ff3-d90d-43ea-996f-0799d575d37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbb322a-1245-4415-a2e9-605fc3074ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442484b5-cce9-4739-b0b5-8d5a866183b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70761c20-a3b4-4a26-8b99-f82bab9f43f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb364307-319e-44ce-b09d-a754dd6698f4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b07987-3e06-4e5b-ab68-bc0a57b580cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7532a46-d53e-4798-8c76-91a09bacefd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeee20e2-6373-42ae-8b29-e644999aa3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f3b22d-13b2-4706-9925-e340b538801a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853cdc65-53a3-4b82-bb00-1589604957c9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4de1bc-7a8a-4505-9ea2-00bdfcf95446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f3dc60-2bb1-49a2-85dc-bbcc5afb5d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c52633-5393-405e-8983-55af25507702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4dbd18d-dae9-4e11-aefe-e6ebfe4d3605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8096583-319f-46b2-8332-c44e4a501613",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74653ce6-7e17-4af0-8abe-64e3fc64811e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb941590-5e11-4fb7-a195-3212e3d607b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c280263-b65e-4e59-9118-e22969b95623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a165af-b289-43f0-9ea2-6b72336b3311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bbf12a-a12f-4f9f-86c0-c3330ab4cf2b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f20bda-7424-4009-b1c2-a31b5b7c4f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005eb289-f608-489e-8f7d-a5e46db9650d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0e20a9-4121-4e52-8109-677fe0b94112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef88c7f-bfc2-4b6d-86f8-4e57f3ba9f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3327fb4c-64c2-469f-ab30-b8a0b68857e5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b1c312-f10f-41ba-9ea8-f7101d2a21a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b8d502-ac5f-4948-b130-d1c795f653f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3358f815-fbda-4bc8-ad89-f7322d4d4c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "73d249b9-fccb-4962-af48-7ca570b0834b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc742b4-8a1b-47c8-bc69-239792e5222e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc7bffc-5642-403e-bd7d-c440bf0fb558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d02fe1-0d1c-41d8-8253-ddeeec003527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24eaf83-3b68-4e48-abef-d0e01a205962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6b2524-43fd-4629-ad3c-437b18108217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c16020-65b0-4020-a32b-86ac9d4c50bb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9449d0cf-971d-4a14-ad90-ddb372cda27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2276efe6-a4e3-4572-b668-15afac40ee14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ffca9e-6f8a-410a-86d5-d5f614788d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab69dc9c-4a58-49ba-ac3d-c3f107a0a06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b2a3d9-84e8-4153-8f20-142d722a849c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74341179-7cf3-4545-9243-d8a3cda4d98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0764eee2-5bfc-4369-a744-a987fb066b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6fd7c6-14cc-43e1-bad4-bfb2da7765d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea1c25b-ace2-4f83-b5fb-cd90b545e84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f61acf-ea3f-4876-8dc7-bf2036d9ac9c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cde399-41d9-4578-aa55-41c6bcb86401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84647ba7-1857-4fd5-97df-9e3afc4bf9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2a35aa-e30b-4a20-9d6f-2733db6e3abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "497c1869-b559-496a-a4b1-c547dedd1c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95e56cd-ac09-4eab-b57a-618ee40e1679",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f6975a-3bb8-4e96-af7c-65397fa6be14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32b07dc-3a36-4a00-a5fa-88f5011bf4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44403c68-f2d0-4f76-b04a-15f0eab9f717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "68e518fe-cc7d-4ea9-b139-8dc9ba795973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a544bda8-ba20-4769-9a7d-be6fa78f593e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3afd337-cc88-4e89-84d6-a52158442bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dec1ed16-2565-47ff-90f1-8eed99fcb376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640c4d9b-7fc0-4f28-93aa-5082cececfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17f717b0-8c96-416e-9262-f047355a60ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584a13f4-5b7e-4135-ac4d-0459d0f64679",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b3f6ce-31c5-4071-b478-1541f101b828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b971565-d523-4238-af27-00ae11b48671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ad2f06-8d23-49d8-8ff8-3ab7ba986287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ff50b5-1031-42ba-acc1-f8e9969dfcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608842d6-d3db-4086-8362-7f853a5e74e6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9a98b0-e4ec-4cab-af41-586ef9b5b867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807235f8-a172-4380-8f11-ceb7ef4ec61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc36e2ae-531c-4571-8144-356d54667264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "afb58d45-4b5c-428f-9fe5-dd2b47cfb678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1449c394-5e86-4b36-9093-908a28c82efc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1fc986-2c1d-4d7f-834c-2c64031f0e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6831b285-3988-4c4a-b891-b7e5e0c66bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b20bc4d-b700-449d-be2d-ca2ea438c281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0ee776-eaf9-4395-9a8c-8b5da689a048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455e6e6b-a5a2-4a8a-a71d-b37fd5bf93c2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56db825-efd1-4c28-bf4c-179c2340a8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce433e4c-986e-410c-a394-0e5baba4fcba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd34874-0312-4119-81fa-579a3b278be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e569660-6bd4-4459-9190-46967dae4715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8b24e0-b309-45e0-a83d-2b57310367f8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33362cfd-d46b-404f-adae-30c78e6b795c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b9ec50-ed7a-45e9-8fd1-d166167a9971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f023385-05a0-4aed-9632-ec33e5ca2d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c29b6f34-c59d-4d7c-a26c-0820c847f625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ac01a6-14b0-4d95-a932-66610667a0ff",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebae6c5b-6124-474e-adb8-8eb1821a3c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a417f6e-2214-4e01-9d80-3091a30aae1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635628a2-a6df-476b-a488-428c176b2fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9dfaa433-ecb2-4d52-9c6e-5d5d9563faba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c353c51-01ca-4c8d-96af-75fc8c2b9648",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65e3a57-59be-40ac-bae1-964ebdefac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfd1cce-8bc0-41d6-ac65-49047bf3eeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15e52ea-aa69-42b1-936e-cd4282be71dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "62e25f1d-b1a3-4709-98e3-0f8f48e9efcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d30064-5ca8-4212-99b3-6c8271881b4e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bb6b64-4166-4131-acfb-e25a2300f06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59580ce4-caa0-46e2-8f68-1cea0ae56ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c47617-89bd-443a-b659-d586bfccfb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db2a1c4-a5d2-4c4b-adbc-4a72c492ee14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b1818e-6e42-4140-93c0-7c2f0e9978ed",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9e9330-4aa8-4a6b-90ac-8b101d2c728e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3054b2fc-0c67-4348-aa3d-53cb26c78230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2fff74-f646-4c8a-8743-d86d726ad995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "643d3a44-65b4-4af8-9b31-215ad96765b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d73f22c-6dd4-40aa-b1da-28d4f3753b32",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c88a56-ad7d-4b1f-99dd-31af132e7f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aabc52d-b073-4f83-96cf-f54093486728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6587ff38-b6de-4daa-a0cc-ace985fbe5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06555e3c-640d-4c8c-8d11-5fb346a5f877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8cbd10-202d-4c4b-a409-0196fded4f65",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57126b93-03f8-4b72-89cc-4670f95a997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21b3039-ddb1-4d4b-96ab-9287d6939999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb700d8d-4ae3-413c-9322-f5f1daba3f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "720c0bf7-506e-4769-a7de-6d3d8b6765e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b91aba3-f6ce-4a07-8c6a-2eb49b31be80",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b81110a-b960-4c21-97d5-825bc9e8c893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328766d9-cf8d-4e68-a2d0-e41a2af19633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df8118a-083c-43fc-874b-2e510de97421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "364f5186-c63a-4302-be6a-62ca7720b886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21eece05-6904-4372-94e9-61b3c944f491",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b67d313-2255-4cae-bf3a-b34170effd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcae710e-acbf-4f4e-b90a-543f679ed224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334a439d-ce8a-4ce9-8e1e-f21871922016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed3e549-2170-4a28-ad26-8c33032e64d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b64fea-423b-4568-821f-d7e5e531d8ff",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2342d3f5-7d58-4d7d-9142-d5322f049a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4fd082-5a77-4a36-9ab9-bf5aa7081144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5336ad55-92c2-4671-b03d-2cfed7f36cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "294e67e6-0015-4047-be3d-817a2de847c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfe6e79-c387-466f-89fd-3df09783022d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca9588a-8c7e-4630-abbf-52b0b5fdce49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d52a052-c1b7-4298-8da3-6654c94f82fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70857499-356a-4911-a129-317e62c14589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4c2560-bd5d-499b-bd4d-2c21a3c2437b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dceae4c1-e38f-4342-874e-2efd0ac38162",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0dec1b-e42f-460d-9104-459d592c4e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6556ea26-0d5b-4053-8313-9abd5e79bbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33d115f-82ed-4321-823e-c338664495c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df635f58-6c0d-4d61-80d0-2600b355c2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c36282-5630-4190-98a6-9aaf3c9c7834",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0fbaf2-a490-4531-81aa-9d7b7c119a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a357ffec-1c96-4594-a261-d559e2b1099b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55309ab-31f7-42c8-ae4e-5039a45d6657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "874e5769-6682-429f-ad64-3a6056488776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a018d9b8-1656-42b2-acc5-c4b15ab49b4b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d1407f-5f13-473c-b0d0-0c4225937749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e963286a-82b4-44ca-b3f9-1133b5b24c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeebd65b-d414-4178-b798-cfbc26528226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26629fa4-0d9b-412f-9edf-3778675273d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0ae784-d27c-48b6-af3d-2232020f5717",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222a5b7e-d794-4f5a-83d1-5437275fcc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8561eb9a-ca45-414e-b1d9-20c3eb5c1182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9148d65d-8dca-4e4e-81ac-8989a779d859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e36686-93c2-4602-87e7-b9f7c49b8eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4165de1e-6257-458b-b146-87e4f5f40a3f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6059ce14-279b-4718-8b21-1251c2c3ccf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88ae0df-88dc-4a28-90c8-824532ecb2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f611f3-a774-4337-ab00-aa7bb5143676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "de3fb5f1-70a4-4000-bab4-a1448b36a5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28f7c76-35d7-424a-911d-6a0b5428713f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce4cb32-e057-43c6-aa78-d3b25e1f55a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d742bbe-217d-49c9-b524-b2235381a3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e4a170-087f-4016-b313-261551523647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9edeee-d9f9-40de-bc2d-7e3337369770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168f202c-4279-4cf1-8d40-3ac5a80e5e3d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9beddb-17b3-4923-bc8a-62b0c40ddc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2f6bec-4c75-4934-9dca-7631926a4d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e737ed5b-b116-4d99-8836-fe213838c5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0716d0bb-8f40-400c-8db4-e420705f0681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4e57bc-7065-48a4-93f9-f08ab84e2f2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da858bb-79c3-4c93-812c-4b4fbffae8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38f863e-b4e5-465e-83d3-6d7d03c4bf81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99a7947-8e5e-4afe-a59d-2a8b9bea3400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b79fcbe8-085b-4bf9-8278-fe81ab13bff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310034d9-95b0-4608-ada2-a1dfb5246987",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45862eaf-3efa-418b-8ffa-2280fc3825ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02783574-ad63-4793-882c-d792fcc3bcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39549abd-a7d9-430a-934f-1a4f9c26bd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "abedf880-1c68-49dd-ac6c-86a80151b145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1414c4-f52c-4cdf-826d-8ff52f9b7a7c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5fdf74-d0c3-4ff3-842f-3cfb150c4558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a760009-8047-45ba-ae04-f5a386bd66d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3539ff80-e031-4a29-b070-bf6446d6a57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "476606d0-f4bd-411a-925b-d2bf6dd6c50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d14e197-79d2-413f-b330-8941874f3efc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad665757-df1d-45ee-a898-776aebc50838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e6f3ae-7207-4e9b-8a9c-b5926139207e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a9c67c-102a-4237-a9b0-7b0bd1aa52ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db301bd-2291-4597-8dd1-20cd0e2dffdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab0a444-29fa-4c34-bbfd-c8992ee6a379",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a73637-8195-444c-a7ef-c2adf93655e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2587c568-7f4f-4dfe-bbb1-b2a817f9f2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06da202e-ca73-48d4-bcbd-d3255bcd45b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "702d58ef-c84d-469a-8d4f-a34dcec496e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8afa4a-9fcb-47e4-80c7-9150909ffb6e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fbbd0e-c3d1-42d8-a44f-e89e6320ca7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eef0cf1-a364-47b9-99ab-d4c4e25fe48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4cd0a1-873c-4054-b630-f5305617f28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c528e3c-68b1-4fb1-b73e-b5a8646751f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f83a9c4-f5d7-4d37-87e2-6380eecde765",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5425f79f-0a53-4859-951d-7e52706427ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8062c25-a1fd-4535-8034-c1f5a288abc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc15160-e89f-4098-97f0-4ec30ec4790e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46476da6-7b06-42e4-8be2-72c803bbb7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d256a187-fc43-40d3-8a6b-6ec29988ba29",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f9f066-3bf2-45b4-b72e-aad58ef9296d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63276cc-8b8c-41bf-8266-f3b82ef6b744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b775d9ad-9197-4b97-a1b7-544fb8f9e108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41987c78-557d-4e15-a1ae-4efe6bab22b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260f8357-b9ba-40eb-b3e6-84839d97fb8f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb01857-0e20-4af5-90b5-85a5ff1e7093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abce7adb-f0c0-44e9-9ae7-48a6e4b610ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a91a866-0e04-4ffe-9492-706d48dbe5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef692391-d686-40f5-a327-5f291d316a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d3f73d-71b4-4227-b927-f0d060ab04ea",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1dc05a-f16f-4de5-a8d2-077460e596a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d252ae-966d-4e63-9408-14b4d06de2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283819f1-02b3-4c1a-b0fd-ce0332475409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "663b0421-1f91-404e-a816-73d75c497820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844281db-742f-4057-938e-cba20e1567ba",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b16c337-77dc-4c03-b464-10fa65b78d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b7f013-91a4-4b5f-a8f2-359cd2a0aa0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eb48e8-f950-4df9-af3f-f9378fab1d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0f9bc5-d14f-43ba-8da4-4dbf3bec79c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33a18b3-68a6-4ca3-8f54-e97911b64899",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974a69da-de26-46e3-bbfc-df8dce859a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3b989e-4758-446d-95a3-3efcfbb14089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ca4556-1f0f-49be-b7bb-39f66e5b9427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed19afa5-0e71-4a99-ae41-f482b54ef1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e121b3d-3699-4426-a04f-ba8beb2b1730",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da63dcde-36de-4b1e-b111-cdc6364db675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425f2b10-7eed-4114-a337-537bcac7b183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e52be5-f3a0-4288-bded-08bcf01c6e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be477a6e-d828-4745-8343-6358c356d621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721e21f5-c509-42b2-9c92-98a99579edef",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84264724-645a-468b-8552-4e39d5771a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a6cb05-ad23-4a8e-9428-bcd8e876b2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dccf961-3766-45d8-b98f-22e2c09e6c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5520c0db-ffa6-4715-86e0-63cb33232003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854d3c73-94d5-4ba4-bc15-1bd04572d73d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fcb6a9-de3b-4be3-a17e-fb8fcf4649b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de729916-5939-4e31-a659-a0df4ff7bf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e9fdb2-c614-4e86-9d31-d1e30d819868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8144e0c-fffd-4907-a280-bccb7adb93dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7845d73-374f-4379-aca3-2346ed4d9693",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314bcf39-6e9c-4239-8bc3-07f03191d9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98c119d-a1d3-4939-a504-4d8bfb5ae654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ab27c5-b481-438a-bd57-38d17b67dba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1231549-a35a-4814-9f40-e943a2726bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93934284-2a25-49d4-8d90-851134c622ed",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b66aea-6626-40cc-b51d-0ffbb4af9ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff95084b-4f34-486e-96bd-ebadf2f949d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddde6541-ef94-491c-8fac-47cf0a19e77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4315a4a4-2c53-4d79-b042-f517ad5db27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d1e6ab-8c61-42d9-986b-0afca77db996",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167cb4bc-8cff-41fb-8770-1d890113c9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d54aec-de12-44c4-9a00-49e85aaecbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f4e375-483e-464b-a395-7476877826a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd80b55-e749-496a-9569-97bc8144a46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c667107f-fef0-40a1-8783-5c3561bfb216",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b85311a-75e9-423d-8639-b103c5dd6751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c27cd5-3f7c-4611-8252-da2d7481c396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea45436a-ae6c-46f7-8fea-95b29f7bf953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "505b55c9-9a17-4420-a10e-e0e72418b11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef233a09-a893-4d64-89b8-2a54c9195feb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7abb639-d00c-4c1e-8c0e-328cf82fd8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aced9a5b-a335-4c46-ae7c-95debb29c445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b47e36-3a29-434a-a023-ffe93bdf0be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c35eb109-3473-4741-87d2-cae5f75424fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d00b9d-6358-42cd-9a6c-9a132f9bf5ee",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b29b05-486e-4701-8141-02226f8a840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3d44b4-0c3d-41f0-be82-f7ff563bf983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80dd39f-a774-4b0b-af48-1b8b24bd5ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "457bc45d-c434-48ce-9283-c21572857619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390546a6-00f8-44ed-9e52-fb55f0f22d04",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e0f8ff-8a9d-4145-930a-a519999d74b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b08aa27-be83-4ce6-80a0-d1195b8a77a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ed2244-f36f-4823-be3b-f411e8839dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e322df87-f2cc-4c86-84b3-58aa308cebd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca9e1db-d5a7-47b3-9377-5389d819d9b0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eaf4b4-d5b5-4fa1-b9da-3c0a243bbd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed31340-72da-47fb-bcca-b59a25b4dc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b1d51d-a1fa-4f33-bcda-293407115f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d52d27-d1a6-4a25-bcf8-3ecf3f1f6ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed1615d-3adb-47c3-af41-48e956dcc687",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8835e49b-348e-4a9a-b4ec-58024e194eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3f3c44-8fa6-48d7-9016-e67169a0ed60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826e95b3-8683-4f1f-aea2-29af7bda48c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d705943-d2f3-4017-802f-74351154ae8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affc1b00-4c4d-4069-9c1c-71aa485b8ed3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f37041-7918-4907-ad29-fe2deea07561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec97f8c-37e1-4ee5-95e7-a09019e314d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96344c40-e9b5-411c-8e73-ffce67a7d3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16e1e6a1-cdf1-4e68-9749-36307332498d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef5cccd-e2f1-4288-855c-5c974a507fbf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346aa0f2-a9e9-417d-ba40-54baf2b2fac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdfab4a-fea4-424c-a278-684642f1b89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040aee99-e083-4ff1-b8ae-7ab7578043de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d26a4bfd-bef1-458f-860e-02c502a8d8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f30d05f-837f-4a98-a738-019b87e9e507",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aa98ff-335a-4d8a-af99-f4158abf98bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98115ee-6fbd-4b84-b44e-e569e73e4821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000c8d88-2820-4e76-87f0-7d32488a6ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "385f2567-4d7e-4ec8-97cd-13ee06960fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db81ca31-6459-4a1e-9f99-39a611f640c1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb5352a-2cb6-4256-9500-c8d6f9340568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424934bf-dad4-4c24-817e-34ab81e083f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5750b625-e73b-415d-8d37-4f1b6545c2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc3048d-a3b6-41ce-82e7-e20668dd0afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb4dcd4-1ab3-4181-a747-11c4921aad69",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da37e04-af4b-41cb-b8d8-aa2f136e9eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f14676-7759-4c41-bd56-9529f8891840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebea0a31-f64b-429c-9997-1da41642afe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7d001a-0a53-4706-835c-3ed369959bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a276fcd3-58bd-444d-8481-2e8765bab366",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc746a0c-f18d-4321-bb38-7e320c597d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1ce8a0-7cb8-4d3d-a8b7-98c593a6a112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3555db1a-5de3-4d22-a696-5249bc6dafeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc824d16-3428-4def-b565-c752263c7c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09352b98-e617-4c15-b3ef-47f8be5ebb93",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866fdc3f-0956-4acc-bc39-0f1b7ba19743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5aa18b-3032-49f2-ac01-e081973d4a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6a2ac4-3073-4736-8116-3bc33c124e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4407941b-7ced-4083-ba81-612dc5274b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8b5e9d-966a-4b17-8eb6-f3444e784034",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef43ce6-2268-4c4c-9819-b3e4e000bfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358159dd-2894-4848-9861-e21e6cd6892b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f991256d-a735-45d5-910f-11f5bd18bb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1928069-5bd1-4aa9-a03d-060d54b08061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db53118-c5a3-4c7c-befa-565ca800cf32",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad772f60-8c87-4f3f-8036-c1040fc929b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84412f83-5b62-4501-b179-a40f81fc93d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ea7949-8433-4d28-808d-84e5eddd3d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e54281d-df2f-49f3-8e13-2d8349e9ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d35d241-81d5-419b-a593-b4b738f55d86",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25e3bbf-7c56-442e-aa53-687f6b4d7040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2c8bd8a5-e587-4bfc-a865-086925669ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc52763-1843-4266-acdf-9bf7949217cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e13f44bb-fd59-4a63-b718-b4e307b178a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9387fa3f-e5f6-4142-bb70-0282b83200da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fd81acc-e9ad-4a89-8eff-4abad5af800f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b606842-5dfc-4f66-9a99-b5d86ccec020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9bc1ff3-be7e-40de-9f00-ba712c691688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee2e6e3-c76e-42b9-90b0-6d929130bd16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "7e43d58f-9672-4a10-85ab-f4a9f3e7c141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6da8f7b-1db9-4b18-a760-cfe475581dce",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71844f2-76fd-4684-9064-b858b5d8635b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "426cfc27-f606-469b-8e91-a5008adaa29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e537a701-0fb4-4d58-b213-b7279f684b89",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "4f9d5e75-9ebf-452c-9ee7-3adb8d85af3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cc34de8-552a-4a0f-ab03-58f7c6f8cb7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ed259a7-f70e-48fb-a011-ebd5bffe7c0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04049781-7435-456f-a402-0ff5d4d837ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82953253-3705-408b-93c0-936becf37650"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cda8b8f0-102d-44ab-ab0f-4024e8f0a3b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cc42a90-1c25-4588-bae1-37409c885c96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9e71fd33-b50a-4bfb-b1db-330df508a756",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8aadaa3-27d8-40ec-aa1c-e1bffd906b7a"
                }
              }
            ]
          },
          {
            "id": "7f7783b5-e11e-405d-9394-57a09dc593fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6d46195-16af-427c-93f7-4510b3c67057",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f12f4302-6d01-407d-b9ce-e6c71f2ea6f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe56843c-0e11-4363-a1e0-9cdf1326fdf0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0aa780e-c7f5-467b-be7b-436b58f815f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b2d343f-31a2-47cd-8f85-b4006d35a2b7"
                    }
                  }
                ]
              },
              {
                "id": "06afb7d4-f43a-46f4-a3e6-eb37ce925c58",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "939f9ca7-6ad2-4faf-b628-9ece4923a7c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de8d838c-0634-4888-b8c4-d5f5c91e9adf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbbe57dc-bf11-4817-8835-16772de7bdd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "714b497c-46df-42c4-8b43-b8093b76781b"
                    }
                  }
                ]
              },
              {
                "id": "140ab357-64ef-4595-b772-3cbf639aa95e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a78c05b7-b62b-4f64-b7ad-4188cdda40b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97735286-b0bf-4b08-bcd8-2a657e309e1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0dda9bfd-a7de-4efd-948c-dccdf2531da6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "166d569a-ef86-45af-8263-21e840413956"
                    }
                  }
                ]
              },
              {
                "id": "4f82344c-9cda-4351-9463-b867028230bf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6d5c45d-4411-4c8c-934d-0a675d2ddcfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd1969fd-4c0a-4473-8644-5279f82b841c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "112a6e7e-973f-4450-ad21-e4ad0d7d492d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7d5b1779-8f8a-4abe-87d2-a67711cd9935"
                    }
                  }
                ]
              },
              {
                "id": "ec9fb452-20e2-43a0-a50f-60ca551ed500",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ddfc767-f2d0-4340-bc5c-66b23f58f62f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90bddcfd-bbb1-4823-ac80-ef248d66428d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3546cb2-f70e-4a71-a332-462fbc8f7716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "639d91b2-100e-4b97-964d-c004dc1047fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd6b2a73-cede-4096-8678-ad6bb93b1227",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5237354-758f-4d15-94c9-79f364264040"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "696b3207-31d7-4657-9c26-acf68d5f8f77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5057bdb3-7e30-4be1-a7d1-1ffa180e9992"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1075aae-ada1-4b86-b76d-13bf7ff6b77d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "92e2f4f5-1541-43ad-a027-37c4cb6e234e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7540347-0ac0-492b-bfa9-7c67d7aca65d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f86cbe6f-0d52-48e1-88b7-8de2ef3c082c"
            }
          }
        ]
      },
      {
        "id": "cc0fe55b-982e-4d60-8d19-7e582869b760",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fe8d5c6f-28ec-492f-bc7d-159ba064e35a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcd58804-9a94-4863-84b9-e3a85444d575",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17243acf-17db-4268-a8f3-6a077a9bfd2d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00e37c4-4909-4024-abf5-7cb4ed615e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e85ce6-b4b2-464a-a576-d3466d506c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc3e593-a6e7-48cf-b996-95e62db7220d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "db3f9605-7147-4618-993e-28b95afca40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb00618-ea28-444d-9a52-716286c96351",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc30ffa-fcf3-4074-b2ff-fd55630b762a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bae206-8eeb-420a-b742-3365f53d8846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791c4a02-be2a-4448-bb99-cbbc90b17fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecd08dd-215a-44c2-a28d-b45fbbc8f073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4894336-2b43-4983-840d-269ba5d4bf82",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da56122-eecb-4614-8fe9-b2df143046cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f692d18-b0f5-4508-8f7c-cf7c44a5974f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbe0d1c-e138-429c-851b-aba9daac8d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e89154-e377-4c60-a92e-6be246142cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f891057c-1d6a-4dbd-badd-9ad423904ced",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257cfcbf-0df7-43af-a222-b87a3a6e2b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc38af0-7476-429d-a052-a3b4a5b5e2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac17a9f-ece8-46fb-b120-c535a253f357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a363fe5-140d-4b03-b579-0dda1644b463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5e108a-9a10-40ae-83b4-32ddea428c12",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84c1f36-750f-4f66-8b15-e261c2e494a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc50ddee-8e48-41a7-afe7-ff694e08ee1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25de2276-1711-4d8c-ad21-973d572e7130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d39d6f9d-96f0-4e47-9487-d68fde800e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeb6baf-5802-4c2b-aa65-7c2653d2a601",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f844f645-ed53-4145-abe2-1b8a7a25230a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d651f25d-4841-4cd8-a517-a80025827fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e787a971-66da-461d-be78-608227c97673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77aef93e-2a53-4485-b3d3-d3bcbeb2503d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a922b2-e155-40b6-acbf-c1464f094546",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6f2def-9936-4e24-ab3a-ea9604f0e3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d05bb5-5e3c-4ffb-8eda-cb1156ebc9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd12364-1c42-41f2-8c75-b68cc60aa0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7594e95f-f3bc-4548-ba65-f16211b27d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000cc281-12c7-4ef3-9821-c52d9a73bef4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27137a63-e02d-49c7-9375-ff2e025faabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba91028a-aac3-4a2e-b649-6bd530d63d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bbae8e-c172-44ca-827a-1480ac643fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c3ff54-8e53-4665-ab3b-1cddfbaff8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9240cf0d-2e49-4745-9025-82e39a5671d8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584ada0e-b600-48fc-838a-77fc065dafd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59912ed0-0e27-4ff7-9995-659861006e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c15753-94aa-4a9f-bf05-ee6a40d6a1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc039fd1-17b6-4d00-a8c0-bf3dd05a9e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5df6cf4-42ba-4f7d-bb1a-6473eadc2365",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73ab707-c5c1-44ab-831b-0da34c7e1e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b45cca-aff6-4544-a83a-6433209d6338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428ec25b-859e-44bd-b738-62020ce73438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a71a21a2-0e2e-4dd2-82d2-767b74515c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342808be-5173-441c-bf71-44baf22ac6a3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942bce38-cd3e-4194-aafb-1d8f44609393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2425c3dd-be26-4a97-963b-1598c2e94087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c76260-5134-40c9-9694-8f6b10d77df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bf68e3-0915-41f3-a231-40327afe069a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9378beed-d2d6-4886-a401-f446d7059ed8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab42610b-a3ec-41be-bfac-ed67abf5d94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e57a831-2cdf-4bf0-8f85-3e36c51ce4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7af1a0b-fba9-49a4-8029-93cf1884ad3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76795ccb-a0c6-4c29-ba46-289e116378b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac339fb-5078-4ca1-8fd2-ba6bbabaf123",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585bfd09-cbf7-4aba-afaf-c4e19e8c0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c701bac-b026-40fd-898f-c8537a01f1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b370e6-8c1c-44e2-a6b4-83e563b6f460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "614c7f54-f107-4527-a70c-dc1e3993222c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db9edea-be9e-4f42-a7d8-d42f5cb5e7ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f6f9e5-6b50-4850-b1d9-ea980f03e47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0cbed5-977e-4c35-bc04-35a86a100f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2581b52-d281-4920-9eab-1a2c2eb9e897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c30a05-8e3a-4352-8e4d-37390b112cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c3c8eb-b835-49c7-b87a-d6affd3869cf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a3baa4-2b2c-473e-bcc5-b4e668197bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624a9d06-2917-4dc8-89eb-ec19fc232f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d506309f-1c52-48d2-9a03-48d551f1fc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "927dcf0a-07e9-4bc4-8d72-ff84fcf373b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e244598-6eaa-41c6-a5ce-1d123e135c24",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4344e856-7c27-4db6-a3fb-ac485eb945f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3db0da-f44a-4f0f-abdd-cd1d59f0567e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8615c87-413c-427e-9d58-c3deaf61f668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2392b5cd-fd62-460e-9fd2-9154c6359d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15f4a4f-3298-47e8-a31c-0c7711fac6e5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606f21a2-5aaf-4292-aec6-e6e862d1f8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bc6b43-fd38-4441-a81e-ac4e5ed6f3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4525158-d963-4162-98c1-fa37670f670d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d83a60-c057-4d05-8f26-3bb6d9a271e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b35a0a-dfe4-42bc-a46f-51c7aa9c08c7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb958381-9a47-4cae-9e2b-d736c8702e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963513ce-03db-4ca2-9c54-f8ed3f3f7162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68208da9-3fc5-4541-ad6c-f9ed0d126b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed8da0c-ea95-4a80-9c44-fd69c4f44c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8beba4-4f38-4e13-9cab-152e64e81d70",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49eb32be-488f-493b-8554-a9822f041aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcf7ec9-128d-491c-94e5-55261aeff95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3376af9-cc8d-424b-8f54-578be1cc692e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "541f17c8-385b-4556-bc94-4b6f6be36906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2a08a9-f02b-4945-8177-ac8693ae056c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edb1fdf-8791-4551-a99d-a41bdf5df74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e5c6d5-3bef-49bd-9465-7753dda70c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9091049-3d92-4ef7-bbe7-42a46e554f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c86410b-4898-443b-bb3a-e3a407415802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c6e144-b3d2-42dd-8074-6f47b2d78978",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b8e1f9-fd31-4872-b95a-e2b2db3172c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2323afbc-4134-4e0c-8ae4-98b90af4868c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa2bf51-fa4f-469c-8a14-2ec17a78b21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f786c3-3638-49f1-bc9b-bc4e24884b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176d5f8b-b024-4c6e-8f6b-567d7a6ae317",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dceb889d-ba29-424e-b3b2-d526b13a1e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da54cd8-51c5-4377-ac76-fc9930fb9bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0577485b-0ed7-49e8-a1b4-a82ba5b1aec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9b018a-95d9-4b94-82f6-bdb3438e7ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb51ae2-78c8-41ad-8bc4-2d1aaf055f25",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1be002e-27b5-4975-ba24-eb6b54794119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d209cc19-b00c-46a5-9d03-082d1683b543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded5cc16-3689-4eaa-b3d1-5a1ffbd0afef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3fa54d-900d-410d-a367-51624984be5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6886b5a-32e3-4b4e-b5c3-e70f43c51e4d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715e3bab-d7f9-46fb-866f-6757d5c536fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f92282-5378-4aad-8265-5a335ace6f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbd6d75-832c-4223-8444-b2041dce6e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7815ea56-12be-48e5-a1bc-0afa65ed0b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33395a66-bf28-461b-ab87-a35f336a4c94",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03645ea3-8b37-4c64-b70a-1ff9bc6f3da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccca85e6-982e-4f36-8437-e0aaa6ca6e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19406aae-1ac4-454f-9918-dd4b862122c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53f69dea-7487-4534-a54c-7e34d03e9e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f80905-1e56-4da8-808e-ffbf56c1530a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984ff234-72f4-49cd-a0d4-aae62041a49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66c89e1-bb7f-4f78-b796-cd3d9638f896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1edc52-a59e-4f70-96bc-40ab6ba7b847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8772de97-2696-47bc-9387-0ae999de7948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284ecfd1-f4a4-4256-b171-9eabef19c9fa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c83c9cf-23b1-47d4-98bb-ce798f903f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92b6b21-81fb-46d2-b4e1-3e9d703e17ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96be5534-bd43-4279-a2ec-e61c22166e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a1a6c9-8408-42d5-9813-1eb0c39c88af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052a8f36-10bc-41e4-ab1e-14a12a6e880c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b2866e-5aa6-471e-b4ce-99fe1f8cedf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9048a0-be9b-415d-90f6-e584d060d2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce026877-6bb6-4211-a5ef-76ba12a131de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a30cd4-0d0d-4020-b728-a70800889108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e91c7b-ed22-40a2-8af7-a0b8168cd96d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32069fa8-23d2-4ffa-968d-b0611d929e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecbc42c-b30b-42d7-ae81-8259f2442e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f48e1b4-eddc-4364-8e7b-97e90c472878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "accd9f6c-48a4-4224-b89c-fcdf1d731db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaae7aea-7e34-4a37-925d-fe02d623ab67",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d769e928-3a45-481c-91f4-81df335ec6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd558ef-51de-4825-bdfd-ad12fd7f0461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cb26d2-e4ee-4fa9-a9ee-7a662867f8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1767edf3-6e65-445d-b507-00ffd6fa4ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc3919e-fac5-401f-a3ec-a73ae5c64bf6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c565c1da-c8d1-4307-8cdb-1c2c95effcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ad1e87-32ce-4375-b494-8217c455b6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740d262b-9dda-413d-a063-67545dd94fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f2383a-44ca-4dae-8489-d238de306af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3c50c9-fc1e-41af-b966-38784544b4ec",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f033cdad-5e03-4e17-bf11-ca68dffa1d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819f2413-610f-41be-af95-0bb48f5f51e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8927fa7-91d5-48ac-919c-cc708d3bb064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a67fcd56-c2bd-4dee-93a8-d63894887168"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d90730eb-2422-4135-84ae-4f478d4a4ac5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08724f32-ed84-42d7-8fde-f405aa6f05c7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb8d33b-dc9e-406f-81ab-bb2c3178c0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d104ea1-625d-45ae-8312-03a179a98b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee9ea01-d249-457a-9d61-b0242a793ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78c2cacf-fe4d-4de7-92d3-d8b5c530fbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0901a3-d271-4ff7-8fb6-be0dbe2c5714",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fd2f10-2bbc-42f6-a68a-810b113c59b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "fe008d82-bd93-44c0-a712-498bf408fd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6198edcb-db8c-405b-a424-a2bc1c6ea162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25de3a80-73c8-4fa1-b815-cbb91fbed6d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78a5a899-35c7-4ed5-8435-4db02fc4b187",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c3d26da-2cfa-4483-8f56-bcd298c5ba13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1433d24-bcbc-4a3b-a3ee-27d96e84d331",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f004ab09-3b70-40d6-bddc-604cf25ed76d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3713a9c-fa50-434a-b42b-6070e0dfe1ac",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a5a926d8-1bc4-4e22-90b2-ddffdab64d09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06c0f30d-3982-4148-8b17-46692529e469",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de32746e-a00d-4ce0-9b72-248424b6efa8"
            }
          }
        ]
      },
      {
        "id": "c0a3f31f-be73-40b4-9409-db51f2b7b1c4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "37a13831-600e-4f2f-9d56-00cebdacdbcb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f25bc9f-cc04-4767-9a95-2ee73da27ec0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c7da26a-53aa-436a-bbbf-585f26bcc55d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33849d4d-e609-4bba-8eb7-8be86592bbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f237272-8e41-44ff-b8c3-cd8d1fd293d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd6371d-7edc-4d1f-8599-7a62fbeef887",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5692988f-04a5-44a8-a67d-ecebb713057b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd0b584-10da-493b-961c-dd7521fd8f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c0d4ec-66bc-43f5-8b2d-50a32fc0a444",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ae540e-ca40-464d-88b0-35011bf0105a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b214d6-69b9-441f-8360-b7f3316c465f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c88ff3-0949-44ac-9003-76e2a8f290ca",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89d736d-f093-4ede-b136-20d7de2728ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70de8131-c38b-41d5-b9e5-e0d2b5cb03d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e40c4c0-f8b4-445f-bfb6-aee04624a909",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56498ac2-1241-4321-af54-2bc444d6d6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce255be-f4ec-4bd8-8885-a814e4f93ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ade5e3f-35a4-431d-8879-fea273c0e5b2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229315c9-83c4-4668-aab0-bda93b904768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186b972a-f64f-4a12-ac29-1c5b10df9161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2259e905-4b60-45d7-b8b2-3b950b5e6e75",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0bbce0-32a8-44df-b40d-1f4fa81a4ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ee0906-f64a-4d59-98e0-5ec89916418b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7d46a6-e0d8-4429-934c-6d7f0c5afa63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f704c1-f481-4a2c-bf39-d2bc89981705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c4f796-3a34-4f12-b4d5-f4d25c4f8e57",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7275d81a-ebe0-4e8e-824a-9bb1d2aac8a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d52125-26f7-4875-8d08-44ddedb416c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48efa4d-b63c-44e2-a54e-2cc09f3e5de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20916778-1259-40b5-a9e3-13fb8acf846f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b98ba5-e4f0-4f25-a373-90eb0f8b5709",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a98e351-5f60-4964-83e2-35806c29d069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bbe7a06-5987-43c0-b33b-cfc19f402c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fb582e-5991-41f1-96af-42321abfb530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d3c9a0-fbcd-4887-ae78-883c2eb94c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a546c74d-6442-486a-afdc-de2f1d1a0c76",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9431d1a9-7d0b-484e-98f5-f90dfa8fad3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced5a2d0-c534-4192-94ec-225460fef8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5a4ca9-709f-4bcb-a7fc-629092b3eced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249a968b-79f1-4fa4-b904-8868917ba37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347c1275-cc5a-49fb-aed1-7af10e2893eb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9ca01d-7e56-4508-a815-e53ab0b4c220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bff422-b847-410a-8691-1029cdbcbccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de9315d-6f9d-437d-8b43-46c6939df62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ce9a2e-e8fe-4935-a67a-e975f0e184f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cdc227-fb31-49e5-8137-1c7cb51392f3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2430b3-2de7-44ab-ac9b-7f7533b729e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fcbdce-2c95-45d5-81a9-8ce96932ce41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae13865-aa77-4700-a0db-0213927eabbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f306a43-4f2a-4acf-bcae-5a5283dddd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e7dcde-54e6-40cf-8b00-e484c3b306f8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae36a2bc-33ba-4dc0-9459-9c8a8a6652cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b168203-7806-4d7d-b239-d9a654466cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315d3b00-5b2d-4f19-b160-4fd184166ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2df43d0-77a7-4885-9b27-a8f952089ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b0bec0-3e30-480b-93c1-efddc912cca6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e92db1f-a83f-44ac-8224-6222c10ffa22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fa3480e-88b0-4b36-9719-112f9141c36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c007e16-f884-488b-b995-e46be44aa2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a6be2e-5482-4f71-9b93-10e9aed47f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535b865e-6d2e-4e62-ac22-6ed79aa799c2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c7e069-bba7-45cb-b5d2-457cbdb101eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96c0cb1-5d4b-46e6-9a42-e0b7394de896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28222eb-8505-4fb6-9a47-813f619e5dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4aadba-985a-45e5-958a-762bc50a801e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fb5e20-c507-4043-a170-41e7ba033aeb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb33f0e-8927-49e8-b286-6b3a23a722c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa15f1b-8ba0-47fc-828a-66100e8dda75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90af819b-5375-4729-8b61-ee8d66e4728c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f69f9c7-6c41-43e8-8f27-d0463ca795a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c024174-d3c5-4477-a394-d45396517ffd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f119b4-dd0e-406f-86c2-9fdf0dba4f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a853cfe5-16c9-419a-b1c0-450dd1fce748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a020d7c2-7f54-4352-821c-2653f36ef925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eeabc21-975a-4b2b-a399-a4a64d93ece5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb2f040-26cd-4700-9956-c9eb4e0f8cde",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c454a3-64ed-4577-a15d-2dd274e962a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21970a0-6c1a-43b6-a6bd-93f927de3bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857f65e2-5bbe-4120-bdae-f0d2eb7ea796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2ef461-dc2b-44fb-9555-9c8959ff3dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d51ae0-b610-47ef-934d-8a77d5bb2ae8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbca23b-5dd4-4459-a147-d1f1acbf6ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffdaf86-1ced-496a-9f98-c236efea4b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6337c40b-7569-41f3-9cc0-e3c83483afe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921894f5-322d-4d87-b987-2d298857e18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cd7bee-900c-49a8-aaf1-64fd2cc18086",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eee5559-ae5c-4ee6-ac80-51eb8b012a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5074700a-c2b4-4846-b3a5-29c1cba595d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084439c1-ae3c-4ad2-9d00-9ec06f36f9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3546bcef-697c-4ccc-be1f-6d611914478d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b397b39e-7863-432d-9aab-a1dfdef174b5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60791ef-28e5-4954-b815-ad5d60c2f941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e80764-0444-4036-9b45-382de2738323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b24cf6-f06b-4f68-b7be-99dbff8b7b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2256f899-a62b-4e64-8556-cf3ba295eb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f07a8c9-6ba5-4701-bcf1-9b42801e7ea4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56344a2-cc59-4642-b6f1-17e2195aefc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf665e8-3476-44ec-9e2a-34cdb707a4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b2de79-f502-4859-be97-fc4f86679283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee15ad8-fbb1-4fe3-85ce-72956b4784aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008028c7-5131-4c5c-97dd-b40801b1c910",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852d6420-f8b7-494c-8cd2-2f0cf5e4812a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab662114-b430-4e23-86da-3a7fb1e442f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19890ac7-5f49-48cf-9635-bd7ab47aaefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bcfadb-39a4-4ee5-aeb4-44b4fc7b2d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4224553-1e86-4bc4-8df8-8584c933cd9c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b43637-c5d6-4f33-9b4c-a3e01dab91f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdff289-098b-4ecc-97ec-62cfb4633456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4277b03b-3f8e-4155-bbfe-e59f37a3b6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4eb188-4dc0-4421-82b2-1e7d50fb1f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84a56cf-93e7-4018-b1f0-5953a3a4819a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43072b2c-3ef2-4973-9c35-3470055f7228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deae8633-f7f0-4087-9400-f0143176acb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b59f19-b260-4aaa-ab88-facfa2f9afc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cf8b39-4441-4f07-9d53-05665d24125c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560ea925-4e30-4d14-bf3f-28f4f6d45ecf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf5a2ad-2502-4868-9d7b-2da40a0bea51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fafdb878-b900-47fb-8f88-c53d1ac9d238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aadddae-9a4b-4310-9971-d78aab479219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b447143-7ed3-45b0-9d8d-1b9a1282a181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929025a4-bb56-416f-a865-07d9996023b0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955d1439-42d3-4d6a-a126-8b7bde559183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db014263-3aa7-49b4-8a94-0c494d8ca71b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae30cb2-5d27-45a1-a5d8-86c52e9d4bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab70ce5a-dadd-45ec-bd6e-38e6a80c57cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b0de61-f51c-4f26-a526-9517ea013bc5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1268c0a8-fb8a-4f06-a2f3-c5bdbc52623f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3290a3b-e57d-4ed1-85c9-88bc391ef6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac164997-a7ee-41e5-a468-a72f0e2b7dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb46340-a4ce-4870-9013-e2bb96a3d48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cd2218-13e0-4dce-b168-1d26cb304e2e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054e8e68-f6e3-4141-9311-c8abd1e92780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0020412e-2e92-4c2f-852a-b58f62530ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32f83be-b0b2-40ca-b673-539dacac9a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953d3d20-f985-4da5-b358-403ed4091e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb14629-89bb-4df7-80b8-594b9fccbc2c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2537870-fd43-481f-b181-2d7cdfdb86a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d41efb6-0fe0-49db-b7a2-ee114eafa686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09b5a44-d707-40c9-a20d-352b485152d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d87097-e5d8-4cf7-95a3-c80629ad5668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d65707-f4a9-48bc-9044-8f8c1200cc6e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c3c28b-36b1-499e-ad70-c96f22703e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c49d80-f8e4-41fe-8ea3-f8343da3846e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c657e6-6ee0-45d7-812a-a1cc7c04303e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3520bd61-8100-4246-96b3-959be899963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b94d302-1d7d-4d12-9d1c-d49b18d9ff6c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d3f8ba-a14a-472c-9f46-c20e48b7ccad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a716c1-9489-4cfc-9ab8-75b29f147faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf0f6cd-7f95-4ae4-af07-bb33168cfaad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0af4ab9-98cc-4436-9e5c-7e272e3721e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908527f1-1e65-4372-8f18-c126da9a7601",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cca98c-bc49-4c72-8066-11818e977ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c9e7bac-0bdd-4568-9217-cc0074bb3648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2b3d09-f6c7-4a13-bca7-81955acb92e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89db622b-a3b3-4417-8a78-babe26ad55a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fae814-ce48-4043-9c07-841d8802cba6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641094bf-08c2-4e32-b6a6-5329fb14d3cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf51c376-1db4-445a-8753-10092a2a1d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051bd78a-b062-4acc-8207-371b2b69816a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb744bc-1e1b-4820-9429-0fb6e73596cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6976b4d0-c4e5-4093-b0c3-89559571cfee",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1209427a-3fe1-4e37-ac27-b5d728eb463d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96790abc-b373-4725-bd36-b89061d1f8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee74d4d4-6fa7-4f03-8e37-55bffdddb5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67175b09-fa3f-40db-8b07-91e4b1f9d1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066af5a9-427f-4283-bf78-67a9a3ceb6d9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967b1fc6-dc88-49da-b6c3-94db17f2f3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c18ca3-7a62-4781-9328-f64865f4ba5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db378b41-be85-4bc1-a098-5a40eb8977d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e19fbc4-18cb-4556-8784-1cf4bc256e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ca34f1-3868-4a05-810e-c42090a28e59",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26905f56-edf5-44bd-8164-1181358f06c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3fb77e-685d-4467-8315-a5f0c29c01e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fedd177-9628-4f32-b1f8-3da1b1f5063f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e363e5-5e5e-429f-b036-e240f2fecd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c0cef6-6e2f-4f27-b942-b19e17794690",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db5a4da-ab2a-4c78-98fc-dc34458d9d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a53fbc9-77e1-4fa8-8679-63a075ab5e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0629c114-5eb5-4014-b41a-f6c9291ec339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ece2186-278c-433f-b42f-f518ddada9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d552cc8-2114-46ea-90b8-a38f63eb3990",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1d9aee-b5ed-4088-b42e-d219fa376033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a55eea-c260-4bf8-bc2e-e2451b8797ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d2c10a-5fe8-4d9c-a7ec-123ba75fbc37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1aba3f-a9bc-4b7e-a639-d62b5b892ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47e44f8-fa8b-4841-93c6-6667e49e3f63",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aec17db-0b80-45e5-90c0-025d9a369fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2cd19c-f528-4477-98e9-fc5fccff6d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7a1295-2aca-4cf1-b2ae-4ea9267265bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c0739d-0a6c-459c-b187-86c5ebb9a11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a515b6-0d28-40c1-a811-0f4d58a51084",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7edf39-9a56-4c16-8224-58bf4367600d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845068e1-0023-4e10-a31b-07a6cea4b598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8c1863-7a28-4d05-bace-4e23212a01b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6909d959-2b1a-4fcc-ac5a-6f075ba76bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb67788-a10f-4e23-a721-c589aaebdf08",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a339d38d-7fbc-4357-b952-2b160ce7ade8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e234d906-6388-40e4-8869-f0003a8eae60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53341af1-e0c7-464d-ae41-8894346cbd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e1d8cf-9699-4167-a8d7-a6580f1abee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06a8bd8-b957-4070-bf50-bd979853669f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9a8469-26d7-4f16-bd9b-6d9ea1677c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25963f99-d00f-4739-b9a4-c02e423af24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba2ba51-7f68-43b7-b1b4-928ddc5e308e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b4e9ed-d8cc-4827-9760-5980ad55f486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd5d736-ce8b-4dba-a0ca-0cdff414ee18",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058010eb-abf7-4939-bb18-34bb1bbb8964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d942c27-afa6-413c-88fe-3f00c2700f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0809e371-fdce-4b47-9ff5-eeb7619f35a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be17a5ca-7efd-4d8f-9b20-264696f8c94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39c68f4-f2ef-48fd-a9b5-350274ee2d7f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d743da-7705-4a01-afd7-dd2637c8238e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f845599-058e-4516-ac67-2463a0e3f783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bead9a62-4305-4a46-bfdd-959655861eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17d7689-dd6e-4214-b73b-d40dab3f10ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f38390-4405-4624-a19c-56194c39ad68",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506930dc-2e06-485b-8ba8-712975f523b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4def8922-9405-49b7-8007-1a09704411fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc218033-ee45-44b0-807a-71c892256386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1365e6-82b5-46ee-933b-1288670e62cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5f1a2d-45da-4f53-9299-fcbcc5f149c0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd1c3e7-036e-4a32-8338-5faea08fd407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4c1037-5b84-4a84-8702-07ab02614c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995d8680-dd19-41c1-a177-0a6bcf72359e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d82f2d8-3249-4caf-878a-ae3ebe7073bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc6a3d6-f15c-4cf5-86eb-d00c50ba8548",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f96b59-e410-42e3-9f07-076ac18044e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f32b2f-268f-4f74-a864-425783743019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5fe8a9-085e-44e6-a8b3-66c1f3b413e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656a55b0-4773-4088-bf39-9eadcb123a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250d9669-e758-4fb8-b731-b299da0ce283",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8822f9ef-7fe6-4c62-a8ce-eb4c384a549c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b1b087-4331-4fda-9c1d-1864e709939a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03935dab-a8d2-4131-8aa8-1afc928c7ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49daa129-86fd-476d-9f87-9bdb162de313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d18c3c3-e53e-48a0-9e79-106c70bd9adc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb09d3a-73d0-4320-9085-5aa5d8d4bfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff014c5c-10cb-40d0-949e-8e1e96465850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085df493-6bea-446c-b51e-bbe98fa65a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca87989-1411-4884-835d-fde8031ea63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf120f9-0ade-4475-9531-e7970cee5786",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500de127-bd52-4913-9d13-5387bf9115c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec4e925-b6f8-492f-bd82-0324479c2b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15babe92-51c1-447c-807d-fd72b27f9309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068b1b17-4f4d-41c1-858d-a766edca2248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cacb755-54f7-4aa2-8bd7-eed7b34f4b1b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d26f4e-3ef0-428f-8cf0-1cdc75aa0ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cfe4d4-2ce3-41cd-8466-d97f33c8500f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53499071-5ab5-4881-b2dc-bffd762c33fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50159c72-a047-4157-8094-74c503171a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b628b9-1d88-44e4-9712-9a3a2665a9cc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad78e5c-39a4-4f28-9a68-dae7383343a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f65ca5-4ced-47f1-a6ea-76f13b85cec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5e0603-ed45-43bb-ba53-030fe4bc3dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1cc605-0c68-4790-9eae-92562b2caee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62550772-b065-4590-bd92-63e1ffc8c4bc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1842af-eb0a-445f-9c9e-b1ea3f5d2ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0673d0ec-e1ea-4fbc-a836-4ff60865c062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154171bb-8028-4612-ae79-dc818ec890c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf05f2e3-e266-4dcc-959e-916e42cbebd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35f8fe5-be18-447c-9af3-838bba9feee0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51b9d57-ff70-4af3-944a-081212577065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a50ac87-5f7b-4a38-ba3d-a25e34c2c516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ad2f24-3fde-4b8e-b06c-3f54d191f170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e6b7f7-9e86-45f9-8d5d-546ba2041aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9744524e-7a7a-4cbf-871d-7141dba6826c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47a5762-6575-451c-b4e0-1519574a13ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e823674c-d370-4f2a-af17-cfe4f48705a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb2be06-ee0c-415f-904a-b0122660253d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d51fd85-1490-4808-baa5-1914e47112e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b5f51f-c96c-40d8-b98f-730307908320",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9970f622-5999-42f5-8285-8dd10387a538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba6275b-f7b5-474c-b3ca-4e8b366fe0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7181526-5e2e-4ccd-adc2-674328242852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5511e9d5-7376-468b-a65b-17ba50747505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e3185f-be45-43f8-9136-cd438a0d62de",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec4af97-49d7-4c22-9a48-cba47415aec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f103f3f2-a51a-4f6e-b2bb-d47d1c88d9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245062bd-cbef-4af1-a420-f3e4c22bb1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba81819-c8d9-4fed-a373-8a6422b90775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8e3774-6425-43f9-a27c-561653aa60fb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85f1736-756d-44dc-97e2-63b83eb23653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdf3ee8-92fd-4867-8a31-3436f54f3828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e380175-f3a9-4723-88ac-6320b6114b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e93c1a9-6f2f-4067-8e78-f1648343dddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328bef70-f56d-4f9c-9667-584acba96251",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395803c0-d25e-4c2e-bcbf-0c2581d41a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed48478c-8724-431d-affb-7c34c9c75555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8635dd76-f580-4c52-bb0b-f5d6e809f6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbe4a32-d648-42a3-9a4c-6c1b1fb6795f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe95fad-2dba-4054-b077-748a4a2ac52f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85531713-07f6-4ab9-8159-cf250a880050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e088ea4-5d4b-4cb1-8c50-779e89942ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ef749e-c829-44bc-aa79-616f6d8fa31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ff954a-8485-4a79-9e75-15f622aabfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13883600-d573-46d6-ad0b-1d2025190e7e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8704efa9-54f0-4d33-97e9-2cc73c999fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870d9e01-92d8-4e44-b693-9876b75bb92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5947fd04-c93b-42e3-9e9c-09d86372b2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25081032-98f1-47e6-aa2c-6e1b36a03c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2991f62-ac5a-4828-b442-d7ad885c004a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efba464-6167-4b0e-a647-2ba785376991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3200ec-fcc3-43bb-a56b-4ba8d7abf20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a887ba3-7e36-43be-9e12-b646d7aecf8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7642effd-3720-4789-9f0d-1803bd399538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e63781-0058-4c21-a200-d6c6a55d550a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac56d3e6-f3c5-4588-a237-66ebc3b01adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a5f1b8-fac3-4f01-b752-85a0da23af40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00509a6-7dfc-48c9-86b8-ed666c1dad6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9174d44f-a247-4e41-86b7-ebab7047b6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4140088d-d94b-4fb0-bf74-f02d088e4aaa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f74e577-1730-47b7-96fe-8248aa86ec77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07f07b3-7b4a-4dd1-9a8e-18fb0036c109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583a6a34-4b76-4276-a66e-325ceb5ac554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04dc816e-2e2c-4ba7-be4d-23a54c90b5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a3d1c5-027d-495f-8081-46d6393a66c3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3619f0d-59aa-42a0-ab14-7c74e7bd83a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f896a0-31f3-4bb7-96cb-cd6c08d43907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de01d06a-13d6-4d5c-ae1c-e87edbcd6763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe7d20e-6d99-4ed5-a526-f468cc8f1bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccfa238-1472-47ad-8521-6be34e24dfcb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ad3aa5-36dd-49de-a280-882e8b6a5876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5220ebc4-35c3-497b-89bb-f44b4637725e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9d7f62-837c-41bd-a75d-cafe6d4756dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba672f4-d82b-46c0-bad2-81b40080c090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc43a49-cb99-49e3-8553-46680c84f91e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5683378c-a7b9-4312-a146-8114e955464a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b6d895-cf79-4c82-b70c-435552dba549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22039570-0c61-48ea-a2f0-5606e6a2a2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a3286c-f0b3-45c0-9931-457f7f659cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2929b54b-c8c8-4350-afe1-dc6101ffd507",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40ea74d-1e83-4c34-9a64-8b2a3cba9895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1fa396f-734e-4138-ab5b-8850afbfbb2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cca56e4-6d11-4ce2-9b6d-93ef31fdf24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8276bf-b9e1-41dd-ac5f-f98172e8043f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c70389-1ab3-41e8-99e5-d12999569247",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9604e9-d3e1-4568-ab58-ff05b1bb989f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71b04c1-c0cb-4837-bb76-80dcd22c2c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c85510-fcae-4f8c-8fcb-74e8e351df78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50372985-60bb-4a3c-91a7-4390240ab906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61f66d5-d4be-4b03-88ed-ff742cc82bfe",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07a9d1f-4953-4a54-8a99-d8493399dfb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b79f77-bbac-4982-9365-1f3d8d0b1f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7604ba68-baa9-4b20-a5ce-b065e300e70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900047ca-fbb6-42e4-b90d-1f1ec228b744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4f3a1b-23c9-45c7-8958-8c1241bb03ed",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a5706e-1988-499e-b22b-31f0b041f680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b068d60-869b-4374-aca6-67099b01093f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35f3061-e642-4a96-b35e-50a309e715ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9237d570-bd1e-4717-aae2-c9e556537336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0d34e6-06ff-489d-b6a1-88506a67ce0a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f12381c-c577-460f-b243-d000eb6dd413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e7e41e-11b1-4b1e-9fa5-3e426f13fcc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905859e9-201a-42d7-b270-016f1996a963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fde751-815e-4a87-8e1b-032ef02b8892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12de65ac-0d43-449c-a575-963862b349d8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564e2aee-1c3f-45b5-a094-ef6738df0c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8158229-f731-4d07-a265-743ab5252e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db70b916-4427-4dde-bcc2-2fcdfc3f4f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45983884-7614-4e8e-83a7-85d11f392acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ef8555-ff82-4c74-9341-aa6da9138815",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43944afd-bbc3-4508-9e96-92d3a2372a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd3f94c-cf99-4b4f-a939-345f9176eac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207efd33-333f-438b-afc6-c9838cd3fc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fd7337-7a04-4844-9aec-b518cb234e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccfecac-52fc-42c0-be31-ebcd4bf54e3e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f60d50-6bd8-40ff-91db-fe5678ea81da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80faef1b-1cf6-4f8e-9d15-cfaacb2ae48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12a9511-d0cb-4280-a132-5267b2d488aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b6093d-8288-4f87-a7da-0e7220891b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2900d5-0f5a-4a0f-a66d-a808acdde94d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ccc141-a0e5-4a47-8c25-50fe278a5d3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c20d0cb-0779-4876-bf40-35f677ad7346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80eb601-d34a-452d-8041-b7389f7b5c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d1c5b4-2a89-4209-acd4-83b3b9eef781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf79d181-cd94-4439-85b0-d8f60f2f6f3b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ae15e3-7750-47a0-af76-ba2afb45837d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc362ebf-3369-4d03-8b90-d361adec92e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee350d3c-53eb-4153-902d-ae9900cd8c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092f8fd2-17a3-4ee1-bf9a-6c1e269e5c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd073ed-6093-488d-899c-84c75c5551c5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed40b16-4bfb-44b4-ac9e-3266059c873e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f7a855b-c455-4204-8cb9-21cf5a1c9d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7685f3-6451-4393-85a5-101e6f2c2638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bde6f77-2f1d-4b4c-9e03-72819a1e6783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc724ec-84f1-49e7-b757-425b2253fa1f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d38f2dd-fbba-462a-99dc-8d3ab1b20a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ff67ff8-dc5f-4b04-8c1d-86cb3ad8e641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e97ac0-c10c-43da-8b1e-45e2cbe19ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1373b5a-cd9a-4f5c-bf94-16a617d8b89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973fb47a-165b-41d7-b970-75c4fc33fac8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c514d5be-d7f8-4d2c-b4ce-efc641ae5851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b221d3-a4b7-4555-b865-63a809764998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c49b12-0480-436b-90b0-f31a254e6010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0853aee-d6d4-4bd9-b296-3ac2ef524148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1ff9ff-05a8-4431-b798-a2a29e4f6b67",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e24a908-5ae4-4bfc-a59b-379099cb7e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95534207-b449-4d0a-9ba8-1107cd8c9034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849f718d-11c6-4d20-aaf5-736d97110416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17157d2-1987-45cd-8b5b-045f4e7eeff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a5f7f4-b6b2-4963-be74-878954f9e32e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23d33a0-50f9-41e0-a855-9213b463f8c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb72ba72-563c-4510-b8ad-064b9ee882b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932b9772-9899-4513-a3c8-f3aad19d29f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfdf4b3-98ee-49fa-895a-094b4d5dcf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983f686b-a6e0-4471-a4af-d3f76fb564c7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801ec4ee-b3f9-4a3e-94c9-d070fc5c16e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1178a288-9caf-42a5-a14b-0eacc7475dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0bb9e0-0a74-4a89-8bba-1fb91b981d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3312c68f-e59f-4e0c-9ce5-9607542be856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfe7900-e26a-4102-83a9-cadc50ad5d57",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0171f195-63df-42c9-82ec-c7cb1be2865a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df15d3da-fd32-4601-9153-89579edb0790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80019f27-e87d-405c-986f-76a5b9e87370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869504f5-f579-4e68-8472-c17656a65994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc86a70-a76e-4911-88e4-363d313ddf3c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984b6dc3-4eb5-4942-af80-08b01b6bb2ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b64d0e80-9ef4-41fa-a245-a09ee63bb7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aba87b1-ace5-4c83-86ea-ddf684cf4648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc64fdb-7356-4394-95db-7af83d2687ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da11a80-e3a2-45e5-a486-ec64cb77e14e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691de35e-de0c-4f98-af91-6eec18417ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50131301-e4fb-458d-b20e-4f6b0881c53a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa6af67-0775-44d1-862f-a86925710b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4451d57e-29ea-457d-8734-8cfa003f3fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e283187-b5d1-47a7-916a-95135126df34",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368f7e9f-1edb-452b-8c53-4ece183ccca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58241b48-795a-444a-a0ec-33916d43e3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19638c0d-9267-476e-b7c7-53afe0738423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d1a38b-d718-43f6-96d1-52dadb09cdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002484f2-16e1-4555-9926-1eae68c10796",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ee9e14-ffc2-4bef-a978-fe1636151ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52cce14-6787-4aff-9103-317426c6aa61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52189ff0-25dd-4cdb-a7da-d669d92ee3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cd05b9-95f9-4f83-844d-de1874ab13a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdb36bd-5801-4aa1-a792-6d43f4b53e56",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0429a6ab-85af-4444-b7e9-72d2b958c8b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b90494c-4106-427d-85f9-a4cf9c5cbc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ad0826-7d90-4d83-bcc6-ddb4bb867943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20db577-72d4-4fdb-9c14-d714eb426bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5531b8be-3a61-45b4-84c0-6e0d90cbb3bf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcac387-0789-403b-99f0-5e79d3b7f35a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7fde51a-2eef-4322-98f5-6d9ae1d55033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb5a91a-9055-4a14-910d-df973a6937f1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39de97fa-2109-4deb-bca3-bf5731ac8e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3810c286-cd81-40ce-bb19-f529e4dfd6af",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991e7146-c273-4a0e-8c5f-a9634442e99e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b65dcea0-b0fe-4da9-a3c1-8927fb517429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4f8fbc-c24d-4857-a3f3-585e864a9926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457edab0-fb5f-4942-887d-49ab29b84462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4bc3ee-a917-46a2-9400-378d64e66481",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a003344-7086-4dcc-a213-29f8949a55a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35c8cc35-969c-46d0-99d4-1431372845db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154a0682-c37c-4b14-90d9-1c459c4668dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ef4d3d-583d-4874-a7af-6fb41fdddeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0b38f4-4510-4e07-907a-e4112c1eb7fb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a7ae4d-8ca6-4f0d-8956-32f3977806f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e19d1be-aeac-40ae-b7bf-a52f96a9ddbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c762b0-88a9-417a-8b55-b416467e82ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dbd2b0-13b0-4057-9243-4de9f65806a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadd30af-6572-4e8f-bf1b-3fa575482cdb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986cf1c3-e1be-4d73-9f34-33cfa2904ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ce992e-afaa-424e-b8c4-c790b89bcfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2436879-6aae-4d5e-bf3f-e66393ff6b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2042ef-1758-4a55-ac8c-85472eedd90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f731feaf-9b56-42e3-b3a7-db2396a691e1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4808a252-0e92-4204-9501-8b1d3ed27eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3fc9d3-8839-491b-90c2-c31fc5d9950c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271aed03-e42d-45d5-a84d-7871445c95f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5944155-332c-4876-8752-f5d53c1d3ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c35a7d-6b28-4028-b4b3-dc5e242d1f8f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18bcac0-f94e-47a3-9c49-912693116919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5895d7-5ba6-4ae3-adad-2c23a4e2e866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98ac762-1446-4f79-9040-18fd2733317a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55999e78-b4dd-4c56-92a4-fdfdd249c931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedf4099-1300-4454-9e0c-1bb79a187346",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7398c1-d6fe-48cc-b1e5-f81f20431b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f305a777-29bf-46cb-b49b-084feb16e1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36a6f5f-389b-4fd2-9008-24db7ba76d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b48c78-8a79-4a1f-ac87-07a08ac10eee"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "585958dd-a104-417a-ae87-c0af5d250767",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35335a73-4634-49a9-9964-6684a02c0910"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8c53410-a54d-477d-b9c2-69a3fb2aab18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c09feb5c-fe39-45f4-bef0-492879509c02"
                    }
                  }
                ]
              },
              {
                "id": "f21ad2b3-6615-4199-8182-0f68249791dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a48b445a-8e51-4da0-b76f-8975583d5432",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e72e466-93ef-45dc-b02f-c03bcb36569d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5fb1e8e1-c1d9-43dc-b009-bbd035a9397b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8702350-fc4d-476d-8e41-62dd0bb39a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bbb7647-9066-4fee-b75b-5f67e8a4c829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0759bf-6801-4855-bf9e-f972cd943176",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8a489f-8845-4cde-89d2-a2db8dbdda86",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fd9371dc-c9a1-4a97-85a6-fd9019b0364e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7facf61d-5186-4147-9cc3-1501281458ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac82481b-d0fc-47c7-a5dd-05d518b8858a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a5e1fea-4210-48a3-bed1-c9b317968f4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd3629a2-05e3-40bc-b14c-6a659dc98abb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3154ea3-ecff-408c-b385-556f56649fab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49db6cc0-a4a7-4f3c-92a3-53b4cdf2fa4d"
                    }
                  }
                ]
              },
              {
                "id": "5eb1ca84-dbc6-45fe-8010-3e302c90d6ec",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7a1361ca-d9b1-4ee1-ac94-a647e36971f4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3517c0-9020-483b-bc4a-bce4e8ac2596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fa9470a8-1eaf-4b00-ad58-5fecae044b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79e2904-8692-45fa-a0e0-c36e5cc53a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a976ce8-a64c-4fa0-85fd-22bd4219db4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f7422158-00b4-45f4-9a15-9c947c4f001d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca8bbd91-6a0c-46d5-80c4-62f6513d6b4d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfb16c5b-88f7-4d40-8255-ada8ff6e377d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dade4fef-cbb6-4dce-9e8a-19c24170f531"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24017738-f4e1-41be-b50d-428dc322b9d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a289c26d-3324-4ab6-951c-3f09ef7cd018"
                    }
                  }
                ]
              },
              {
                "id": "a3f1f2ee-d4a7-4436-8368-216718e5dabc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5e59a50-dd63-49c2-a96a-5187138e58ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a29be272-a085-4f98-b61a-149a69e68e4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40c201fc-9601-4d31-8830-48e58e3e7b25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c71f572a-e480-48bd-91fe-aba0bc5c8fe7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3a748e6-4524-4d01-b90e-a1ca0370fc05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f8b70143-3c33-4008-866e-49f0dfd37ba9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7d96434-8381-4331-b74a-a1dcbd6913cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7626e1be-a905-4f31-b1aa-69ac32a3e423"
            }
          }
        ]
      },
      {
        "id": "87b8ffda-87f1-4eeb-948c-85a6b86b1d25",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4d80d629-9f0f-478d-90da-4c381a0912c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b061942f-eb6f-43b4-a9d8-ac37a89f7dcd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dd522e6-36a6-4b9f-a00e-4b6e0f7263f6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5b0011-1d52-48f4-a5ba-1284e735e7ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "79c2c10d-178d-41bf-bc22-c7390488524a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6a93b5-ea11-4eaf-aaf5-534e574c54b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2edcc52-4a86-4db4-9ba8-69de6b4cdc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a669063-f0e6-4067-925e-80802204f797",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd2674e-c697-4507-8687-7b045095e6de",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2a21b520-4dcd-4e45-a933-7316226ee6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d1abc3-e165-433a-bda2-db477b794cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b0feb72-b3fb-4c6d-90b3-e5eb15ff93fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56a1d045-54a3-45cc-84c8-891e96aa8ef2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b34eef14-6664-47bc-a8ff-330ba59ceebc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13eadd52-6216-410d-a123-4999a13007e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d671aaa-dc44-44d8-afb2-03610672ac5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c53cff5-c484-4270-8992-c3cbabbb64c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "baf8f282-8334-4a46-b39d-460ca0ab3d59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07d41eba-d004-49eb-879b-b4bc55cdf366",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38300af8-7d63-4956-a73b-14a9f2bfbc9d"
            }
          }
        ]
      },
      {
        "id": "45a3b791-541a-45b9-864f-d097df333909",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "92e2b577-5f6e-4d54-8dfc-dd427392db83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4888cff1-9165-40a3-bf14-65e7f9332c0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03a614eb-91f5-4c7f-80ca-052a543fb75f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5a5ebb-3c61-4b4d-a603-c31848268311",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ede2cdb7-6c2f-4106-9bd3-72f9402de713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f736ee60-a4fa-4594-ba2d-2511f58d8591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fc7df61-aa2e-4ad3-8d12-1f472d0c5c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207a593f-b77d-4f55-878c-d797f8db6aa9",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e49a068-055a-47ca-a69f-66a0899b41d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f876c574-6dea-4520-80f3-ccd784ec2cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdd004f-ab4e-4fd3-abd1-e3fda3544952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cbfa1dc-8c67-43b0-a958-cf0a4aea80b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a489058-eaaa-47ef-a520-87c0cbc76114",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e92fbba2-9f9a-4e40-9fdb-e9b5ebff20ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9506b7d-31d7-4db4-91d5-5625c3ab4ef1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3d308f6-4d3a-483e-9ff3-d078e25efa6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1dbf5d49-cfc1-4b99-8270-d07bbac20e5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "63637f36-1d41-489a-8ea3-a3a0f90a1717"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13dda25a-f706-4e1b-b5c6-304f8fe533e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc2f9807-a1ab-4844-a251-02586fae9ca3"
            }
          }
        ]
      },
      {
        "id": "c2c8dac8-08b7-4d77-95ef-5b1be1b2bb2d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "851ec5ea-1fea-4467-ab80-7a8946112c2c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87b46301-8cd5-45f7-8cdb-b3edd71ea8ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2294ecdb-7afc-4ef1-bd51-ddc889121208",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37997154-f1e1-4cb0-b75d-db7579764156",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "210cf968-d3d2-4966-a6d1-75979acddca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08d38db-fb84-40e8-a09b-4d5699798864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b751e0db-5178-46f4-8256-60fb759fb2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22924ee8-fdb5-4818-aac7-88e5d6fbab85",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55b842b-d61e-46c4-815b-4d796b9fa447",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "359d52cc-c1a7-497e-bc6a-3f2fa8ca6ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f53c86-44e2-4421-a395-c231cb76df48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a25a1bc-6fd8-406b-91bf-db08bde81ae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c25ae00-9824-46f1-83a7-1e7f21c1eea7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43f64fc2-34cb-4258-bbc4-f56412b8f6a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cd154be-ebee-46ca-b496-3890abb2a900",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3eccacd-0335-43ae-98c9-da5e390a7aed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd7a895e-8feb-4fa9-8813-18a74362d25b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d4d27bc5-7976-4892-840c-beab154b96da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48072260-b591-4e12-91d3-0196d9c4b443",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a3a6185-73ed-489f-9ac2-e78d167f8b76"
            }
          }
        ]
      },
      {
        "id": "05aaac19-064d-42c6-85d6-82e3b7f301b4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7d37700-3135-4c5a-936a-87a829e05c53",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18964187-c687-44be-887b-3ced8850cdfa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f5c75ef2-587e-44ff-a8f4-d1ef43db73f2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4adbde26-4b77-4bf6-8f58-2cf1dffd52ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9607b836-b5ce-4006-aa2d-7e27b315bd03",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 559.2977099236646,
      "responseMin": 14,
      "responseMax": 7971,
      "responseSd": 734.3064983412623,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675212305733,
      "completed": 1675212462887
    },
    "executions": [
      {
        "id": "032ec474-6cf3-4f45-843a-328d86236c43",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7094933f-a0e9-49e5-bfa4-c6d80db20616",
          "httpRequestId": "92165131-b855-4582-8126-e387d6294d6f"
        },
        "item": {
          "id": "032ec474-6cf3-4f45-843a-328d86236c43",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7dc0b4e8-3483-4116-915d-6e5fc48db0d4",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 0
        }
      },
      {
        "id": "35adf662-aef5-4d12-b276-aaf467c4d71d",
        "cursor": {
          "ref": "f02f3198-8dbe-4e5b-a7b9-1aadf0fc81be",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d63cdebb-49b0-437d-9772-51351a34d35a"
        },
        "item": {
          "id": "35adf662-aef5-4d12-b276-aaf467c4d71d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b4aafe69-6e13-4840-a648-11a47d4f5034",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "88a44bd9-16d7-40ae-a283-6a04096b6f2b",
        "cursor": {
          "ref": "0b6ed461-dbec-40d7-b245-7db63f7a05ca",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c29dcd58-e1ce-411a-bae0-3a257366501e"
        },
        "item": {
          "id": "88a44bd9-16d7-40ae-a283-6a04096b6f2b",
          "name": "did_json"
        },
        "response": {
          "id": "cdc484a2-af40-4498-af12-8fd77299a6b3",
          "status": "OK",
          "code": 200,
          "responseTime": 1025,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359ae9d4-408c-4d8b-8588-5d09fdf1de95",
        "cursor": {
          "ref": "b4ae459c-8456-463f-94bc-2ea26847b04f",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bdac12d-6bb6-4265-9dc6-0caa16f3a834"
        },
        "item": {
          "id": "359ae9d4-408c-4d8b-8588-5d09fdf1de95",
          "name": "did:invalid"
        },
        "response": {
          "id": "1915f822-8705-4bd5-98f4-6af0956327fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1278,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359ae9d4-408c-4d8b-8588-5d09fdf1de95",
        "cursor": {
          "ref": "b4ae459c-8456-463f-94bc-2ea26847b04f",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bdac12d-6bb6-4265-9dc6-0caa16f3a834"
        },
        "item": {
          "id": "359ae9d4-408c-4d8b-8588-5d09fdf1de95",
          "name": "did:invalid"
        },
        "response": {
          "id": "1915f822-8705-4bd5-98f4-6af0956327fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1278,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de8ac6a-95ae-4137-a989-a400f41ef9ac",
        "cursor": {
          "ref": "c6518f3e-a4b8-49f6-b65a-3dc0a63527ad",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9fc4b0fd-2aa7-458d-8eaa-04007b779511"
        },
        "item": {
          "id": "9de8ac6a-95ae-4137-a989-a400f41ef9ac",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2fd91236-1026-4b38-9e3c-58fdcd0bed6b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 944,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5812b8-3a51-4651-81ee-6ab39ccc6693",
        "cursor": {
          "ref": "d38a8910-957c-427e-9b7d-4cb6a872123c",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f7bc0913-de89-4a11-9562-2967f5489cb4"
        },
        "item": {
          "id": "0d5812b8-3a51-4651-81ee-6ab39ccc6693",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0bd1ab4a-5eda-4508-90f8-417535820a97",
          "status": "Not Found",
          "code": 404,
          "responseTime": 749,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eb2c11-aff5-4885-a5f4-edad18155f21",
        "cursor": {
          "ref": "ee2d1403-27a0-441e-9c15-0ae267dd13d1",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d18a23fa-3b84-43ba-809b-04ebffcecba8"
        },
        "item": {
          "id": "f8eb2c11-aff5-4885-a5f4-edad18155f21",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b20d0ab5-c1b8-4a2d-9b1c-7fbe766de5e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f16750-5d30-4f53-a6bd-932925d477c4",
        "cursor": {
          "ref": "a7a06fbd-752e-4e61-8b5c-a3576067c3e3",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8a7f7d35-82c4-458b-bf7a-b7520a91607e"
        },
        "item": {
          "id": "e3f16750-5d30-4f53-a6bd-932925d477c4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0774f2cc-8587-42a0-b9c2-a07c5b181d54",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 837,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f16750-5d30-4f53-a6bd-932925d477c4",
        "cursor": {
          "ref": "a7a06fbd-752e-4e61-8b5c-a3576067c3e3",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8a7f7d35-82c4-458b-bf7a-b7520a91607e"
        },
        "item": {
          "id": "e3f16750-5d30-4f53-a6bd-932925d477c4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0774f2cc-8587-42a0-b9c2-a07c5b181d54",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 837,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebd7650-14ed-434a-bf9a-bb29c1dcd0ad",
        "cursor": {
          "ref": "aba35537-2406-463c-b541-b29f152f08f6",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "05be1989-1be8-4788-a6d9-2396a7952771"
        },
        "item": {
          "id": "5ebd7650-14ed-434a-bf9a-bb29c1dcd0ad",
          "name": "identifiers"
        },
        "response": {
          "id": "e20635dd-854e-4654-b94d-08e0480db787",
          "status": "OK",
          "code": 200,
          "responseTime": 1603,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70b5af4-da46-4bc3-9c2c-8befb94344ad",
        "cursor": {
          "ref": "4ea86dd4-bf8f-4690-b344-4326578427ff",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "18b7746f-278a-4a91-a52b-754847391342"
        },
        "item": {
          "id": "f70b5af4-da46-4bc3-9c2c-8befb94344ad",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a8442ec2-1dbe-4340-815c-f7a01fb4ddfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70b5af4-da46-4bc3-9c2c-8befb94344ad",
        "cursor": {
          "ref": "4ea86dd4-bf8f-4690-b344-4326578427ff",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "18b7746f-278a-4a91-a52b-754847391342"
        },
        "item": {
          "id": "f70b5af4-da46-4bc3-9c2c-8befb94344ad",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a8442ec2-1dbe-4340-815c-f7a01fb4ddfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bf20f5-0863-43c2-b851-c8c5d7f4e2ae",
        "cursor": {
          "ref": "fea583f0-702e-45b2-931d-33b0d963394c",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4871749b-8d35-4f11-8cea-892b1b64a693"
        },
        "item": {
          "id": "b2bf20f5-0863-43c2-b851-c8c5d7f4e2ae",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a0e29f35-9d35-4b48-ac42-b46851d30874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2329a6e-67f2-425d-b423-c42ed7a5ca33",
        "cursor": {
          "ref": "a62499b2-9770-4d76-af5d-b5208cd0c0d2",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4f751127-0c08-458c-9b9b-9e496745e344"
        },
        "item": {
          "id": "c2329a6e-67f2-425d-b423-c42ed7a5ca33",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "79eca90d-b991-4221-a9de-fc435b34c329",
          "status": "Created",
          "code": 201,
          "responseTime": 2643,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "a6a6a74d-ca5e-4e60-9326-e851f24e6988",
        "cursor": {
          "ref": "fb57c5bc-26e0-499f-8101-bb49df99f4ce",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "04515293-6cd4-4ec4-bb7a-b9b4daedef88"
        },
        "item": {
          "id": "a6a6a74d-ca5e-4e60-9326-e851f24e6988",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e20b22a3-cfe8-4d67-bb3e-287a17b86239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc9ac39-a37b-43d4-9890-a5287cc3f752",
        "cursor": {
          "ref": "c41ca4eb-5e5a-4a0b-826d-4d81a4e6346e",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "eb39ff74-58d2-4a33-8b53-c3b8a62b86c3"
        },
        "item": {
          "id": "fcc9ac39-a37b-43d4-9890-a5287cc3f752",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e3a2fa00-4b22-4b53-a831-55f83f4ff52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1105,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfaafc3c-de90-4270-bef0-793658d5296c",
        "cursor": {
          "ref": "1d48d854-17f4-4516-97fe-295c51b3e894",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "130b34ff-b8d1-41c6-923b-1f1856edaa23"
        },
        "item": {
          "id": "dfaafc3c-de90-4270-bef0-793658d5296c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fcba2760-4ff3-4b0f-9007-953202b971d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa23b7c-c95b-4866-84e2-53a2478196fb",
        "cursor": {
          "ref": "9ac15132-476e-4e07-9769-ec25e7afc89f",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a699e5b1-0430-45bf-9979-5f91e5912d4e"
        },
        "item": {
          "id": "daa23b7c-c95b-4866-84e2-53a2478196fb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "830fa0e8-4d81-4466-ba8c-c8e984377dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f0a8f3-daca-44d7-ab83-ad37430189d0",
        "cursor": {
          "ref": "071528d8-55b7-42eb-8eaf-a616f2016a92",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a09705fe-7f97-4132-a120-a2887bbf8edb"
        },
        "item": {
          "id": "a3f0a8f3-daca-44d7-ab83-ad37430189d0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "12bf3cc9-1486-4d65-8f94-4516bc181ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab940a3-360d-4420-86c2-586bb9453dc0",
        "cursor": {
          "ref": "ad4f6eab-d480-4213-833b-7f9f2da90c1a",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2eb16fd2-4c81-4e1d-ac6a-743575fe4112"
        },
        "item": {
          "id": "1ab940a3-360d-4420-86c2-586bb9453dc0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b9a4decb-bdea-4f5a-88a1-a946fba240b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be73d200-fc61-4f59-af2e-cdc511d22022",
        "cursor": {
          "ref": "5403432c-1e91-4132-bbea-48c86feb1149",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "429cd529-c04d-47c0-bcad-13e9260d2997"
        },
        "item": {
          "id": "be73d200-fc61-4f59-af2e-cdc511d22022",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ab81b4a2-36b3-42c0-9115-93c52c6b0bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddadd0f-1e4b-4ce8-8165-c2d5e3ab4229",
        "cursor": {
          "ref": "657f3589-d907-4d04-a441-4211dccf0a9a",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "68b9420a-ce5b-4d3b-b6da-7cb47da00d73"
        },
        "item": {
          "id": "cddadd0f-1e4b-4ce8-8165-c2d5e3ab4229",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0c701888-c8e7-49ee-90e4-72c2b51fb680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f3ede6-e681-4335-be24-91b2c58c8ba3",
        "cursor": {
          "ref": "dde6b2d5-6e54-46ad-b6ff-50304df422cf",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8e806efc-7cb8-42b6-a5e7-acc28643d69f"
        },
        "item": {
          "id": "43f3ede6-e681-4335-be24-91b2c58c8ba3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3ad6ab24-422a-46d9-9515-346f92eb186c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fce27c-846e-46bc-ae4a-eddbf37baf0b",
        "cursor": {
          "ref": "f61781b5-7e25-4f4f-966f-fde1f2ba152c",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ea8dd0c2-430c-4451-8380-15d3cfda5793"
        },
        "item": {
          "id": "72fce27c-846e-46bc-ae4a-eddbf37baf0b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5384c7b6-d2ca-49ca-88f6-b2a630a940c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf56e07-d086-4b68-bbf7-9d36ad12b84f",
        "cursor": {
          "ref": "86ad8d02-df47-4661-9da5-01fa3464dad2",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5588f22f-904d-4921-8157-172c3cf0d4ff"
        },
        "item": {
          "id": "5bf56e07-d086-4b68-bbf7-9d36ad12b84f",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "b0510f95-81dc-491f-83ed-97dd29e82991",
          "status": "Created",
          "code": 201,
          "responseTime": 4236,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "4e2d7c8f-2e77-404d-a564-aafac9d9dabf",
        "cursor": {
          "ref": "07db4ace-2197-42ce-906f-0d3816ead031",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1a77d20e-14e6-4c82-b091-2e4c0e0afdd9"
        },
        "item": {
          "id": "4e2d7c8f-2e77-404d-a564-aafac9d9dabf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "16fce48b-a443-4dda-9c23-52ddf486118a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37f1d48-8b44-45d6-ab03-4809425d1c18",
        "cursor": {
          "ref": "61262c3f-6498-4b88-8fbc-f8e4b7e505b0",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0ff49867-172b-439d-9fdf-89b951cff2ac"
        },
        "item": {
          "id": "b37f1d48-8b44-45d6-ab03-4809425d1c18",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "232f3f81-2ce6-4a58-b208-395914fbcedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7402e0-c015-4fe9-99b9-fccdaf90efe8",
        "cursor": {
          "ref": "e661a154-a2fc-4c0c-bf5e-df0b86146836",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "26b27465-6e44-4720-8031-d73e615074fe"
        },
        "item": {
          "id": "bd7402e0-c015-4fe9-99b9-fccdaf90efe8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4755c486-435f-46ce-bd90-db374e2920cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca9132c-7631-49e4-93e5-d5697fd1c976",
        "cursor": {
          "ref": "cb3ef448-b5ea-479a-a982-b2d83da8923a",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f8481e43-ce7b-4261-813c-4195c307fde7"
        },
        "item": {
          "id": "0ca9132c-7631-49e4-93e5-d5697fd1c976",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "62737ed7-3d7d-4ac3-88ca-c8dfe362ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81df8ab-a51a-4a00-a2cc-f1e6653e4633",
        "cursor": {
          "ref": "3174f058-a1a2-4ee7-96a9-40ac62431358",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5cc5453d-400b-41fb-a814-bbf2cbb4c901"
        },
        "item": {
          "id": "a81df8ab-a51a-4a00-a2cc-f1e6653e4633",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "230f5135-919d-41f1-b5bb-519b5d39741e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897dd921-a802-476a-841e-bde6fe4fbd19",
        "cursor": {
          "ref": "0d129c8b-e3d0-44f6-a18f-1606dbc7f4fd",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "010cb3d0-9857-465c-91f5-b0444028f144"
        },
        "item": {
          "id": "897dd921-a802-476a-841e-bde6fe4fbd19",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bdcb0df2-29f6-44f4-8534-8f73d62ea06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f361fe01-e3c0-41e4-bc7e-4c03bd0047b2",
        "cursor": {
          "ref": "9ea4eced-01c9-44bb-8c56-8e7fb97bf12b",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "504f6a01-49f8-4683-8b5a-cc00b4cc9d77"
        },
        "item": {
          "id": "f361fe01-e3c0-41e4-bc7e-4c03bd0047b2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8416b529-d070-41be-ac6c-bb43d35dcbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73739b97-9b5e-41b5-b290-dc7a383a5d61",
        "cursor": {
          "ref": "b21cda6f-b047-4bf9-bb8b-6115f2215aa6",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d8ac0358-6fd8-4ad5-acfd-673377d89205"
        },
        "item": {
          "id": "73739b97-9b5e-41b5-b290-dc7a383a5d61",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f34888a3-9b07-40e9-b251-e7ca42cd6092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56da7a25-5f5a-4da3-a171-eb7e40ad8ebe",
        "cursor": {
          "ref": "686a022e-c5cb-42ca-8a3d-e5e70960b440",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5e3973c3-3162-4473-b295-99e23bd3f97d"
        },
        "item": {
          "id": "56da7a25-5f5a-4da3-a171-eb7e40ad8ebe",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e4034811-4f4a-4bb9-81ae-c92f607f7efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f228b47e-ad77-4a26-b2f9-09e903dfbc9f",
        "cursor": {
          "ref": "0c3a3cbb-4fda-47ce-997e-f015fb7228f7",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b707f334-c86f-4eb5-8272-ab85082c9f73"
        },
        "item": {
          "id": "f228b47e-ad77-4a26-b2f9-09e903dfbc9f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b099266d-7cf3-4841-ad0b-49e098a826ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ccf88c-4bb1-4cc3-9266-4a2ecc8fc208",
        "cursor": {
          "ref": "c4568b78-f155-483b-bac2-a2ca91cd90a7",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4adc78d2-e936-4b7e-89a0-07fbd573ac86"
        },
        "item": {
          "id": "72ccf88c-4bb1-4cc3-9266-4a2ecc8fc208",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6d5a5b97-cf5f-42d6-aa54-92c387d20b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1093b4f-750e-44ff-bfa9-0d6a27d6ceb4",
        "cursor": {
          "ref": "a4e38f76-95ff-4702-b38b-4414a6ebbdba",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5349ec98-4aa7-47f3-9701-8129029b4de1"
        },
        "item": {
          "id": "a1093b4f-750e-44ff-bfa9-0d6a27d6ceb4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ded73c47-5c9e-4a4c-89f9-9721e745a516",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1629,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "e05c1bfe-0836-40f6-9851-f42b29f3c71b",
        "cursor": {
          "ref": "70540927-9aec-43a2-9642-83da6a01c489",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0e1c29d4-6562-4270-81c6-d12f7c8cc1c3"
        },
        "item": {
          "id": "e05c1bfe-0836-40f6-9851-f42b29f3c71b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6f031a40-126f-4cda-b209-6184940564b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb364307-319e-44ce-b09d-a754dd6698f4",
        "cursor": {
          "ref": "45475dda-898c-4263-a460-914fda2d7f0c",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "43adf9ed-c877-43de-bffc-55a677b677a4"
        },
        "item": {
          "id": "fb364307-319e-44ce-b09d-a754dd6698f4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a4663d4d-b291-485b-aa91-f06e733dcf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853cdc65-53a3-4b82-bb00-1589604957c9",
        "cursor": {
          "ref": "525cd6c5-5016-45b5-81fa-b295852ddc11",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "33b948a2-82b8-487d-ba31-644308d10c51"
        },
        "item": {
          "id": "853cdc65-53a3-4b82-bb00-1589604957c9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d9eff1d6-fd19-4cfb-8d5e-bc9884819e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8096583-319f-46b2-8332-c44e4a501613",
        "cursor": {
          "ref": "a97afa3c-1e68-4aac-bc4d-5ce9c6ad5dca",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e5d39367-9639-4a85-ba2d-3f47a4e0e246"
        },
        "item": {
          "id": "d8096583-319f-46b2-8332-c44e4a501613",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c787d3f7-2b6a-4cfb-88d9-08b715c95d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bbf12a-a12f-4f9f-86c0-c3330ab4cf2b",
        "cursor": {
          "ref": "383a0875-1bbf-4f8e-85ea-b20538a2d6c1",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4e98d7ee-8fe6-43af-9f7c-90ea43a971cc"
        },
        "item": {
          "id": "13bbf12a-a12f-4f9f-86c0-c3330ab4cf2b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0663665e-453f-4a67-815b-52758fe5225f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3327fb4c-64c2-469f-ab30-b8a0b68857e5",
        "cursor": {
          "ref": "0fada65a-ce83-4abf-8385-1132b4f19341",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3f57820d-1f90-43bb-86d3-0be8f344d61b"
        },
        "item": {
          "id": "3327fb4c-64c2-469f-ab30-b8a0b68857e5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "250a5538-54fb-4fe6-a691-d0f6dafac658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc742b4-8a1b-47c8-bc69-239792e5222e",
        "cursor": {
          "ref": "1c729fb0-fc25-4a76-bd6d-87d5bac7aaf1",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ea0d7c1b-8dfd-4a08-9db8-9bfb6c589522"
        },
        "item": {
          "id": "dfc742b4-8a1b-47c8-bc69-239792e5222e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "623c7039-2e96-4216-a22c-c74876e7c05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c16020-65b0-4020-a32b-86ac9d4c50bb",
        "cursor": {
          "ref": "50dd88a9-eca2-4376-b5be-1e8b0178bc2e",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fd32ee51-3057-4d54-a78b-bc362cc94718"
        },
        "item": {
          "id": "d2c16020-65b0-4020-a32b-86ac9d4c50bb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "02475ef6-91f6-49ef-b0c7-67bf63fb61c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b2a3d9-84e8-4153-8f20-142d722a849c",
        "cursor": {
          "ref": "d5a70ee3-5f6d-48d5-a841-2ab63f319af1",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f6812b35-59fa-4080-b32e-50eee99a7515"
        },
        "item": {
          "id": "63b2a3d9-84e8-4153-8f20-142d722a849c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d541784-d22c-49c8-8d5b-7a06c2d2c449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f61acf-ea3f-4876-8dc7-bf2036d9ac9c",
        "cursor": {
          "ref": "3f955cfd-f2fb-4f94-b401-36287e671d08",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c2dd2088-97b1-4ca3-97b2-854050c4ff45"
        },
        "item": {
          "id": "d8f61acf-ea3f-4876-8dc7-bf2036d9ac9c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5418e61d-0b10-490e-ab8b-c3be59280931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95e56cd-ac09-4eab-b57a-618ee40e1679",
        "cursor": {
          "ref": "970a3ce9-98c0-421a-a11e-2e2597a22e60",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "921e3b6e-bb76-4942-ae2c-c85ebebb588e"
        },
        "item": {
          "id": "d95e56cd-ac09-4eab-b57a-618ee40e1679",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3e26cca4-246a-45d1-bcf9-9eedabc81dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a544bda8-ba20-4769-9a7d-be6fa78f593e",
        "cursor": {
          "ref": "53cabe99-1f70-4977-9ba2-44969722b86d",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a9b1651c-039c-445f-82f9-e5572d968d16"
        },
        "item": {
          "id": "a544bda8-ba20-4769-9a7d-be6fa78f593e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8c6dcea5-96a4-4184-9d0b-6e28cbb364dc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 690,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584a13f4-5b7e-4135-ac4d-0459d0f64679",
        "cursor": {
          "ref": "ffa40688-f73f-4f14-9b56-cf87a0bf2665",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8862da37-d78b-4630-8fdb-065d5bb5ab51"
        },
        "item": {
          "id": "584a13f4-5b7e-4135-ac4d-0459d0f64679",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d00be645-2d19-430a-9f97-6503bede8e3c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 867,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "608842d6-d3db-4086-8362-7f853a5e74e6",
        "cursor": {
          "ref": "4b9a7faf-3718-415b-8f95-90e849467fe7",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "791adf33-d150-4530-8748-55acb056caaf"
        },
        "item": {
          "id": "608842d6-d3db-4086-8362-7f853a5e74e6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8f627081-88b5-4f18-95dc-2edff11dcdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1449c394-5e86-4b36-9093-908a28c82efc",
        "cursor": {
          "ref": "2c1d1679-ce07-487d-8406-d045f1d74741",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6a2f498c-2795-4924-93c7-d49ad79d8f23"
        },
        "item": {
          "id": "1449c394-5e86-4b36-9093-908a28c82efc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a4c9ce8f-e66d-4ec4-a654-c9a6c10062e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 944,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455e6e6b-a5a2-4a8a-a71d-b37fd5bf93c2",
        "cursor": {
          "ref": "9e8f49c6-bf47-426e-8a7d-49df7b634250",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c5b56ce5-30ec-425c-a5ac-6c431c567d75"
        },
        "item": {
          "id": "455e6e6b-a5a2-4a8a-a71d-b37fd5bf93c2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "25a1f81d-e7bb-4171-b19d-3f19db3db6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8b24e0-b309-45e0-a83d-2b57310367f8",
        "cursor": {
          "ref": "c87abd28-9127-4499-b4de-16e08481061f",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c58973e3-a753-403e-8148-0a99ed843f1e"
        },
        "item": {
          "id": "3e8b24e0-b309-45e0-a83d-2b57310367f8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "860e4815-8d21-4bce-bc5e-680deefb28f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ac01a6-14b0-4d95-a932-66610667a0ff",
        "cursor": {
          "ref": "95d684b5-cf6a-4214-af68-843c5179c810",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "36a9edf9-e49a-4db4-90fc-f579b9480fd8"
        },
        "item": {
          "id": "42ac01a6-14b0-4d95-a932-66610667a0ff",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c0cbdff6-99e8-44ae-89c3-52d21f9566f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c353c51-01ca-4c8d-96af-75fc8c2b9648",
        "cursor": {
          "ref": "b2e538cb-07bb-4788-9523-3601ddc4fc7f",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2a68c64c-cceb-4ccb-a57f-5e22e5bb6c6d"
        },
        "item": {
          "id": "3c353c51-01ca-4c8d-96af-75fc8c2b9648",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e8d5c374-800f-471e-82cf-488eada711a8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 615,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d30064-5ca8-4212-99b3-6c8271881b4e",
        "cursor": {
          "ref": "dda70efe-24d1-4bad-a8f7-90be0939f3c0",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "998b6a51-55c9-4ba3-aafb-83815315746b"
        },
        "item": {
          "id": "74d30064-5ca8-4212-99b3-6c8271881b4e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6eba6178-5930-43b8-977d-979f33bcec7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b1818e-6e42-4140-93c0-7c2f0e9978ed",
        "cursor": {
          "ref": "addc49a0-46be-4bda-b195-4c89888f07e4",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2f088cc5-ecca-457c-8bcd-2b82989d0dcb"
        },
        "item": {
          "id": "a5b1818e-6e42-4140-93c0-7c2f0e9978ed",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8f5f4fa7-8fcb-4710-a19c-a0d49bb06dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d73f22c-6dd4-40aa-b1da-28d4f3753b32",
        "cursor": {
          "ref": "d0739001-dd08-4c28-8175-43260ca06c42",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "54416363-fa17-426a-8dd5-a0e0e72b2a13"
        },
        "item": {
          "id": "5d73f22c-6dd4-40aa-b1da-28d4f3753b32",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9423c477-4a1c-4e1c-820c-5b610ca5a7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8cbd10-202d-4c4b-a409-0196fded4f65",
        "cursor": {
          "ref": "425532da-3e87-4b12-8d79-11ffadc2f776",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e4d7bf11-0376-4878-923b-8c63619c2372"
        },
        "item": {
          "id": "6c8cbd10-202d-4c4b-a409-0196fded4f65",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bf65af3c-568b-4488-88d3-ac172ed1a2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b91aba3-f6ce-4a07-8c6a-2eb49b31be80",
        "cursor": {
          "ref": "9875be1a-b218-4e32-9d9a-2b9c878bd5fb",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b2a95ba2-6ff9-4911-917c-b8c4f29e9cab"
        },
        "item": {
          "id": "6b91aba3-f6ce-4a07-8c6a-2eb49b31be80",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ffd38c14-f221-44d3-96b1-71105c3ae2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21eece05-6904-4372-94e9-61b3c944f491",
        "cursor": {
          "ref": "7a1224a7-d6c9-4343-80b4-16cce25ce072",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dc04460f-1eb4-44e7-854c-fe9a5a63df29"
        },
        "item": {
          "id": "21eece05-6904-4372-94e9-61b3c944f491",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ad180ceb-5052-47e9-9670-b093a3911b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b64fea-423b-4568-821f-d7e5e531d8ff",
        "cursor": {
          "ref": "a7c51ccd-5fb5-470e-924d-df1f6e9749a1",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2ad3144a-d71f-40a7-9510-c5fa80d0d88c"
        },
        "item": {
          "id": "88b64fea-423b-4568-821f-d7e5e531d8ff",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "961a7e91-6b37-4bb5-8512-0fda28fbdd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfe6e79-c387-466f-89fd-3df09783022d",
        "cursor": {
          "ref": "3e598f68-d9e8-45a2-95a9-09b0c03ff57f",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f907e00d-a0c4-424c-9b46-38d605d6bcd4"
        },
        "item": {
          "id": "dcfe6e79-c387-466f-89fd-3df09783022d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6789aa35-84e2-4aa1-8505-73c30cf8bd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dceae4c1-e38f-4342-874e-2efd0ac38162",
        "cursor": {
          "ref": "4b98d9fe-1900-4dac-a1c7-0c4ce81de253",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c074aa18-3af6-4dd6-b2bb-d0b8ac248b4f"
        },
        "item": {
          "id": "dceae4c1-e38f-4342-874e-2efd0ac38162",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4e1052a6-fbfb-431d-8293-7e274d8fd319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c36282-5630-4190-98a6-9aaf3c9c7834",
        "cursor": {
          "ref": "886fca6e-b6b8-45bd-97ae-6eb59cce994e",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "15ea4c55-9f8f-4476-bdcc-68b408fdb212"
        },
        "item": {
          "id": "06c36282-5630-4190-98a6-9aaf3c9c7834",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dd7095a3-0610-47a0-8a3f-0d31c9d5185c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a018d9b8-1656-42b2-acc5-c4b15ab49b4b",
        "cursor": {
          "ref": "f63a2e94-ea96-4bc3-b937-dd99ee52a542",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "54de73f1-f4ef-47d7-838c-bddf081153c7"
        },
        "item": {
          "id": "a018d9b8-1656-42b2-acc5-c4b15ab49b4b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bfef5a72-ccb1-42b6-9750-4e8743357065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0ae784-d27c-48b6-af3d-2232020f5717",
        "cursor": {
          "ref": "bed3c01f-c629-471c-8b7c-986ebdc8b918",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "49a8aaee-b6f2-4e81-b96f-7d95fdda249d"
        },
        "item": {
          "id": "0e0ae784-d27c-48b6-af3d-2232020f5717",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5f894a62-fcf7-4c70-af70-2d6b760079c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4165de1e-6257-458b-b146-87e4f5f40a3f",
        "cursor": {
          "ref": "66dcf144-0d59-4336-be97-7878b1e0b04f",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "66152b53-3060-42cc-ab33-6b65ce2beb57"
        },
        "item": {
          "id": "4165de1e-6257-458b-b146-87e4f5f40a3f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "efdb55f2-0894-4eea-8503-f2fdf33d9ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28f7c76-35d7-424a-911d-6a0b5428713f",
        "cursor": {
          "ref": "0acbb7cb-de7e-4da1-82bd-69e75df22969",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "62a0899f-cab8-4903-b74b-8ca021b78cc4"
        },
        "item": {
          "id": "a28f7c76-35d7-424a-911d-6a0b5428713f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "da026b2f-857a-44a6-87d1-f74ee818f02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168f202c-4279-4cf1-8d40-3ac5a80e5e3d",
        "cursor": {
          "ref": "e803eba4-f2f2-49d6-8c51-950e49fdb27c",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "58c9db97-5fcf-47b3-a45f-65d4ccfad8fd"
        },
        "item": {
          "id": "168f202c-4279-4cf1-8d40-3ac5a80e5e3d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8dd457f3-be11-4dc4-ac69-ff525fe89d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4e57bc-7065-48a4-93f9-f08ab84e2f2f",
        "cursor": {
          "ref": "2c8a1aec-e8cf-400c-a5e4-2e9b854bdac6",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7b55216b-e0ee-4d9a-8dcd-f6bf7a671289"
        },
        "item": {
          "id": "2c4e57bc-7065-48a4-93f9-f08ab84e2f2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "43b7f38f-7ab5-47ce-82bf-24a50199e083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310034d9-95b0-4608-ada2-a1dfb5246987",
        "cursor": {
          "ref": "be653b99-fdfc-437e-bce5-74b58b6f898b",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7c331bfa-a581-44ac-99ce-126129c617df"
        },
        "item": {
          "id": "310034d9-95b0-4608-ada2-a1dfb5246987",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f7da082c-a502-4467-bebc-3068e3653bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1414c4-f52c-4cdf-826d-8ff52f9b7a7c",
        "cursor": {
          "ref": "efb35d90-04ba-423c-903b-624a7b75bc8a",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "197b096b-8d8a-4fad-a306-5094613c6fdd"
        },
        "item": {
          "id": "2a1414c4-f52c-4cdf-826d-8ff52f9b7a7c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ba260662-4c83-49fb-9b51-5e94fb67f38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d14e197-79d2-413f-b330-8941874f3efc",
        "cursor": {
          "ref": "52c4556a-cd4f-4fae-8e95-be495de970d8",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "83092862-cf16-4a0c-a752-00729d0b71de"
        },
        "item": {
          "id": "7d14e197-79d2-413f-b330-8941874f3efc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f8532478-df61-45e7-ae1e-3798675ccfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab0a444-29fa-4c34-bbfd-c8992ee6a379",
        "cursor": {
          "ref": "74595bc1-74b4-43b2-b131-c0afd1ca452f",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "df7d95df-4cb4-429f-a97f-43337417a00b"
        },
        "item": {
          "id": "3ab0a444-29fa-4c34-bbfd-c8992ee6a379",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a06e0306-fb82-47a3-9163-7f141e1594bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8afa4a-9fcb-47e4-80c7-9150909ffb6e",
        "cursor": {
          "ref": "f491429f-82f0-4c85-a791-6d5f7797835e",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2534e925-5034-4fa8-bc1d-10197353b92a"
        },
        "item": {
          "id": "4d8afa4a-9fcb-47e4-80c7-9150909ffb6e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c6cae3d7-aa45-4a15-b727-83064a93ee19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f83a9c4-f5d7-4d37-87e2-6380eecde765",
        "cursor": {
          "ref": "1fee65ca-e2f7-4ad3-983a-24272d9456c0",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e38e8563-a71e-43c8-affc-933417b083d4"
        },
        "item": {
          "id": "9f83a9c4-f5d7-4d37-87e2-6380eecde765",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b108101d-e121-4689-a2e6-ad06af8535be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d256a187-fc43-40d3-8a6b-6ec29988ba29",
        "cursor": {
          "ref": "66e46798-aaa5-4b1c-aef1-babaf0edfb36",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9f5e5bb3-7893-4d22-98f6-392acc7f7a19"
        },
        "item": {
          "id": "d256a187-fc43-40d3-8a6b-6ec29988ba29",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5cdb07f1-b0ff-413a-9c6b-5b7faa784867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260f8357-b9ba-40eb-b3e6-84839d97fb8f",
        "cursor": {
          "ref": "82e2120e-f280-4df8-afde-b7c55dd5b3f8",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "182a3f35-8ed2-4372-bd7b-cf5160e06bb2"
        },
        "item": {
          "id": "260f8357-b9ba-40eb-b3e6-84839d97fb8f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "208cf5d2-5e3c-4fa9-bb95-d1a080df16d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d3f73d-71b4-4227-b927-f0d060ab04ea",
        "cursor": {
          "ref": "527c602f-6b74-4634-82d9-2ec2da030c3d",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fc5e5597-0212-43b9-b153-b284fa5812fb"
        },
        "item": {
          "id": "41d3f73d-71b4-4227-b927-f0d060ab04ea",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "73f960af-2402-41e7-a07d-dd6f80e05730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844281db-742f-4057-938e-cba20e1567ba",
        "cursor": {
          "ref": "cc4e963a-cf85-4f4e-a82a-e70bb007e570",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a4841759-4db8-4b38-bac6-c68e3d71e64d"
        },
        "item": {
          "id": "844281db-742f-4057-938e-cba20e1567ba",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8ad62635-4988-407c-a847-a626c5f0d23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33a18b3-68a6-4ca3-8f54-e97911b64899",
        "cursor": {
          "ref": "bc8e75f4-5e04-49c3-bfd1-3b6e0158abfb",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "847ca5ac-4e98-4f65-bb6e-42992f1d106c"
        },
        "item": {
          "id": "d33a18b3-68a6-4ca3-8f54-e97911b64899",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6ee3393a-c282-4375-8519-bb97ba5c72ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e121b3d-3699-4426-a04f-ba8beb2b1730",
        "cursor": {
          "ref": "3dd3302a-daa9-4f6d-b58f-795d202e1862",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "691bd81c-4011-4fce-98ef-ae4d70804d1b"
        },
        "item": {
          "id": "0e121b3d-3699-4426-a04f-ba8beb2b1730",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "35d2ceac-58c3-4b66-b63d-6f5cf8756a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721e21f5-c509-42b2-9c92-98a99579edef",
        "cursor": {
          "ref": "15c2c331-61c4-4e18-a989-1dea18345bac",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "41c4cbea-3cfb-4025-92ec-3f8c74727977"
        },
        "item": {
          "id": "721e21f5-c509-42b2-9c92-98a99579edef",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0b0b775a-d9a7-498a-b50a-d61a58f22ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854d3c73-94d5-4ba4-bc15-1bd04572d73d",
        "cursor": {
          "ref": "ded80e51-874e-494a-8504-fc78cff35de3",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2126b247-54d0-4533-b2e5-aa29453055a2"
        },
        "item": {
          "id": "854d3c73-94d5-4ba4-bc15-1bd04572d73d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "31db5a15-07ae-4c6c-980e-85a658f1b524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7845d73-374f-4379-aca3-2346ed4d9693",
        "cursor": {
          "ref": "d39bf009-148e-46e9-9d67-5374999a6fc8",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "355fe786-8cf3-46e8-9a2c-40419f03232c"
        },
        "item": {
          "id": "a7845d73-374f-4379-aca3-2346ed4d9693",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a0398ea3-38b2-4508-8e89-6521c0693a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93934284-2a25-49d4-8d90-851134c622ed",
        "cursor": {
          "ref": "9b525ec1-ce20-4950-880b-703bd18bbccd",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8eb548b3-65d5-4d33-bdd9-89d2d02cd8e0"
        },
        "item": {
          "id": "93934284-2a25-49d4-8d90-851134c622ed",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cf922637-c4c1-4595-86f5-ba26cf999b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d1e6ab-8c61-42d9-986b-0afca77db996",
        "cursor": {
          "ref": "97ba55f4-4672-4607-b14c-1d46a05ddc5f",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d2164fd7-3546-42ff-b68f-fced53618e85"
        },
        "item": {
          "id": "33d1e6ab-8c61-42d9-986b-0afca77db996",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5decd508-414f-4254-8205-5aaf6d56b5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c667107f-fef0-40a1-8783-5c3561bfb216",
        "cursor": {
          "ref": "690a487c-e827-410a-980c-5102a41fb0ed",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5f5e8ca5-200c-4faa-a40a-4b2b02e9877f"
        },
        "item": {
          "id": "c667107f-fef0-40a1-8783-5c3561bfb216",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e6604882-930c-47bb-8104-5a86c766960b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef233a09-a893-4d64-89b8-2a54c9195feb",
        "cursor": {
          "ref": "ddc146f9-a2f9-49b9-8b6b-a426c3137018",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dc4ee11c-0808-4a0c-9d69-7d3dec62ea63"
        },
        "item": {
          "id": "ef233a09-a893-4d64-89b8-2a54c9195feb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "84031efb-9d5a-4f47-a09a-ecafb9631230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d00b9d-6358-42cd-9a6c-9a132f9bf5ee",
        "cursor": {
          "ref": "6f1947b1-2ffd-4a3f-98ed-6549a41ce0a0",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "30501c1f-915f-45e4-b5a3-cdafaae45053"
        },
        "item": {
          "id": "e1d00b9d-6358-42cd-9a6c-9a132f9bf5ee",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9bafd066-cbd3-4fb0-b548-cd3184c5a7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390546a6-00f8-44ed-9e52-fb55f0f22d04",
        "cursor": {
          "ref": "4bd5b967-ba0a-47bc-8a68-8e55a3de9be4",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "78458bdc-636e-4c56-bafc-085606b28ec0"
        },
        "item": {
          "id": "390546a6-00f8-44ed-9e52-fb55f0f22d04",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8a64b0e9-5e03-4531-ae55-22a9ecc65d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca9e1db-d5a7-47b3-9377-5389d819d9b0",
        "cursor": {
          "ref": "4098487f-6524-42cb-b273-5c87369e55bb",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2066b7ae-4af6-4a17-9747-13dc78c9b01d"
        },
        "item": {
          "id": "4ca9e1db-d5a7-47b3-9377-5389d819d9b0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "82e62865-ab8c-4be4-b9fb-2828111c9491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed1615d-3adb-47c3-af41-48e956dcc687",
        "cursor": {
          "ref": "e50e7d05-6c18-41a4-a84f-bd6b1b48fce7",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e3a5726d-1018-45e1-8f70-5bf869b91788"
        },
        "item": {
          "id": "eed1615d-3adb-47c3-af41-48e956dcc687",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4758415d-b291-4e77-8811-925582aad960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affc1b00-4c4d-4069-9c1c-71aa485b8ed3",
        "cursor": {
          "ref": "453d57b6-70ef-4baa-9146-372ce7d5af6e",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6c1a519a-60c6-4906-a576-1de73c621db5"
        },
        "item": {
          "id": "affc1b00-4c4d-4069-9c1c-71aa485b8ed3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ea3719ed-c418-40fb-9340-b519ed5e2319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef5cccd-e2f1-4288-855c-5c974a507fbf",
        "cursor": {
          "ref": "d5b7085d-f54f-4cbe-98e6-cf1bcb995d16",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "284440e2-82dc-4cb3-a8ad-fff11c85fa86"
        },
        "item": {
          "id": "9ef5cccd-e2f1-4288-855c-5c974a507fbf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a0d6f24a-b6b2-421c-9dce-35c63a9a4fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f30d05f-837f-4a98-a738-019b87e9e507",
        "cursor": {
          "ref": "24d14f96-927c-48ac-93b5-31f302e8d867",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f6a5e3bf-69ca-4475-9d93-974286e8920f"
        },
        "item": {
          "id": "5f30d05f-837f-4a98-a738-019b87e9e507",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7fef091e-5df4-4744-a890-d76466c1e89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db81ca31-6459-4a1e-9f99-39a611f640c1",
        "cursor": {
          "ref": "80b95939-857b-4767-946d-89376314aa91",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "41fc2f58-51f5-43f0-a583-c1fc55686014"
        },
        "item": {
          "id": "db81ca31-6459-4a1e-9f99-39a611f640c1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5d9e8ce7-5cd5-4e88-8bde-ea1b0fb8f731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb4dcd4-1ab3-4181-a747-11c4921aad69",
        "cursor": {
          "ref": "1555e2c9-0537-46b3-bc93-5ffafc812bce",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "15a6c52e-d391-4693-a95d-c4edaeea63c6"
        },
        "item": {
          "id": "afb4dcd4-1ab3-4181-a747-11c4921aad69",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8a901cac-2e99-491a-95f2-2e719266eadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a276fcd3-58bd-444d-8481-2e8765bab366",
        "cursor": {
          "ref": "d1b9cdbb-e185-4e7b-8be9-fb267262e011",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7395b988-d857-406a-bb9a-7023862087c9"
        },
        "item": {
          "id": "a276fcd3-58bd-444d-8481-2e8765bab366",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e364593f-aa83-4aba-85bf-8510b22be6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09352b98-e617-4c15-b3ef-47f8be5ebb93",
        "cursor": {
          "ref": "ea6f7950-0387-4bab-8476-d9bb0f94b4fb",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "94fd8d3d-7723-44f7-9b8d-4103e6be814d"
        },
        "item": {
          "id": "09352b98-e617-4c15-b3ef-47f8be5ebb93",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "618ef8dc-3b45-46c9-a8f1-b62e121cb338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8b5e9d-966a-4b17-8eb6-f3444e784034",
        "cursor": {
          "ref": "778f6726-fdd9-4d3e-abeb-05ec539c9fa5",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f37540b6-9e95-4fc7-a647-e2560922ee07"
        },
        "item": {
          "id": "9f8b5e9d-966a-4b17-8eb6-f3444e784034",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3619ffcc-7db4-467d-926c-ff4e598e361a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db53118-c5a3-4c7c-befa-565ca800cf32",
        "cursor": {
          "ref": "fb23ee4c-a89f-4807-a15a-d61fa988b84a",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9c36f9ca-f8c7-4541-8ae8-f329e5606974"
        },
        "item": {
          "id": "8db53118-c5a3-4c7c-befa-565ca800cf32",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7801caec-1143-45de-b07f-55c7be86a40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d35d241-81d5-419b-a593-b4b738f55d86",
        "cursor": {
          "ref": "fa628396-6a3b-4d20-94b7-dc2d31fc7649",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "128b49bf-0918-413a-9807-28086dca4b8b"
        },
        "item": {
          "id": "7d35d241-81d5-419b-a593-b4b738f55d86",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6127cc6f-7c8c-455a-8a04-34dcf4438fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd81acc-e9ad-4a89-8eff-4abad5af800f",
        "cursor": {
          "ref": "dba10c11-658e-4eff-b04c-0e4725a3b665",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "25552754-23f6-42ef-9abd-04fdddd1274d"
        },
        "item": {
          "id": "8fd81acc-e9ad-4a89-8eff-4abad5af800f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b358c04b-e19f-4e4d-89e3-b01010e85cd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6da8f7b-1db9-4b18-a760-cfe475581dce",
        "cursor": {
          "ref": "36a7a3e2-c8ae-41db-a42b-4b9d52ea1ff6",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "02ca86b4-5b87-4d9b-9f1a-305e7a794830"
        },
        "item": {
          "id": "d6da8f7b-1db9-4b18-a760-cfe475581dce",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9ef18e00-8d71-4f28-ba99-04a2522b1616",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 476,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d46195-16af-427c-93f7-4510b3c67057",
        "cursor": {
          "ref": "b932820c-197f-4046-b48b-f0fb1d185f08",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3b7e669f-747f-40fb-b39c-1475d376c4f4"
        },
        "item": {
          "id": "e6d46195-16af-427c-93f7-4510b3c67057",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e36a0dac-b6da-41bd-8061-71339f091d93",
          "status": "Created",
          "code": 201,
          "responseTime": 3803,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "06afb7d4-f43a-46f4-a3e6-eb37ce925c58",
        "cursor": {
          "ref": "e81bdad1-ba9d-4eca-9ed5-b479b6d874dd",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "da086e39-604b-42f9-b5e2-c3879bb7b9f8"
        },
        "item": {
          "id": "06afb7d4-f43a-46f4-a3e6-eb37ce925c58",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9fb60ed8-8018-4d3f-8e34-6d0a55d26002",
          "status": "Created",
          "code": 201,
          "responseTime": 3972,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "140ab357-64ef-4595-b772-3cbf639aa95e",
        "cursor": {
          "ref": "76efcf3d-4cd6-4618-80f9-7ee706fb725b",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1ffb7a12-3e39-4aea-83aa-0eda9d3d78ba"
        },
        "item": {
          "id": "140ab357-64ef-4595-b772-3cbf639aa95e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e695c76c-5c96-411c-be83-a5d22c81372b",
          "status": "Created",
          "code": 201,
          "responseTime": 3663,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "4f82344c-9cda-4351-9463-b867028230bf",
        "cursor": {
          "ref": "ab44af9f-e1b0-49f9-95cc-7b743729c89b",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "12b567cf-40e4-48ae-9d26-f2cf9f42021a"
        },
        "item": {
          "id": "4f82344c-9cda-4351-9463-b867028230bf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "49dfe81f-5427-4a80-b05a-c0caad51a5ad",
          "status": "Created",
          "code": 201,
          "responseTime": 7971,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "ec9fb452-20e2-43a0-a50f-60ca551ed500",
        "cursor": {
          "ref": "75382749-7db8-438e-b203-07d5523470fb",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4e38e987-7a39-49f2-93bb-58ae3b28ed18"
        },
        "item": {
          "id": "ec9fb452-20e2-43a0-a50f-60ca551ed500",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "762debc4-26c5-4f82-bdf5-28a1c3c73db0",
          "status": "Created",
          "code": 201,
          "responseTime": 4548,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "17243acf-17db-4268-a8f3-6a077a9bfd2d",
        "cursor": {
          "ref": "b8ca1ea4-2c72-49a4-9672-00f7d8fc0a32",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "26f7a17d-9bce-47a9-acc8-1b572d0ca45b"
        },
        "item": {
          "id": "17243acf-17db-4268-a8f3-6a077a9bfd2d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "04f67602-e317-4dd6-bab2-0dbdcafce421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17243acf-17db-4268-a8f3-6a077a9bfd2d",
        "cursor": {
          "ref": "b8ca1ea4-2c72-49a4-9672-00f7d8fc0a32",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "26f7a17d-9bce-47a9-acc8-1b572d0ca45b"
        },
        "item": {
          "id": "17243acf-17db-4268-a8f3-6a077a9bfd2d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "04f67602-e317-4dd6-bab2-0dbdcafce421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb00618-ea28-444d-9a52-716286c96351",
        "cursor": {
          "ref": "f6574cb0-c84d-4caf-a545-36ae158bd5f9",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "526d1494-5c69-4000-ae0e-3b74b49aad38"
        },
        "item": {
          "id": "7eb00618-ea28-444d-9a52-716286c96351",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f68c9a44-dc08-4062-8f5c-6839850b527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4894336-2b43-4983-840d-269ba5d4bf82",
        "cursor": {
          "ref": "fe25cf8d-ed5d-4e58-a7fc-afda89d084f6",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "73f3050c-e02e-4494-b053-e2c60ab0245a"
        },
        "item": {
          "id": "b4894336-2b43-4983-840d-269ba5d4bf82",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dca76bb7-862a-4d84-bb89-3b4d3eb1b0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f891057c-1d6a-4dbd-badd-9ad423904ced",
        "cursor": {
          "ref": "73916fe3-2942-47aa-80ba-d8851ab201c2",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "938854fa-19a2-4ef7-bf6b-b320b526ba7f"
        },
        "item": {
          "id": "f891057c-1d6a-4dbd-badd-9ad423904ced",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "58a99ba3-888c-4eac-896f-c277b8a3c59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5e108a-9a10-40ae-83b4-32ddea428c12",
        "cursor": {
          "ref": "cc49e70a-9e19-400e-b637-cd3343ff4279",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a5a7cb84-4b57-4bce-abeb-7d7ade426575"
        },
        "item": {
          "id": "4e5e108a-9a10-40ae-83b4-32ddea428c12",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9115f0e0-a1d4-4b5d-bbea-c3129e9c088d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeb6baf-5802-4c2b-aa65-7c2653d2a601",
        "cursor": {
          "ref": "0ce9de82-d76f-458f-b49c-1ee24d21d72a",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6ad13d02-2c75-41a5-acdd-e2f823a91968"
        },
        "item": {
          "id": "bfeb6baf-5802-4c2b-aa65-7c2653d2a601",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8ecb9294-85c6-472a-848d-cb63fd1c119c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a922b2-e155-40b6-acbf-c1464f094546",
        "cursor": {
          "ref": "36a9c01a-b3b7-4a4d-bdd1-3d62a77b4394",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "771cc39e-37f1-4ff2-8362-7d8cdc9b6869"
        },
        "item": {
          "id": "45a922b2-e155-40b6-acbf-c1464f094546",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "60999467-f030-457b-b000-3195c0b2526d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000cc281-12c7-4ef3-9821-c52d9a73bef4",
        "cursor": {
          "ref": "6f91c29f-426b-49fb-9b6f-f85820e09720",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b99e37a9-2e79-48d7-ad3e-84d3a51d84ae"
        },
        "item": {
          "id": "000cc281-12c7-4ef3-9821-c52d9a73bef4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cb70eff4-0d9c-45ed-90cb-443ee6f19895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9240cf0d-2e49-4745-9025-82e39a5671d8",
        "cursor": {
          "ref": "f6f8b0cd-6232-4110-b978-24546ce381fc",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f040a441-9bab-42e6-be13-c48b4c22b6ae"
        },
        "item": {
          "id": "9240cf0d-2e49-4745-9025-82e39a5671d8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dfcca9c1-62a2-4c28-b764-92b4f00de1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5df6cf4-42ba-4f7d-bb1a-6473eadc2365",
        "cursor": {
          "ref": "567d92d1-4301-4223-ba9d-f8ef4a481214",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "91701dd8-15ee-4481-9774-0ecb6ceeddce"
        },
        "item": {
          "id": "c5df6cf4-42ba-4f7d-bb1a-6473eadc2365",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6dc86df9-2d1f-492a-8cc5-d0550d8650c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342808be-5173-441c-bf71-44baf22ac6a3",
        "cursor": {
          "ref": "22e978a5-a443-4ae2-a569-04fcbfeefd39",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "21f4c705-3357-4c36-afb6-3dccf82e68c1"
        },
        "item": {
          "id": "342808be-5173-441c-bf71-44baf22ac6a3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1b992145-4775-4110-a775-b5d2842681c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9378beed-d2d6-4886-a401-f446d7059ed8",
        "cursor": {
          "ref": "5997118d-e536-40e9-a4e1-e5e74ffb1510",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ee8400ea-2102-4992-8e79-01e6a56c386f"
        },
        "item": {
          "id": "9378beed-d2d6-4886-a401-f446d7059ed8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8f5b89d5-3797-421c-b534-78b0c1e3d8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac339fb-5078-4ca1-8fd2-ba6bbabaf123",
        "cursor": {
          "ref": "61fb4fed-5f36-48e7-87c6-2b7d46e75c88",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "13c8420f-d6b7-44d9-88ad-6b2ef05240fa"
        },
        "item": {
          "id": "0ac339fb-5078-4ca1-8fd2-ba6bbabaf123",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e4259bb1-874c-494f-b03e-ef9d234152f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db9edea-be9e-4f42-a7d8-d42f5cb5e7ff",
        "cursor": {
          "ref": "3b1c13e8-364a-496c-b091-03de65cd785d",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "44ffd8b4-c044-450d-87d0-6ec9e1161310"
        },
        "item": {
          "id": "2db9edea-be9e-4f42-a7d8-d42f5cb5e7ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "886e2d4f-b402-47a6-9271-7d80cc441717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c3c8eb-b835-49c7-b87a-d6affd3869cf",
        "cursor": {
          "ref": "c2d77103-a247-43ee-9f82-2be7a2972474",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a5a5db85-402e-48d0-81fe-8663762f2504"
        },
        "item": {
          "id": "78c3c8eb-b835-49c7-b87a-d6affd3869cf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d75554b7-c20d-4732-9f03-75a6c598f944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e244598-6eaa-41c6-a5ce-1d123e135c24",
        "cursor": {
          "ref": "d2563604-0c0a-47a3-83a6-34a1790a3773",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f14fcc23-81be-43aa-8d12-8ddfde9aba3b"
        },
        "item": {
          "id": "4e244598-6eaa-41c6-a5ce-1d123e135c24",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1cc39eb0-3d40-4e1f-a3a8-8781997e4275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15f4a4f-3298-47e8-a31c-0c7711fac6e5",
        "cursor": {
          "ref": "b0f9a50b-eafa-4594-85fc-6d6a62f4359f",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b0d28375-0cae-4167-af3f-d08221ee7454"
        },
        "item": {
          "id": "d15f4a4f-3298-47e8-a31c-0c7711fac6e5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b09ee11a-9522-434a-8e3f-118a67895dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1256,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b35a0a-dfe4-42bc-a46f-51c7aa9c08c7",
        "cursor": {
          "ref": "d73bf6c1-9cef-44a0-be7a-50032503eaf2",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0faab1f3-b932-44e9-ad68-4f249e4f83dd"
        },
        "item": {
          "id": "80b35a0a-dfe4-42bc-a46f-51c7aa9c08c7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "89293172-b1b7-4d62-80c6-3d50854e2e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8beba4-4f38-4e13-9cab-152e64e81d70",
        "cursor": {
          "ref": "5f255098-2ccc-48ca-a02a-99938d475572",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c1f2e5df-5d3e-4aad-a267-e106bb54739a"
        },
        "item": {
          "id": "3a8beba4-4f38-4e13-9cab-152e64e81d70",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "32399c1e-ee4d-4b5e-bafc-6a3921ce68cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2a08a9-f02b-4945-8177-ac8693ae056c",
        "cursor": {
          "ref": "b017d0ee-99c3-470b-92ef-cce8d9a0803e",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0468ebf8-1746-4128-a671-f90f0856b501"
        },
        "item": {
          "id": "7c2a08a9-f02b-4945-8177-ac8693ae056c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "123d941e-a86e-4bfa-8498-68e4e8899c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c6e144-b3d2-42dd-8074-6f47b2d78978",
        "cursor": {
          "ref": "2bf60e6c-40e7-4c10-853f-aa2ac5eb178c",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c29a66a9-4bf0-4bf9-88be-49cb929b98c0"
        },
        "item": {
          "id": "16c6e144-b3d2-42dd-8074-6f47b2d78978",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9863d28d-6716-4b63-9559-638d29630ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176d5f8b-b024-4c6e-8f6b-567d7a6ae317",
        "cursor": {
          "ref": "038d3ca5-3dda-44f4-93dd-b06add538c38",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9fcbe4e9-d5f1-466d-8a0b-da2912abd778"
        },
        "item": {
          "id": "176d5f8b-b024-4c6e-8f6b-567d7a6ae317",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "073f44b3-cfcf-4c17-9298-5cfbc0f27225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb51ae2-78c8-41ad-8bc4-2d1aaf055f25",
        "cursor": {
          "ref": "b7ded2b3-4206-4e63-9f91-42b68542128f",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "af3e5787-86e2-42e6-8d63-4d9e5057c79b"
        },
        "item": {
          "id": "acb51ae2-78c8-41ad-8bc4-2d1aaf055f25",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c7ebd6af-af22-47b4-acab-3e4fe091b6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6886b5a-32e3-4b4e-b5c3-e70f43c51e4d",
        "cursor": {
          "ref": "3b548077-1d98-4de2-affb-5dc5cfa6cc92",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a6ed514b-6cb2-4578-bc40-fc4255482b8e"
        },
        "item": {
          "id": "e6886b5a-32e3-4b4e-b5c3-e70f43c51e4d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c99a0139-f4e5-4287-9ac4-8f711f6ad0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33395a66-bf28-461b-ab87-a35f336a4c94",
        "cursor": {
          "ref": "316974a8-055b-4e85-b104-e71a3e31e318",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7354b879-ebd6-41cf-ad42-3584148f715e"
        },
        "item": {
          "id": "33395a66-bf28-461b-ab87-a35f336a4c94",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6702d52d-ac33-43d4-b5e6-1ab40ab889a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f80905-1e56-4da8-808e-ffbf56c1530a",
        "cursor": {
          "ref": "3a5b8d77-9208-47e8-b7a4-3ab49732f0a8",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8d3a9da2-24af-4f1a-9dfe-98025294583b"
        },
        "item": {
          "id": "22f80905-1e56-4da8-808e-ffbf56c1530a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d81dfe11-2097-4edf-9be7-821e9a328bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284ecfd1-f4a4-4256-b171-9eabef19c9fa",
        "cursor": {
          "ref": "703b3f95-cbd8-482b-ad17-9b4168ceb7b5",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4bac3fc1-3378-4d68-a8f1-90e930fea882"
        },
        "item": {
          "id": "284ecfd1-f4a4-4256-b171-9eabef19c9fa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3e59dc34-bff0-4b8a-ae4a-dddd1433016a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052a8f36-10bc-41e4-ab1e-14a12a6e880c",
        "cursor": {
          "ref": "f614c971-5955-4f92-ad02-885d0fad6f39",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6f99b111-98ab-4754-8fdd-1015ddff10f9"
        },
        "item": {
          "id": "052a8f36-10bc-41e4-ab1e-14a12a6e880c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "36653fa4-cef3-4beb-98b2-7f76e62aa204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e91c7b-ed22-40a2-8af7-a0b8168cd96d",
        "cursor": {
          "ref": "77d95fa3-7e64-4d8c-b3be-1200619f4def",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c6c88626-92b1-46e5-90dc-bcfaf0c5d569"
        },
        "item": {
          "id": "38e91c7b-ed22-40a2-8af7-a0b8168cd96d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "813427f4-546f-4db5-9d70-570d3bf54554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaae7aea-7e34-4a37-925d-fe02d623ab67",
        "cursor": {
          "ref": "3893a2b3-1c5e-4858-92cf-d6f460b74751",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "40b72569-b498-4c89-b965-3b9124a87155"
        },
        "item": {
          "id": "aaae7aea-7e34-4a37-925d-fe02d623ab67",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b0a9cb8c-2534-411f-8aa4-c9f13bbfc3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc3919e-fac5-401f-a3ec-a73ae5c64bf6",
        "cursor": {
          "ref": "34741985-405d-45fc-9457-ac63b7e3d8fa",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4a13d337-c3b7-4d1d-a8f6-24143e2cf3b8"
        },
        "item": {
          "id": "abc3919e-fac5-401f-a3ec-a73ae5c64bf6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5a0eb878-5092-4988-8df1-5c496fd849a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3c50c9-fc1e-41af-b966-38784544b4ec",
        "cursor": {
          "ref": "1d4c6574-7b38-470a-91bf-4315c4347a2f",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "34b26cfc-620d-4845-8c76-f2aa3985f170"
        },
        "item": {
          "id": "0e3c50c9-fc1e-41af-b966-38784544b4ec",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bdda0047-1490-4431-bad6-b5d6d2dc0ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08724f32-ed84-42d7-8fde-f405aa6f05c7",
        "cursor": {
          "ref": "8c487123-4741-4ec7-ac34-3a0f53b3b079",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bf71d5f2-3c37-4ec2-a4c2-a195045aa8f9"
        },
        "item": {
          "id": "08724f32-ed84-42d7-8fde-f405aa6f05c7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d17f11ea-6686-4819-b83c-b8fcc9acfcfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0901a3-d271-4ff7-8fb6-be0dbe2c5714",
        "cursor": {
          "ref": "f3932c8b-6039-4e3f-b607-4b23eb3be6e3",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "976d3c47-12e0-464c-b288-250ab663cbf9"
        },
        "item": {
          "id": "1c0901a3-d271-4ff7-8fb6-be0dbe2c5714",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7dd81a48-a867-4f33-8e5d-47b231e0835f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 477,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7da26a-53aa-436a-bbbf-585f26bcc55d",
        "cursor": {
          "ref": "e96c03ad-2bcc-44b1-9d9d-34e42a759e96",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "78f61536-984e-4afa-a32e-71516e6defff"
        },
        "item": {
          "id": "8c7da26a-53aa-436a-bbbf-585f26bcc55d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "953bbd60-88e7-4211-9384-408cb4138cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7da26a-53aa-436a-bbbf-585f26bcc55d",
        "cursor": {
          "ref": "e96c03ad-2bcc-44b1-9d9d-34e42a759e96",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "78f61536-984e-4afa-a32e-71516e6defff"
        },
        "item": {
          "id": "8c7da26a-53aa-436a-bbbf-585f26bcc55d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "953bbd60-88e7-4211-9384-408cb4138cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd6371d-7edc-4d1f-8599-7a62fbeef887",
        "cursor": {
          "ref": "94660400-9212-495f-81ed-a1cc66d31514",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "02d15ca9-0f83-4479-95c8-15aba57a7313"
        },
        "item": {
          "id": "6bd6371d-7edc-4d1f-8599-7a62fbeef887",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9ce1bf5d-bb51-4bbf-b888-e7d7f9ddf08e",
          "status": "OK",
          "code": 200,
          "responseTime": 265,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "45c0d4ec-66bc-43f5-8b2d-50a32fc0a444",
        "cursor": {
          "ref": "ef2a1760-c707-4d57-b1f1-0f8dfaf3c767",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8f283124-2d9b-42d2-8a8a-b44a9af068f2"
        },
        "item": {
          "id": "45c0d4ec-66bc-43f5-8b2d-50a32fc0a444",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e2a8c803-8ccf-4de9-aafd-e6dbd927279e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c88ff3-0949-44ac-9003-76e2a8f290ca",
        "cursor": {
          "ref": "06680749-9f82-4a5b-9555-f3e5a426db1a",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5d5a4c7b-1737-4214-b19b-8619f9966a29"
        },
        "item": {
          "id": "23c88ff3-0949-44ac-9003-76e2a8f290ca",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7aed3f77-287a-4b6c-aabe-b9264a2c92f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e40c4c0-f8b4-445f-bfb6-aee04624a909",
        "cursor": {
          "ref": "f735eeca-c2b0-4863-8053-1240493af88c",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5d964d60-e4bf-43d9-94b0-d2cd54659e3d"
        },
        "item": {
          "id": "2e40c4c0-f8b4-445f-bfb6-aee04624a909",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3467e525-923d-4d1f-aa04-9ad1603ae5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ade5e3f-35a4-431d-8879-fea273c0e5b2",
        "cursor": {
          "ref": "01651b36-5b14-4ce5-aa5e-b1c184b72e6f",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5b9e0b25-6968-4a18-bd86-9dace57ebce5"
        },
        "item": {
          "id": "0ade5e3f-35a4-431d-8879-fea273c0e5b2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "08dcf62a-5484-4c37-b297-83dd40167b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2259e905-4b60-45d7-b8b2-3b950b5e6e75",
        "cursor": {
          "ref": "fef9b01b-abdc-4b77-97ce-5fd321636f42",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4056c605-fb38-4ab2-a50e-de948f4017f4"
        },
        "item": {
          "id": "2259e905-4b60-45d7-b8b2-3b950b5e6e75",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bda73acc-fb7f-4bb0-9e5b-b9756549facd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c4f796-3a34-4f12-b4d5-f4d25c4f8e57",
        "cursor": {
          "ref": "d47d33fe-e937-4b7b-9999-1ede8a68a239",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3304f3e9-4269-4895-941d-dcb92707c146"
        },
        "item": {
          "id": "03c4f796-3a34-4f12-b4d5-f4d25c4f8e57",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d2579410-a9d1-4b5d-b1b8-af81a84703f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b98ba5-e4f0-4f25-a373-90eb0f8b5709",
        "cursor": {
          "ref": "b6c3f26a-05bb-449f-90b9-2f018db4a7da",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bf24dae0-c7cd-41f3-b2f0-94085e176bb3"
        },
        "item": {
          "id": "b7b98ba5-e4f0-4f25-a373-90eb0f8b5709",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "06053d64-5cb9-4d66-ad16-4c98e7cd294b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a546c74d-6442-486a-afdc-de2f1d1a0c76",
        "cursor": {
          "ref": "8a6e1a3a-757b-4e1f-bb4c-55792efb0ec0",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8a82a3fe-15c6-4329-afb2-4b762cd7fffd"
        },
        "item": {
          "id": "a546c74d-6442-486a-afdc-de2f1d1a0c76",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3badfaf5-1226-4498-bae3-6eb6bdb6cd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347c1275-cc5a-49fb-aed1-7af10e2893eb",
        "cursor": {
          "ref": "4b3b6d25-9248-4526-bfd1-036c2580834d",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5d93026c-c8c3-409c-8412-6efd0edff43a"
        },
        "item": {
          "id": "347c1275-cc5a-49fb-aed1-7af10e2893eb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "48b9d8a5-46f0-4446-850f-35d5209ac97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cdc227-fb31-49e5-8137-1c7cb51392f3",
        "cursor": {
          "ref": "2a4b96e1-319b-4ee5-b555-cc2b33f224bf",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "30d36503-d61a-4398-a06b-54ca30dcfa7e"
        },
        "item": {
          "id": "51cdc227-fb31-49e5-8137-1c7cb51392f3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8f481407-3394-418f-9447-d38762d5e1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e7dcde-54e6-40cf-8b00-e484c3b306f8",
        "cursor": {
          "ref": "4aa06a5c-754f-47b9-b8c5-4fb9b7f2892f",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "904331f8-57e2-4ff1-8857-3c5345f22645"
        },
        "item": {
          "id": "b9e7dcde-54e6-40cf-8b00-e484c3b306f8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "aeae554c-f34c-48f5-bdc6-924213305526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b0bec0-3e30-480b-93c1-efddc912cca6",
        "cursor": {
          "ref": "cc5d993b-bb68-441f-bf49-fea6ffd3b6c7",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a23fc5f0-4f8d-44d4-b27d-6502c98a01b9"
        },
        "item": {
          "id": "b5b0bec0-3e30-480b-93c1-efddc912cca6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6aedcd84-8b35-4caa-96cc-b6c7a4fa5f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535b865e-6d2e-4e62-ac22-6ed79aa799c2",
        "cursor": {
          "ref": "f0cb6ff3-f10c-4dcb-9349-6e80b800a762",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1dfd9c8c-86e5-4e1b-b349-2b06f75c03b9"
        },
        "item": {
          "id": "535b865e-6d2e-4e62-ac22-6ed79aa799c2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "852d37ff-9122-4dbb-b923-c75e22cf3559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fb5e20-c507-4043-a170-41e7ba033aeb",
        "cursor": {
          "ref": "70116a0d-d7f6-40ad-a620-79105d45567e",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8e759739-5a2e-4c9a-8b28-478bd0e7c843"
        },
        "item": {
          "id": "28fb5e20-c507-4043-a170-41e7ba033aeb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "64f8af4a-ae34-4003-959e-8b5ae870d025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c024174-d3c5-4477-a394-d45396517ffd",
        "cursor": {
          "ref": "de2650d2-39f0-46c0-8069-011efe3c007d",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "114ba524-0ba3-4e86-8387-a009e8b74cc6"
        },
        "item": {
          "id": "2c024174-d3c5-4477-a394-d45396517ffd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "71f11317-cc97-4e81-9f82-2739cafaca7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb2f040-26cd-4700-9956-c9eb4e0f8cde",
        "cursor": {
          "ref": "729a630f-a105-4a6b-b32f-7bd25cca4a86",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0b7644fa-61c7-42e5-abde-aed4edaff5e5"
        },
        "item": {
          "id": "ffb2f040-26cd-4700-9956-c9eb4e0f8cde",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "ddaf8943-2168-4d7d-ad52-182fc1e4f72d",
          "status": "OK",
          "code": 200,
          "responseTime": 1795,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "35d51ae0-b610-47ef-934d-8a77d5bb2ae8",
        "cursor": {
          "ref": "b5b42c2b-bcff-4f78-a7df-e2e196762e56",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e37b56c2-55eb-4976-b908-22965b522026"
        },
        "item": {
          "id": "35d51ae0-b610-47ef-934d-8a77d5bb2ae8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1941649e-ca2f-466c-9214-29d0c9e538f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cd7bee-900c-49a8-aaf1-64fd2cc18086",
        "cursor": {
          "ref": "2c64ce0b-3815-48f0-94bb-5efd06799fe7",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "40cbc55a-af6b-4773-a8ad-d8dc27f662ca"
        },
        "item": {
          "id": "c4cd7bee-900c-49a8-aaf1-64fd2cc18086",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7edff9df-8458-47a9-bf97-1cbd67750cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b397b39e-7863-432d-9aab-a1dfdef174b5",
        "cursor": {
          "ref": "836b9507-ac8b-4472-a98e-c1fc779759a3",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "185ef2f9-3870-4c0a-a16e-e3d031e430d5"
        },
        "item": {
          "id": "b397b39e-7863-432d-9aab-a1dfdef174b5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a379ea67-b761-46b6-8b10-b24d21e2c130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f07a8c9-6ba5-4701-bcf1-9b42801e7ea4",
        "cursor": {
          "ref": "2ade9c02-ecaa-42d5-9c13-3051e0c11da4",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5d459595-f691-4088-b3c3-722a9993b0e1"
        },
        "item": {
          "id": "7f07a8c9-6ba5-4701-bcf1-9b42801e7ea4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4fca44a2-5759-4578-a1be-cedb13f22aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008028c7-5131-4c5c-97dd-b40801b1c910",
        "cursor": {
          "ref": "9344b2c2-d7fd-473c-82d8-fc80df18b19e",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9c8e3434-e2fb-437a-9a81-bb3439963705"
        },
        "item": {
          "id": "008028c7-5131-4c5c-97dd-b40801b1c910",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ec76113f-3cc6-4569-9e1a-8b2c60119f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4224553-1e86-4bc4-8df8-8584c933cd9c",
        "cursor": {
          "ref": "2235fddc-4220-4f37-a3b8-a9d127a9b7a7",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f507e1e7-2c2a-42b4-93f6-bf0d5a2ce80a"
        },
        "item": {
          "id": "b4224553-1e86-4bc4-8df8-8584c933cd9c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "76e0e62b-5c75-4cf6-bf27-80840502dfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84a56cf-93e7-4018-b1f0-5953a3a4819a",
        "cursor": {
          "ref": "16b3ba86-4ec1-4219-8f34-b8bfe8f13d0e",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e49f291a-a6cb-4927-a118-32e38bb48fcc"
        },
        "item": {
          "id": "c84a56cf-93e7-4018-b1f0-5953a3a4819a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2cac5f1a-4671-4912-800f-d92c8c10a2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560ea925-4e30-4d14-bf3f-28f4f6d45ecf",
        "cursor": {
          "ref": "c25c93c2-ed32-42f4-ad51-13506cf83060",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "01765d2a-ac1c-410c-a5b0-f6b937a254b8"
        },
        "item": {
          "id": "560ea925-4e30-4d14-bf3f-28f4f6d45ecf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f63d959e-8c3c-4cf9-84a7-339eda724274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929025a4-bb56-416f-a865-07d9996023b0",
        "cursor": {
          "ref": "7c4bff0d-e4c6-470a-af7c-80c00943de89",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "99eef91e-5595-44da-a51a-0f5615cffc98"
        },
        "item": {
          "id": "929025a4-bb56-416f-a865-07d9996023b0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2e8c221e-bc4b-47ff-91e1-1e438bc51b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b0de61-f51c-4f26-a526-9517ea013bc5",
        "cursor": {
          "ref": "8b0c4244-976b-4b68-be1d-3ae2bd4c3c5b",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eed23b9f-816d-4844-a776-b9684a7ebcb4"
        },
        "item": {
          "id": "a9b0de61-f51c-4f26-a526-9517ea013bc5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3b2c50fa-d187-47af-9184-1e469570c2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cd2218-13e0-4dce-b168-1d26cb304e2e",
        "cursor": {
          "ref": "1a2e2c4f-bb22-4319-b9ff-311af2fb20fc",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9e12104a-6af7-471c-8d86-732ae23c76d8"
        },
        "item": {
          "id": "96cd2218-13e0-4dce-b168-1d26cb304e2e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ad9f0a17-061c-435e-bbaf-91db71d4ee14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb14629-89bb-4df7-80b8-594b9fccbc2c",
        "cursor": {
          "ref": "1093e217-3b42-4fc7-af97-aed1fbc8d6aa",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7c2732a8-1df1-4931-b1db-fa209e0f584b"
        },
        "item": {
          "id": "2eb14629-89bb-4df7-80b8-594b9fccbc2c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "951f3ccf-6e59-4c49-8e0d-f77ebd4b03a3",
          "status": "OK",
          "code": 200,
          "responseTime": 297,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "b4d65707-f4a9-48bc-9044-8f8c1200cc6e",
        "cursor": {
          "ref": "ad7ff8ce-e463-47b1-b279-ec9dcfa530f2",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6a25a871-527f-4c30-8410-b67b2003789d"
        },
        "item": {
          "id": "b4d65707-f4a9-48bc-9044-8f8c1200cc6e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dda12958-1640-471c-a222-7d8fd4ed8281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b94d302-1d7d-4d12-9d1c-d49b18d9ff6c",
        "cursor": {
          "ref": "a5b51839-6eb0-4efc-b301-ba3bb5b75154",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b6bcbcf2-8e93-40cb-ac66-756cecde5dd4"
        },
        "item": {
          "id": "4b94d302-1d7d-4d12-9d1c-d49b18d9ff6c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "866b0bab-8ce8-48ce-9da1-c14604b0627f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908527f1-1e65-4372-8f18-c126da9a7601",
        "cursor": {
          "ref": "a205c683-76c5-4053-a7df-9d15d65e610f",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "db62d969-26d3-4269-86e3-86654cd6106e"
        },
        "item": {
          "id": "908527f1-1e65-4372-8f18-c126da9a7601",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9b57faa6-29d0-4040-83cd-2c8c953a5ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fae814-ce48-4043-9c07-841d8802cba6",
        "cursor": {
          "ref": "e962b7fd-5b0f-405e-9349-f468a8ec24fe",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "028c2480-9615-4716-8790-18ce50839b85"
        },
        "item": {
          "id": "38fae814-ce48-4043-9c07-841d8802cba6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c4a2bd38-da62-4a37-b027-92c1f5ca1fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6976b4d0-c4e5-4093-b0c3-89559571cfee",
        "cursor": {
          "ref": "af501721-9e7d-42f3-afae-7204535fc2bd",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cb48222e-e6c3-4960-aa09-859b8235a8e1"
        },
        "item": {
          "id": "6976b4d0-c4e5-4093-b0c3-89559571cfee",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b359d22f-a639-4c6c-91a2-d7d2f66cd552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066af5a9-427f-4283-bf78-67a9a3ceb6d9",
        "cursor": {
          "ref": "bdd31858-e490-4ff7-88c5-f19afcbf78d2",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3a7bb6e2-409a-4f67-a25c-1371328be9d2"
        },
        "item": {
          "id": "066af5a9-427f-4283-bf78-67a9a3ceb6d9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0b80dcd1-4b6f-4f44-ad27-bb0523b88e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ca34f1-3868-4a05-810e-c42090a28e59",
        "cursor": {
          "ref": "a434b970-3e6d-4198-980b-4bae9ef7be91",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2e51e43a-be6d-47e2-8fed-946f867c1d74"
        },
        "item": {
          "id": "75ca34f1-3868-4a05-810e-c42090a28e59",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5442e405-30e9-40d7-b546-208b262a8bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c0cef6-6e2f-4f27-b942-b19e17794690",
        "cursor": {
          "ref": "e1bcb49d-0f8a-4541-86fb-1abe630409bb",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "02cb5402-ef9a-4ac8-8b35-9b1ed4e9983e"
        },
        "item": {
          "id": "33c0cef6-6e2f-4f27-b942-b19e17794690",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8d321329-a201-4772-9978-36d66748c6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d552cc8-2114-46ea-90b8-a38f63eb3990",
        "cursor": {
          "ref": "3cc83a60-2007-4d8d-a96f-a68ca386f19f",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "af24b854-b0cb-41c3-98a5-ec9310e3178c"
        },
        "item": {
          "id": "0d552cc8-2114-46ea-90b8-a38f63eb3990",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e20b4a1f-b847-46c0-abff-f1abb6f2ce3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47e44f8-fa8b-4841-93c6-6667e49e3f63",
        "cursor": {
          "ref": "918e3a54-f1a5-4d96-8be0-a9d0ca4149c5",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c6ecb3ba-c575-4078-bacf-e6551f4236dc"
        },
        "item": {
          "id": "c47e44f8-fa8b-4841-93c6-6667e49e3f63",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ce3bf519-e905-43e0-be6b-f600dd445414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a515b6-0d28-40c1-a811-0f4d58a51084",
        "cursor": {
          "ref": "ea9d3f08-f9c2-4b4e-8741-95f3263ae4e2",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5d5562d2-4851-4c33-aa4e-6653f3c7528a"
        },
        "item": {
          "id": "81a515b6-0d28-40c1-a811-0f4d58a51084",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f9e38ec7-505c-4281-bc21-3bcdf30d0a29",
          "status": "OK",
          "code": 200,
          "responseTime": 264,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "3cb67788-a10f-4e23-a721-c589aaebdf08",
        "cursor": {
          "ref": "c37b56f5-051b-47f4-b403-b4e6bba76d9c",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6904ad6f-494e-450f-97c4-a8be61b2f0a0"
        },
        "item": {
          "id": "3cb67788-a10f-4e23-a721-c589aaebdf08",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9ba2892e-d3c3-4e5b-a58e-7d311ac7dbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06a8bd8-b957-4070-bf50-bd979853669f",
        "cursor": {
          "ref": "b4837eae-1882-4418-84c1-e02f1e8b0f7f",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "387e0652-cd61-41e3-8c8a-c29b006aa0c8"
        },
        "item": {
          "id": "b06a8bd8-b957-4070-bf50-bd979853669f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "18d5a60b-9a30-4f82-81cc-d7ff026a9815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd5d736-ce8b-4dba-a0ca-0cdff414ee18",
        "cursor": {
          "ref": "36cb14a6-50c0-4cd2-8118-8e3f75bdb560",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "056a52cb-9a38-4c73-8b3c-8251faa90ee2"
        },
        "item": {
          "id": "3cd5d736-ce8b-4dba-a0ca-0cdff414ee18",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8ed9df0f-57d2-416c-8369-cf78da46da8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39c68f4-f2ef-48fd-a9b5-350274ee2d7f",
        "cursor": {
          "ref": "6b97b549-ddaa-49c4-a0a2-241f8f201e82",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "398a5e6b-4bf2-4fd8-9b04-bf1fa622bbe1"
        },
        "item": {
          "id": "b39c68f4-f2ef-48fd-a9b5-350274ee2d7f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "18813b79-3fa1-4dcf-97a2-b8655905f201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f38390-4405-4624-a19c-56194c39ad68",
        "cursor": {
          "ref": "41928411-6e4a-49d9-b06b-c387f3aa3275",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ad259864-da97-4ca2-8cc9-130a08cb3208"
        },
        "item": {
          "id": "54f38390-4405-4624-a19c-56194c39ad68",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "25b0951a-7fcf-40ac-81d7-699bd9c23297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5f1a2d-45da-4f53-9299-fcbcc5f149c0",
        "cursor": {
          "ref": "f3a14737-3821-49b0-8d74-cc378bd792d1",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d53bac82-43fb-4aa8-a22d-cf23a4133433"
        },
        "item": {
          "id": "6a5f1a2d-45da-4f53-9299-fcbcc5f149c0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7661c00f-f99d-429a-a939-715a2715d481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc6a3d6-f15c-4cf5-86eb-d00c50ba8548",
        "cursor": {
          "ref": "767c215e-bb7d-4246-a20b-75b54f401845",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e9193126-c1c7-4502-8307-fb9050589387"
        },
        "item": {
          "id": "2bc6a3d6-f15c-4cf5-86eb-d00c50ba8548",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6ed19b6e-4301-45cd-9690-a60bd54976d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250d9669-e758-4fb8-b731-b299da0ce283",
        "cursor": {
          "ref": "25b32f2b-c06c-40c0-a402-71f2fbed3b90",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "88336d7c-8723-48fc-a66f-1848ed64afa0"
        },
        "item": {
          "id": "250d9669-e758-4fb8-b731-b299da0ce283",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "908b2723-9b53-4f3d-b3c2-4fd23e809a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d18c3c3-e53e-48a0-9e79-106c70bd9adc",
        "cursor": {
          "ref": "6a173ce5-5fda-4326-b309-83f7fbeb7ac9",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "49a35bc5-ca4c-4b56-9555-9d1d0e707cb0"
        },
        "item": {
          "id": "0d18c3c3-e53e-48a0-9e79-106c70bd9adc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4f95f294-d8e9-4519-8735-6e45fd018cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf120f9-0ade-4475-9531-e7970cee5786",
        "cursor": {
          "ref": "f4dd3d5f-7ff7-491c-8d31-6f6c99350d4d",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "78e9b994-c2af-4056-ab56-4194b4f47ef0"
        },
        "item": {
          "id": "5bf120f9-0ade-4475-9531-e7970cee5786",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3db7e730-3dcc-425d-824b-649bdcc8df7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cacb755-54f7-4aa2-8bd7-eed7b34f4b1b",
        "cursor": {
          "ref": "67a772f6-5b84-4142-842e-2fa4511688d1",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c7c28926-28a2-4d40-b321-d10da927d62c"
        },
        "item": {
          "id": "4cacb755-54f7-4aa2-8bd7-eed7b34f4b1b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3fe62dbe-014b-4d11-9c40-5c0c546a33a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b628b9-1d88-44e4-9712-9a3a2665a9cc",
        "cursor": {
          "ref": "81871920-d480-48f3-89e4-8a8629ec7544",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0718ef25-3e1f-4730-af0c-a9d064dbb1ce"
        },
        "item": {
          "id": "55b628b9-1d88-44e4-9712-9a3a2665a9cc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ba69d3a3-01de-4fa1-a50d-bc8e76deb1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62550772-b065-4590-bd92-63e1ffc8c4bc",
        "cursor": {
          "ref": "835f2138-1aac-4181-ba78-a761b4ff3ddb",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "39db7227-4eae-4f94-9c1e-a6de883e7b0a"
        },
        "item": {
          "id": "62550772-b065-4590-bd92-63e1ffc8c4bc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c70cb29e-7b80-48c7-904c-e9489108b36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35f8fe5-be18-447c-9af3-838bba9feee0",
        "cursor": {
          "ref": "348b9c7d-6f73-4d9f-a467-09f27d342993",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "19f18476-91fc-4dcd-accb-a5a61584cf60"
        },
        "item": {
          "id": "c35f8fe5-be18-447c-9af3-838bba9feee0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "23c275ea-a9a5-4c0d-9754-439e98e24176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9744524e-7a7a-4cbf-871d-7141dba6826c",
        "cursor": {
          "ref": "39709080-5a04-4607-8695-2ec8217daf49",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c9323087-8df8-46ab-84da-0791f5c838c5"
        },
        "item": {
          "id": "9744524e-7a7a-4cbf-871d-7141dba6826c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "50aac223-698c-4627-85d0-ded4b22ed70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b5f51f-c96c-40d8-b98f-730307908320",
        "cursor": {
          "ref": "68ff3c33-b8ec-4953-9411-9e2b0fdf1875",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "48ef59ef-651b-49c7-9bab-eb44d65986b4"
        },
        "item": {
          "id": "74b5f51f-c96c-40d8-b98f-730307908320",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "06fd8576-73ba-4b85-9b2f-918b1f238385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e3185f-be45-43f8-9136-cd438a0d62de",
        "cursor": {
          "ref": "3d539b45-e8ca-4693-a9c3-b04471f89c8e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7cd7e992-315d-42ae-93b9-2823a29ec351"
        },
        "item": {
          "id": "43e3185f-be45-43f8-9136-cd438a0d62de",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d2b05bd6-964a-461f-97f4-97a6af30ba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8e3774-6425-43f9-a27c-561653aa60fb",
        "cursor": {
          "ref": "4ac026fd-b8f8-4717-a759-230167f7d588",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "afc9dacc-173f-4f43-8342-8b1bae06f823"
        },
        "item": {
          "id": "bd8e3774-6425-43f9-a27c-561653aa60fb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7365098a-78f4-4e27-8750-1d6d9db76dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328bef70-f56d-4f9c-9667-584acba96251",
        "cursor": {
          "ref": "c9b9a8ab-88cc-47ad-9cee-9f3ad135c2ab",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b983b8a4-05c5-43e2-9e54-ca876c1c7a16"
        },
        "item": {
          "id": "328bef70-f56d-4f9c-9667-584acba96251",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9b680e2e-fa3b-4bb6-b9db-71be28a6793c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe95fad-2dba-4054-b077-748a4a2ac52f",
        "cursor": {
          "ref": "f71e86af-aac4-4e9a-bbb4-4874377f2f50",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cda22628-d03c-4ee5-baa9-4f42fa1eaba1"
        },
        "item": {
          "id": "fbe95fad-2dba-4054-b077-748a4a2ac52f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "37a99679-86a8-4b93-a394-01660877a0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13883600-d573-46d6-ad0b-1d2025190e7e",
        "cursor": {
          "ref": "5ee7ff65-408c-41ce-a6a8-82cce2987b74",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c6cd5fb8-b3a9-4c4c-8c3c-11c35838d509"
        },
        "item": {
          "id": "13883600-d573-46d6-ad0b-1d2025190e7e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "56aa6300-72b7-452f-beeb-ff08a20124ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2991f62-ac5a-4828-b442-d7ad885c004a",
        "cursor": {
          "ref": "6e8ed303-4d27-4c29-b468-00a540f7d44d",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "084f3656-04fa-4195-945e-ee7c7e45f996"
        },
        "item": {
          "id": "a2991f62-ac5a-4828-b442-d7ad885c004a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "46328d1c-7b2c-498a-bbe2-74049b3b5764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e63781-0058-4c21-a200-d6c6a55d550a",
        "cursor": {
          "ref": "4f1b1ab6-06b5-4c50-a3d5-fddced869b78",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6e39628d-6d72-4c11-89bd-0cb964ab1aff"
        },
        "item": {
          "id": "c4e63781-0058-4c21-a200-d6c6a55d550a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "07bf75bc-7353-49c3-bfec-a876f641d3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4140088d-d94b-4fb0-bf74-f02d088e4aaa",
        "cursor": {
          "ref": "a1cb8c1d-e486-48e8-81db-24c950b33c4c",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ecaca779-9614-40b1-9ba5-ccbd7ee2b6b1"
        },
        "item": {
          "id": "4140088d-d94b-4fb0-bf74-f02d088e4aaa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9c05e1a3-1c5f-4fab-9ef8-8d7e7082edff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a3d1c5-027d-495f-8081-46d6393a66c3",
        "cursor": {
          "ref": "ed82c305-ca59-41a8-a507-cc94906cea4e",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "477861d1-85ab-4ae7-ba05-07c513a50fa8"
        },
        "item": {
          "id": "b7a3d1c5-027d-495f-8081-46d6393a66c3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "09e8d3db-7431-4a52-a1e1-4b3443efeb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccfa238-1472-47ad-8521-6be34e24dfcb",
        "cursor": {
          "ref": "8b5c5099-54bb-4f32-b413-39094a575a17",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9140d6aa-3c22-4e95-9567-0d8e0c1735c2"
        },
        "item": {
          "id": "fccfa238-1472-47ad-8521-6be34e24dfcb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e89d3dd6-250d-4018-a9a1-cd4345a3d050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc43a49-cb99-49e3-8553-46680c84f91e",
        "cursor": {
          "ref": "385cd43e-1c6d-452b-b370-3769ff21a56f",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "aa3a05a0-7ee1-4075-8cf7-0649d12efd1a"
        },
        "item": {
          "id": "9dc43a49-cb99-49e3-8553-46680c84f91e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f6c3634c-dc3a-4d3e-ac14-16044a208c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2929b54b-c8c8-4350-afe1-dc6101ffd507",
        "cursor": {
          "ref": "927fee94-b16a-458d-b63e-91b2215cc96b",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a4ac8421-ea9a-40b8-ab89-6ad38f417f80"
        },
        "item": {
          "id": "2929b54b-c8c8-4350-afe1-dc6101ffd507",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b2993807-d081-4c1e-a0ce-d9758c44b524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c70389-1ab3-41e8-99e5-d12999569247",
        "cursor": {
          "ref": "d7502650-088e-407d-b992-2a0b20995a56",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e64606d1-c3c1-483b-8f58-8b6336e38edd"
        },
        "item": {
          "id": "c3c70389-1ab3-41e8-99e5-d12999569247",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7adb9e89-f0b6-4432-9605-fe602820ed83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61f66d5-d4be-4b03-88ed-ff742cc82bfe",
        "cursor": {
          "ref": "7c4c3df4-42ba-4899-9ce8-772dc70f4d97",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4c070fdf-7d2d-47f7-9e07-0b1b4c499620"
        },
        "item": {
          "id": "b61f66d5-d4be-4b03-88ed-ff742cc82bfe",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7b07e267-1201-46f6-9758-72684d6cf447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4f3a1b-23c9-45c7-8958-8c1241bb03ed",
        "cursor": {
          "ref": "6833663c-40c8-4118-b82f-58fc20fc11c2",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6b1503a0-4ffe-4d3b-ac69-950fa8c81dd5"
        },
        "item": {
          "id": "3f4f3a1b-23c9-45c7-8958-8c1241bb03ed",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c68ba4d6-d7ef-4bf4-bc6b-bbb973a9e928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0d34e6-06ff-489d-b6a1-88506a67ce0a",
        "cursor": {
          "ref": "03378b14-6737-457b-abb7-c4696195ec85",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e668de46-d1c7-4fcb-8ffd-9b7d0353cc90"
        },
        "item": {
          "id": "5f0d34e6-06ff-489d-b6a1-88506a67ce0a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7419d8fc-4848-4b81-ae9c-6c5f64e952e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12de65ac-0d43-449c-a575-963862b349d8",
        "cursor": {
          "ref": "f3052d8f-e463-4c60-ab99-6efffed7a2ed",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8396721b-8a63-4a67-b824-f69eac0f08d9"
        },
        "item": {
          "id": "12de65ac-0d43-449c-a575-963862b349d8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1388bbb9-f83b-4c7e-94fb-59281f93422e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ef8555-ff82-4c74-9341-aa6da9138815",
        "cursor": {
          "ref": "3bc7d909-d0a8-4f4a-87d6-0bf56cb87ea8",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5f378e1a-70d3-4eec-aba6-31eab852f15d"
        },
        "item": {
          "id": "37ef8555-ff82-4c74-9341-aa6da9138815",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3db1c52d-b139-44de-96c3-413127d4654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccfecac-52fc-42c0-be31-ebcd4bf54e3e",
        "cursor": {
          "ref": "821bda15-7328-4f92-a22d-ffbba0e6b8a8",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e71cc37d-5264-471c-afd7-42c6b3bfe2cb"
        },
        "item": {
          "id": "9ccfecac-52fc-42c0-be31-ebcd4bf54e3e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f040467c-5301-4060-8cc7-39c66aef2811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2900d5-0f5a-4a0f-a66d-a808acdde94d",
        "cursor": {
          "ref": "21f42407-9d4f-43b0-8722-6e4342190b71",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e20608cb-17c1-4326-a1f0-4fda5871d54f"
        },
        "item": {
          "id": "eb2900d5-0f5a-4a0f-a66d-a808acdde94d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c01d8367-7061-45e4-befd-7ed165c8180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf79d181-cd94-4439-85b0-d8f60f2f6f3b",
        "cursor": {
          "ref": "18e2f69b-7639-4409-ae2a-05d1be388541",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "30fab8d7-f44e-4064-80d2-cc46e929a52e"
        },
        "item": {
          "id": "cf79d181-cd94-4439-85b0-d8f60f2f6f3b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e18f8bbb-2442-4648-bd95-95c8db149b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd073ed-6093-488d-899c-84c75c5551c5",
        "cursor": {
          "ref": "ed2b2bee-647e-44b8-a738-5ce36f95a5e3",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4ae76fb2-e054-4df1-80bb-f8630a22cd71"
        },
        "item": {
          "id": "4cd073ed-6093-488d-899c-84c75c5551c5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "30fe4564-6d9b-4df4-85b4-609ad859e1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc724ec-84f1-49e7-b757-425b2253fa1f",
        "cursor": {
          "ref": "4416cae5-785b-43f5-a7cf-1119a2ee502f",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0671b858-0bc2-45fe-91d1-ba735ce4af8f"
        },
        "item": {
          "id": "8cc724ec-84f1-49e7-b757-425b2253fa1f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "051b3e4f-dfad-42d9-bc23-bba1baabdb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973fb47a-165b-41d7-b970-75c4fc33fac8",
        "cursor": {
          "ref": "28f6b119-8d97-46d3-9c84-501d84982b14",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "016cff3d-d9f4-4883-b63f-101d2b803e26"
        },
        "item": {
          "id": "973fb47a-165b-41d7-b970-75c4fc33fac8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8588a65b-3000-488f-b1e5-709f486af2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1ff9ff-05a8-4431-b798-a2a29e4f6b67",
        "cursor": {
          "ref": "2a54415e-c79d-4bec-95da-608224a96fb7",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c3a3524c-e7e0-40c9-b311-3588ae24cba7"
        },
        "item": {
          "id": "df1ff9ff-05a8-4431-b798-a2a29e4f6b67",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "04bd168a-9125-44a1-afe5-1472b5ba70f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a5f7f4-b6b2-4963-be74-878954f9e32e",
        "cursor": {
          "ref": "a47cf907-87f0-4b29-81eb-fcf30fec4641",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8bdd3332-9b38-4395-9514-ce97fffd0659"
        },
        "item": {
          "id": "92a5f7f4-b6b2-4963-be74-878954f9e32e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "606e9244-6774-4ebf-b9fe-6e6193be0f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983f686b-a6e0-4471-a4af-d3f76fb564c7",
        "cursor": {
          "ref": "bc02b8b0-45b6-4662-bc74-771c6c16e0cc",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1c05e600-821f-4226-bd21-ed5fbb7e6e5f"
        },
        "item": {
          "id": "983f686b-a6e0-4471-a4af-d3f76fb564c7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f429b3a8-f174-4a6d-b91d-790326d7d916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfe7900-e26a-4102-83a9-cadc50ad5d57",
        "cursor": {
          "ref": "77909246-2d44-4b06-ab7e-66db01abfd25",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b4505c6a-b2a8-4fa3-972a-e8a00ccf5352"
        },
        "item": {
          "id": "dbfe7900-e26a-4102-83a9-cadc50ad5d57",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "040f4afd-a526-4938-91ab-3f011221d0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc86a70-a76e-4911-88e4-363d313ddf3c",
        "cursor": {
          "ref": "1ac10b8e-9090-47d1-a4ab-5f4738e76c35",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "613cfe36-4abb-4723-850a-8b125d93b670"
        },
        "item": {
          "id": "2cc86a70-a76e-4911-88e4-363d313ddf3c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1710ec6c-d017-440f-8c26-fdff3b2a7cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da11a80-e3a2-45e5-a486-ec64cb77e14e",
        "cursor": {
          "ref": "25fb81a0-b0be-4668-a230-5bdc5e264cf6",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "07292d75-ecb7-4e0b-9740-670e7bd4bbf8"
        },
        "item": {
          "id": "6da11a80-e3a2-45e5-a486-ec64cb77e14e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4857da7b-7221-48ae-95a6-b79823e8c7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e283187-b5d1-47a7-916a-95135126df34",
        "cursor": {
          "ref": "313c1214-98b8-4965-bab4-21121819c465",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "568a6476-ecf6-4360-9b61-fda95a72660b"
        },
        "item": {
          "id": "2e283187-b5d1-47a7-916a-95135126df34",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "992ef2b6-5883-454c-80a8-ae6bda6f4e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002484f2-16e1-4555-9926-1eae68c10796",
        "cursor": {
          "ref": "dd87070e-743b-4350-8fe6-3314261eafcf",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d14f6fb6-44ce-4fa4-9936-2498943bb1e6"
        },
        "item": {
          "id": "002484f2-16e1-4555-9926-1eae68c10796",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0c0adf44-3284-45d4-91ea-e58ec3bf3203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdb36bd-5801-4aa1-a792-6d43f4b53e56",
        "cursor": {
          "ref": "8a2a0924-1d50-4909-be78-33b9b50d53f5",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bdc1ca9d-8f01-4d31-9fd9-29483e7a54f1"
        },
        "item": {
          "id": "fbdb36bd-5801-4aa1-a792-6d43f4b53e56",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "14ea91bd-8b39-4b74-bb54-88a95f174de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5531b8be-3a61-45b4-84c0-6e0d90cbb3bf",
        "cursor": {
          "ref": "5963fa9c-3f8c-4be0-814e-fbea32493a3f",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b941f549-7884-4110-8f51-fdc2c827dfcc"
        },
        "item": {
          "id": "5531b8be-3a61-45b4-84c0-6e0d90cbb3bf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5b243cb3-3426-46ef-981d-dc2a87f4367a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3810c286-cd81-40ce-bb19-f529e4dfd6af",
        "cursor": {
          "ref": "07de408d-6bb1-4c09-bdae-88e89b4bc4b3",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b484d868-e87e-49bd-835d-ffae753c8d33"
        },
        "item": {
          "id": "3810c286-cd81-40ce-bb19-f529e4dfd6af",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "583acb19-c7b2-4935-aa4e-5ed0b10eb68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4bc3ee-a917-46a2-9400-378d64e66481",
        "cursor": {
          "ref": "2ab17b79-0c86-47af-876a-2dfdb1333e48",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "554a96a8-2594-47a1-a670-1f723d2b5198"
        },
        "item": {
          "id": "1e4bc3ee-a917-46a2-9400-378d64e66481",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2ef2fa57-0aba-4d2f-a759-da81af5a4763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0b38f4-4510-4e07-907a-e4112c1eb7fb",
        "cursor": {
          "ref": "90a1b845-8b08-41f1-8edd-8b595bfc1b62",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9db507de-d8b0-4738-9b91-fad8e94cb0f3"
        },
        "item": {
          "id": "2c0b38f4-4510-4e07-907a-e4112c1eb7fb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7189c080-3539-42dd-bb9b-19d3fd218591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadd30af-6572-4e8f-bf1b-3fa575482cdb",
        "cursor": {
          "ref": "55214220-e9d6-483a-bafc-e19e902e3446",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "af3ef1b8-a75a-47ed-922b-f19c1fdd9ada"
        },
        "item": {
          "id": "dadd30af-6572-4e8f-bf1b-3fa575482cdb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8560224e-8804-4580-a597-e275285f93fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f731feaf-9b56-42e3-b3a7-db2396a691e1",
        "cursor": {
          "ref": "a71146d7-5270-44eb-a30b-aecec93f47dc",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8f4f280f-a813-4eaa-9b40-45ad0a7ac182"
        },
        "item": {
          "id": "f731feaf-9b56-42e3-b3a7-db2396a691e1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5be15f20-622c-456a-b710-e2699fd74d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c35a7d-6b28-4028-b4b3-dc5e242d1f8f",
        "cursor": {
          "ref": "636e8aa8-d462-47ae-9a78-8ba876d557f2",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "72b91510-243c-46a0-9698-2c65a4b3fb8a"
        },
        "item": {
          "id": "05c35a7d-6b28-4028-b4b3-dc5e242d1f8f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8a462f05-0c9e-49e8-a043-fffb3c9e0112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedf4099-1300-4454-9e0c-1bb79a187346",
        "cursor": {
          "ref": "7c737cd3-b68b-44a1-96bf-b372a7090efa",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c6c0b834-1581-4cc0-ae5a-3e4a73c7e2fc"
        },
        "item": {
          "id": "fedf4099-1300-4454-9e0c-1bb79a187346",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fb12e3bc-0152-46d5-ba01-42f1fbd1b10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48b445a-8e51-4da0-b76f-8975583d5432",
        "cursor": {
          "ref": "1628c970-6454-4ac7-947e-63134300bbe0",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9b70d564-b3ad-4c38-ab76-c7bec07eda83"
        },
        "item": {
          "id": "a48b445a-8e51-4da0-b76f-8975583d5432",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2c6dc5a6-f664-4885-aff2-343cb1a36bf1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0759bf-6801-4855-bf9e-f972cd943176",
        "cursor": {
          "ref": "e17ec677-87b7-4f0c-a8f1-24c8020a5ad8",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3bee07b1-376c-4a91-8cee-fd3c4499cde4"
        },
        "item": {
          "id": "7a0759bf-6801-4855-bf9e-f972cd943176",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bc35d954-1b89-4020-aac8-5806ee662e05",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 256,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1361ca-d9b1-4ee1-ac94-a647e36971f4",
        "cursor": {
          "ref": "0af5e1ce-2ace-493c-b719-a7fa6975196b",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2a05e336-ff12-4519-9890-a1003817ac05"
        },
        "item": {
          "id": "7a1361ca-d9b1-4ee1-ac94-a647e36971f4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3a9c473f-daaa-425f-83d1-0cd2230bfa20",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8bbd91-6a0c-46d5-80c4-62f6513d6b4d",
        "cursor": {
          "ref": "d72090f3-d038-47c2-b9d8-b4ae29b811a8",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "eead8859-d2f9-4035-9461-ba6d7aa6c80b"
        },
        "item": {
          "id": "ca8bbd91-6a0c-46d5-80c4-62f6513d6b4d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3ebfadc7-7615-497e-8097-21bd35cd3fa2",
          "status": "OK",
          "code": 200,
          "responseTime": 1835,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f1f2ee-d4a7-4436-8368-216718e5dabc",
        "cursor": {
          "ref": "6036895d-c618-4667-ad41-f322df74b771",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a2efe393-d675-45f3-843e-f5ce96ce483f"
        },
        "item": {
          "id": "a3f1f2ee-d4a7-4436-8368-216718e5dabc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "579bfc1e-6782-41c7-a10e-80d2d6310de0",
          "status": "OK",
          "code": 200,
          "responseTime": 1570,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd522e6-36a6-4b9f-a00e-4b6e0f7263f6",
        "cursor": {
          "ref": "cafddce6-3aa0-4c12-86a4-33ff9dd904f4",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1121b93-72b6-4a31-86d1-b7c2f84e5fe1"
        },
        "item": {
          "id": "6dd522e6-36a6-4b9f-a00e-4b6e0f7263f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8c326c61-cb1f-42b7-9d0f-f9676df972d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd522e6-36a6-4b9f-a00e-4b6e0f7263f6",
        "cursor": {
          "ref": "cafddce6-3aa0-4c12-86a4-33ff9dd904f4",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1121b93-72b6-4a31-86d1-b7c2f84e5fe1"
        },
        "item": {
          "id": "6dd522e6-36a6-4b9f-a00e-4b6e0f7263f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8c326c61-cb1f-42b7-9d0f-f9676df972d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd522e6-36a6-4b9f-a00e-4b6e0f7263f6",
        "cursor": {
          "ref": "cafddce6-3aa0-4c12-86a4-33ff9dd904f4",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1121b93-72b6-4a31-86d1-b7c2f84e5fe1"
        },
        "item": {
          "id": "6dd522e6-36a6-4b9f-a00e-4b6e0f7263f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8c326c61-cb1f-42b7-9d0f-f9676df972d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a669063-f0e6-4067-925e-80802204f797",
        "cursor": {
          "ref": "c82e86a7-5e25-46f1-a0d8-56c1195f9616",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f0e0972d-d901-40a8-9488-4aac5f19060d"
        },
        "item": {
          "id": "7a669063-f0e6-4067-925e-80802204f797",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1f9cff77-ae96-4ccc-aeb7-664f7ae330bc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 258,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a614eb-91f5-4c7f-80ca-052a543fb75f",
        "cursor": {
          "ref": "ef33f94a-e9b1-4666-92c4-ceb04534ef61",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6e424821-44ed-4890-ac44-26ca71b9ecf5"
        },
        "item": {
          "id": "03a614eb-91f5-4c7f-80ca-052a543fb75f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "762b0277-64f5-4497-9fd0-8a9cbfb9661b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a614eb-91f5-4c7f-80ca-052a543fb75f",
        "cursor": {
          "ref": "ef33f94a-e9b1-4666-92c4-ceb04534ef61",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6e424821-44ed-4890-ac44-26ca71b9ecf5"
        },
        "item": {
          "id": "03a614eb-91f5-4c7f-80ca-052a543fb75f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "762b0277-64f5-4497-9fd0-8a9cbfb9661b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207a593f-b77d-4f55-878c-d797f8db6aa9",
        "cursor": {
          "ref": "e3fa83eb-476f-45ac-be26-a0661f565236",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "04109a10-c6bd-4c20-b480-2c6bb23f5c0e"
        },
        "item": {
          "id": "207a593f-b77d-4f55-878c-d797f8db6aa9",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "26e65fdd-21da-4004-b8ac-44b4ec6df9c8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 467,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2294ecdb-7afc-4ef1-bd51-ddc889121208",
        "cursor": {
          "ref": "fd4cdce1-e973-48b3-b5a1-3fc5d0294f16",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b870e6c0-f5fd-48ca-9f7f-a5eb64f96c2d"
        },
        "item": {
          "id": "2294ecdb-7afc-4ef1-bd51-ddc889121208",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "894a9e83-1e5f-44b7-9693-bfb3ff800558",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2294ecdb-7afc-4ef1-bd51-ddc889121208",
        "cursor": {
          "ref": "fd4cdce1-e973-48b3-b5a1-3fc5d0294f16",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b870e6c0-f5fd-48ca-9f7f-a5eb64f96c2d"
        },
        "item": {
          "id": "2294ecdb-7afc-4ef1-bd51-ddc889121208",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "894a9e83-1e5f-44b7-9693-bfb3ff800558",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22924ee8-fdb5-4818-aac7-88e5d6fbab85",
        "cursor": {
          "ref": "03d02b7f-bfce-4c27-9329-0bd004cf3a5a",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0e7b6522-eb0a-4134-9e45-ceabdfc4ed39"
        },
        "item": {
          "id": "22924ee8-fdb5-4818-aac7-88e5d6fbab85",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7eda7281-9d6c-4a5e-a32c-b34095c020b2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 544,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}