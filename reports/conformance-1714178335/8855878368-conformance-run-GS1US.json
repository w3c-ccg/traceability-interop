{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3ec82065-4a5a-40fb-be7b-ef41d2ea6f61",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8519a1f0-467c-4825-9abb-6ee73c088e97",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a7d9cbb-7538-4e23-8ef8-37914402b2b3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5826640a-078d-4684-9878-684ce5c4d5d0"
                }
              }
            ]
          },
          {
            "id": "9ca8c053-0812-4fcf-bdcf-536560ea34a6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b106cdef-99eb-4324-ae06-ad16420b5d94",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "875375e1-2d89-4dd0-a1fa-80e782d46354"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fb296d67-9395-4633-9bac-79493ca8d0d8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "813580c7-7a72-49ae-8e55-ef05eb44ae33",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78570a42-e279-4a39-af18-7ffea01cd90f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8740a261-b892-4719-b4e3-571532cdc088",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4cdd2a5-8492-40ce-9fc0-e3b4545cd619"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b59840e1-38d5-4e8f-bf89-96e5a61ca5db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e5ff533-72ff-45a7-beaf-645b48817fd0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13cb47f5-76b5-40e9-a464-23b7c5f26bda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "207b122c-cd7d-462a-ac0b-9a3f29fa90df"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c82b0d24-e652-4f80-bdd6-9a07d5ff8a19",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fb26905a-a843-48c2-abe9-9753b4c9c42a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ab67faa-3b4a-4639-a851-112bbd26cc1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68744437-acbb-44b0-af08-c33c513bef0b"
            }
          }
        ]
      },
      {
        "id": "152bcbea-14c5-4f97-a876-9b4d020dbd05",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "214a7984-ea5e-4db4-9d8f-bba3080db1c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "043d0d01-b663-4e29-9a17-815a687b148d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da059b59-02cf-40b8-8fd3-ed95efde1d8f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9927d8d6-d03c-4e46-afec-4c6047842c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "101feafe-0dc7-4b9c-aaeb-cecab3f56ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7c3d1b-8b4b-4c5d-a335-0a59ae26f930",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f5c66b-d7e6-4710-b9ab-bb3d931dec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9118478-a905-49f5-847b-00640fcee91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34e1265-f25b-4bb8-84b2-08c0b401d341",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60162424-73ab-4e9d-b1a5-f8871bb1546b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18ab4a08-0e51-4136-ae0e-fd25f0272bd0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c80bf4f0-d557-4a30-afd3-bbe7cc72446f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93935d16-7194-4a51-99cb-04ad7287c57c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93748582-ba2f-4a13-b2fb-fece74b7962b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6485a60-b158-428e-bcac-f38571ef7921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92205198-ef64-4a23-8ff7-e401dc4a14d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7def27b3-c3d5-46d8-ab3d-05f528eca948"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7082c2a5-c7f7-4210-93a0-e4aee9ba5a66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0fd3ecdc-9edb-4733-81cb-9ab3a0cfd82b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80d82810-6180-4632-9dd4-311586287301",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7b8ad946-7091-405e-9de3-9338828ba3d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af8ce6ad-12de-46e0-99e0-87c81a15c967",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2ceadfb4-528a-4dde-bfe3-e7ddd9f94329"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9b883ad-bcc5-4fe8-b61e-fe506777eaad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24fc846b-bc56-4909-bb80-e19f104da9c6"
            }
          }
        ]
      },
      {
        "id": "9b076701-10ac-4fbd-9016-e665b478d3c4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "dc6cd7fc-dd7c-4ebd-951b-fbb6aca0b525",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c62b331-d7a6-4f25-bf7e-f524eb538ea3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fe119049-8413-4f0e-8756-429cc6b520ac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4749a118-91aa-44c7-aeee-a90989da7e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db136891-1d5d-4938-8195-0bbb93e8afae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129fed02-4dce-4573-939b-3b32d9aa1d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c988965-6d0a-4d1e-ab9d-af5ead85adc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb734f38-4b6f-45a3-a360-661d036e7540",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f332a97-c6e2-4e16-be0d-b507a2fad2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8b104f-6fd6-43b9-893f-6d21f2ab134b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0be1099-5379-462e-967f-e1dc702810fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fe1973e-18a3-40b8-a064-683f54bee2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6159328d-f4c0-44fb-b568-2991d072ce55",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff470f3e-e27b-449f-9f36-bc109f8b4649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83345eb1-0039-49c1-bbe5-b344da1c9927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6f6bcf-3f04-44f4-999e-16a9a24ccdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2f63099-0b93-4fc0-8b34-4990bed79063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbadcb4f-3288-4724-bd68-affe4ef54073",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8c0895-0e06-46a1-89ac-443d0f15c8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e8004c-5313-41bc-abe1-391ecc407006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e789433-cae1-46b3-9343-4098d0a6f9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "531d9d87-ced1-4491-8a3a-e9c69bbafce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11281d1-17d9-406f-9824-f40e390587e0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4839fbc9-45a9-4230-b077-a0879f5d50a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2e9c93-199f-4b81-a86a-ec7975fa5f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8937bc3c-9b7f-47a5-b95f-a44c38f7f8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a854ac2-91ab-48f3-b725-24515d3f7612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2796674a-d28e-4fb7-8f34-277983efb2c4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092a45dc-8ca5-48c7-a19d-439faf35910a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b675a1-4127-4489-a98c-4dfdb358de3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc3b376-3bc8-4426-b9bd-542aa93fa2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a4be787-980b-4138-bd29-05b793706b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a631a2ac-5276-43a7-9f71-cb6001e114d5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d200755e-e51d-4084-b274-0160b1e42144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353e06fd-3227-4d0f-83b7-ab764b6ea6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f114f47-1c6b-491c-8e27-98157dece6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e265aee-e285-4f04-b6b9-e87bf0f082a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26475eae-a596-4a49-9812-791913a87f3f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4ab7ee-9097-4667-aa14-7489c05bcf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792dae47-0371-4f2c-8d6d-493366194761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a5d0e7-d9c7-4d7e-a611-b10f9e0d554e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c0d174f-1e3d-4648-a6bc-69b053f46750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff99f7b-6247-498b-a26a-ef466784bdba",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fa352a-8f3f-48e0-83fc-3a1903073d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfde6c85-c66d-4ad7-88e3-e2d347d13fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac777d4-b2b3-408c-85ec-a2800d738b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb967ccf-cfc1-4f6b-a5f8-65b605741a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095c7cc4-1390-43f7-9bad-b76aec540fe8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854d176f-d816-4281-a9e2-c017755de94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b972be29-4e42-48ce-bb76-e84996f8503f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc83938-05cc-4ce1-927d-91e749a398eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc477eda-072d-48bf-9392-1dc6f41814e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523d6f87-eecb-4afc-93ff-675be8039cae",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63ecf45-5b14-416e-a062-b3cc22ac460c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b5345e-0855-4849-a4f8-0a7c4d2b2e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea0f7a5-ff2a-4dcf-a71b-1d57c07b2925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7b3e38b-4864-4ee5-8954-af9754ce2f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d51336b-1f61-4739-a4a9-ccaa54686bc4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3606db6-6682-4512-89ef-938dba612719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b378ee7-cb9a-42a6-acfb-eea1cbc89b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b5c723-7913-467c-884b-2434017ea028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8373db84-4ddc-4a2a-abc1-fa31cce3291c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a579353b-b884-4acf-863d-f5b0ccb0f7b3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ade0e5-b6da-48db-9aff-7ffc5538615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc9522a-f724-4b5c-bec9-a776806b0e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700ad2f6-036f-44d6-b0d5-0270d651745e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13154550-3ff0-4294-b0ad-a3a135b246ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c548fb-2102-4de4-9d9b-067fd430de8a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b90df4-cc9b-4630-8ccf-5a6753026893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4170c670-3da1-4c68-a0b7-ae1fb124e94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec397e09-32c5-4f3a-8796-8fd697761903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7a0bd13-5ffe-46f2-bdc4-e860c3088e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c397db4e-2661-4498-b79d-022c055b43d7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec1084e-5600-4c00-931e-292b6fdc03ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069a6584-414f-4f55-9ff5-e67dace631ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351fea04-7d9f-40cc-a823-ab07c7685195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97bd0b84-4a86-416c-9b43-3df43e4baa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5724707a-ea45-49a4-b5b1-4542c9cc4d48",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74b6322-55a9-4c98-9564-00f4dc6ecbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb83e67-29d6-481e-9680-51e4d3989b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb63bb2-a039-4b78-8148-ee49c69616da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32e092af-8068-43aa-a3fb-648c7245b9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7dc619-f16e-4f3a-b3de-99af389c5794",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cd73f9-a469-4fa7-8025-3ec8df75775c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106b19a9-b3a0-4a35-8bcd-7c2067be949e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa2d677-8e2f-4ca5-b6ff-30d9042e327a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4c39d6a-eda3-47d5-a145-822443a9b3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf934b4-5045-420b-90dd-973ae3a987aa",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976a55b8-ebf5-4142-8e27-ee6f40d5bbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77e8621-bf56-4d4c-9022-06d8a04bfd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc02409-9baa-408f-a0c1-5b5fbfc379ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1560fd12-21cd-4511-9e0a-6e1e6ab10015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d9e5db-6cde-4556-87d5-a0e3901e3633",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32075483-bbf1-47f5-9146-1559a6a4146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb7e39d-6f4f-4449-8eeb-41412959481a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5676f666-3289-4cad-9db3-ba13888afc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ec3cf3-2833-4810-a647-fc70344e8bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a584c0-f405-4f4d-9453-fe1a7debf663",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ca81cd-9ac3-4a92-b99d-7ef4d9e50add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab6a2ce-8f5a-490c-abda-eba77b6b263d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f071e20-78f0-4b18-8d79-65859aa302db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d549546f-76e1-47f4-a447-e2311190cc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29b8368-bfa7-482e-b536-319ccdd1d0c9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0625e757-21fa-42a4-918c-67a1039af210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1282631e-5632-4c69-8b98-b8319462fa28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26d3d43-1cf0-4a3f-a87b-55a1013ebb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e26a1fc3-797c-4c42-9384-55a5aee1c2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402f162a-40d9-4492-bd48-651126566747",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb0ac3a-fbd0-40ab-add5-5382a554b532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32ae992-7a26-48d0-8d16-61a686b3ee4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199ae9a4-5010-428f-b4e7-eee18ec79180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abe12651-8e0a-4311-9f24-e70f060ff109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fde0c9f-f35c-4eda-93bf-1ef14561beac",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6475268-fcc8-4970-89f9-bbc2c85a034d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c574af6-705a-4984-98ff-4eaad90b38e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0435f934-6710-415d-9015-13554a15d2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15fdb97f-92f2-4987-8203-1330c9e0198e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0275d5a6-1958-48c3-a6eb-32109b0475c6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17efcab6-f291-43c3-9724-bf3abd239b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed1c175-bbd0-4618-b54f-47a144725e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ad9ea7-7c13-4b88-8451-1a5de1ba4e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "71510524-8103-4059-9b21-5ead059b402b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201f80ac-769b-488b-a6fc-a0022e903aa7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5d4b19-f53a-48e4-bb7e-3b6900e46728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d917160-fd0f-4db7-84ba-33f739aeec0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f7242a-e9a9-48ef-b8df-edd8ef24d4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8299ac4f-bcd2-4cf8-9585-bfc8f01d4f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0204e7c-75af-4c12-881a-192b4748d269",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581c7d26-ccbe-4e79-a49e-c06b2281b226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3ef90c-6c23-4678-805e-5a622ce1d935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8e0103-ab10-476a-b307-eae2c95d912b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b741b6f-2868-4bae-a52d-224b7b12964f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410121b6-fc77-4b2e-8c1f-d230b78c8fa8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d3126e-2b99-43d4-af01-142eb3d3a3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ab760f-b8d5-484e-a98e-4b9f82391947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a03d6d-b288-40b3-9dfc-d8a18dd36f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac40e882-6201-4257-93e9-770ad589f7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fadc513-eccc-4cf8-924a-787f3f756e14",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab0cff9-bd8a-4f2a-8550-19b1781bf454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f61b0fe-dc8e-4c58-a96c-b4d099dd0f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e33d351-b9d8-43d1-9aaa-302ae0b31620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92d6dde-75db-45ce-aa7b-96549811844c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ec83f5-6af2-4f2a-9558-971886e200a8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ef6e2b-f1e2-499a-949e-151132d05b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e272f3c-5aa2-4ece-a674-2394079bd35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabb703c-7cf0-4268-931e-b167844ea3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc11d379-f02c-453c-9130-84bc3f35ba30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1338e236-7bc4-47fd-b255-4739ca9de86a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b06625-a4f6-4f67-b8f9-733390bbfb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1037ea29-5797-4b00-af2c-dc12915335bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0387cd-80ad-4812-9c0a-12e2fe861c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f73ab0-609f-4a43-876c-d9f1587fc304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2b7b17-1a22-4b3d-bbcf-3268dc31507c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36648cf7-5e82-4da6-9d3b-794363824b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65346c2-321a-41c2-b552-51337870e5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7c9950-07c5-4d6c-88e8-b4079156efba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f35173e-03e7-49d9-94e4-7638103607e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ec6b88-5cb6-4854-a87d-6d8f9df81814",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a974594e-1cec-414d-ae8c-baba3b2e67aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e5bd23-8a71-484c-8854-c6407dc21256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98330f23-befd-4e6b-8af2-c1f82a12c912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f8a704-c6d0-484b-ab23-371ddae1a368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75499d5-35e2-4289-9dda-8aab59f6fd1b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8c14d8-89f4-47c0-b102-698db1f90ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23336f48-3970-434a-8a2d-e21d8427924b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5514c794-3429-467d-ba00-30ecddeca433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff61db71-7201-4611-9681-a42f7074ab03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e8afb9-bdca-4005-9dc3-69cb3efc14f3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3f06e5-64fd-4a8f-8c6d-15b314d2f951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbd8908-32c6-4da8-beca-ddb5b8a90c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6916c3a-9686-471e-85fc-e7f5d08371ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f731fd6c-0496-4f37-a631-a7d94e75cfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1303d482-fdbc-4207-b2ee-cfa262beca47",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cefcfa-24b5-4df3-91ba-8cf087fff988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0f7dc3-48ed-4869-a93d-b9356dba2598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b69c68-dc30-4107-8e9b-b7f5254bf622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "48a65fae-fa77-46d2-aa9c-b232525ec944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cbf2aa-6eb7-45b5-8104-3f32a0adad34",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ec8c35-6cc3-4e62-8eea-3f0b827a04d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac3acc50-32e7-4882-9dad-e3df9cb8fff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1190e595-41e6-4e3d-bded-cd1a6331064e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fca5672-7289-4e66-a885-f62f02fd52ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636bc09d-351e-48d6-ae75-7889d4ff655c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0916f87-572e-43b9-bb8e-506abe4431e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f946cf33-cd1e-4f47-b3ff-daa04dd2862f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc82bb5e-ecba-4b83-812a-513b02f2245f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8517728c-2569-49e8-9081-2b8d59a0fe5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527d31ed-f778-4d6d-b425-3b28de9d285d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f731f1-5bc6-43bf-9d84-5945f0698201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6335aa-2b7b-4dbd-850e-76878290832e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d986de-ec5e-4943-a0de-28d00c779d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2abe8d7f-3229-43f3-8943-3ce1e93b5577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81dbddd-e034-471b-a160-25412753a5b6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d587cf-c05a-4917-bdb1-8296ea389cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7804271e-b292-4524-ae88-ede1e8bceecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d1c283-f4b3-489d-a38f-65ed564d8979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf095e7-bc6c-4720-83c5-09498893c3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24209a8f-6b52-4975-9359-520a86ae9880",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974db763-a02a-4dd7-86fa-ed22296f1e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b743ec31-81e4-48ba-971f-ab612aa278a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a18157a-cd60-4cd6-bfbf-ce3d97a762f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6432d517-8ee3-4918-8085-32cae1f699e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffab4a54-f300-4611-b5fd-b3bf4059f58e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c362500-3d12-4857-bf08-f7ba12b51b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99c6acd-ac2e-4568-822f-035bb7abddab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f5819f-e3b9-40c2-a13b-d40dcc991a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8e9b83-161b-4501-9489-4909869393a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c278da-2bae-4fb6-9ef3-070e407ab584",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412b60bb-c9a5-4a00-b58a-33d3123c6b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0e6d72-07db-4546-ab19-baf07b9798a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351ec707-3789-4bbc-a2f9-ae9dd310056b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b422a0db-44f3-448b-a43f-38051180b3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd695be-f9b5-406c-a57a-0dc074ddc5b6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3bda1f-0db9-47c7-8bab-3623d8389250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ac6af3-8d3b-43a3-98c9-0e1aedd02ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9588ef9-df60-4bac-a5fb-78133adfc315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fecef2c5-bbe4-468e-a9db-5be28266b80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f032c4-8556-41bd-b5f3-5767267f29a4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7489b152-5d2b-4655-b398-fcacb6a957bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e8276e-0739-4ad6-bb7c-a7b456e20856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d68c2d9-5b0f-4add-8510-c8cdfb7f2216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "16e661f2-70e5-4bd5-ae29-ebee9a700045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712b00f2-bcbe-4403-8d71-db7c033a38d7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eae160d-3b38-4b96-a52e-4791228ea613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd3d295-6232-41e2-9bd6-4e11afeff3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9e37d3-ba15-4896-96ea-7ff042087666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05bf8741-5823-4181-a65a-f9838f058a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee46b6b-ed4f-4cb8-9018-8fd54454900e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa7ddf3-4f3c-40de-b750-2303ef01c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb995ca-ee2e-4a2f-9410-c294032e30b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e71834-5501-402b-8b66-2b9136ab40a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c3a011-1dce-4f58-adb3-4d2fbbf08e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604bf7bc-4b54-45d0-9ade-e426b11deb58",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2897f0a4-e3dd-451f-ace1-0e0f82a50dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df0b57a-ed87-4b9b-9af4-4cb0d4172015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff097ae9-25d0-44c4-a07c-1842f1e5129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59aae245-140f-4345-b066-abc3cc4bcb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f341df-bcad-4f57-b9db-8077b34c64dc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4efc66-ce51-4931-9b2b-3344a942de1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bef8be1-760a-44ed-80fb-64f5938cd75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3b1f59-7527-4f50-bef9-5453c6d09106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c995f7f-9acf-4e4b-a32d-3f1c2bea2fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ce7fa7-da54-4b65-ae11-74803610a30a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0fab77-92ca-4b0c-a224-dca3ed035d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8afe4b-b3af-469c-ae29-6b06f07fc905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069dffe5-0e3d-4aea-8ddd-72323e945b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1095488-2780-457d-a6b5-88d134fbcb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0939ce1d-a501-4192-9512-3a581714e444",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a18342-f317-4032-bf64-511a2a4982b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9f4e45-4a89-4126-b90f-5fde19fc4b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b9ac33-5666-4ccf-a1e5-a2cb6fb1efdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03a4a6f9-8589-4019-b3f7-51c038dc2efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc248e4-080e-488d-a49c-6dbdfc0ff795",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36049314-2db9-4667-8b4e-2eb314e885b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4a8128-0263-4150-932c-d1fe41994c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa1ae1c-deda-4d2d-9baa-ecbd2c0d33b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7770e562-422a-45b6-90ff-208f78ea3376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da61bce5-b778-4c7d-a9db-2c1015a82242",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2adc01-66d8-4ffd-8714-0006c7e9e43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657441f5-32ae-4e33-8f4a-c1698a845922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18156746-e597-45ff-9585-988b1e835e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41fd30c1-0e43-4199-b556-60bc34f57bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f81f12f-0f34-4d48-934d-f888489a944f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc601dc-be96-4fb3-9a01-9719288e625b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5d2877-5e34-487c-bd32-64405939fda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c329b3-c26d-406e-99b0-6bdbad5ab7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db9b275-67d4-4886-9a56-586a263e821d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26437c92-4669-4a0c-b6ed-f4fa20d3aa36",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d222bfc5-ae25-4cee-bf5a-42d311254055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029b2435-225e-4040-8d73-44b9ad6050bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547db7fd-885b-4b94-af99-25cb01b29e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24a56bf9-7126-4b00-bb04-393624d91c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb43c99-8198-4d5b-8b22-1965d0331cb8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fd0db1-6cb1-4e3d-8d1a-c3fefe0635e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2092f5d2-acb9-41b5-b2e7-a6bd859c0f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7b9c76-c67e-4ee5-8bc3-8a4563c0536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "569a2051-e84b-4829-bb70-8e8724aea184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac06fbdb-8d0a-482f-90c1-28977260679a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f71b82-0cb7-40c4-803c-a7ed8b10d4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2859a6ee-3d47-474d-adbb-6f5ed33cc8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631e8dea-7452-4fcb-94f7-2bc1fd2b6ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a573f4c7-35fd-4cd1-8485-4df435bf71e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bb8bc1-86ab-458d-9d46-a78ca74bb461",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc72d99c-ae74-4371-a3b4-ee05580a25a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21af1eec-50be-49ee-a408-b8aa133bb691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464efdd4-fa93-4d81-8229-cb02fc43eb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5d46d6-0e61-4f23-a6d4-bbe38e47abf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b866ab50-82d5-4447-be7c-f551c7fa390b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba71aec4-6f0a-45d3-9236-6c48b7a62fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620e10b7-7e32-4c13-92bd-ed305c6bb17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a021a26f-6365-458e-b501-1ad6a0ad1336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb3efd7-0474-420c-83aa-faf4ef695b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f75e51c-a5c2-4895-985f-0d81dbb0af55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594b91d5-d112-4491-a290-779d44c173ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddf3306-872e-4be9-b79a-0ad22ba91573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb60ea91-2cc8-4587-b15e-a991fae46b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77969803-a582-4899-a829-a313abde0858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca125f04-9bd0-4a7a-b64f-979f30d7e74b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8128b95b-eaa6-43e0-a1f1-3d38c83ff46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97de3b1-0768-4dc9-bd25-3944e8a4fdbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e958c1-dc29-404e-8f07-4d5a24046b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc70e207-d2a9-4515-8063-0c650ecf9ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7feafb-bd11-4abb-b99f-656e307e6fe9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46196126-5ae0-4045-8a49-4c8aee5a589d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f484a8-29cb-4631-941a-5745ada85ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7091daab-35f5-4fa1-9e56-dd8892edbb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e261802-bb6c-4003-9a56-d699a99aad9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fc1cb0-19a4-4331-a4c7-03bd94edef8b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da50c428-f2d5-4d95-8c98-c74ffe36f5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e2dc23-4171-4622-aea2-e0cdf1172514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e686f8-fa3c-4d42-9f07-705f80f13794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "38c32413-ba44-4f2d-bdc2-aeb5fdc80d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d969012e-be45-42e8-a5c3-5ac20d520738",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82d27f4-3874-4fab-b53e-401428af9eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578d5d59-078f-47d4-bf48-287604ec9c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd094a3c-b790-46de-8aaf-0d469499fd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da0482e-e950-488b-946b-646eb7a9352f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18c7957-fce6-42be-a534-abb5497d8ee9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99b5af8-6001-41bf-b0b1-cde4dd9496b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ee5e5e-1c34-4a31-abd2-4815cc56c90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f92643c-9413-4f9f-bb97-b09da63641f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b598dc5-172c-418c-a282-be0a90caf46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f70f67a-1361-4d08-b8bd-c7add7636455",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cfa2e3-5db6-44fd-b695-e5bd3d81cf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158b5010-dc1e-4a98-bf75-1a79876bd2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632ff4b1-1278-4c3d-8f1a-74764c52d870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00d80fa6-4f26-4f10-a427-ecc75e678e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ec2827-4ee5-4333-b8cd-9705a3473452",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f820db-062f-4e74-b15c-5384a18afb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2689b10d-60ea-411a-9717-a1d1e5ee7d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b62827-5e56-40c3-9bd4-e4f40e09da96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a8d79b-babd-4f54-9f5e-9c346fdee9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b833483-55fa-4971-8675-8d55cceb5ea0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4269ecd-a1b3-450a-9ebe-94392023006b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df45b9d-a1ed-4940-83f5-877a2daa4995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cba648-ff74-4eed-a2a6-4f4c75cdb2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31830c03-be95-4f8e-982f-71545d211a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08155b89-5277-4078-b95a-07494838b777",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce25aeaf-8f8c-4c9d-a88c-25230df086fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960bf084-f73f-4844-86f3-65f300160314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a028cb7-5897-4f64-9d57-bec052481aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4adadccd-3096-49fd-acf0-931ea3262a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a55ed6-d4b8-4562-b17e-e90d0ebae69b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d180cccf-7496-4ed4-8a42-f022574a99c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bd3422-5b53-4b3f-8797-cdc5d27a61e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799faee8-9a01-4da0-92b8-e9760d9469e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22285b3-ae24-4d32-84ae-03667534a28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fe198d-3f1c-4e9e-9c2e-ed8089ac0f57",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3e7aed-85a2-4000-8487-85d261b0ceb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978cf9c9-3521-46aa-804c-4fa5a901e19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b8de72-724e-4505-bcf8-84ecb5e88bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c95f4cee-1ce3-4f99-9fa8-1131ceb78c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f07960b-1a01-4d40-b193-46f0d2ca037f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849fb903-73a7-47b9-a9d1-151702c0ac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabf50ea-f08d-4ea0-8faf-eea05553aaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca6ed27-d6c7-479e-9ed4-73cc231ce686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2830c7-68ed-4a1a-84fd-7a719ba48be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d62ff4-66b2-4761-9413-0c0175112150",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081fccb0-a942-4aff-a494-7482a0ef835b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7a33fe-8a94-435e-a5c0-9485789ccebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4337680-f333-4137-ad70-93b64be44728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e911e093-78d2-40d3-88d3-c2e6051154dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72764828-57f8-4524-9e50-cd773fa42cd5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2666369d-8302-4f3d-a19b-78607376e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c7913d-e3b0-4e92-b75c-ddede859559d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e113f29f-e763-41b8-b681-2794f17a3c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "207babc0-77d7-4e3a-9948-532e8f5bdb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159abe0a-0988-4bcb-b19b-c5e248e7f8ff",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5403ea-37a6-4d2f-a0ac-24ed5795eb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8d00a7-105d-4c22-bd89-ea4f9a35a9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773bfff3-0776-4abc-9bbc-cc6b0634d9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae35d902-f5c6-4dbe-ac5e-680225b3f834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe7cd1d-6ebe-4fad-b856-b318924f8097",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954c369d-135d-41a8-9dbb-8725798215d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad39da6-4e91-4799-929c-e9fc11067e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abf1cb4-0282-458d-bf1c-f79f58d7e3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac2936a-c0b5-423b-ad59-9eb9cfdb2cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a713bc-26b8-4a82-a898-373132083b10",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7d4319-72b9-46dd-ad68-630fb12be5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e118f732-a75e-4afd-9dc2-c166da3208ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca8182a-f151-4d43-bef6-d4c553463860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7008c587-88b6-482f-aeb7-8db1ca046173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c60ce2-696d-425f-9673-fdf8e5061d73",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f8b6ad-1ad6-45ec-bf3b-880009072a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0721ab9f-c8d1-4c4f-87ed-117acf3eb1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5776fb1e-6be5-40ab-bdf2-5e7d0fe4b4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78eb0cf-3411-417f-b367-4fd6281aed44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035321fe-e268-4498-ba0a-2178cef28d01",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5608a80-56b1-4f8d-a7d5-ab6b692dd270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6e5577-27bc-4d03-bd02-bd213476a3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9448f3ea-1a16-47a8-b0fb-043406c05640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a022f0c5-bb2e-4c7e-88a1-e5885ee6998a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3ddd77-dc1b-449e-9f58-45ed57868c7f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee39631-65c2-4b06-baa2-9fbcc6ebc5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c977650f-2a9f-48d1-a305-cc2bd1866b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba98a271-ae47-4af8-b9cd-cea5ee706f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93d6c54f-bc81-4d6e-8318-23e98f60bf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca183832-d0a7-4119-b76d-290a86ac3200",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df61061-13a2-450b-bcd0-bfe3d4c89ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b23ceac-0220-48b4-8efe-b83be1752ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c17ecd-dc3d-48fd-a9e6-c0cdd0a4467b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd17400-202b-4d1a-b73c-4cd219adfee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5954b610-1919-4f5b-88ae-80f03f549cc7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2755d944-608c-4228-bfb5-7c795ec79fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c4dd03-138b-46f8-add0-cfe8db52d368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f481c3e6-ec63-418d-bae7-8470b853088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8835adf5-269e-48b2-984a-adcb1307c0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b182486-627a-4d09-8fd1-ad45a7e183bb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e40276-5c04-4790-a50a-ef378b2d6c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9f8ec2-3f73-4374-a0b3-02161beb149d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63ffd76-8d03-4bf7-9470-f28bc32e8e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "735783a7-c0eb-4989-a8db-7a8c6cd77b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a45bb4-3379-40d1-b3fb-66ca5183aa44",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bc54af-8316-423b-94b7-78b1fd755fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e3d72d-b0ef-4818-a059-7d4607d0545c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe350944-c077-4076-b45a-d7b4d730e49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c055c39-5903-438b-ab3d-b7b17dc7d87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8ebb9c-f94b-417a-af81-d711b8aaddc0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5f790d-5357-4294-8345-29f0e93f05e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73768612-5dc1-4ef3-a431-8898fe495a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352392c0-ba02-40af-99a8-da934db35e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a057cb3-4843-44c4-8e56-bb42f28bb26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961082f9-ee13-4559-99ff-1ee9b12b69dc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caadb687-94fb-4e06-a7bb-cf3f6fb9be27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c585414-5746-4290-816c-02dce0d7bc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf63978-54d3-4b15-9ef9-09a9a903b9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c23fd521-8938-4cb8-9ec4-74fa443584a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cbdfd0-33dc-4b9a-b3f1-0131218aa408",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c30f26-400d-4c91-a020-53a1e317ed5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a723064-8a0a-4b3e-b00f-f389fad1a7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f185c1a-ba43-4da4-a470-0f57fa1af23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c0b895-8878-4418-be13-949f67642ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b597d12-21e9-4130-94f7-547d19670005",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace60e51-6bf7-46cd-9459-ce52ea44d343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9b2ef5-2415-4392-943e-cddf2cecd23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e79fc7-5296-44be-8bc5-6e05256b4aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7577617b-c3bd-444c-9cfe-efe379a5a88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4a95a2-febc-42f3-80ce-98b421064859",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26ffab9-9ccc-4131-ab88-e9620518cf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6757e3cb-84e0-420f-90c4-cad9bf564f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089982c3-929a-4644-bb1e-5e942682c33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84197652-b48c-4d90-b551-958e3c765755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dc8e05-7f5d-4188-8928-36a89f2ccd89",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec6bb4b-0b86-4f40-b8c2-e9ce03181530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49999d5e-e854-4d76-9857-badf2c85ed49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6249bcc-e37b-4560-a549-3f81bc52197d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3661ba74-b235-4065-b26e-d68012b8dabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfcf36d-a709-4da0-a746-d38dd1526201",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaed7c28-7fe2-49bf-aeb4-4d0a3373d38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fb7b4e-3cad-4d41-b73b-92e4f6fef4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19219b0a-fa31-46e5-a30a-efab9cb50c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0211180f-38b5-4a30-aeb7-9ddb601455a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f333ded4-4e65-412e-81a6-8ccb68f1c52e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05843b32-0ae0-41af-82a0-2ec730f9b071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d681356-8d39-4bf7-a23b-ba2a9d09580a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286024c5-076d-41a1-9b19-24cedfc43e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b85c3d42-30e1-49d5-88cd-aa89c15c3daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883f2d7a-113a-4a22-916a-22b105fa4c6b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e744c66-d38e-48aa-a1c7-ca34d814dff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4c1d582d-4972-425b-8e2f-ce82f9a212c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f931a3c-8f23-4eca-8090-0c2fcfcd57c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa28fbd-ecd0-4a98-9cb4-a13abdbbda27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1af5e7f5-ef27-463a-a941-451af6737bcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "700a15aa-739e-4340-b26c-b7e227cdd9a1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0d629a-73a1-41c1-940e-df972566435e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c996ab31-0d7a-4518-8d11-320f592c8648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0692215e-a144-46b5-8fe6-e37a19f114a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "711de6e0-316a-48e6-a9b5-035e47a0a59b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67aba8ef-3175-424d-b810-6052393a3e29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e70bf57-3334-44cf-b6b5-0be696803381"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c1fe094-4683-4e4e-8e06-ccb17cc206f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "891e761c-3e5a-47c5-b994-48b85988aded"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "860fe4d0-9d7b-4864-a445-3063fa5ccf5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6bdb47e2-cd18-4846-ba2e-4afb061c7d65"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81d74afb-13ae-4f5c-a494-5b9d3ded5639",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76602b00-0d1d-4369-a6b5-b7c1d926767c"
                }
              }
            ]
          },
          {
            "id": "6d643e11-e28a-4c31-87c0-f3b3a07c756e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1bbdb66d-028d-45b1-9e1a-4eaf265a3e00",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c7d15da0-a9f9-48b9-bcbd-429dba3421f5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ca8cad-365e-4c81-84d8-d99ecb048ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c8558c38-a1b7-4313-8d16-cae6904fa255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2cb1c2-2923-4f30-889a-33c17da4d3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4713dd6d-f64a-453f-9c59-34c37bf86557"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77c150be-288d-4592-a14e-e5b05aa7afc7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "972d53fe-801a-46c6-9108-76802c5802ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87bf17a3-dbe3-4db3-b7a2-339183d042a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "125b9880-ad7a-41e2-bb39-5147209128bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1b74beb-ad01-49ab-b7d8-dd7911bc52a0"
                    }
                  }
                ]
              },
              {
                "id": "e6e615e9-e6d2-4979-ac26-e7d2d2774244",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd2abac3-db43-45d9-b830-5b7406fe859e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a90b5e1-f43d-48d9-9018-0634cd436c4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07e9716a-4ac4-45f3-b56d-1d31bd4b2e74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa3e4734-ed07-471e-be09-689969733281"
                    }
                  }
                ]
              },
              {
                "id": "6241031c-e750-48a5-b70b-76f2ce04acbc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e051ba54-8fa6-42c2-99e0-d4432dbcdc31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51c851a8-b6af-4e56-b13e-9faa835a3e2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce28801d-da1a-4def-bf37-0571fd5daa7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de74961b-fd7b-4ba2-ab53-8ab42b891605"
                    }
                  }
                ]
              },
              {
                "id": "7d91c9e5-3aac-42f9-8ffe-b3fecf104071",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "112e9706-d2dd-4481-b265-b05514ca5953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a7e5130-a03f-4e4b-870e-f90b8e40a57f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c2c2d36-bae2-4b86-a579-c9a1fb80bcf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "578cdebc-97fd-4137-9582-09ead970b15a"
                    }
                  }
                ]
              },
              {
                "id": "61c954e1-5432-4370-8254-5a3e4bf129d6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19a022ee-b5b9-45d0-a026-fa08c5d801fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26ca2bb8-401b-49e9-9349-6d165105917f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79d67818-7d10-4cc3-a189-9f94aafbd91c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "24c8fd08-2fa2-4f5f-b9b2-6a3ec05f3fc7"
                    }
                  }
                ]
              },
              {
                "id": "c36fc588-96d3-44e6-9b3c-b4099c7a0f90",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5c550e2-3b2e-4e07-a19c-1122b12dc9a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4846cca3-1900-4921-b43a-8cf1238a7f74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0a690ff-1314-4277-9604-b1fe960ea29f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7be67504-8336-4a97-a354-2c0b949d5411"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecb961d5-684e-4933-9cd2-4ab6a1db1ae3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c0d5065-27a6-4c75-8cd7-63b9507d94d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73628123-752f-4269-af8f-326c43e69a95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e011824-65f2-4f9a-a6b9-412036fa4981"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b5109b5-bfcc-44e7-a1f0-9c85983f79c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7db8cbdb-1a70-4b24-b4ea-2dc2e48e38f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ac06635-6975-415b-b565-4cd5c3a6b38d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4852af5-7e4b-416e-b2ba-2082cbe3c6a6"
            }
          }
        ]
      },
      {
        "id": "47825955-a773-41af-912a-260380d7d4d4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "620d1793-eb26-44d7-973f-914069756078",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbcd86d0-afd2-4a43-b3f3-d2c400667924",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ade66b0-dd55-4463-9cfa-9778ca78b3fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d873a096-86bf-462e-ba9d-7ca01095774f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52a31c3-be76-4b1f-b134-90f7ac4ff248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c91f3d7-db59-41e5-b82f-c3a291310208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50bc1d8-09c7-4578-8db2-5d7fa31f2e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4cde7f-6fc7-482f-9f3f-32ac6fafd610",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b5006d-77b2-45a2-9f48-9d6f2583a9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dc425a-3f40-45bc-8c48-c3b81c940023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c104df4f-c34c-46c4-bcf1-a194537987d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2793c1-8f9a-4e4b-8231-153e3898c7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242d53d3-ea23-4527-9033-99738ab9d341",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c385725e-f5d7-4e3e-a885-6a21e884051e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8717ebf6-04b1-4bce-aab6-33ae7e4a9664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa799c5-509a-4c0b-af21-1633938f5b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3cb69d-d930-4cb4-af6a-81142de63f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b206cc57-6def-455a-9f5d-476d63f33268",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15ac2fc-03f6-41f3-8131-4498f189ecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a91f15-de45-4a5a-be4b-c8598159212d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f134aae-3323-45db-a7ea-807af6e93d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68a4ac07-074c-4c55-9c91-da6e629e926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8142f7-4bdc-4d62-ad3b-c6fa10b339e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63761d3f-e7ef-47b5-9db9-8f738e0e2882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87447fd-68e8-44fe-aad1-f922480c253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b4c2cb-fc2c-493b-9fc6-9d96d4cebcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "148432d2-0c05-42f4-8ff0-8cdd3504ba00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acfef97-4bab-4eaf-9c9f-537eda3add88",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a0ad87-9656-4327-ac8d-9ccb4e2eabba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff101a9-42ea-4475-869b-0f5446ff9478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f287a36-d555-496b-9c40-7d4ec2715395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cb3d43-1add-41f0-8c8e-ae701a7eb153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdfb366-c24c-4342-828f-987c5c95ca8a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d99b73-dc14-4f6a-abc2-e4c303e86235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a508089e-fb64-4672-a4d9-cb51b050e446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515ac582-e765-461e-9204-80c97a84b633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e997e6-7d4a-42ae-982b-d0f2dee21216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87c0f42-e029-40bd-94b8-01e0985ad554",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4960b3f-a0e2-4dfc-b788-019f8a9c6949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b1168f-940e-4089-a9f1-76efb8a5ad74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e457d3-633a-4e35-bc3c-1bc7b7435a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1df4b1f-a8f5-401a-9a4f-da44e2ddf583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969b7813-4e62-4a75-b89b-47b7ebc9a58b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79669315-9c6d-408d-af4b-83771a1f690d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5d6c47-b2c5-4e0e-8269-33958c08d733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d87929c-4e4f-4e2f-8c0b-632e2995f5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20f54d49-3a29-429c-84ca-e0d84ca4ba6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eed07fc-a6e7-4122-98fd-d265fbd66a60",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d034e8f9-f9a3-4080-9268-fa91e49651c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79b79b9-c05c-46c3-8bfa-50ae67b2ee73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4763dbaa-e072-4ccb-b44e-23e6e4affb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1a838c-e57d-4384-a3d5-5e32d327fe29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de732649-0fb9-403f-97d9-7f8c4d7ca77b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbe5263-c366-4565-b52a-410d06e33625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2b8239-953b-43c1-884c-30c01d2734e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7664c9-5645-42ce-8191-c31fc5afb6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7e54bdab-f0db-422a-b0b4-fd7b6f4f4ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b7624-1ce5-4331-a48d-0ed49690b213",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c1d3af-d939-483c-83d9-e5700de6843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38854429-75b0-44ac-8d3f-f9b2695cf222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248f4a13-36e5-4aee-8d30-0da1844c34d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac39e66f-5514-4ef9-9f5c-cca995c746ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d035cf77-2425-4062-8d27-dfae66402669",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d43d59-1015-4d5f-a522-79760a770606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc60fb3-66dd-4304-9935-7286576ce36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec553981-20b2-4b1b-b2db-046a28150f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bba0344-5994-490a-9169-95565e04d929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ab2bcf-d798-4b2a-ae4b-d23f8c54cbf2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05632912-d3c0-470d-9202-07ad2b1e9e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db737ec4-a9fb-46ff-a23e-ad2692734f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0b8f40-ab09-4cdb-b66b-b1cb3593f7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e07b3b1-d2df-4485-8ebe-696742cc02c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6b6b13-0343-46ea-b633-b5eba4403c25",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4d519b-ac47-4b4c-98e6-68de103a0b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08f2dc5-3d97-4f5a-b825-08a148473d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1e2053-1b34-431f-afc1-7b3c7b81fcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1625e14e-68a5-4de9-a3f0-d29c5a52f40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd7fff4-d82a-40a9-8f12-625d96aa4a34",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9283255-d67c-4308-aaa7-b7bb9dc56245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec325a93-11d7-4ace-b3a5-8f9e0591f5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddd9450-ce39-4904-8ac5-d02cb595535d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "15653e13-adf9-4af9-81bc-da694759a4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac593c1-d087-4da0-bd1a-a8bd65e3c6c2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb72f10-4827-4a77-8afd-752552dfc9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0d17e9-f262-48c5-8c27-e43ba4a61892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3110ace5-7201-4a95-bb99-4977b210c37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c777f37-a253-45d5-8125-38d65104f1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ff9fdc-09a0-4302-98ae-4b30e5b0ae42",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f20d15-1358-4ecb-bedf-3e5e25b9d4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e3b3a5-e65f-431c-8f1a-36c8807a4cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce68870-4526-46c1-a251-0f817fae60a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "267a8513-2215-45e0-8c26-6864591145d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30c77f6-5545-4214-b34d-f98755be0c90",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4795cb-9da6-4109-9a44-f7191006ed0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b633fae0-a42f-46a9-8f2f-029a85ed5995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762ce1bb-5dca-44e6-abb1-125a193fd4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "210ca6dd-b168-417b-9b6c-1aebb2906de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb320c39-44f1-4a87-a850-907f6cc41ec4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4a9032-b9b0-4b53-acb9-d2e1ddfc323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4b2919-8d8e-4c5c-ba2f-73d4f2661242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fba8c3-f043-44a7-904a-ad3ca042586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac75e6e9-15c1-4cd3-828e-dd3e8b3376a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3096d9bd-b3ae-4a87-80a1-94c76c56333f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc41dd72-f787-40b6-9462-fcd6d6c628a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2229176-795f-45cb-b832-5600c1350234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f977aa66-d042-4c7c-a583-875393f5305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c2befc-e52f-4dc9-ae7d-df0ed0f3fa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d2c2c1-f935-4267-9e85-59a5a5228e12",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09834c66-153b-4c3b-aca9-4b77a75c7266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a80e2e-6406-4cab-a8d9-75ee693c0981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4dc581-ea63-46b3-94be-94235cc077f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8ef1ba-a5eb-4c7a-a6de-d559d13bcd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba17b900-06a5-45e4-8746-81b2966bfb6a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551d15fc-59aa-487d-a63e-68ffc63c4f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060b61de-d3e1-4e54-9529-f92f106674dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b939a626-c4c0-460b-be1a-884e819843b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe34b8ea-69bc-47c3-85cd-526c656a5897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c424c5c5-2fd6-4243-9299-429c8a6a05c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d199aee-9e56-41ef-bacc-fa564dd32c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa5958f-716f-4c6c-b91f-d90531e214af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce277ffc-6996-459a-bf46-a33a37c7a24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ffa126-4e79-4ac1-890f-cc6191c8be75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5f83fd-19cf-4b11-824f-f06052bfadef",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9458ddb1-1548-4b41-861c-9f852869ef42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6685c274-9c80-4cfc-a641-1b3e15cafe49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e4666-abb0-49e8-a6c7-17e61106bf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e776e604-5bf9-44ba-abb1-a7ee04a1c7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a023a99-5523-494a-abeb-ab1b47b1959d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0b245d-f2bd-4f96-a5ee-4abfc920ec68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bd86d9-fff3-441c-a2a9-97ebc1806ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436c9cda-d7bc-4ba6-a8a8-03ace293b814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23437b4-e43b-4969-95d9-9bb6bdf73f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e818b18d-be4a-4203-9830-0dc6e95aec27",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f7cacc-a4c7-4d10-8f00-8d482a57d635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a221e6cc-e045-4ff9-9a69-bc51ac95483a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be31507-f1d1-47d1-b99a-a12c663e180f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f7933f-e994-410f-8619-85adfdc4c4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcfb2c3-5155-4076-925d-1e1765a93276",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f605f7-6e20-4e6c-989e-d36278e51fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1a97df-e942-4ab4-964c-ba41d816b56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfca07e-d18e-4714-9f18-756637844e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "883b23cf-f2d9-407e-8a1d-903e8167cd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906784e6-8f69-45bb-87b1-1002a6478725",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34982bc-8ccc-4e77-a7b1-78b5cbf09a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a9c173-b73c-4706-b243-a3b9ca2d36a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1864f6-940b-41ed-b01e-88143a3198d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77398839-e1d1-4761-a064-f08d7f771ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f50d926-bf08-48ea-90e0-b8d4d0dcb60a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f0b92b-aaa7-42ae-91b5-5be8d5243398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593f164e-870a-4ef6-8cb7-956079adeccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09f6ef9-b5dc-44e3-b9d6-d1b08fc70e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0340a8d-09c6-4edc-b52a-e6ca4f450fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4700adb0-5464-41c4-9b0e-99b18b8fd2eb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2449e4-5ea1-4e76-a3c1-1bfb1091e24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e06f91-d12d-49d5-93d2-f98e466fa9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de011b64-a53c-4815-a343-8ff244093de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ecad45-1ede-461e-b65e-d0d54ab2ce4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43a3621-83cc-498d-b718-a9d208a45849",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d03df35-bc39-425c-9950-84076f926002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f003e8-7aa9-412f-b12a-95945f5f6a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb85e69-db14-41ed-953a-d917a829eae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17542aed-0286-41fa-bb62-7d56306213e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64427d5d-3b86-4e4f-a4e8-0c37921e7a44",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8546e7ab-0aa0-4363-8a42-2df2fe0c19b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b36018-902b-46fa-b7e9-4defc2af8fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d3741c-2c09-44e6-94cc-bdccce753d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a608f6-b854-4d49-819a-0502ff843c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f031e7c3-8b6a-4f68-baaf-814a3f2569e9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4448b4-eb5d-4e18-a6af-28cc4f0fee62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b51727-e784-4fad-88c7-6f4d6e87394f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc081a98-9a50-4043-90e6-687201cdd206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be99f2c5-09e0-47e9-be17-2138d404daf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74850e10-320e-4821-bef7-815de9025c87",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c598fae8-474e-46b2-a1bc-c05b07dc5de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bde1a0-3b89-43ac-b431-7c84e9e9f282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acf15ec-9fee-49f3-80f4-b509b00e801c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f6fd29-b613-441d-8ce8-d3f5eb6e8bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5493afdc-ee69-474e-ad66-eb68aa6f01fe",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caeddfe-cfc3-46fb-af25-35ec29dc48cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378aea2a-8ef9-455e-b4d2-9d929e3c80e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06d0cf4-7522-4f5e-b07c-95e5fdab3927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e37027-1ec7-4ed7-b001-7052d3309992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa57e830-61e8-4abe-930d-a5d88b5553e6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24b1128-9cab-4ff0-a5a1-731752d5713d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8060fd6e-a3a6-49ac-a4aa-a10c08a5fc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8411a0-2172-46c4-b2b5-52a9977dd2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08cf5c53-164a-459e-93cb-58edb925880d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52d5e7e1-5b03-44cf-aaca-14edbcdc0e7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f49254f-7395-4151-9a35-673ec1eeeed1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cae328-4164-4d75-ad84-2ef76d460359",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c257cae8-505c-4d9a-8681-125d5803d045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267e8ba5-97b6-4fa2-b3d9-1fd3005c0e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f2e4a52-9528-478c-bd9b-da7396ece946"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5762c8c-409e-4c93-b276-e1f74911dd7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31fb5394-1703-45a7-ba5e-a3ca30f3ed42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bd89efc-f047-4adc-981b-98aa9f4e22e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8006e588-84a0-4b89-a44c-78a3a7331b03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66806f68-63e0-4118-a014-95799ac1b605",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68c6a4ff-0f58-491a-a40e-68649108fe52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17020b0b-11ad-4cd0-a41b-26197da15451",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d4ac394-1210-4a57-a5e4-12ffd1e36aab"
            }
          }
        ]
      },
      {
        "id": "e6391ac8-ed45-44c6-8414-1bcf65a8316e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "afb47b30-69b0-40c8-9ce7-db18a42045eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6aa71561-7b7f-4e4c-a8d2-5447b099eaae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "75c70c3c-5fcb-4e8e-8b82-6507e087a70c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9e5fa9-9b91-45c2-901a-54fbf27c9d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74048670-7bab-4e68-b3fe-727405d19c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72933f85-0191-46e0-8216-01dcbf95b12f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029f4b2b-4336-401d-900f-1da3a9aca9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143c1492-87bc-4e6b-a9c7-c360be101134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16b5ce8-c7d5-4456-923a-59febf4873bf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f3bfdf-0f2a-4d7d-9330-e26bffb0f41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05dd620-7608-4070-90d8-250b5f4c35a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48e74f7-0a14-4822-bdf9-55aec42b880f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2036fb80-06f0-43fb-a1dc-06839d90bcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4133ff96-a935-4629-b5d9-6b8c39bfb31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac69374-756b-46af-82d8-498993007477",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5c772c-aaa5-44fd-9049-a762a7c672b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe2f584-7777-4b58-a405-a9dac9fc7064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65b355e-1c0e-459a-bc95-824212ef51d9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1383931-6785-44ea-bc5e-e18e2b740850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15fe206-84d6-4ccb-ae16-050eb8704457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3d2771-8b8e-49f5-92ce-4535281d608b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17840afb-e222-4c10-8d27-04cd7ea564a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713e7ce8-92f4-42e9-8c3f-cdd95438f3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41079f63-532a-40c1-9e90-9653a48094ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de31a0c0-2171-4b8c-9233-8a97db8a7976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c495b01a-0968-4d81-a553-d8a3b39360f4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d8d8ba-e0bb-4d3f-836f-f50b7c853885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e3173d-e88c-46db-9fd2-392a10e87002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f1c694-3d15-46a6-a372-a3802027db5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b39cf42-65e5-45c5-a8ff-178a255c1645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042de245-f394-4902-b2f0-ce04308d8c4d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6e595f-2319-4b29-8aca-c051e8771850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0413201-3b2d-4849-829b-dd5daaea643b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152f9620-00b2-428f-ab63-0bd11dc6c401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef373414-eb65-41b6-8d2d-43fba62fb6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743e2325-a9be-464a-8aa6-76b329b0c57a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5454c10c-149e-4670-90f9-1e4b08110117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49129c0a-c28a-4c6c-b718-9acc42e17dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715dc8b1-63f2-4746-9e01-29aeddf444a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8d097c-edbd-40ca-b4cc-0bb073758d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ffd23b-8af0-4d7f-b6fb-b58b215032d6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dee4526-c17e-4981-9301-acad9c0e1446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef38ea3-211a-4537-9437-0d34d19896d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55660f2c-adf7-4e23-80e0-1d7e41d7a280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573a0623-68c5-458d-8735-70f71c198e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fd105b-2593-4d22-a2c4-c3db3fb2ac01",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ece9723-d04a-4100-a56b-e9ff6019e36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63b6795-a990-4d49-bdf0-41f79ddba10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcf4692-d461-4044-a841-182cd79b8812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c07cd6-913d-42ae-b76d-ad6c83423233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f45f727-c836-4673-acb0-d72596934888",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8170a9a3-7287-4522-9ee3-412aa1cec5d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fae6073-42c6-47bb-bf2a-0176b533754d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad74ee55-4095-4463-a8a1-e010da3d306b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6357fbf7-3ce1-4367-a051-1f222bba3e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2951b54-a474-4410-af3d-7b48bba818ff",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8b1e81-502a-470f-b94e-236729d12b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8948f5ff-a1a3-493c-b29c-1141acc88c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a6fc36-b07f-4b3a-a0b1-6f32e1082461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269e829c-63b2-48bd-9c11-7cae0aefadff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cbb930-e77e-4b71-a884-ef9ed9aa8434",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51085bf-4a23-4948-835e-cb92710b4581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8eff17d-7f40-46e8-9b9f-15a349efae89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e5080c-4135-438c-8020-c27e2cdc44cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f725a26a-6298-4558-84f8-192c62144691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d254118-1837-4c3c-9a23-2e3dfeac07cf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d631930-01d0-4c45-a68b-f5de2739282b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dca7f0c-92e7-4146-beac-ffe3d4404fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5700d3-6efe-45ac-b12c-d479334e5bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60a6b4a-fff1-4773-97c8-cc4d032b569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bcf21f-e36d-452a-82ee-6f10fd01c633",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acec6c1d-d692-46db-85de-5b302f7eeb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ac5295-ddb2-46df-afb3-3290b2a6f6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d54d11c-f5fe-49fd-ba38-a0a43d9bd19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a51b78d-15b0-426e-813f-c3fcc1ab2d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3275071-2dc7-40a1-b2f1-9901b45af426",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3147ddf5-107c-46b9-901d-f34f1f8fa01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17fb34c-782c-445b-91af-18f07ef8c3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f6fd06-7798-4c43-8052-c4ea86ed26a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b80bda-e101-4c52-ab69-7597efa8a231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d4276f-88be-4c19-9be9-504c20fdc467",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435624bd-d5dc-4048-b9f6-f872d8c1e037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a787b1f2-248a-4dbb-85ed-c561c2c2a459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4886ffe9-d687-4d4a-9a2c-a2adab543230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cdec1b-24db-4c02-8615-9142176144d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ea1251-7f4b-407e-b4ed-1d78d8165182",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc457b6-2f2e-42c5-822a-0354bf45e57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b432b3-21a9-4143-a373-75325443f7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e485d5-10b6-404e-ab5e-130c41b0f5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0e3ee8-b6c4-43d3-8e7c-797a421db677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22db2f73-1f66-4d3a-a4a7-08785201fe35",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfdfaf8-33dd-4067-bebe-66d5e2086e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07d482e-a32a-470d-9397-ac2875e91a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6531b911-12d8-4c53-8f65-42cdfb516f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e268f62-5ea5-4d2c-8674-468c2d1e9fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a57627c-e82f-4ef9-9588-8731201c6135",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b9eb31-b7b3-4326-ac3d-659fbdf3968e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb28f98-9981-405f-b397-d909821b57ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2b0d2e-2344-46da-b3ca-4464cee28269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49aee3bb-9a6f-4c91-b74c-5b02bcf05fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7354aa05-e571-4e48-baf3-a8bca6e2a73a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d63e53e-d923-4204-a64f-fbd0e3a0f595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bc221e-70b2-4ecc-a23e-a3f92e997810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9224f27-057d-40fa-b09d-f0bf741745d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0447e82-5bbf-493d-9e23-32ddd8ae4379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21ee559-f55a-4edb-98b2-598a06801f2e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9d15a0-894c-499a-b2c1-c7487c532093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0d76995-5227-4c28-ad6d-96a84279f794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71989b56-e419-4853-84ce-24910e250c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24ded30-37fe-49d1-91de-384c3042e35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc69ea1-73d8-4b08-944c-00a19e91287f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4e0f8d-e69d-4e70-92eb-58f8fd452f07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc50e390-c6d7-4852-ac3c-c842f21bf5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d32f4a4-0242-4c64-bb0e-c885234ce4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b086ea1-178c-4478-b36b-747f718584bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e4ec20-059a-46a3-978e-68db77308bc1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27069327-4753-48c7-a008-03c610937b12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ca4aa8-f1f5-4303-a810-d2888b2bb5c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552f8137-33dd-4cb8-876d-58db87f41518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaf1f9d-9ad8-476e-a257-f9ce08cbd0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0973d888-b40d-40cd-ac61-5403cbf7358c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ecf303-c992-4065-a0fc-a47af9a0a1b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77fd98a5-3e92-437a-85c9-c75c578e9411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f235cd9f-55fe-454a-a11e-ce44204854b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b7811b-f886-48cd-ae71-1fd71e07d5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d22e4b-11c6-49bd-848c-a38005b941da",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d6389a-658e-4fa4-9068-5d1245fc3b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af44272b-e9e7-4289-8625-6ca8666cc208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff156a7d-7d6b-469f-8d8f-cd924e1e6e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777889d1-4312-4176-92a8-d75f4e3e55d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c20f7f5-5bea-423d-a775-18484d466e92",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cba626-145a-46ec-9e2b-6fe5607d8e59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142d32e9-d98e-49b4-95c8-2afd9717df55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7179ded-16c0-4b8e-a16f-40d24671ed7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbe6003-ef3b-4d58-978d-7bc056c1cdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885950ac-d25f-498a-b20f-48247a793cd4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b18aaf5-4d00-4c52-8b16-5ebe3480e5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53381f01-8e55-4b8e-954e-64cb40a04ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c87f53-fd04-42ea-8633-c97265b89249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed71bac5-f1a6-46e8-b602-09b31882da25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f7cc37-f24c-4a04-920d-2a95f696f545",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7834ce8d-07e5-4b07-9be6-1cd955cd21e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7198f6b4-acfc-4e42-a957-b6ee7ae48e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74fc34e-7d5f-4ce7-811e-bd1fe9dcf1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748b39e5-9eb9-4601-a707-5ef62bb3f18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cd5b57-a6d7-483f-9e06-2791eeb369cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f741d1a1-bb4e-448b-af97-addb131e2afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6ed2b65-4f0b-480d-8223-196609276f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52264ef3-0551-4bbe-9eef-ec23b1434afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f682065-46ad-4950-98c0-fccd4b11edce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885809c2-c4bf-4298-abac-ae7a5220920a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e79ea5d-7903-40ae-b977-21b9b5ada56b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "642cda8c-210c-49ae-928c-54a2d1d79ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f244d855-539d-45d8-88fd-59108d140760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c95ae33-b736-4aed-bbfe-ce5debbf1c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35501060-f231-438f-bff5-7080195d5b8b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8a1601-60e6-41c9-a495-2bd18c111d7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b004b5-155f-4186-8c8f-0db7bb05261e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebb9f1d-2397-4745-ad48-af30c2ecb300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f786471b-f3ac-452a-9c3a-b2974ca8bba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a59bdc3-387c-4f6b-b4d4-2894806d21b4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f144ca-b867-4110-a45b-ccecd9f87749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89df1f39-a31d-47e6-9457-f7a23059bf45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62332b7d-0fb1-4b4e-adeb-3c1fe1fe779c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7500574-2361-457e-a68e-d0691e12b13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b289f284-69bb-4ab1-b11c-abf662e1150a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a684865-a9a6-4b10-ab27-28f3499650d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a7eedf-e2fa-4e48-8236-67129a18c3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1112b679-7531-4bb5-95d8-b083e2f5c126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2ae123-3bf1-498a-9341-2faad0353360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0496af-76af-4ef4-8c9d-58a0794265aa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775c6624-e848-41cf-ab8b-a914273355ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bd6c62-3232-4197-8c0f-b453a94eb16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d37ffe-18f7-49ec-a06c-e58ec24c7201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb74e5b-7484-4908-98b7-8cd72a736673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044c5fca-be6f-4bb3-9f86-6ecfd55ce0c8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca1c901-28e3-4fdf-a3c9-c7015c456c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851ce295-f91f-4469-b750-d2a096688b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778869e0-f390-49d5-8a0b-94753bde1aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740a08c6-50c9-415a-a8a4-ae8782a6a73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be3135c-74d7-406b-a060-0d1b8e05a91a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41721ca-7ba8-4b0b-b993-c75a0e656a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8b8f9a-63d6-41c5-b19c-113d028a097f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec43ea0f-9161-4402-8e3d-e73f5af54cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be13d96-14e8-43df-83f0-788edf1c4b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53f4e32-388a-4884-bb3a-d8fec4f876f7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7838804c-4973-4bf9-9bf8-4982417e80ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18baee6a-147e-4d21-a581-89b32e59b76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5c5763-93eb-4eb3-90fc-b9f8b92db5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae01da63-e812-44c0-ad59-adacd9c35982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bc955b-ff76-492e-b70a-84f4eb9644a1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ec27ec-32aa-4c03-9633-572928f3492e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf16708-c301-4694-9a3e-fc3af88337fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42229faa-7686-45ab-bb71-4cf6ce02de55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962bb6e8-395f-461a-99ad-2aee25a5348a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f699e5db-92e7-43c2-a88d-ddc14c069f4f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b6157c-2dc9-400e-bf49-3914bf85f2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9a6065-fcaa-4609-ac5c-94383577f2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a243d0a-7d76-4fe1-80b1-1a66ef2ddb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1753938-519e-405a-bc98-88e204a50544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b747fc51-4407-4423-83e5-b84dde208b7b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b55ea95-b620-40cf-b242-f44701b97da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e3e737-f9a7-4fdd-9d2a-84962d50d33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd4b1e0-8367-4249-86d7-618314b583a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c935fb6-3609-464c-9334-551ac3cc9b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac36c023-be79-42a0-98d2-d363d0ce6d1d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac581a6-7e58-4c3a-a06a-3538bdb52fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd0b2d8-8480-47b7-9bb2-80f15ac3a389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c378ca43-0d7e-4a75-ae8a-40b809595027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cf38ae-a30a-434c-a123-b069d5c7d780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c10a53c-6d93-4373-8a59-86384c7ccf8f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32aadc37-6b9b-49e6-af2b-d7e9d0d76225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affa99aa-364f-4ffc-a7d1-b5709e8b0ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db63369-b259-487c-ab4d-841d86ebeb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e1ea5d-34cf-408e-a4e1-7974b2f090c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7379f4-ab78-41ce-b030-45277e6e0a25",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e386bc-6087-4b49-be0d-3b9de9117865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061a51c7-cd9b-4f45-8bc0-caaec68fcbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d7aa1d-7380-42f3-acb6-2ca5049ff9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cbf874-fbbe-46c1-8f9e-0febac472cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8449f0b2-ae50-44ec-8760-811cac199310",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b41f2d-e4ae-422e-ad42-ff7ab9942d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4391480e-4470-4805-b4de-feac2df81978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9646b23a-6a4e-47de-ac60-b588e9b91642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e748f8ba-e893-47ff-9fcb-eda68b39bd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cfca9f-1324-4799-9e5d-1a02adef28e9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecec14f4-5d46-4a13-ad57-b302c07e816e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5b4fd6-0d43-4094-bbe3-34c059064f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975e0f81-6274-4b2b-83b8-6e47536ae952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f72f941-7a0e-4c54-bf82-da824cf538be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a448d29-9d27-4afd-96ad-29e08b05e569",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8405a7-70aa-46ee-b64a-450f33573a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7006ec-f3af-488e-8270-0b929ec58f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fe44ea-6736-4ca0-8b50-173c103d43f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfd3bcc-cb39-4d6f-8b5b-deb22d5e0c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5689687-bf00-49b0-878c-333c401e51bd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f54201-9999-4324-8fb3-f8be8e7d76a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870dc870-fc29-4446-8836-8d236d832c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2824074c-275a-4310-b440-d73dc741c694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a323ec9-98bf-49dd-af87-7b96b8b662b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b157ec15-19e9-4292-a968-d5651bdc9066",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af321bb-cb7c-4921-9744-803fcbb83dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358fdfe5-aafd-48bb-a577-43537d4d0fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e18a466-0802-4068-89b2-78c1c3cb03a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c93c1a-4b5a-41df-9a77-ef3050d6f9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3469fba2-4aed-4aa2-874b-5b3ba8ed04d7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e09e58-b30a-4c69-9686-028b2a11d142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445f4544-9523-43a0-8b2c-3610d5131ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bf5427-174f-4c8e-8933-b9603af602f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2901d96b-07bc-44e5-ba6e-20d7a5a4b4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16f2f6d-e4ba-4d2e-ad88-0b49c6096018",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28299b9e-da53-4ed9-af4d-406fd6e4c7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60924126-252d-47df-8870-5a79c1b5ab53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1c0010-8287-4815-98ab-00f4dba5c9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c811b9-600c-4bba-a66a-3ef3844115e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b11b321-17fc-4aca-905b-f884bad8bb13",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dec1a7d-eb08-428c-a294-47caea8278dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab438cc-2b12-4d97-8cdb-6af08c148236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ba9135-2fe5-483d-b47c-14686e8dbca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b16f430-e9d4-46ea-a6f1-098a70e56f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38094f43-d4ec-473a-8c45-c7359e8aa5d1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8725b6a8-3d5c-4b7e-884f-bc514648e11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3d935f-d54b-4823-8c7f-bc4f5b923659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacb61c7-d0af-4812-a553-048c67578654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8658619-8eca-4c04-a6de-447e5e0c51bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d1fe28-350e-4aaf-b24e-d7c49fc1124e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a984de-ca4e-471e-b11a-0a755aeb7f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4da2df9-a31e-4399-83f0-fa6bf5d10771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f964b143-9b60-44ca-8f51-f84ccab2f783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc4d66a-7cb0-4a7c-8607-3b9aaa859771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99b03ff-984e-4d07-add3-add66d713814",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefe5333-dd1f-450c-9d12-27cf3090968a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db54f70-7d0e-4887-975b-ef2d0351a914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7993be3-80a8-4c00-86ea-8173f1bd1764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570b58d2-fd64-482d-8b18-ee75eb76b174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e041807-739f-4b9c-9498-ab183d10a24b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d274974-3e50-4624-9468-8a87ea3d7f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b127553-54e9-4f3a-9b83-2127775a5bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d8defa-f98d-4fb2-a401-27a5d3492e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62b4578-d872-4aae-b6d2-ffb100f81682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d426213-56f5-498a-a8e9-be93b13f0a01",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860f717a-100e-4451-8aa9-9a2680764fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6c1b65-28b5-4c38-9fce-5f771c224366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dc6bc2-35ab-4154-80f6-4df52cad749c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bc3346-ec80-4ec7-9774-29c29240e2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6836fbd0-8605-4570-8a14-3cb16ac5f7b9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf42eb1-a00d-457f-957b-f19679f920ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0161cb03-20a4-47f5-9d05-caf101930b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556ccf1c-e27c-451b-8870-4137d0eb9d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3649fac4-37f7-4d0f-8199-79b4e62b040a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce7052d-edf5-4114-89b0-d4b65b738538",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c183897c-696b-49dc-8884-27d70c5953ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768320fa-6442-4d7e-8c43-4864cdc348c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d3fe5a-409e-48ef-bb9f-3a045036274e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8912598c-0dda-4bac-bd45-72aadd80af43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c22bbf-1620-406d-921e-c6bb5b29e3a4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a927841f-aaa5-4f77-9e05-dc19089e7d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e99229-f312-4e1e-8ac5-5b65ad052099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96584257-884a-4cd4-b2dc-63ccc0861d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f562095-1017-4f22-9531-7c635585e595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5517124-df6e-4065-8c45-90a6fa0570e5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3997aff-df21-479a-ba07-d1e9848c80d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72bdc023-2caf-4858-87c1-8d67137db200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c74650-9e1d-4a9b-bd08-3af7381c8563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c093630-19ab-4570-9440-39dc8c0e67f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b89742f-4b10-4f3e-8595-dbcd9c6cf717",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b866571-c2ee-4867-a5e1-8d1bf77015b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c2b4f5f-dc84-4e6d-822b-3bfbe22bd005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492b7d6f-0c20-4033-96ff-152f652e6046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660a8605-0173-4d48-baad-589f813257e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ca0109-4c2e-4fe5-8e1c-37e2f5a313e3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d96d81-a99f-4a03-ab54-2339fe27e7ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74f35f5-543c-4a75-92d3-aee7aa47e077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1f86dc-1032-4fce-8baf-6d5c422058e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb9297b-352f-4ada-ae19-1893e0801a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5d6915-a510-44fe-ad26-224e62e11484",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f9b4fc-206b-4db1-a5d6-a5f3286149c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adf2c859-0dca-4751-8814-e82ae81336fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eb207e-89b7-4186-aa85-e8815893ab68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9b6cb3-02d2-43f0-8566-b99e9448acca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d8731a-fb03-4782-b3e6-930483dbc56a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e88f232-22f9-4955-a6b5-8c2b8109f9f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be5f1464-7e18-4901-80f9-e39e55686306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1e3769-528a-4da3-b303-9eb4d1d05b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75803a0-76ed-4dcb-b9c3-0f06381c95e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7589ad90-2fce-46f0-8eb3-5ccf13178935",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6273e55e-4ab5-439e-9e62-a4a8dd755331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903df37a-5a32-41f2-b957-2c51ba8d151b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c35fe6-57a9-41a1-9217-e0db9734a52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de58c3db-ecf6-4375-8306-958d96225468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d37e3e4-60a8-4266-b729-d32c2a837e9f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0343c6b-647b-48ac-abc2-63422406feab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f92b87-8d0b-41ce-9668-a4fa39e0b7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c7252c-3419-4570-b5ca-2d9d62091af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985aa28f-a9ba-41ec-8212-0803a760dd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307ed786-5a01-4a83-9e8c-848ae0a5f9ba",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f0a959-cdc2-4530-bb1c-b542b9acef71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b7957c-6692-468d-bc36-696a72ae69ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddba76a1-023d-419a-8afa-d5ad19b13bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922d6e2e-5f49-4ffd-b4d5-e42532e3169d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2520620-d51e-410b-a92b-25da1ac341b0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a12a081-bcc9-42ce-97f0-3d703d4266cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a210f04b-6a3d-4458-87d8-4513bb4e1fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be36d80-4cc7-46d7-b9c5-4a92fd4b4c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8e24a1-ce5e-45d9-83bd-39920d4c5dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882ffdd1-209a-4d50-ba56-cf2d22cca718",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9954ba47-91ea-46bc-8ec7-d2503e54fc68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf41835-4e6f-4835-9b41-df92d831ae81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbd6692-97d6-44af-8a0d-78de78407c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c18625-a3a5-4f9a-ac6f-78085cde1bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f124a444-a2a1-4522-b59b-c0dffa754647",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f632b8-5eb7-45de-8260-03cc768cfa08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8cbfb9-6de1-40dd-bae3-fa57ca78754f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428d4a21-f411-4a96-ba93-1327bbc7ddb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1080cfc9-248b-40e2-88a2-63090982ae5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4021e0-70f5-462b-b12c-bfbb7778d27a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666722b0-8e2a-4cb9-9dbd-5a0c62803ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1151a1b7-f229-46c3-9646-3c4e8c3ba04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0398c6b3-9eb9-4a35-854b-b80779a7d324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14e83d8-baca-4f4e-99a6-3f122071c5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855a754f-ede6-484d-a674-d17171a8ed36",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd87778e-f799-4186-8086-1af0fa330125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3b6f36-1efd-4db5-bb73-aa57ba13f684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b76e599-ac99-4bb9-9ca1-90b8e36d8520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1ac456-7421-4a8a-8c99-35263ea6af96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be44dcd-87c1-4240-ba15-abe914ca7085",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f52d91-efa7-4c7e-a6a7-64555e3d5674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2fba89a-0731-4d1e-9929-46f8d6355e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e75215-e915-4bd8-a6ce-c9f2e5f62c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f332de-8e73-46b1-98d2-ecf4bc2419a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f10f7a-831b-4071-8cce-e9b961842409",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087cd3b9-3c61-4ed7-812a-6a63189b4f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "335ba6c3-868d-40eb-94e0-11a10dce1f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccb5d13-be30-4c84-8540-8fbc6d4bfb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d079630e-9e53-4e50-b7ef-33b64985f578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fe67b4-5936-4bb6-bf3e-417b623c6cf3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b11ac5d-3b0b-4661-a0ee-100c0f6e40e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd4503c-055e-4e0b-8099-18ddeb66b026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39774929-6336-47d0-b263-413fa5cfba33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3f6bb3-a27a-4d32-a27a-4ee4e557e0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eac615c-927f-4854-9efb-4b04381f3bdf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229c00e7-41c4-44ad-aecd-be4896905552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78d625d-a41a-498b-aa27-bd9ca209ace5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493ac0e1-1788-4ded-b493-29f534b74e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965cd93e-fbb9-4561-853d-113b6fd6b2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccc74dd-5f36-4866-b1b1-0169751d9b9f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b29ea0-8c60-4c3c-8511-cf471b015f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74bb28df-feba-4494-99d7-30166c09ade1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e287bc-1926-40ac-a913-91b482cba0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23bf100-815a-4452-ad27-137c80aaa5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bea819d-6f22-4ec8-bff9-3ec831256057",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5804068-52c4-44d3-a766-67c294fb22b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d00cf07-7a0a-4a74-aa03-12df97a4a9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d6b9bb-2ec4-4d21-8302-b6a1442d4010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2d7435-5932-4aed-9394-fb2f99cff712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ed1bd1-fe78-4e4b-86e7-7a20e86c608d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aab052-f0e6-4d9a-bb84-fc78ff09befb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab37b1d-1dd0-44fb-a5c0-2602f8b5b8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6145683e-b804-4e55-8d03-4a3035a84b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6281fa-369f-4979-8e8a-7ff9840887f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e9a622-ff71-4216-a7b3-8c41ed0a5673",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f64cf06-3a1c-41d1-a4b8-c211db09fd3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d1ad55-be13-425d-9f5f-90ae4e5213e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75e6420-dbb7-473b-9d4e-f375e18622f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e81a63-e234-44c5-8049-84d7578bcff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca3f478-d76a-4e7e-80ac-f4bb199c894b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d44adb5-23fc-490a-8227-93c87f8b063c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a8ea541-0402-4f6f-bfc0-664ccebb174d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c47027-13d4-4dfe-9b03-1aa38424c8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ceb8d5-16ce-4ef6-b55d-3dd18d0367ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeac842-b59f-46eb-a8c3-cf3361c296b7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd92a2a4-dc3d-4c39-ae8e-a457264f26e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48cdbb8e-e170-4942-97cc-b5fe25750227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01885ae-4b0c-4a32-80e9-4af259b0aaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ef6975-8933-45f3-92a6-6353ae7c5c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36de0dff-e617-4346-b21e-b2cb016cd0c5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49fae0d-7ad6-4144-9d91-0f5469d73dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ca2e3c-c1a6-49be-b86f-5041e67e73cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b3d65c-fc29-45a2-8900-e428bad7596c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb3c5a2-86d7-4475-aba0-675e89d80663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e14925e-e48c-407b-9dc7-55d2538d40b6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891c0b35-9bf8-4688-a9bc-a7219b3e43ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aceac7e-8046-4a23-b8fb-294714b749ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608744a2-8c19-41b5-9f34-9e8e87fbafaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1a0a29-035c-426c-bbd3-4865a85b49b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc467511-78c0-48ee-b025-4d1d1e642c9f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88d2504-7f67-4650-ba5f-508fe0425129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0aaf0b1-f0f5-43a0-ac6d-2294c9dca488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c257045e-e8cd-4ab4-baed-8c25ccba3239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c188664-adef-4050-89b8-07007f95b1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd8a7ff-afad-4fee-98ec-1d20ec63e416",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec8c7a9-b71c-4761-8323-510b9107e37e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b574a2c2-f72c-4d4a-82f8-d8e4dfe4fd7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64e68cf-b2c1-4418-bcdf-6997a4be02b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bae33b1-9cdd-4bea-a07e-df2ba1393477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd08d7b1-46a6-4020-9b6a-c44e7575ff06",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d3ed4f-3b55-460c-a8c8-a499961a7ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "611eeec7-cc01-4303-a6c4-f19ef49e8ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ed1d77-f899-4aba-928b-1440878b71f4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2f60de-0cd4-453a-b524-6f85c3b0e897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1040e1a-57eb-4b0a-b318-03fb5fd96cd8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3272f334-bbd8-4162-b8c4-e77f19b5d248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "204cbbc5-c424-4d31-b241-6e02382b1017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1f8ba3-d022-4ca7-bcc1-c3171665faca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab20340-d22c-49f2-9cf6-6c2b809d60cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07e2ab3-4acc-4f51-8602-cca740107312",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec2fa72-548c-41c1-a179-21dc2dba1d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d2f72b-4036-488f-8864-81c6b4e7e15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5b19bd-c9b6-4161-a932-2f1a199681e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f95551-ab81-4a95-99b4-05e1e8766902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0fc8a3-a78d-47ba-9c9d-d0c501a49fd4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779bf435-4db4-4f19-8d85-1ffaec74013a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9adaa2c0-6750-48a9-b88d-3dd24f21d154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f274d002-06c8-49ae-b60d-7f8d7d2b1be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898da5fb-a919-4fcb-a364-7f4cd0c578ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6e9799-46ba-4753-b122-eaf1f14324ad",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe8c8d6-9096-4264-a43b-997f36d09056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "140a6cc6-6c3b-40f8-b7c3-23fb88f5714b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e2ad09-2e33-4e87-801d-7ab1608793be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef53e98-83fc-4b7e-ac2a-9f67bc491f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb8b811-024b-49cc-bb09-1cc5078c68fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48e4100-adc8-47ae-bdb1-f019387c5670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cdba181-81b1-4d4e-b14b-4d77026d005d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c8b35c-c862-4c5c-bf80-1fe2b5641831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de36ae15-d66c-4a1a-bd7d-2c1c9be30362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0a50e3-8652-45ac-8181-9efde8a0ca89",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2dedb9-658c-416c-906f-05fd75556938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2785315-9073-4572-8478-c892f2f2766d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff40eb7a-a5ff-42cc-be06-6b7edf112429",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccab92a-82c8-4577-9e17-1f82567b1bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2321ea5-7634-4d93-ae71-efa469030856",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1126e49-6c50-4c73-8598-a590c2ed38b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4173e867-2492-48b6-82bd-0110eb287fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ba73f6-39a0-4296-8e04-42df5acb2050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a32d926-d7dc-4e9e-9d88-a1946bc81ab5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e6485be-e0b5-47fa-8236-c8de35fd0659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18d56736-a997-4268-a902-2469260054ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "112e0f87-8ba2-435f-abe8-fc44229b63f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60100a98-1c44-4d7e-911b-e314ef80d7ac"
                    }
                  }
                ]
              },
              {
                "id": "b3a997b7-8101-4ec9-bd46-6cc7935d3fa4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a98651a-bc86-49db-90e9-9b13ef650382",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf814b4b-560b-488d-a16c-c88bbd0e8dc5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "057874a7-d20f-4a58-b07b-001af149d580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cca47b-b466-4080-82f4-d326e346f852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e74f9fc-2469-41a4-8cdb-c5f57dc26141"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35305797-9b61-4136-9e9f-d0507a58487b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99bbb608-cffa-4e20-b8d7-40bb8026c333"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1b4a141-66cc-4559-a7dd-6012ce2d993d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38023597-7382-41b1-897e-298bc50bb11c"
                    }
                  }
                ]
              },
              {
                "id": "959ed926-0d8d-46bb-b535-1b373a0dfa87",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "13ed10c2-03a3-446a-b479-4895a28ce4c8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83396368-4ba0-4ef5-8329-000fedd7bbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5b5d6e14-ab2a-4330-9965-eb58723551d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4b8d57-d7a4-4a8c-8f46-3292d4fce66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a14b689-717b-420d-9f24-e265d99152b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3e68aaad-abb7-4ffe-a629-8d9db31cdad7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d277a12f-a333-4236-b9b8-12a311ad1e9e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e467c29b-3c74-40c3-83e6-7a1b6011175e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "62e44654-5b78-4988-aa13-ca1f28648cdb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fae2e944-fe52-42a9-8e14-eb59b81b0d19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36c54eb7-b050-413e-841e-6301086777ba"
                    }
                  }
                ]
              },
              {
                "id": "6629b049-f919-4a44-8bb9-85378798c2e4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08f9431e-0bc7-47f9-a156-176b2ea892ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d02f961b-a772-4f70-a7c6-e497a75b9a37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a792064a-d237-4652-8818-9af98aed0aeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f60bbcb-2348-47a9-82ec-a623cfd43519"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15dc5a8b-ed4e-4c67-9f30-d5f677d05948",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "55c6d814-3f5b-4218-bad9-19e6c095aba9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34809cd3-eeb5-472d-87bd-8468656f74ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f7839ac-a9c9-4849-a5eb-7201b5ac61cc"
            }
          }
        ]
      },
      {
        "id": "45819c51-09cd-4749-8e86-9ab4beed8b9e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e7d98994-23bf-42cd-b3c1-8313f74f2ae1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82559340-15e9-4f50-8d7e-2173784d5c2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d092846a-8b19-4207-975f-0076eeaedabd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54637e27-ccc1-4754-818b-4047bab8b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "68b87b65-3214-40e5-8f6a-0da607633f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47310abe-572d-46b3-a236-2fcdb53ad847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8137294-bc53-4549-8825-4e1e7516d169"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a09e9b7-6559-4c7d-ac5d-db1cbbf4f180",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38737e1f-f485-4967-8f5e-0d0ed18f15d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dd5717b-f066-46c4-a878-509cb0159fff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9967c5a-7c9a-4cca-ab68-755864c278ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2b6cab2-652d-437f-a906-60b0c2746a7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "16279ce2-33e2-4766-9eb3-6e2b657df528"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9aa25ff-f4b7-4d86-b844-b8c03b08aa52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33f49fc3-2fa7-4ae7-9276-a2395c29a39a"
            }
          }
        ]
      },
      {
        "id": "41bf88e0-a990-46d3-bdf1-25e374c9e371",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2829a35d-2d89-41b1-8d0c-48fd3b750e3d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4363b31-6a42-4447-9b20-2da11b05f203",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65e47b96-2697-4481-b016-9a143a6d09d1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3e1d78-ecda-4a1b-8581-ee3f238a0671",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c444f5e-4014-4539-b620-df432daf5dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77db18e3-b7bc-47d4-8cbd-d6f3653f0aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d85fcc4f-0568-494d-a99a-85f0e16fca00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48ca417f-fbf5-49ab-965c-1e11450e449d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a79a727-4f9f-4c07-b9aa-bffb85d0d355"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cad74d43-81eb-4e0e-a295-9420f353e264",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3db200dc-d200-4842-ad50-5965a29bfdab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "447b15a3-49c8-4761-994e-b5d4bb0f7ae6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0d28d3b1-6536-40a9-9195-65fb3d1873b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "012fd00c-05ab-4cba-894a-ccdfb20c9a0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46c8ece5-dc69-41a7-b8e7-57c297b94f89"
            }
          }
        ]
      },
      {
        "id": "3bac5e52-5f8f-4887-bab4-e01ad40c3432",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "eb54f510-7c3c-49ee-8aa1-fea15d2386dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe14cd6f-012b-4c0c-a0fa-5ec0548be19d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1abe4143-74c5-443f-aa09-b13f9448c04a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7271ad-6d7d-4327-916e-a6ad5fae27d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3adad43-147f-4826-a0ac-d833c1dc29c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd64f8f1-3ce6-4d61-a870-5e98b121076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b508f385-c16d-4020-ba7c-13a111b2571f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8026848d-5203-43d9-b401-955d3539bd24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02be282e-81f5-42d9-aeb2-afbcae17f1ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6934f569-2e69-4a35-8574-64518ce78b77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22be30d2-96a6-4b45-b88a-9f2f2d2966bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00814a82-3d5e-402d-a529-aa6f57bee0b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d36043f-a114-4340-b6cd-70bdc0097da5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eaeadf56-8a36-4723-aef9-893ac86c8bf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "def6ebf5-5208-436a-a860-f4d5cabf4cc3"
            }
          }
        ]
      },
      {
        "id": "a4af28b7-03ce-4540-8b31-9da6a59216bd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3cd0ff2-238a-4e51-b6e7-3235cf80eaf6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "027e2cf7-f96e-4061-9f4d-f3ee3bb38d6b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0ac05ab5-9c49-427e-aad6-b3f710b610f5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a910f1f-e21b-4e68-a150-1d0d8a444f04",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8df12e57-bf45-40a4-ac93-793b7e7f23e1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 131.18253968253978,
      "responseMin": 10,
      "responseMax": 14121,
      "responseSd": 921.2158106838295,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714178110271,
      "completed": 1714178151601
    },
    "executions": [
      {
        "id": "8519a1f0-467c-4825-9abb-6ee73c088e97",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2210bd0b-02c3-4de0-93ae-d149e6613ed0",
          "httpRequestId": "dfde1965-3962-435b-b62c-1aea9bda878c"
        },
        "item": {
          "id": "8519a1f0-467c-4825-9abb-6ee73c088e97",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eedd6e48-df11-4497-816c-53da1ae23ca4",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "9ca8c053-0812-4fcf-bdcf-536560ea34a6",
        "cursor": {
          "ref": "8c05a23a-ca53-4a4a-9d58-77ca8312bb17",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "49f717f0-d5bb-4868-ad3e-0dcc3d64cdb6"
        },
        "item": {
          "id": "9ca8c053-0812-4fcf-bdcf-536560ea34a6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0187f42c-2d29-4493-9556-9d3aec331644",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "78570a42-e279-4a39-af18-7ffea01cd90f",
        "cursor": {
          "ref": "8ee69e16-6783-44a0-9a71-cebe4fbc69e8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ceb3d5ee-e0a4-49e7-ac4e-0f7a05ff894c"
        },
        "item": {
          "id": "78570a42-e279-4a39-af18-7ffea01cd90f",
          "name": "did_json"
        },
        "response": {
          "id": "418dbc17-1b62-424c-ad75-d8ac928a4a57",
          "status": "OK",
          "code": 200,
          "responseTime": 333,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da059b59-02cf-40b8-8fd3-ed95efde1d8f",
        "cursor": {
          "ref": "4f143339-9b18-4666-b2e4-585a583332dd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7c966e5d-48c0-4102-9e7c-61731fa3ad30"
        },
        "item": {
          "id": "da059b59-02cf-40b8-8fd3-ed95efde1d8f",
          "name": "did:invalid"
        },
        "response": {
          "id": "54b55ebe-7641-416c-adb2-b835fd06ee3f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 498,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da059b59-02cf-40b8-8fd3-ed95efde1d8f",
        "cursor": {
          "ref": "4f143339-9b18-4666-b2e4-585a583332dd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7c966e5d-48c0-4102-9e7c-61731fa3ad30"
        },
        "item": {
          "id": "da059b59-02cf-40b8-8fd3-ed95efde1d8f",
          "name": "did:invalid"
        },
        "response": {
          "id": "54b55ebe-7641-416c-adb2-b835fd06ee3f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 498,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7c3d1b-8b4b-4c5d-a335-0a59ae26f930",
        "cursor": {
          "ref": "9fea2a41-1f74-4c70-bb3f-eeb9ac169acc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3d62d9f6-b2dc-4f1b-8ddf-de4181232175"
        },
        "item": {
          "id": "3e7c3d1b-8b4b-4c5d-a335-0a59ae26f930",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0452a852-e532-4f35-adf3-b853aca9dd95",
          "status": "Not Found",
          "code": 404,
          "responseTime": 97,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34e1265-f25b-4bb8-84b2-08c0b401d341",
        "cursor": {
          "ref": "25bcdc37-77ca-4c4b-94fc-1e2a7a8b7925",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5f4627c3-d896-4d20-b681-679837e5867a"
        },
        "item": {
          "id": "f34e1265-f25b-4bb8-84b2-08c0b401d341",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f2b59269-1709-42a3-b11d-126e4ca37501",
          "status": "Not Found",
          "code": 404,
          "responseTime": 222,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93935d16-7194-4a51-99cb-04ad7287c57c",
        "cursor": {
          "ref": "bfb4786b-9570-4600-ab57-11359e747f4c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "57e288c1-832a-447a-a17b-0794d96fb687"
        },
        "item": {
          "id": "93935d16-7194-4a51-99cb-04ad7287c57c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6922357f-8ed2-4b27-b53c-80ea7c0a6035",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd3ecdc-9edb-4733-81cb-9ab3a0cfd82b",
        "cursor": {
          "ref": "347f487b-e636-40b7-b79c-c84909af5adc",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cdc9e89f-0715-4e78-8258-dc3e390be5d3"
        },
        "item": {
          "id": "0fd3ecdc-9edb-4733-81cb-9ab3a0cfd82b",
          "name": "identifiers"
        },
        "response": {
          "id": "71f0cca2-cdb9-4b42-94d3-baaf570ecc93",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe119049-8413-4f0e-8756-429cc6b520ac",
        "cursor": {
          "ref": "1b44ed7b-7cd7-429d-9954-2b0fea909949",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "04d4fcc2-26bc-4142-bab6-60b3318badbc"
        },
        "item": {
          "id": "fe119049-8413-4f0e-8756-429cc6b520ac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6148cf4b-afd2-4945-8df2-e249997c6d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb734f38-4b6f-45a3-a360-661d036e7540",
        "cursor": {
          "ref": "be9221dd-6591-47b4-9893-1fdf423c76cd",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bc1010d6-b97b-46cc-bbc2-2fc0c6a5948a"
        },
        "item": {
          "id": "eb734f38-4b6f-45a3-a360-661d036e7540",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1e0e4832-8e27-48d1-b330-dbd1b1ae671b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6159328d-f4c0-44fb-b568-2991d072ce55",
        "cursor": {
          "ref": "bdad1630-8869-4dd2-ab6c-582164771922",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bf91d822-96e0-48db-a670-a5ea5e3c1b29"
        },
        "item": {
          "id": "6159328d-f4c0-44fb-b568-2991d072ce55",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a6dc9bf9-1bea-4d47-b92f-4b36a7a77696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbadcb4f-3288-4724-bd68-affe4ef54073",
        "cursor": {
          "ref": "c953cc8a-c978-49b0-80b2-772c181055ad",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e16d0e20-cf58-4d29-8c23-103b2f17cbfc"
        },
        "item": {
          "id": "cbadcb4f-3288-4724-bd68-affe4ef54073",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "87c28c55-313e-4ba1-aff5-68a91aafb7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11281d1-17d9-406f-9824-f40e390587e0",
        "cursor": {
          "ref": "522798fe-8f7d-4b8b-be4b-22acb446b8b4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ef868155-ca8b-45eb-bb84-01f22746112c"
        },
        "item": {
          "id": "a11281d1-17d9-406f-9824-f40e390587e0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2cc365fd-920d-428e-92b9-21cc90fcc149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2796674a-d28e-4fb7-8f34-277983efb2c4",
        "cursor": {
          "ref": "530993ec-3c2c-47ac-8b55-d8af2e15fc66",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "84986056-db54-4804-9b3a-b27fa17ee1fa"
        },
        "item": {
          "id": "2796674a-d28e-4fb7-8f34-277983efb2c4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c084b8a7-8be6-42a2-9a77-cc8a8d410528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a631a2ac-5276-43a7-9f71-cb6001e114d5",
        "cursor": {
          "ref": "ccbb1ce9-d75e-4d92-b63f-cfead6c7b03c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7c766a3d-2c7b-48da-9483-5b920fd0bd6e"
        },
        "item": {
          "id": "a631a2ac-5276-43a7-9f71-cb6001e114d5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e89d5073-805b-4ba7-88ff-0a5746c3d2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26475eae-a596-4a49-9812-791913a87f3f",
        "cursor": {
          "ref": "0ce6ced1-19f2-483e-ad88-c2d35e08fab4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a4add495-5674-4781-b7d6-84547bc8c960"
        },
        "item": {
          "id": "26475eae-a596-4a49-9812-791913a87f3f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f11c1d3e-7023-469a-bdc4-0619724f919a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff99f7b-6247-498b-a26a-ef466784bdba",
        "cursor": {
          "ref": "79741ce9-6b03-4683-9d37-5f2038efa6ba",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "493001e0-08f2-4ca3-b3b0-ee3dbc0b5d2a"
        },
        "item": {
          "id": "aff99f7b-6247-498b-a26a-ef466784bdba",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "36ccf061-5668-4b17-b284-54dceff161ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095c7cc4-1390-43f7-9bad-b76aec540fe8",
        "cursor": {
          "ref": "f385c3fc-26cd-44c2-8f86-13a3b6b53ec8",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4982f6e1-eb43-42c6-9da2-ff462e2ffd18"
        },
        "item": {
          "id": "095c7cc4-1390-43f7-9bad-b76aec540fe8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8831f7a1-4093-4bf1-8343-c430710fa94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523d6f87-eecb-4afc-93ff-675be8039cae",
        "cursor": {
          "ref": "a2bfc97b-69ab-4e77-bd30-69bb17a73a87",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4a8a22a1-3d4c-4726-b76f-b24abcd3830d"
        },
        "item": {
          "id": "523d6f87-eecb-4afc-93ff-675be8039cae",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1980bfa9-6eb9-446f-bbce-93f1f9b16b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d51336b-1f61-4739-a4a9-ccaa54686bc4",
        "cursor": {
          "ref": "decd6e59-be37-451d-8c30-a2c01a57b213",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "12fe0442-574f-4456-9f3a-29d7ef81ac31"
        },
        "item": {
          "id": "7d51336b-1f61-4739-a4a9-ccaa54686bc4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "798ee56f-de76-4c7f-b92d-fbaad9b3e042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a579353b-b884-4acf-863d-f5b0ccb0f7b3",
        "cursor": {
          "ref": "888e2f81-92a6-4de8-b1ce-1cec2aa2a13f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "174e1009-7192-4a62-9780-e879fa9ca2fc"
        },
        "item": {
          "id": "a579353b-b884-4acf-863d-f5b0ccb0f7b3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b8d604a1-e4e5-4eb2-81f9-f3690442758c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c548fb-2102-4de4-9d9b-067fd430de8a",
        "cursor": {
          "ref": "180476d4-33f1-41bd-8893-ae3c3c235b0a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "45bb583f-a0df-468f-baa4-29849c147015"
        },
        "item": {
          "id": "a2c548fb-2102-4de4-9d9b-067fd430de8a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ecb8d6b6-8743-4a48-ad52-9dd373f03119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c397db4e-2661-4498-b79d-022c055b43d7",
        "cursor": {
          "ref": "a05a6305-da5d-4b00-b73a-b52e97d67d58",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "22878171-ae80-4f17-92d5-ec8ba49c9dfb"
        },
        "item": {
          "id": "c397db4e-2661-4498-b79d-022c055b43d7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d97a91cb-609a-4089-9e59-447b0a39b59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5724707a-ea45-49a4-b5b1-4542c9cc4d48",
        "cursor": {
          "ref": "454d9c4b-2925-4d37-a8b8-1ef3c55a13d9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "47c2d251-2a74-496e-836d-b22a5a192a48"
        },
        "item": {
          "id": "5724707a-ea45-49a4-b5b1-4542c9cc4d48",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cec12a6a-087b-491a-93d7-f96c66613934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7dc619-f16e-4f3a-b3de-99af389c5794",
        "cursor": {
          "ref": "436483ec-0329-467b-96b1-e672cb59a463",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2fa44e5e-7e88-44f1-a513-2de2fe43fc29"
        },
        "item": {
          "id": "1d7dc619-f16e-4f3a-b3de-99af389c5794",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d1410665-1096-4f6e-ac79-f8088c93bd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf934b4-5045-420b-90dd-973ae3a987aa",
        "cursor": {
          "ref": "51b4cf4b-b16f-41dc-93e9-e2be32f41fd2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "eadaf4d0-42e4-4a71-8f73-99197e55c0b0"
        },
        "item": {
          "id": "bcf934b4-5045-420b-90dd-973ae3a987aa",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a150052e-f53a-4ed9-a241-a4f200608e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d9e5db-6cde-4556-87d5-a0e3901e3633",
        "cursor": {
          "ref": "9e55c0f1-3ed8-44dd-afb8-7c01cdd5fb96",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "928d8735-7db0-4a2c-bf84-2de57d223ed5"
        },
        "item": {
          "id": "61d9e5db-6cde-4556-87d5-a0e3901e3633",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2d6a82e3-cc80-4058-9fe1-cea740ffeef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a584c0-f405-4f4d-9453-fe1a7debf663",
        "cursor": {
          "ref": "fc76c68c-a73f-4fd1-8de9-58097bf449bf",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "13bb15db-86b1-4c00-bbef-8c8056ae6f90"
        },
        "item": {
          "id": "a6a584c0-f405-4f4d-9453-fe1a7debf663",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "457286c9-1218-4f2b-a2e8-6e45d314af7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29b8368-bfa7-482e-b536-319ccdd1d0c9",
        "cursor": {
          "ref": "000043de-6afa-4896-8e4b-f4ba9c2d9e55",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "488846a6-4d1f-4654-a461-435bfa4f8814"
        },
        "item": {
          "id": "a29b8368-bfa7-482e-b536-319ccdd1d0c9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b9bfd3b1-30ab-4296-8bab-4278f7acaa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402f162a-40d9-4492-bd48-651126566747",
        "cursor": {
          "ref": "78619e02-6759-4669-9e76-a51a37b1ffa8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e97c1216-b49a-490b-a21e-e9085c01f97a"
        },
        "item": {
          "id": "402f162a-40d9-4492-bd48-651126566747",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4287a4c9-a67e-435d-87d1-6037b3a7e664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fde0c9f-f35c-4eda-93bf-1ef14561beac",
        "cursor": {
          "ref": "74f1b3e8-88bc-4902-87c7-bae690729db1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a05193ff-086e-4012-85ce-efec31c5e50c"
        },
        "item": {
          "id": "8fde0c9f-f35c-4eda-93bf-1ef14561beac",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3ea44c76-084d-4800-ba28-7d8c755d3340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0275d5a6-1958-48c3-a6eb-32109b0475c6",
        "cursor": {
          "ref": "793f71b1-7308-44ea-9109-34406bc52c0b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "71e06eed-83f7-4f18-b663-f39d0cc8151d"
        },
        "item": {
          "id": "0275d5a6-1958-48c3-a6eb-32109b0475c6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f6a1e7b4-9328-49ff-aeab-e98399243a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201f80ac-769b-488b-a6fc-a0022e903aa7",
        "cursor": {
          "ref": "c203584b-7a38-4221-963a-b59acc2895ac",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f584907f-e487-41c1-a0f8-dcd09b18e092"
        },
        "item": {
          "id": "201f80ac-769b-488b-a6fc-a0022e903aa7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3d24afd3-0e75-49de-b8c8-315b37bdffe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0204e7c-75af-4c12-881a-192b4748d269",
        "cursor": {
          "ref": "f1593053-0e31-400d-8ded-06523844e12d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e8dd9049-4fb9-4c0a-9481-94773107276d"
        },
        "item": {
          "id": "c0204e7c-75af-4c12-881a-192b4748d269",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6fd3401e-5925-43dd-8f70-01f7ccb48483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410121b6-fc77-4b2e-8c1f-d230b78c8fa8",
        "cursor": {
          "ref": "eb8c7f53-8353-4a4e-a5fb-cc89a2aaa644",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "da6b178c-82f8-4be4-b776-8e2426b25442"
        },
        "item": {
          "id": "410121b6-fc77-4b2e-8c1f-d230b78c8fa8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4f37c55c-dad0-4f47-b7c5-f1c79746bd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fadc513-eccc-4cf8-924a-787f3f756e14",
        "cursor": {
          "ref": "07f36548-5008-445d-b5be-474a0a6de88c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4a0cdcaa-8e35-4be0-a8f7-e7f1c4207421"
        },
        "item": {
          "id": "6fadc513-eccc-4cf8-924a-787f3f756e14",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "09921a8d-6a1d-4e99-abcc-290c4af1841a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ec83f5-6af2-4f2a-9558-971886e200a8",
        "cursor": {
          "ref": "6d14670a-93b2-45cb-a758-9b4fe6ada393",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1fb6d865-dd2e-4cd1-8e3a-d83e79eae02b"
        },
        "item": {
          "id": "17ec83f5-6af2-4f2a-9558-971886e200a8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "26d76ece-190d-4f8e-8970-5a9095c28d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1338e236-7bc4-47fd-b255-4739ca9de86a",
        "cursor": {
          "ref": "502d2890-0e1f-42f9-ab6e-b4e05c6bed9d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b24d7f73-d426-4195-a91c-2b25e3cf605b"
        },
        "item": {
          "id": "1338e236-7bc4-47fd-b255-4739ca9de86a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "eb5e82bb-80cf-40ae-b54b-804f184d0c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2b7b17-1a22-4b3d-bbcf-3268dc31507c",
        "cursor": {
          "ref": "2913d0ff-f255-4658-9b1f-6574fb355766",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "82b03efb-9ab4-4fcf-b3c0-cfa1dcc04be2"
        },
        "item": {
          "id": "0d2b7b17-1a22-4b3d-bbcf-3268dc31507c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cfbb91bc-4aa8-42de-9527-36d3e0df7b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ec6b88-5cb6-4854-a87d-6d8f9df81814",
        "cursor": {
          "ref": "dfe65e31-9bc0-42bd-9ea7-7ef589a182bc",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dcb4c936-1dfd-4fc2-8eda-2a52f9a9cd90"
        },
        "item": {
          "id": "19ec6b88-5cb6-4854-a87d-6d8f9df81814",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ab580765-8d7f-4a96-bf36-61b4fa7055e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75499d5-35e2-4289-9dda-8aab59f6fd1b",
        "cursor": {
          "ref": "3d0d8fad-1aab-4309-918e-07b524e0305b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "607c1975-13ce-4f38-8ee1-2109b1d2bda2"
        },
        "item": {
          "id": "e75499d5-35e2-4289-9dda-8aab59f6fd1b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f809a839-3ff4-4bcf-b4f8-148f7cb2a979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e8afb9-bdca-4005-9dc3-69cb3efc14f3",
        "cursor": {
          "ref": "2e9a6cef-994a-4f5a-a4a1-6813673e8741",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b6453543-92bb-4f17-ab93-7f7b28937537"
        },
        "item": {
          "id": "b1e8afb9-bdca-4005-9dc3-69cb3efc14f3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fc16f2b8-351b-4c09-8bec-0371ed02ddd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1303d482-fdbc-4207-b2ee-cfa262beca47",
        "cursor": {
          "ref": "bffbf647-08e6-4d35-b83f-348157530e37",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "df50242a-e9b7-4a30-bb49-6b0b99f350a7"
        },
        "item": {
          "id": "1303d482-fdbc-4207-b2ee-cfa262beca47",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1dfd5337-b360-4e76-80f0-7b8379e8f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cbf2aa-6eb7-45b5-8104-3f32a0adad34",
        "cursor": {
          "ref": "0970b11b-403b-469f-96d3-a86783f27750",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "97765e85-cbbb-410a-a357-4df050727919"
        },
        "item": {
          "id": "35cbf2aa-6eb7-45b5-8104-3f32a0adad34",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d1ad2bbe-7426-4022-a06e-0341df320f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636bc09d-351e-48d6-ae75-7889d4ff655c",
        "cursor": {
          "ref": "b446dd94-b244-4eaa-a506-53f5218eb3bc",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4232429c-d932-46a1-8d3e-1bde9ad5283e"
        },
        "item": {
          "id": "636bc09d-351e-48d6-ae75-7889d4ff655c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "08b47d18-be57-495d-abcc-8f316d037783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527d31ed-f778-4d6d-b425-3b28de9d285d",
        "cursor": {
          "ref": "e3b89c12-6821-40f7-a45b-7c56199692de",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9e02970b-ee4b-4f66-86f3-25d09b1299f2"
        },
        "item": {
          "id": "527d31ed-f778-4d6d-b425-3b28de9d285d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d7bd0240-47e8-4dc8-9298-4f508ba69acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81dbddd-e034-471b-a160-25412753a5b6",
        "cursor": {
          "ref": "abbfb811-fa31-46a4-b0dd-94a8f0853a67",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a62e1f89-0481-4478-9ba9-44ca9d30353b"
        },
        "item": {
          "id": "f81dbddd-e034-471b-a160-25412753a5b6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1e46b6ea-4034-4412-92bc-8fe292abbd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24209a8f-6b52-4975-9359-520a86ae9880",
        "cursor": {
          "ref": "8f04452b-991b-4fce-b8aa-cdb797042122",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0adfde1e-f89d-4175-9931-c5c69a085be7"
        },
        "item": {
          "id": "24209a8f-6b52-4975-9359-520a86ae9880",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "824d7d11-647f-45d5-aa27-6ede7206a368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffab4a54-f300-4611-b5fd-b3bf4059f58e",
        "cursor": {
          "ref": "c13da2f3-17fa-4c55-9be5-fa960f07834c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ce58e9c1-76f6-4b82-9c93-16591b520bb1"
        },
        "item": {
          "id": "ffab4a54-f300-4611-b5fd-b3bf4059f58e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ce9071b4-79b4-484b-acac-748691da6d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c278da-2bae-4fb6-9ef3-070e407ab584",
        "cursor": {
          "ref": "c15e4b21-ede0-45cb-b867-d2f837c9483d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bc38ac7e-32d5-44a6-ac5e-5fc865b3067a"
        },
        "item": {
          "id": "c9c278da-2bae-4fb6-9ef3-070e407ab584",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9c758ba3-a0ba-467c-9a1a-74c9cbdc8c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd695be-f9b5-406c-a57a-0dc074ddc5b6",
        "cursor": {
          "ref": "b6fbc2ec-e1a8-4c13-918d-d80adb6ca704",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b044794a-ecff-43b1-8ca3-855ac269c8b2"
        },
        "item": {
          "id": "1dd695be-f9b5-406c-a57a-0dc074ddc5b6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8f58e512-57af-4f3e-81b5-ac5813a46a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f032c4-8556-41bd-b5f3-5767267f29a4",
        "cursor": {
          "ref": "341dff09-86e0-48eb-85be-6582c906cdce",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bb3cfa05-649f-4c0a-8dad-94f505abef77"
        },
        "item": {
          "id": "36f032c4-8556-41bd-b5f3-5767267f29a4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9efb2b7d-9baa-4459-b475-a3dfb044ef1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712b00f2-bcbe-4403-8d71-db7c033a38d7",
        "cursor": {
          "ref": "84e16147-88dd-4ee6-90ca-78f8161ec5e7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f5f934e3-0d53-4135-8547-3463cbbba015"
        },
        "item": {
          "id": "712b00f2-bcbe-4403-8d71-db7c033a38d7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b3b35014-28f1-4da3-8aab-cb4f7632e59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee46b6b-ed4f-4cb8-9018-8fd54454900e",
        "cursor": {
          "ref": "3b7fa1e4-9dfc-4c80-9115-d70d3953a84d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6b1fcc81-80c9-47f2-8508-91a8054dd160"
        },
        "item": {
          "id": "cee46b6b-ed4f-4cb8-9018-8fd54454900e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "403da6cd-d6c0-4771-b688-30be6599b916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604bf7bc-4b54-45d0-9ade-e426b11deb58",
        "cursor": {
          "ref": "6674f1e6-b312-4c51-976e-43a82658e250",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b0c6b9f7-76cb-403d-995d-bbe0761368dc"
        },
        "item": {
          "id": "604bf7bc-4b54-45d0-9ade-e426b11deb58",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "63293733-8f31-485a-a4a6-f3204270700b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f341df-bcad-4f57-b9db-8077b34c64dc",
        "cursor": {
          "ref": "ef7822f9-efe3-4399-ab27-06eea1d9107e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0645b3e0-d974-460d-a14e-c484b1f5bbc8"
        },
        "item": {
          "id": "56f341df-bcad-4f57-b9db-8077b34c64dc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "33345140-861e-4567-a3dc-27cbb715c0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ce7fa7-da54-4b65-ae11-74803610a30a",
        "cursor": {
          "ref": "b343872b-f69d-4090-8b9e-0c1f20c75df3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "96b2f74e-b42f-4eb1-aaf6-8c00b4b05bf8"
        },
        "item": {
          "id": "b8ce7fa7-da54-4b65-ae11-74803610a30a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ae5c2bfb-1faa-43e3-9cb1-85dafe3e4e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0939ce1d-a501-4192-9512-3a581714e444",
        "cursor": {
          "ref": "080a500d-bca2-4867-a24e-0f61bcba4f75",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0d9cc5d1-94a2-42e9-8ec0-bb3ed8cded97"
        },
        "item": {
          "id": "0939ce1d-a501-4192-9512-3a581714e444",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e705bfc3-f9ce-416b-9bec-04f930ee4ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc248e4-080e-488d-a49c-6dbdfc0ff795",
        "cursor": {
          "ref": "8d5ed374-1b19-4e88-b855-3f81eb43b079",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "00f9d215-7906-4762-8bdb-4888104b48e9"
        },
        "item": {
          "id": "7cc248e4-080e-488d-a49c-6dbdfc0ff795",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "79a67355-7e34-44fb-b4f7-402119dda7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da61bce5-b778-4c7d-a9db-2c1015a82242",
        "cursor": {
          "ref": "d636753b-fa04-4d5d-83ac-c3853d6b2c97",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "16748572-1ce6-4b35-9808-265e2e4cf087"
        },
        "item": {
          "id": "da61bce5-b778-4c7d-a9db-2c1015a82242",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bc8be2bf-c44d-4e7a-bc81-f69358c56333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f81f12f-0f34-4d48-934d-f888489a944f",
        "cursor": {
          "ref": "17b7451e-75f7-4ab7-aa3a-fb5bac3f7743",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "099e4fd3-5460-4c7c-be9f-d84e67d5349c"
        },
        "item": {
          "id": "4f81f12f-0f34-4d48-934d-f888489a944f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1725142b-b6a9-45b8-9700-9b354a84ad2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26437c92-4669-4a0c-b6ed-f4fa20d3aa36",
        "cursor": {
          "ref": "d2d2d39a-1e6a-42d2-9e75-83c9424be113",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ed7b8042-82b2-4416-9f75-a9e8d761d4f6"
        },
        "item": {
          "id": "26437c92-4669-4a0c-b6ed-f4fa20d3aa36",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1fd3b1b5-d438-4ba2-88e2-83745a5e7940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb43c99-8198-4d5b-8b22-1965d0331cb8",
        "cursor": {
          "ref": "37c029b0-7c59-45cd-9b8f-35b1cb948513",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4967964c-31ec-4a02-8d9b-925a3b23a7bd"
        },
        "item": {
          "id": "dcb43c99-8198-4d5b-8b22-1965d0331cb8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "45d96def-2540-4cf0-a420-9cd1b2ed61e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac06fbdb-8d0a-482f-90c1-28977260679a",
        "cursor": {
          "ref": "44069d78-1d04-47c5-85c6-90d0904cd67a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4d6dcd3a-d196-4b71-a254-b06631d64a8f"
        },
        "item": {
          "id": "ac06fbdb-8d0a-482f-90c1-28977260679a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d928fd9b-be5f-4407-8164-edc68ce3a078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bb8bc1-86ab-458d-9d46-a78ca74bb461",
        "cursor": {
          "ref": "ca8c434a-5b03-4fd0-a42f-d486304abe5b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "361d481b-4ad7-441f-9f7a-11cdcafda995"
        },
        "item": {
          "id": "85bb8bc1-86ab-458d-9d46-a78ca74bb461",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8abdb252-2dd6-4d2e-9755-e9dbbf23fa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b866ab50-82d5-4447-be7c-f551c7fa390b",
        "cursor": {
          "ref": "292c2a14-572d-4a75-ad63-3d0e9a145eeb",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0f1d5e23-12d0-47e0-bcc2-bc6950f02e0f"
        },
        "item": {
          "id": "b866ab50-82d5-4447-be7c-f551c7fa390b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2be5bd75-f848-4346-9b1b-896d8ab8d2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f75e51c-a5c2-4895-985f-0d81dbb0af55",
        "cursor": {
          "ref": "172ca2a8-1f4e-450a-9f34-00a3ccc1937a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "eec35d78-b4b6-497a-9c26-47b3cc0d7242"
        },
        "item": {
          "id": "7f75e51c-a5c2-4895-985f-0d81dbb0af55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d4f56cb9-c2a7-4703-90c5-6d71409bc0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca125f04-9bd0-4a7a-b64f-979f30d7e74b",
        "cursor": {
          "ref": "99e4d03a-7d89-4838-85a9-3e37e38bb943",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e61ed647-fb03-439e-9728-8decec260cef"
        },
        "item": {
          "id": "ca125f04-9bd0-4a7a-b64f-979f30d7e74b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4cbf434c-a228-49f4-bab9-29134935507f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7feafb-bd11-4abb-b99f-656e307e6fe9",
        "cursor": {
          "ref": "dad04d4f-9f91-404d-a5ab-f88140523eea",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "19d8fdde-7330-49fc-93da-82c98bd4b4ba"
        },
        "item": {
          "id": "ea7feafb-bd11-4abb-b99f-656e307e6fe9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3ece0e9f-b1c1-4260-bcad-fa5b85a07871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fc1cb0-19a4-4331-a4c7-03bd94edef8b",
        "cursor": {
          "ref": "c7a9634a-c66c-4abd-812c-454101f2f2ba",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b6edeb72-5051-4f33-84cf-9d6078138aea"
        },
        "item": {
          "id": "a4fc1cb0-19a4-4331-a4c7-03bd94edef8b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8396c39c-3d29-40fd-824f-3b6173c3693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d969012e-be45-42e8-a5c3-5ac20d520738",
        "cursor": {
          "ref": "73895320-82f6-4410-8382-ff72c5472e5f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "beb7c09d-7c79-4c1e-8804-5a5a6b6d3edb"
        },
        "item": {
          "id": "d969012e-be45-42e8-a5c3-5ac20d520738",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "065b1db5-a311-458e-926c-48a13de7e762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18c7957-fce6-42be-a534-abb5497d8ee9",
        "cursor": {
          "ref": "9d39e92c-a9ce-4a2f-add7-3993af5f2848",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a93c5638-1b2e-4dbd-bd1a-8caf40321f70"
        },
        "item": {
          "id": "f18c7957-fce6-42be-a534-abb5497d8ee9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "618219c7-edb6-4cf4-bbf6-dac16b7f6f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f70f67a-1361-4d08-b8bd-c7add7636455",
        "cursor": {
          "ref": "86ad3c61-9f02-4994-bc2c-9c67c8b15a60",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "58232557-620d-48d7-b948-f918d968cb6f"
        },
        "item": {
          "id": "4f70f67a-1361-4d08-b8bd-c7add7636455",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "65ccdb8e-29ad-44c7-99dd-1cf037dfbf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ec2827-4ee5-4333-b8cd-9705a3473452",
        "cursor": {
          "ref": "cb2eee98-262b-44d7-b2b4-a3bf2c9dd2fd",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a426e486-d0cc-4845-97fd-cf2e7eba3840"
        },
        "item": {
          "id": "22ec2827-4ee5-4333-b8cd-9705a3473452",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "84d8e3b0-33a4-4711-b976-deb00b05feac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b833483-55fa-4971-8675-8d55cceb5ea0",
        "cursor": {
          "ref": "86c39ec4-f1fc-4e23-82b1-c5c1be111796",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6c8719be-993d-47ff-b580-86de6226eed6"
        },
        "item": {
          "id": "1b833483-55fa-4971-8675-8d55cceb5ea0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f6f89b2c-4ae7-414d-b7ff-d541c8b4e867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08155b89-5277-4078-b95a-07494838b777",
        "cursor": {
          "ref": "84e93f3e-561e-4dee-90e7-0c4ac54bf809",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "52cc2487-bc12-4056-825d-5433a89e0530"
        },
        "item": {
          "id": "08155b89-5277-4078-b95a-07494838b777",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5e7e4e52-898d-4f19-b8ad-bb331c4f0a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a55ed6-d4b8-4562-b17e-e90d0ebae69b",
        "cursor": {
          "ref": "13ce51a4-6f98-4c5d-bf62-a719ef8dbdbe",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3b76c0fc-6b1f-44e3-8d44-c416237de538"
        },
        "item": {
          "id": "02a55ed6-d4b8-4562-b17e-e90d0ebae69b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2a645311-6ec2-4208-a678-682149b19ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fe198d-3f1c-4e9e-9c2e-ed8089ac0f57",
        "cursor": {
          "ref": "4b76a986-bce7-4ca2-8d33-26ab7631bfd6",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6916c98b-6047-41fe-b2ad-68517baa7573"
        },
        "item": {
          "id": "43fe198d-3f1c-4e9e-9c2e-ed8089ac0f57",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cca351c1-a74e-43fd-93c0-a15f0360d27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f07960b-1a01-4d40-b193-46f0d2ca037f",
        "cursor": {
          "ref": "f23ecd12-fa0b-49dc-b04d-9e18b3f02145",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "edf6c8ad-1fae-4d81-a75f-3c6d9b8f1a2b"
        },
        "item": {
          "id": "4f07960b-1a01-4d40-b193-46f0d2ca037f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7e4eb906-81df-4fdd-8b09-f9df4ae66254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d62ff4-66b2-4761-9413-0c0175112150",
        "cursor": {
          "ref": "707ff8b1-36c0-4dc2-813e-e68a77a4ff5b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "34d418e9-af92-43da-b034-2404a051ae53"
        },
        "item": {
          "id": "96d62ff4-66b2-4761-9413-0c0175112150",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ec2a5118-6722-407f-8a10-bab97a8b11f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72764828-57f8-4524-9e50-cd773fa42cd5",
        "cursor": {
          "ref": "d751a502-37b2-4dee-b5dc-fda1a418384f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "72cd4b45-df92-4a16-9f19-097924c10d70"
        },
        "item": {
          "id": "72764828-57f8-4524-9e50-cd773fa42cd5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8ce838fd-d56d-4245-8697-562db3066e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159abe0a-0988-4bcb-b19b-c5e248e7f8ff",
        "cursor": {
          "ref": "20132f03-d2f0-486b-ba48-103c676b1bb9",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8be997f1-2886-46d3-8b0a-55e2506db257"
        },
        "item": {
          "id": "159abe0a-0988-4bcb-b19b-c5e248e7f8ff",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "83046ebe-06bf-4c35-a428-1997a3ac8069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe7cd1d-6ebe-4fad-b856-b318924f8097",
        "cursor": {
          "ref": "d2f1246b-fcf8-4c97-9f4c-f0e2e1114121",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a7a69640-b306-4e96-9c9b-f4a1a5f407f0"
        },
        "item": {
          "id": "8fe7cd1d-6ebe-4fad-b856-b318924f8097",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b261e21b-94d8-4da2-88eb-3bfce2b505f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a713bc-26b8-4a82-a898-373132083b10",
        "cursor": {
          "ref": "fea5e9c6-8936-4098-bf63-a40306ed3757",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1a0facfa-e757-434e-a891-424c08cfe182"
        },
        "item": {
          "id": "76a713bc-26b8-4a82-a898-373132083b10",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3a67d309-7c8d-4f8e-8cf2-3551652b514c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c60ce2-696d-425f-9673-fdf8e5061d73",
        "cursor": {
          "ref": "650c1f3d-09e0-4165-84bc-f4e316f291c1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8d14d7a6-d889-4cbd-8dc0-46fae81aae13"
        },
        "item": {
          "id": "96c60ce2-696d-425f-9673-fdf8e5061d73",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e347e4a7-d5cf-4ff4-9d82-f597aafe8df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035321fe-e268-4498-ba0a-2178cef28d01",
        "cursor": {
          "ref": "cfaeb522-a760-4511-9de4-a57ebb8dcb55",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4fdc3b79-9ff9-4d32-a3e0-5f61270e9dab"
        },
        "item": {
          "id": "035321fe-e268-4498-ba0a-2178cef28d01",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ae361e2c-ceaf-4cbc-997e-0d739d30bc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3ddd77-dc1b-449e-9f58-45ed57868c7f",
        "cursor": {
          "ref": "9f7e4dc5-fa13-4ce8-9fe2-18c25606a803",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bb6d6abe-f7b6-43ba-a3c2-b873aa323b7e"
        },
        "item": {
          "id": "af3ddd77-dc1b-449e-9f58-45ed57868c7f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "69752a8f-2be1-4d9e-889e-4be9d4a4185d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca183832-d0a7-4119-b76d-290a86ac3200",
        "cursor": {
          "ref": "98032f72-851a-4c33-9067-623931e0ea16",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e714b167-ff43-4376-8f07-a441f4bd448c"
        },
        "item": {
          "id": "ca183832-d0a7-4119-b76d-290a86ac3200",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "48719158-b14b-4a40-a84d-fd05a8165e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5954b610-1919-4f5b-88ae-80f03f549cc7",
        "cursor": {
          "ref": "c827746d-084b-4ba5-b06c-a0767e99e8c6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d27c1a8e-1f5c-4c1b-88ef-10531e486201"
        },
        "item": {
          "id": "5954b610-1919-4f5b-88ae-80f03f549cc7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3d7dc64d-b6aa-4d34-a6e3-8a0aab08071e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b182486-627a-4d09-8fd1-ad45a7e183bb",
        "cursor": {
          "ref": "f8ab7867-3ae4-4392-a661-1896a1e36402",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "730ca95b-51c4-4070-94e2-ca8c1097be5b"
        },
        "item": {
          "id": "3b182486-627a-4d09-8fd1-ad45a7e183bb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3e67bea0-4737-42e0-a5db-1415079cddbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a45bb4-3379-40d1-b3fb-66ca5183aa44",
        "cursor": {
          "ref": "c2dffe8d-9abb-4592-81e5-69574d958e64",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fdc9b70e-305a-4c37-bdd6-a9142c1d4cc1"
        },
        "item": {
          "id": "45a45bb4-3379-40d1-b3fb-66ca5183aa44",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8c1b5a49-b712-479f-9ac4-dd346d376ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8ebb9c-f94b-417a-af81-d711b8aaddc0",
        "cursor": {
          "ref": "e0721df2-f51a-427b-8672-a28107323e22",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c93b156b-bdcb-4ecf-a36f-8d4782f22c5a"
        },
        "item": {
          "id": "bb8ebb9c-f94b-417a-af81-d711b8aaddc0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "90194e14-089f-4545-ae8f-3fd1b62580d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961082f9-ee13-4559-99ff-1ee9b12b69dc",
        "cursor": {
          "ref": "9fdc47c7-f9e9-4cfe-bfe3-9aa88807b49e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "de230e44-f3a2-426d-a590-e52fa763f214"
        },
        "item": {
          "id": "961082f9-ee13-4559-99ff-1ee9b12b69dc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ab29bffa-e62b-4b51-86e7-cb054adf68d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cbdfd0-33dc-4b9a-b3f1-0131218aa408",
        "cursor": {
          "ref": "5acbd07a-9625-4713-b623-0274cace24c0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d97fbd59-aeb3-406e-99cf-21bb88c34afe"
        },
        "item": {
          "id": "e0cbdfd0-33dc-4b9a-b3f1-0131218aa408",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7cebb7d1-1ec6-4e5c-8e73-9d65cb21329d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b597d12-21e9-4130-94f7-547d19670005",
        "cursor": {
          "ref": "6f8261f4-7b6f-4364-8a05-de8222ee1961",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "203c1455-d2af-449c-a0f3-827ac66fb2a1"
        },
        "item": {
          "id": "1b597d12-21e9-4130-94f7-547d19670005",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "47c6da70-3d9e-4dec-89ef-8af8218aa2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4a95a2-febc-42f3-80ce-98b421064859",
        "cursor": {
          "ref": "aa754769-daed-4e71-9c7d-f6467b79b4d5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a4fb95c7-6f1e-4a9f-b8c3-a5aa016dcf67"
        },
        "item": {
          "id": "8b4a95a2-febc-42f3-80ce-98b421064859",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b6e9a184-e3b6-4f57-ac59-d45108ab4e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dc8e05-7f5d-4188-8928-36a89f2ccd89",
        "cursor": {
          "ref": "9e907fd7-b313-4f9f-a09e-261abc385103",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f199cd11-c5a2-4105-80da-8bb58ea90f63"
        },
        "item": {
          "id": "12dc8e05-7f5d-4188-8928-36a89f2ccd89",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4c13f86f-2bf5-4c10-9c1a-64bd66d6d6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfcf36d-a709-4da0-a746-d38dd1526201",
        "cursor": {
          "ref": "39ee0657-772c-4653-ab56-dca1c75defe5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "90f6dc46-d1de-428b-8dc4-32284e4e63a9"
        },
        "item": {
          "id": "dbfcf36d-a709-4da0-a746-d38dd1526201",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e961412e-fabd-4649-945b-dbb784cf9d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f333ded4-4e65-412e-81a6-8ccb68f1c52e",
        "cursor": {
          "ref": "171f69a2-d123-40d5-ae21-281882cb9528",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d5214c22-d7a8-4442-a81a-0d7411530aac"
        },
        "item": {
          "id": "f333ded4-4e65-412e-81a6-8ccb68f1c52e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c469e219-6761-485e-ad2e-4347301c8c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883f2d7a-113a-4a22-916a-22b105fa4c6b",
        "cursor": {
          "ref": "188d43da-5069-4396-a78f-44d1848c8c13",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2c8c58fd-866f-4521-96e7-4f865d31fa1b"
        },
        "item": {
          "id": "883f2d7a-113a-4a22-916a-22b105fa4c6b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "08b11693-ad01-4a14-8d34-4902aa3834e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700a15aa-739e-4340-b26c-b7e227cdd9a1",
        "cursor": {
          "ref": "c37e37f1-745a-466a-8462-d668e2c87bcf",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "03dea7d0-ef06-443c-91bc-8a16a8fed5bb"
        },
        "item": {
          "id": "700a15aa-739e-4340-b26c-b7e227cdd9a1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d6f8bd24-6fe1-4ae0-a69a-8c53899b98e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d15da0-a9f9-48b9-bcbd-429dba3421f5",
        "cursor": {
          "ref": "ecc192b6-8e82-4606-a938-acf85bc727c1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "48e16915-aeb9-4951-bdcc-f6ced4a43497"
        },
        "item": {
          "id": "c7d15da0-a9f9-48b9-bcbd-429dba3421f5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ede34850-5de8-4204-824d-ef0db5a4e8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "77c150be-288d-4592-a14e-e5b05aa7afc7",
        "cursor": {
          "ref": "e2f54b81-6f9e-48ab-a5a4-c9cc81c4d346",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "25a3bca2-c560-48a7-b226-cbf0f04ddeaa"
        },
        "item": {
          "id": "77c150be-288d-4592-a14e-e5b05aa7afc7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "080f2e97-4b46-4caa-a218-05c9222bff5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e6e615e9-e6d2-4979-ac26-e7d2d2774244",
        "cursor": {
          "ref": "3e1a24eb-3a37-46d9-b2e8-51bfd1b1b5c0",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "abdffc7c-e152-41af-af43-b8500eec8094"
        },
        "item": {
          "id": "e6e615e9-e6d2-4979-ac26-e7d2d2774244",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "16bd9520-d03d-4e38-a2c6-92aee03be1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6241031c-e750-48a5-b70b-76f2ce04acbc",
        "cursor": {
          "ref": "4267c422-eb30-489b-af22-58e4bd886abe",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "26e9f3c9-cded-427d-b9e6-9c55dd9fa6bd"
        },
        "item": {
          "id": "6241031c-e750-48a5-b70b-76f2ce04acbc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0edede70-83c7-4821-b24c-cbd69105e023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7d91c9e5-3aac-42f9-8ffe-b3fecf104071",
        "cursor": {
          "ref": "c28f4819-c244-4992-94d9-cf2b9b053a23",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e79edfbe-2768-4b00-b146-bf55a8b3cfef"
        },
        "item": {
          "id": "7d91c9e5-3aac-42f9-8ffe-b3fecf104071",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "598859f0-9fe1-4269-ac81-70b72c581c10",
          "status": "Created",
          "code": 201,
          "responseTime": 14121,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c954e1-5432-4370-8254-5a3e4bf129d6",
        "cursor": {
          "ref": "7864a27c-98af-4879-a247-558aa52a68c5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "29957a0e-7142-459c-9e93-2577f0722342"
        },
        "item": {
          "id": "61c954e1-5432-4370-8254-5a3e4bf129d6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "84a9761a-7a94-404f-8d37-a993010495f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c36fc588-96d3-44e6-9b3c-b4099c7a0f90",
        "cursor": {
          "ref": "2d08316d-5a9f-4e74-aba6-1ba21e92e884",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cdb7b458-d487-48a1-9cf2-dc99b67c1c9a"
        },
        "item": {
          "id": "c36fc588-96d3-44e6-9b3c-b4099c7a0f90",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "955a4f5d-1da2-45b0-8c89-598225c53b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5ade66b0-dd55-4463-9cfa-9778ca78b3fc",
        "cursor": {
          "ref": "91ef1486-952d-41f3-b8e9-0da9610a5938",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9ea2a04f-1673-455d-9b59-513f0cb37056"
        },
        "item": {
          "id": "5ade66b0-dd55-4463-9cfa-9778ca78b3fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cca40d51-78d9-4605-b236-e3f92797ed51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4cde7f-6fc7-482f-9f3f-32ac6fafd610",
        "cursor": {
          "ref": "f0516a2e-f97b-418e-af6c-d25b153f6976",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "16c26de8-6f69-4e4f-8bc4-07f32a0af39e"
        },
        "item": {
          "id": "ab4cde7f-6fc7-482f-9f3f-32ac6fafd610",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "38c4a4fd-aad7-47da-9daf-067f57e84452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242d53d3-ea23-4527-9033-99738ab9d341",
        "cursor": {
          "ref": "5cf10891-b401-458e-b6e4-2a4c28cd019b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "07e2dac1-2ab9-4938-ab47-04924c5bc811"
        },
        "item": {
          "id": "242d53d3-ea23-4527-9033-99738ab9d341",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d29e3cc-8723-4580-ae20-5f8fb4b8e892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b206cc57-6def-455a-9f5d-476d63f33268",
        "cursor": {
          "ref": "03a09a52-d555-42d9-a4a9-628f4ba0a486",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5c3ff995-3a24-46de-8d36-dca55034ea03"
        },
        "item": {
          "id": "b206cc57-6def-455a-9f5d-476d63f33268",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "57484fa0-fe4f-45b1-8538-c435875b2b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8142f7-4bdc-4d62-ad3b-c6fa10b339e5",
        "cursor": {
          "ref": "c0ffd620-add2-4434-9a21-73a599d21c06",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8fcdb55e-39fe-49f2-9c10-a38dbe053084"
        },
        "item": {
          "id": "2b8142f7-4bdc-4d62-ad3b-c6fa10b339e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9678d1e2-eb7d-459b-a8e1-7d3644821197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acfef97-4bab-4eaf-9c9f-537eda3add88",
        "cursor": {
          "ref": "c57ec2ef-ec02-45be-817a-02e1176b23f5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c41a5c50-3817-4251-b61b-a2757da37fcd"
        },
        "item": {
          "id": "7acfef97-4bab-4eaf-9c9f-537eda3add88",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "95864f30-9491-4d6d-86d6-9f09f2cfba3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdfb366-c24c-4342-828f-987c5c95ca8a",
        "cursor": {
          "ref": "9756f57c-16a2-4895-afee-9e56dd7fccee",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "90567235-507e-4f52-a4fe-3351929f0b6c"
        },
        "item": {
          "id": "ebdfb366-c24c-4342-828f-987c5c95ca8a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "00948206-4d57-4e4f-b50f-9f41f64003e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87c0f42-e029-40bd-94b8-01e0985ad554",
        "cursor": {
          "ref": "1955d9b4-b01d-48cf-bc19-26e459981af1",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a4e722f0-1b04-4d66-9994-938ad7c876f0"
        },
        "item": {
          "id": "e87c0f42-e029-40bd-94b8-01e0985ad554",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2cfc3359-086b-4ef2-9f59-df6553444b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969b7813-4e62-4a75-b89b-47b7ebc9a58b",
        "cursor": {
          "ref": "0e581fe3-3bc9-49de-87fb-b85007168460",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "78dc188d-bf18-4039-b71f-dcdfcb16ef91"
        },
        "item": {
          "id": "969b7813-4e62-4a75-b89b-47b7ebc9a58b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "264f8ac4-792d-4f3f-a6e3-9ccd2df0278d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eed07fc-a6e7-4122-98fd-d265fbd66a60",
        "cursor": {
          "ref": "e3f555ae-b8c8-41c5-9ba0-29745f345ef7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2d746b5b-c20b-4280-859c-9829e3527671"
        },
        "item": {
          "id": "2eed07fc-a6e7-4122-98fd-d265fbd66a60",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4415b04b-25aa-4038-9187-50b50869d470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de732649-0fb9-403f-97d9-7f8c4d7ca77b",
        "cursor": {
          "ref": "165ac664-130c-4226-87f4-054f9ea2d07c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d73144e1-73f0-4ea9-af0c-c1e774b22a09"
        },
        "item": {
          "id": "de732649-0fb9-403f-97d9-7f8c4d7ca77b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d310019f-4926-4071-87ab-d3cf72d2dfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b7624-1ce5-4331-a48d-0ed49690b213",
        "cursor": {
          "ref": "5cf2b929-a759-421c-b2a3-4c64c05cffd1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f2b1dcb0-3985-4dc6-a3fe-1bdc921b61db"
        },
        "item": {
          "id": "595b7624-1ce5-4331-a48d-0ed49690b213",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b3a45ee1-3a26-4c3a-9f9b-877cb3c79e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d035cf77-2425-4062-8d27-dfae66402669",
        "cursor": {
          "ref": "7edc4726-b290-4bdc-8495-ba3b6e7cd96e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cb55c8de-61ef-4492-a443-d1e9debd44c2"
        },
        "item": {
          "id": "d035cf77-2425-4062-8d27-dfae66402669",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1d823218-3d68-49dc-bff0-0551191dd716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ab2bcf-d798-4b2a-ae4b-d23f8c54cbf2",
        "cursor": {
          "ref": "d8f3005a-d02f-4f20-b89d-ff4b85bcbc3f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4cb9c83c-1e36-4b1c-9efa-27903057cb4f"
        },
        "item": {
          "id": "b6ab2bcf-d798-4b2a-ae4b-d23f8c54cbf2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "82f3b7a7-bd27-48b2-8807-59c5a33138b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6b6b13-0343-46ea-b633-b5eba4403c25",
        "cursor": {
          "ref": "50fd290e-3496-47a2-98cf-de1de141d307",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "73c2e498-c644-4283-a7e5-b0317d23cd0a"
        },
        "item": {
          "id": "4e6b6b13-0343-46ea-b633-b5eba4403c25",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1b23ec2e-9d3c-4ed3-93ff-5481d8cd7fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd7fff4-d82a-40a9-8f12-625d96aa4a34",
        "cursor": {
          "ref": "1c0d82b7-655f-4480-8398-3864bfc8b9db",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9b075ffa-7103-4d5f-b0f2-0b00653a038b"
        },
        "item": {
          "id": "4dd7fff4-d82a-40a9-8f12-625d96aa4a34",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a20ed910-da54-4b20-afb8-cbb3574525b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac593c1-d087-4da0-bd1a-a8bd65e3c6c2",
        "cursor": {
          "ref": "675ae857-cca0-41c9-86e0-0965786c6823",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "527fe082-89b4-4982-bbc3-9e91a07b9030"
        },
        "item": {
          "id": "3ac593c1-d087-4da0-bd1a-a8bd65e3c6c2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c092c41-9ac2-41b7-bfd7-f424ef7046ea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c0ff9fdc-09a0-4302-98ae-4b30e5b0ae42",
        "cursor": {
          "ref": "0a7d7e5c-6cbd-440a-aec0-84ebe3243bff",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7a5a3164-93a0-4f01-9217-64eea8c1ba28"
        },
        "item": {
          "id": "c0ff9fdc-09a0-4302-98ae-4b30e5b0ae42",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c1b81440-c12e-4592-a92c-3990a9bea3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30c77f6-5545-4214-b34d-f98755be0c90",
        "cursor": {
          "ref": "ecd4ccaf-25fb-46a3-9d5e-fba9d4d1586a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7cd5f072-fa3d-4c1b-a990-a68fc732cb38"
        },
        "item": {
          "id": "e30c77f6-5545-4214-b34d-f98755be0c90",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b0815e4f-bc26-4a15-98c3-9eb2f1358e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb320c39-44f1-4a87-a850-907f6cc41ec4",
        "cursor": {
          "ref": "9ad10fd8-cac5-4d2f-b90c-80440d16867c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6b72e0e2-d3f9-4156-a537-607f0cbe46f1"
        },
        "item": {
          "id": "eb320c39-44f1-4a87-a850-907f6cc41ec4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "533341ad-402f-4bbf-bc2f-46c11b6423be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3096d9bd-b3ae-4a87-80a1-94c76c56333f",
        "cursor": {
          "ref": "fba6c088-ff86-4d3a-aed2-20c08d2b6716",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d46020b8-c48c-49db-b966-b917bd6fa027"
        },
        "item": {
          "id": "3096d9bd-b3ae-4a87-80a1-94c76c56333f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "efdce84d-0945-43f2-8417-65a2619b6246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d2c2c1-f935-4267-9e85-59a5a5228e12",
        "cursor": {
          "ref": "426086aa-8405-41da-8ad6-549987f9a677",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d8e9d9f5-0613-4889-bcb9-ceb96748b2b1"
        },
        "item": {
          "id": "59d2c2c1-f935-4267-9e85-59a5a5228e12",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "be27ae8a-9aaa-465d-b102-987af8ee3639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba17b900-06a5-45e4-8746-81b2966bfb6a",
        "cursor": {
          "ref": "df22eb98-f2fb-4e46-8656-cdf222079995",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7c5bf26d-966d-4cd7-ae9f-3aab6b495f3c"
        },
        "item": {
          "id": "ba17b900-06a5-45e4-8746-81b2966bfb6a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad5e8e36-4cc1-421d-8ce2-31ba1b3b6897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c424c5c5-2fd6-4243-9299-429c8a6a05c7",
        "cursor": {
          "ref": "d5793fd5-0190-4bd6-ac93-cf764deeb986",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "47227a47-92f0-42db-983e-0791639a9d5b"
        },
        "item": {
          "id": "c424c5c5-2fd6-4243-9299-429c8a6a05c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f793e005-ea65-48ba-afea-71476d24eaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5f83fd-19cf-4b11-824f-f06052bfadef",
        "cursor": {
          "ref": "f8a7e8ed-fd36-403e-b5d3-7c796d016feb",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "656a4eb1-604a-418c-9a13-59b53cbcd86a"
        },
        "item": {
          "id": "dd5f83fd-19cf-4b11-824f-f06052bfadef",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7abb8578-82bf-4047-a3bd-688fc63a3cb0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2a023a99-5523-494a-abeb-ab1b47b1959d",
        "cursor": {
          "ref": "d1a8d34e-b32c-4f98-8e30-89710afb7d88",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4eb30a1d-1632-46da-87fb-d9a60fcd8515"
        },
        "item": {
          "id": "2a023a99-5523-494a-abeb-ab1b47b1959d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8a1ea786-cf2a-41f3-a334-919e47e9e9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e818b18d-be4a-4203-9830-0dc6e95aec27",
        "cursor": {
          "ref": "ad428243-ddd4-4934-9140-7709e012dd23",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3f55603d-55ea-4505-aff6-e11d9961b834"
        },
        "item": {
          "id": "e818b18d-be4a-4203-9830-0dc6e95aec27",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b7801f46-308d-4d98-9db4-6d4784397627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcfb2c3-5155-4076-925d-1e1765a93276",
        "cursor": {
          "ref": "bbae5b4f-a373-4ad0-a6c2-070e959e4442",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3129a01d-f93b-4946-9a94-c4a0354ecac6"
        },
        "item": {
          "id": "cbcfb2c3-5155-4076-925d-1e1765a93276",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e6baffcc-61d9-4cb0-9fca-5ce567dba407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906784e6-8f69-45bb-87b1-1002a6478725",
        "cursor": {
          "ref": "b58e0031-ce34-4c7e-b951-2937c4a1975c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f94e4c89-1ab7-4256-9d80-cee5606c3faf"
        },
        "item": {
          "id": "906784e6-8f69-45bb-87b1-1002a6478725",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "380e23db-d9e9-4096-85f3-765a6f8ce14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f50d926-bf08-48ea-90e0-b8d4d0dcb60a",
        "cursor": {
          "ref": "e85d793d-31e6-468a-ac86-cb57e1dfccde",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "42d88d1d-b4b9-4ac9-a69f-d961801e1019"
        },
        "item": {
          "id": "5f50d926-bf08-48ea-90e0-b8d4d0dcb60a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "509cc19e-0c1c-4690-aa67-e086fe523f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4700adb0-5464-41c4-9b0e-99b18b8fd2eb",
        "cursor": {
          "ref": "eb71abc2-d8c2-43e3-a648-58b3d3fd75fd",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9e953c60-9793-439b-a5eb-97033958144a"
        },
        "item": {
          "id": "4700adb0-5464-41c4-9b0e-99b18b8fd2eb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "07f3c74b-6b4d-4773-9968-d663ccb4cadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43a3621-83cc-498d-b718-a9d208a45849",
        "cursor": {
          "ref": "795ee1c1-9d1c-492d-b999-7cd9e64692f4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b3185df6-b2da-45cf-8c49-1a9503d55aee"
        },
        "item": {
          "id": "c43a3621-83cc-498d-b718-a9d208a45849",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f4557447-f453-4a14-bcea-b36c3b9165bd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "64427d5d-3b86-4e4f-a4e8-0c37921e7a44",
        "cursor": {
          "ref": "89df9c72-cd70-4bbf-be39-8d9e6f0b6b0c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "82c28cad-ca0a-4d34-86b0-eaaeb61845ac"
        },
        "item": {
          "id": "64427d5d-3b86-4e4f-a4e8-0c37921e7a44",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cfe7d73e-cb5b-42f0-ab0e-0811c0efca88",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f031e7c3-8b6a-4f68-baaf-814a3f2569e9",
        "cursor": {
          "ref": "811d881e-8186-43dd-a5af-502e975b26f7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9aee8716-f25b-496e-9013-1adde826b8d2"
        },
        "item": {
          "id": "f031e7c3-8b6a-4f68-baaf-814a3f2569e9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cf3e4c61-ad25-455d-a88b-e748d2f1131a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "74850e10-320e-4821-bef7-815de9025c87",
        "cursor": {
          "ref": "17314272-11db-4355-a8fa-c0fe3232b926",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "03abd9b2-03f3-4e33-8480-bcb0ecbd49c9"
        },
        "item": {
          "id": "74850e10-320e-4821-bef7-815de9025c87",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "90110ab7-f03a-40b8-96fe-7caf32b421b7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "5493afdc-ee69-474e-ad66-eb68aa6f01fe",
        "cursor": {
          "ref": "a90604f2-b67f-49ee-978c-0b92ad2881a3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f45230de-7cb7-40c5-ae5b-9ed32284442c"
        },
        "item": {
          "id": "5493afdc-ee69-474e-ad66-eb68aa6f01fe",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "82eb6cee-deaa-42f2-bbc5-fa80a16f1e55",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "fa57e830-61e8-4abe-930d-a5d88b5553e6",
        "cursor": {
          "ref": "9dff667d-e3b8-4cd5-8a74-7e473c4f4991",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "49f366a4-d76b-430a-b65a-e2673613b5f0"
        },
        "item": {
          "id": "fa57e830-61e8-4abe-930d-a5d88b5553e6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4d2ea72b-7a5f-424b-acd2-92fa0e92bc18",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9f49254f-7395-4151-9a35-673ec1eeeed1",
        "cursor": {
          "ref": "a10adf16-ccec-475e-b01b-0454fb036531",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "31991a09-8562-4abf-a0fd-71d640130722"
        },
        "item": {
          "id": "9f49254f-7395-4151-9a35-673ec1eeeed1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "152f259d-ae96-4c65-9c40-db5d0325f3f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c70c3c-5fcb-4e8e-8b82-6507e087a70c",
        "cursor": {
          "ref": "2c507f78-fb0a-4de0-a4d8-6c76d90a4152",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "68d7913d-cb1b-4c7a-a14f-29dc2dc83963"
        },
        "item": {
          "id": "75c70c3c-5fcb-4e8e-8b82-6507e087a70c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eb66f2d7-352c-41e8-98b7-e37330c72d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72933f85-0191-46e0-8216-01dcbf95b12f",
        "cursor": {
          "ref": "cb2ba303-bc08-4e6e-bacb-3b40dbfce365",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "734fc114-8938-4120-a004-a979dba990d3"
        },
        "item": {
          "id": "72933f85-0191-46e0-8216-01dcbf95b12f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "47f61a62-8486-4e3a-97ef-056d5ecabefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16b5ce8-c7d5-4456-923a-59febf4873bf",
        "cursor": {
          "ref": "7343226a-bf24-46ab-af01-1a57cd72d45a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "76026fc3-82fc-49cd-94da-20c4ca5aba15"
        },
        "item": {
          "id": "b16b5ce8-c7d5-4456-923a-59febf4873bf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1945c5e1-8a46-4779-8b43-de41b342b9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48e74f7-0a14-4822-bdf9-55aec42b880f",
        "cursor": {
          "ref": "f418d8eb-cd3a-4cb9-b927-e85021f8f0d7",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f0410fff-2bd6-4928-90cf-21964fddbff3"
        },
        "item": {
          "id": "c48e74f7-0a14-4822-bdf9-55aec42b880f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fda5b66a-20a3-4890-b755-476467a1d439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac69374-756b-46af-82d8-498993007477",
        "cursor": {
          "ref": "5cdc1576-94a1-4b03-8b15-014169fb41a3",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "facf474d-1dff-41f5-8a80-9d26d089dead"
        },
        "item": {
          "id": "fac69374-756b-46af-82d8-498993007477",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ecc751c5-120c-4bc7-aab1-cc9d99b45513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65b355e-1c0e-459a-bc95-824212ef51d9",
        "cursor": {
          "ref": "0d6af149-c7c5-4116-9bec-ede5ac162503",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6204f24f-2594-4dae-9540-80c38f84d688"
        },
        "item": {
          "id": "b65b355e-1c0e-459a-bc95-824212ef51d9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce796c62-ca62-4c6e-aec8-a71a52fc0863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3d2771-8b8e-49f5-92ce-4535281d608b",
        "cursor": {
          "ref": "3e00fd26-0c9b-48cb-b026-f82d1134dc30",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3adf296d-e67f-4059-807e-1b6503fa6bbd"
        },
        "item": {
          "id": "cb3d2771-8b8e-49f5-92ce-4535281d608b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5c11ab8f-26fd-4482-8e01-89441992f2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c495b01a-0968-4d81-a553-d8a3b39360f4",
        "cursor": {
          "ref": "dac478ab-240b-42ce-92e1-2f6f90252bb0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dbf29060-6a8f-4ab9-b029-cc4318ed7b1b"
        },
        "item": {
          "id": "c495b01a-0968-4d81-a553-d8a3b39360f4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "732c6628-107a-4d9c-b33e-1117dd30140a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042de245-f394-4902-b2f0-ce04308d8c4d",
        "cursor": {
          "ref": "c687ec7b-e7a7-43fe-bf31-06fe66e6fd23",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "76de6ef6-811d-4b00-81f7-aac5fdd9e7eb"
        },
        "item": {
          "id": "042de245-f394-4902-b2f0-ce04308d8c4d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "626c7bcf-f1fb-4cf9-9b5a-a3caf294d530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743e2325-a9be-464a-8aa6-76b329b0c57a",
        "cursor": {
          "ref": "6490f712-8109-4e1d-be74-989e9e192999",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "198588e9-e47d-48f8-83c0-7c5fc08f9733"
        },
        "item": {
          "id": "743e2325-a9be-464a-8aa6-76b329b0c57a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a9981e38-2941-49e7-8b66-39ac5d5f6e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ffd23b-8af0-4d7f-b6fb-b58b215032d6",
        "cursor": {
          "ref": "99c2a4a7-87ec-4a39-a3ec-4875e73acd30",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a8699ea3-43f0-4d8a-8532-63e1b9a71b82"
        },
        "item": {
          "id": "e4ffd23b-8af0-4d7f-b6fb-b58b215032d6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1ef62cbb-4e8a-4596-8984-8cfa0d8a44f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fd105b-2593-4d22-a2c4-c3db3fb2ac01",
        "cursor": {
          "ref": "8918065d-cadf-4a55-938c-2564f07e7678",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8136f2c1-04f6-4b6b-8959-577ef80e12e0"
        },
        "item": {
          "id": "15fd105b-2593-4d22-a2c4-c3db3fb2ac01",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6a27b37b-c72b-4af1-afe9-a8859f4a1758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f45f727-c836-4673-acb0-d72596934888",
        "cursor": {
          "ref": "7ae83015-2712-4807-97c0-feeaffe24344",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "76a0060a-f2b7-4262-8160-39b5e590374b"
        },
        "item": {
          "id": "4f45f727-c836-4673-acb0-d72596934888",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "be985bdb-6c19-4e3b-9d21-8a3df11e20c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2951b54-a474-4410-af3d-7b48bba818ff",
        "cursor": {
          "ref": "3e31edfb-2743-42d2-b2b5-4c08be75e210",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4870e8e7-dba3-4546-abe1-7ba771554f80"
        },
        "item": {
          "id": "c2951b54-a474-4410-af3d-7b48bba818ff",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6a63a19d-ebec-4260-bef8-0b1e412ff6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cbb930-e77e-4b71-a884-ef9ed9aa8434",
        "cursor": {
          "ref": "94e2f9f8-d569-44b1-a8e4-4fe98b68c4d8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "38d1d436-bdeb-43d0-9712-27707516b3bc"
        },
        "item": {
          "id": "00cbb930-e77e-4b71-a884-ef9ed9aa8434",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "877437e7-c1f8-4c9f-8eac-657ee51b0be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d254118-1837-4c3c-9a23-2e3dfeac07cf",
        "cursor": {
          "ref": "0dade7db-afa4-47c5-89a1-c72936e05aae",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "92c78794-5d01-4ac8-a930-50e4fb36d4df"
        },
        "item": {
          "id": "8d254118-1837-4c3c-9a23-2e3dfeac07cf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9a2cbd23-56ec-470b-9a98-56ff2c821c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bcf21f-e36d-452a-82ee-6f10fd01c633",
        "cursor": {
          "ref": "2fc1da5b-879a-4011-ba62-d71ad64357e9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "19de16ba-fa31-4ddc-bbea-7b49ff613d84"
        },
        "item": {
          "id": "99bcf21f-e36d-452a-82ee-6f10fd01c633",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "90e7deb7-bd80-4b78-b1a0-c1d637c1a31e",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "f3275071-2dc7-40a1-b2f1-9901b45af426",
        "cursor": {
          "ref": "c7c45e2c-1c50-4ef4-a289-bb44adf9b57c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "05c1a9b5-d122-46cb-b8c5-4b0d42192746"
        },
        "item": {
          "id": "f3275071-2dc7-40a1-b2f1-9901b45af426",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d428f3a7-1534-4e91-8162-815dc5acf7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d4276f-88be-4c19-9be9-504c20fdc467",
        "cursor": {
          "ref": "ce9eeaed-90b8-41f0-9cd2-042d63044f52",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2f601a74-cd92-4f56-8049-d36e3aa6529d"
        },
        "item": {
          "id": "f4d4276f-88be-4c19-9be9-504c20fdc467",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "28c973bc-7b3e-4a46-b720-bcaa2c6c1705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ea1251-7f4b-407e-b4ed-1d78d8165182",
        "cursor": {
          "ref": "46ffb95d-cab7-4a5e-94e4-279e5abb1fbf",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a90439e7-b193-4744-96dd-d678533a6563"
        },
        "item": {
          "id": "46ea1251-7f4b-407e-b4ed-1d78d8165182",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ea7a8155-9a16-459b-9fbf-0946616bbc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22db2f73-1f66-4d3a-a4a7-08785201fe35",
        "cursor": {
          "ref": "b69679ae-c44c-4890-92a7-759ecdbb1a64",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a7bfba67-89b2-439e-8558-c694a3582e96"
        },
        "item": {
          "id": "22db2f73-1f66-4d3a-a4a7-08785201fe35",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "66c0b978-68d8-4bf7-8752-53a3111c9758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a57627c-e82f-4ef9-9588-8731201c6135",
        "cursor": {
          "ref": "0941bc58-e7a4-40e4-942e-42b9f6e22792",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "346ca387-32e0-47e7-a163-a925ac28ab42"
        },
        "item": {
          "id": "9a57627c-e82f-4ef9-9588-8731201c6135",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "194530ba-18ba-4f3c-9ed5-8eda56584b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7354aa05-e571-4e48-baf3-a8bca6e2a73a",
        "cursor": {
          "ref": "aa2c06a1-d74c-470b-9199-7d14c9779e3f",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e3562cdf-3f0c-4f07-b69b-145180f8b357"
        },
        "item": {
          "id": "7354aa05-e571-4e48-baf3-a8bca6e2a73a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5974d7ec-5eeb-45ad-a6b6-e928e78aad5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21ee559-f55a-4edb-98b2-598a06801f2e",
        "cursor": {
          "ref": "43085504-a76c-4a41-8282-f3a96c8e2b53",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "58732497-16db-4bca-853f-c784d5ec8824"
        },
        "item": {
          "id": "c21ee559-f55a-4edb-98b2-598a06801f2e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "92825aa0-4978-4356-882f-b570b645de4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc69ea1-73d8-4b08-944c-00a19e91287f",
        "cursor": {
          "ref": "73ee1487-7150-4e23-b3b8-9f1a37db4a98",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "396b38a1-3e36-4062-8678-b51359f4601f"
        },
        "item": {
          "id": "adc69ea1-73d8-4b08-944c-00a19e91287f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a6e0a1e5-38d7-4064-98ef-ab5cb387a7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e4ec20-059a-46a3-978e-68db77308bc1",
        "cursor": {
          "ref": "d7c85112-2352-46a1-94e7-3a0852e97970",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "22c9fa1e-d877-443c-adfb-1e39c7542987"
        },
        "item": {
          "id": "66e4ec20-059a-46a3-978e-68db77308bc1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "04407fa0-e0ed-4051-b68e-45b453fb46a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0973d888-b40d-40cd-ac61-5403cbf7358c",
        "cursor": {
          "ref": "7a15dbf6-7f1e-48a1-ac84-297f99d3f075",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "34e06d04-03cb-4878-a6e2-6c7d96f5cfd5"
        },
        "item": {
          "id": "0973d888-b40d-40cd-ac61-5403cbf7358c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "993ebf0e-1a7c-43dc-893a-07dbaba15cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d22e4b-11c6-49bd-848c-a38005b941da",
        "cursor": {
          "ref": "27acafd4-54f6-4f77-9346-2ea441db1dfc",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c079ba25-ea8a-4b1a-b359-cf00ca9be4ab"
        },
        "item": {
          "id": "58d22e4b-11c6-49bd-848c-a38005b941da",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ab1a1541-8136-42b3-b95a-58129ac05d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c20f7f5-5bea-423d-a775-18484d466e92",
        "cursor": {
          "ref": "2696fc36-40bd-4c10-9cfa-294d2f7d0aac",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7a4eab77-3cf0-439c-8469-2c0dd3324cd0"
        },
        "item": {
          "id": "8c20f7f5-5bea-423d-a775-18484d466e92",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "234e57ec-2224-4654-ae65-d969a8907ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885950ac-d25f-498a-b20f-48247a793cd4",
        "cursor": {
          "ref": "86243cc3-f600-4387-89e7-dd4f2c4d8774",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "565a5377-1358-4068-9c85-580ca9a63155"
        },
        "item": {
          "id": "885950ac-d25f-498a-b20f-48247a793cd4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "563d985f-302b-4bd5-b6fa-e6efc9dfd401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f7cc37-f24c-4a04-920d-2a95f696f545",
        "cursor": {
          "ref": "e36bd2c5-c776-4fc2-a058-2c25db959b66",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4fd5482a-752d-4022-bd78-9f5e3a361729"
        },
        "item": {
          "id": "67f7cc37-f24c-4a04-920d-2a95f696f545",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8efcdd3d-f2e9-4179-a419-60a3fe289213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cd5b57-a6d7-483f-9e06-2791eeb369cd",
        "cursor": {
          "ref": "73b9f946-f9ba-41bb-abf2-d01d85d54976",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4ab40f86-6a43-47cd-b003-eec4875d478b"
        },
        "item": {
          "id": "34cd5b57-a6d7-483f-9e06-2791eeb369cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4521e386-5474-4138-a5b1-bbd90a2e8dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885809c2-c4bf-4298-abac-ae7a5220920a",
        "cursor": {
          "ref": "7228f2e9-eec7-45fb-a4bf-94339f2e3fad",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b9d52093-5e1a-4bc9-8a21-3662d029b897"
        },
        "item": {
          "id": "885809c2-c4bf-4298-abac-ae7a5220920a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "31785f19-8f9c-4b49-af77-c139a0c71ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35501060-f231-438f-bff5-7080195d5b8b",
        "cursor": {
          "ref": "992a241c-2756-4996-91d2-c334854901e1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dcac3dba-02c3-4093-8e74-32e471ef2b7f"
        },
        "item": {
          "id": "35501060-f231-438f-bff5-7080195d5b8b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e654c319-71a4-4932-a725-28fa43b277fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a59bdc3-387c-4f6b-b4d4-2894806d21b4",
        "cursor": {
          "ref": "d66b076c-076f-40ef-bf31-a2ffaa9cbad5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bc113a88-003b-485f-b310-e84f3d8166fc"
        },
        "item": {
          "id": "8a59bdc3-387c-4f6b-b4d4-2894806d21b4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0eb1dd38-b020-42f1-8865-4d3af84a8d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b289f284-69bb-4ab1-b11c-abf662e1150a",
        "cursor": {
          "ref": "385e633b-511d-433d-b809-70f95b4710fc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7b3a0b8b-8132-41ca-9c59-70d29854c596"
        },
        "item": {
          "id": "b289f284-69bb-4ab1-b11c-abf662e1150a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3bc55b4d-0659-42a0-a8bd-2009113d00d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0496af-76af-4ef4-8c9d-58a0794265aa",
        "cursor": {
          "ref": "d9d24659-68c3-46a5-ae14-6fec7aec7d92",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4bf16943-3d09-498c-95e2-877d50bed0b3"
        },
        "item": {
          "id": "bb0496af-76af-4ef4-8c9d-58a0794265aa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8dcc96f6-d148-49b4-a17f-c058795f2f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044c5fca-be6f-4bb3-9f86-6ecfd55ce0c8",
        "cursor": {
          "ref": "4fd9b8b1-bc55-4fe5-bc91-b97dda08baf3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2271de28-8b51-4124-9d6e-450417c6c998"
        },
        "item": {
          "id": "044c5fca-be6f-4bb3-9f86-6ecfd55ce0c8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ed1f6f76-49ba-492f-b36d-b3e3042d3fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be3135c-74d7-406b-a060-0d1b8e05a91a",
        "cursor": {
          "ref": "75409e59-1080-4b37-8600-6408a8a5bd5d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4550eaf4-4172-4cfc-9626-adf47faf0dea"
        },
        "item": {
          "id": "4be3135c-74d7-406b-a060-0d1b8e05a91a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "90c6160c-f671-4309-b561-79d58ff13b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53f4e32-388a-4884-bb3a-d8fec4f876f7",
        "cursor": {
          "ref": "c54829bc-1606-4d9d-87c5-5837b3dc62d9",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "300339b2-12e3-4599-8c75-04604aa9a9a0"
        },
        "item": {
          "id": "d53f4e32-388a-4884-bb3a-d8fec4f876f7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "205e71e5-ff52-44f7-99e7-d3218f7f33b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bc955b-ff76-492e-b70a-84f4eb9644a1",
        "cursor": {
          "ref": "b0fd2db1-7c7c-4493-ba23-92a7c050faeb",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "54aca6d0-c5ca-4ab6-ad5c-0849f5641a61"
        },
        "item": {
          "id": "13bc955b-ff76-492e-b70a-84f4eb9644a1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "58f2c6b2-d222-4f99-9272-2e1c0a503727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f699e5db-92e7-43c2-a88d-ddc14c069f4f",
        "cursor": {
          "ref": "7b98d5e8-846d-41a6-9d58-e4f55d4a09a2",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cafd39c0-01c1-423b-a106-12a0dc2abbac"
        },
        "item": {
          "id": "f699e5db-92e7-43c2-a88d-ddc14c069f4f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f8cb8b96-a048-4eb9-9a3b-e2c1e70b0725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b747fc51-4407-4423-83e5-b84dde208b7b",
        "cursor": {
          "ref": "7733109d-6f72-48d1-af8d-c68e6e2a685a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "95d1474a-a35d-4b79-8dd1-8e51deee6c0f"
        },
        "item": {
          "id": "b747fc51-4407-4423-83e5-b84dde208b7b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "217e986c-9968-487a-a940-53276f997917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac36c023-be79-42a0-98d2-d363d0ce6d1d",
        "cursor": {
          "ref": "75353501-d76f-4462-a4df-aa10b0e07d50",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7c0764f8-e1b9-40a7-8c33-d1d6df425234"
        },
        "item": {
          "id": "ac36c023-be79-42a0-98d2-d363d0ce6d1d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f85b0e64-3e83-4c63-8a99-c075b0212a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c10a53c-6d93-4373-8a59-86384c7ccf8f",
        "cursor": {
          "ref": "07279b5f-7ac5-430c-99eb-40967c8cfbad",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9c8f0b74-1077-499a-9577-e31a7f09a46b"
        },
        "item": {
          "id": "0c10a53c-6d93-4373-8a59-86384c7ccf8f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3f9c8fc7-433a-4e2b-b53f-3e78c374fb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7379f4-ab78-41ce-b030-45277e6e0a25",
        "cursor": {
          "ref": "e812eed8-1b02-42a1-bc0e-22a20488e403",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c46dd88f-d79d-46a9-8eb8-9701a52969ed"
        },
        "item": {
          "id": "df7379f4-ab78-41ce-b030-45277e6e0a25",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "886be068-1dca-447b-9d04-4fc005661cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8449f0b2-ae50-44ec-8760-811cac199310",
        "cursor": {
          "ref": "a8af5592-77bc-4a69-a266-d7dfbe23c8d9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "83f6fa5c-9a78-463a-a49b-6fbec18f1e04"
        },
        "item": {
          "id": "8449f0b2-ae50-44ec-8760-811cac199310",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7ec13659-a8fa-4d74-8412-9cecd60dd612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cfca9f-1324-4799-9e5d-1a02adef28e9",
        "cursor": {
          "ref": "a75e9ebe-d8b0-4efe-bfda-5b5a1221dc56",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6b9a77d3-e919-4975-8c6f-a0e1790fc0bc"
        },
        "item": {
          "id": "83cfca9f-1324-4799-9e5d-1a02adef28e9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e31f68bc-f285-45c3-adec-3d9e6cbb8104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a448d29-9d27-4afd-96ad-29e08b05e569",
        "cursor": {
          "ref": "dc15f3df-6a1e-4c34-97d3-fca808a0b602",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4e29b592-371b-4596-8251-c5d622e1cceb"
        },
        "item": {
          "id": "2a448d29-9d27-4afd-96ad-29e08b05e569",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "064f9ba3-d194-4372-8d37-5ae0a31688d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5689687-bf00-49b0-878c-333c401e51bd",
        "cursor": {
          "ref": "3115b643-be52-4937-98f3-678a7d2e65f8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "817bbad1-0407-4ebe-a1a1-a5803a529ee6"
        },
        "item": {
          "id": "e5689687-bf00-49b0-878c-333c401e51bd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cb6c6400-d4a7-456e-af1b-8abfa0b8fa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b157ec15-19e9-4292-a968-d5651bdc9066",
        "cursor": {
          "ref": "828b6dd8-6449-402c-bbfa-2e2f36477721",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f41f66dc-6c28-4f99-8e49-4663d991b1cb"
        },
        "item": {
          "id": "b157ec15-19e9-4292-a968-d5651bdc9066",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b9b15571-6f08-4c7e-85c0-ea93940d240d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3469fba2-4aed-4aa2-874b-5b3ba8ed04d7",
        "cursor": {
          "ref": "ebeb5212-efe9-4659-bbaa-c48debd952b7",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a1de8445-2cf6-4d25-a3c2-22be423a878a"
        },
        "item": {
          "id": "3469fba2-4aed-4aa2-874b-5b3ba8ed04d7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b232e2be-79f3-46d2-a57a-a33711cf87ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16f2f6d-e4ba-4d2e-ad88-0b49c6096018",
        "cursor": {
          "ref": "8f848a91-f009-4956-9cb0-0131eda82606",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "55b7d84f-b1af-4132-bf34-8c38d2fc2640"
        },
        "item": {
          "id": "b16f2f6d-e4ba-4d2e-ad88-0b49c6096018",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "075aa527-c41d-4778-bb61-d8e7634a0878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b11b321-17fc-4aca-905b-f884bad8bb13",
        "cursor": {
          "ref": "fe3a3e34-03c1-40bf-9ab7-d6c8affef505",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a379a5fb-ac13-4b98-9241-afe457e507b3"
        },
        "item": {
          "id": "3b11b321-17fc-4aca-905b-f884bad8bb13",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "08523358-8820-4873-93e4-97f6ec91c019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38094f43-d4ec-473a-8c45-c7359e8aa5d1",
        "cursor": {
          "ref": "ed81c3c3-571b-4e71-b1bc-2b0ffe9a951e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "716d7f1b-7f05-4002-9b05-a06468bb851a"
        },
        "item": {
          "id": "38094f43-d4ec-473a-8c45-c7359e8aa5d1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e2d511a7-cf60-46cc-80a4-237cb32bf1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d1fe28-350e-4aaf-b24e-d7c49fc1124e",
        "cursor": {
          "ref": "3d19fe26-712b-465b-9561-27742cc0aa7b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3efe3296-bd3b-433a-a2d8-8d7066a9fb79"
        },
        "item": {
          "id": "77d1fe28-350e-4aaf-b24e-d7c49fc1124e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c12fc145-b167-425d-bd4f-918aa845ab5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99b03ff-984e-4d07-add3-add66d713814",
        "cursor": {
          "ref": "d13191cb-c2f2-4261-9a42-c4ce0190d909",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "39efb024-0077-4a5d-b7da-940acbff8734"
        },
        "item": {
          "id": "a99b03ff-984e-4d07-add3-add66d713814",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9a712c6f-c8c1-41af-9096-f33157e0435a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e041807-739f-4b9c-9498-ab183d10a24b",
        "cursor": {
          "ref": "c890e88b-42b2-4e6c-98bd-98c0d48dca70",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "197d0545-182a-49b2-8ca6-b40fae4b8298"
        },
        "item": {
          "id": "2e041807-739f-4b9c-9498-ab183d10a24b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4bc9d35a-3352-4482-889c-642aee37807d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d426213-56f5-498a-a8e9-be93b13f0a01",
        "cursor": {
          "ref": "074b6478-65e6-482c-b475-42c65207bd95",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "640d3dc7-b515-49cf-ac5c-b4592f746d7d"
        },
        "item": {
          "id": "4d426213-56f5-498a-a8e9-be93b13f0a01",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bc65a4b4-b720-46ca-acd0-ecde0c48610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6836fbd0-8605-4570-8a14-3cb16ac5f7b9",
        "cursor": {
          "ref": "c0d3e8af-c267-42fa-92e9-bdcc07c377d3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7ef8bf98-4344-472a-b3e6-43e3cd76b851"
        },
        "item": {
          "id": "6836fbd0-8605-4570-8a14-3cb16ac5f7b9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c29f6cd3-3f45-4760-88b0-b0505935ac07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce7052d-edf5-4114-89b0-d4b65b738538",
        "cursor": {
          "ref": "91f042b1-dbb1-4429-9443-1b9f5b0be818",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3de5b521-92f5-4f4d-b169-17270217d84d"
        },
        "item": {
          "id": "7ce7052d-edf5-4114-89b0-d4b65b738538",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ccfcf5e6-d5ea-4d89-a948-b1f84cabaa87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c22bbf-1620-406d-921e-c6bb5b29e3a4",
        "cursor": {
          "ref": "6bb83b19-9a61-46c1-8428-4d0c21e6393b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e80cbfcf-828d-4049-81cf-c6dfeaf12414"
        },
        "item": {
          "id": "39c22bbf-1620-406d-921e-c6bb5b29e3a4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ce0d78f6-c48a-433f-8fa9-fee2ea6dd453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5517124-df6e-4065-8c45-90a6fa0570e5",
        "cursor": {
          "ref": "1d00cfcb-1214-4c78-97fd-80849d296317",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "239a2e73-ef7e-4326-b63e-c58cb50ca2a0"
        },
        "item": {
          "id": "e5517124-df6e-4065-8c45-90a6fa0570e5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "15232ed6-f32b-4cde-8c20-07fbc293dc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b89742f-4b10-4f3e-8595-dbcd9c6cf717",
        "cursor": {
          "ref": "60b8e917-5f82-4958-ad85-e3ab05a342e2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7d2524e5-2406-4786-b00a-35b78807c84a"
        },
        "item": {
          "id": "8b89742f-4b10-4f3e-8595-dbcd9c6cf717",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2fb9611e-c924-40ee-84b4-64a210287155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ca0109-4c2e-4fe5-8e1c-37e2f5a313e3",
        "cursor": {
          "ref": "ff38fc48-bd01-4ffd-a3ac-6275aabd099c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9d8df9f8-5bd8-4724-91c7-2c2f6c714e95"
        },
        "item": {
          "id": "10ca0109-4c2e-4fe5-8e1c-37e2f5a313e3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "88bf081d-9d76-436b-b7bf-5fc1898dd8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5d6915-a510-44fe-ad26-224e62e11484",
        "cursor": {
          "ref": "b7e6f456-a48d-4ef5-8125-aa136d22e09e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9cad2c79-a1f4-4156-be9a-a8270687d185"
        },
        "item": {
          "id": "ee5d6915-a510-44fe-ad26-224e62e11484",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fd3c8a9e-36f4-4084-beb9-ef8b7a1b7346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d8731a-fb03-4782-b3e6-930483dbc56a",
        "cursor": {
          "ref": "5f1ad18e-92c5-4c7b-bbfb-bfae26db9783",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "589f3739-2d65-40d5-8f07-2d0d79e1e46a"
        },
        "item": {
          "id": "a9d8731a-fb03-4782-b3e6-930483dbc56a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ab75f153-c490-4f73-a735-0722a8406283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7589ad90-2fce-46f0-8eb3-5ccf13178935",
        "cursor": {
          "ref": "549a67c6-636b-4420-a6f4-e28f88338121",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b7dfebfa-d850-4ef8-9404-1c29c4632690"
        },
        "item": {
          "id": "7589ad90-2fce-46f0-8eb3-5ccf13178935",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eb4ce0b5-4b12-408d-9a26-66c9277c3c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d37e3e4-60a8-4266-b729-d32c2a837e9f",
        "cursor": {
          "ref": "1f8b7df0-5c19-4367-8318-609fa5b6bb7c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ac506989-cd77-4526-b0e8-07f0e602cde9"
        },
        "item": {
          "id": "6d37e3e4-60a8-4266-b729-d32c2a837e9f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "98cff3c6-3301-4afe-98a6-52d902cff532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307ed786-5a01-4a83-9e8c-848ae0a5f9ba",
        "cursor": {
          "ref": "ff77fef2-3046-47af-89ff-a13ce199cb6b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2cc0aef3-52c3-445d-87e7-153c90a2c099"
        },
        "item": {
          "id": "307ed786-5a01-4a83-9e8c-848ae0a5f9ba",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c50a2a40-8422-41fe-860a-3338e68baff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2520620-d51e-410b-a92b-25da1ac341b0",
        "cursor": {
          "ref": "d307d442-2599-4754-a21e-f936271a1be7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d45a6b5c-2867-4eb2-b964-1ff8b5a90aa3"
        },
        "item": {
          "id": "e2520620-d51e-410b-a92b-25da1ac341b0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8469b22b-c7ea-4746-aec3-d8261be4dd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882ffdd1-209a-4d50-ba56-cf2d22cca718",
        "cursor": {
          "ref": "771e3d55-3428-45e6-8ff4-b523d5ed045b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "417efbbe-7674-4e4e-b9d6-9a3491b3554f"
        },
        "item": {
          "id": "882ffdd1-209a-4d50-ba56-cf2d22cca718",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2322995e-4e62-4d66-8e0e-a0ae75359e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f124a444-a2a1-4522-b59b-c0dffa754647",
        "cursor": {
          "ref": "327eb130-84ca-4de4-8821-47fabb222be7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1ea97d4d-9913-474c-a775-134b498a170f"
        },
        "item": {
          "id": "f124a444-a2a1-4522-b59b-c0dffa754647",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8f4a2b2c-2f78-4d8e-9519-e156092c07a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4021e0-70f5-462b-b12c-bfbb7778d27a",
        "cursor": {
          "ref": "385a39eb-40ec-462e-8dad-047df63e0e57",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2422fcf8-508d-4a42-8bab-58813f7620d0"
        },
        "item": {
          "id": "7e4021e0-70f5-462b-b12c-bfbb7778d27a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "09aa96c9-7bb6-4b79-b3d4-f5e6d8875711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855a754f-ede6-484d-a674-d17171a8ed36",
        "cursor": {
          "ref": "b964d55c-8446-405f-8b62-f04540f72eb9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "52487993-278f-406d-b5b5-8ee4997b4fad"
        },
        "item": {
          "id": "855a754f-ede6-484d-a674-d17171a8ed36",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f05ff8c3-b718-491a-bee5-2fba0d6e9598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be44dcd-87c1-4240-ba15-abe914ca7085",
        "cursor": {
          "ref": "473b563f-fc02-4060-b3ab-574d4ad4eca9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b39b1827-6c05-4d3e-b736-d2fc649f8057"
        },
        "item": {
          "id": "4be44dcd-87c1-4240-ba15-abe914ca7085",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "343f12a2-6a73-49ec-8888-616adff270ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f10f7a-831b-4071-8cce-e9b961842409",
        "cursor": {
          "ref": "524eeae0-e85c-4088-982f-95a73d320b9b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dc0aa34c-3d08-4153-bf8f-88f6d8b99f96"
        },
        "item": {
          "id": "48f10f7a-831b-4071-8cce-e9b961842409",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3eba509c-c812-43b1-ae5d-acfac4a809a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fe67b4-5936-4bb6-bf3e-417b623c6cf3",
        "cursor": {
          "ref": "9e0eab95-3ba3-43d8-befc-083d6151111e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "73c2fbc6-4dbf-4250-9ac5-6c519b5eaf1f"
        },
        "item": {
          "id": "85fe67b4-5936-4bb6-bf3e-417b623c6cf3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "abbc4893-2813-4b5a-a07f-c2ce07db62f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eac615c-927f-4854-9efb-4b04381f3bdf",
        "cursor": {
          "ref": "7b153064-ca77-4de8-a46e-1594deca3989",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3148e6b4-4c7f-41d9-ba08-8e9d949932d3"
        },
        "item": {
          "id": "2eac615c-927f-4854-9efb-4b04381f3bdf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ab45cc82-233a-4195-82a6-a10de4e70ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccc74dd-5f36-4866-b1b1-0169751d9b9f",
        "cursor": {
          "ref": "6cb2cf32-d1cf-404a-ad92-300db60f44db",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ff2a893b-8019-44b7-97ac-583419d7db7a"
        },
        "item": {
          "id": "4ccc74dd-5f36-4866-b1b1-0169751d9b9f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "63397dbd-fcf1-4132-8163-ddd6181fb44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bea819d-6f22-4ec8-bff9-3ec831256057",
        "cursor": {
          "ref": "42b5c96e-03a9-4206-a1e8-a9bd576c5330",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "815975fd-cc28-4e6c-a890-078067a9f6a8"
        },
        "item": {
          "id": "6bea819d-6f22-4ec8-bff9-3ec831256057",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a7928755-6124-428a-a605-09f9ff5887da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ed1bd1-fe78-4e4b-86e7-7a20e86c608d",
        "cursor": {
          "ref": "cc3e7c50-975a-46c3-8de7-033d7719f2f7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a0ca592-1421-48b5-855f-01f54a963636"
        },
        "item": {
          "id": "c7ed1bd1-fe78-4e4b-86e7-7a20e86c608d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8cf18d13-e624-430f-954b-5e36fa6874e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e9a622-ff71-4216-a7b3-8c41ed0a5673",
        "cursor": {
          "ref": "3a54030b-7a2b-41bb-b208-8ca3b7150886",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "330c70d9-d28f-4342-ad4c-9a0c137501bc"
        },
        "item": {
          "id": "39e9a622-ff71-4216-a7b3-8c41ed0a5673",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "01b387cf-90fc-4b30-8d97-528570b2c231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca3f478-d76a-4e7e-80ac-f4bb199c894b",
        "cursor": {
          "ref": "e23dfbcb-f9ed-412c-b7ab-b94e4e02b1d5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e36ad263-34d5-4498-95af-b4ec80d20c65"
        },
        "item": {
          "id": "1ca3f478-d76a-4e7e-80ac-f4bb199c894b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5684b2c6-d275-4ced-b815-a990579e7e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeac842-b59f-46eb-a8c3-cf3361c296b7",
        "cursor": {
          "ref": "bedc70bc-a1af-42b4-a63a-133d6a57cb7b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "af7726b6-52a0-48c7-9b13-f43594a428d2"
        },
        "item": {
          "id": "bbeac842-b59f-46eb-a8c3-cf3361c296b7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3e858eed-901e-4b33-bc50-e101327e4e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36de0dff-e617-4346-b21e-b2cb016cd0c5",
        "cursor": {
          "ref": "1d88a6dd-3489-4c5d-9402-f910f1409a1e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6963277b-3050-45ff-b5e1-9b00b27d40ef"
        },
        "item": {
          "id": "36de0dff-e617-4346-b21e-b2cb016cd0c5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cee8182d-7156-4424-b0e3-c075fcccd12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e14925e-e48c-407b-9dc7-55d2538d40b6",
        "cursor": {
          "ref": "878457ae-3573-4867-a0fa-22ea52742a30",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "33492a37-c2cd-462a-aa2a-03cbfc68f896"
        },
        "item": {
          "id": "4e14925e-e48c-407b-9dc7-55d2538d40b6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "db29504b-695a-4458-b106-42b23b89487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc467511-78c0-48ee-b025-4d1d1e642c9f",
        "cursor": {
          "ref": "ee65208f-a447-46ba-8f08-02bc17fc313a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "083b6ea9-f3aa-4e92-b1ec-a79a171aa34a"
        },
        "item": {
          "id": "fc467511-78c0-48ee-b025-4d1d1e642c9f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0375e62f-4bc9-40cd-b567-56584aa068e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd8a7ff-afad-4fee-98ec-1d20ec63e416",
        "cursor": {
          "ref": "9b4b4485-c338-4aee-871f-7e418737aa2d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9d349749-45ba-4d65-885a-76ad34928201"
        },
        "item": {
          "id": "2dd8a7ff-afad-4fee-98ec-1d20ec63e416",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c9c9345a-141e-4167-8525-d187dc7aa5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd08d7b1-46a6-4020-9b6a-c44e7575ff06",
        "cursor": {
          "ref": "f15f9c0a-06fa-4f16-b77d-2edd2288cb20",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "808662f8-a432-4271-b205-0161ecbe4e45"
        },
        "item": {
          "id": "dd08d7b1-46a6-4020-9b6a-c44e7575ff06",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b285f3e7-36ac-4327-b87a-f55b6e1ac2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1040e1a-57eb-4b0a-b318-03fb5fd96cd8",
        "cursor": {
          "ref": "b664ff00-f19d-4d19-8efa-1828608a2d9c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "18a23087-3109-4d86-8daa-b87fa7db7c25"
        },
        "item": {
          "id": "c1040e1a-57eb-4b0a-b318-03fb5fd96cd8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b6132370-e4bf-42e0-83e8-bea8b7d11dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07e2ab3-4acc-4f51-8602-cca740107312",
        "cursor": {
          "ref": "feff327f-c81a-4f67-81e6-abadd6de2bce",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9b057c77-e1e3-4e55-9fc2-c2cd1e595051"
        },
        "item": {
          "id": "d07e2ab3-4acc-4f51-8602-cca740107312",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8053d409-7857-498f-9064-b65d6373ffc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0fc8a3-a78d-47ba-9c9d-d0c501a49fd4",
        "cursor": {
          "ref": "cbc432c4-ced2-4248-a4ee-6646a8bd27f6",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2b013514-53b2-4b92-889e-9a35641d28f7"
        },
        "item": {
          "id": "4c0fc8a3-a78d-47ba-9c9d-d0c501a49fd4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ad354b94-7ec2-4981-b5ca-d2edd98b520d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6e9799-46ba-4753-b122-eaf1f14324ad",
        "cursor": {
          "ref": "0d49b68c-9bd9-49e1-be45-506e4b13bb54",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "96de5729-e2b0-4b19-8aa3-652a7872860d"
        },
        "item": {
          "id": "fe6e9799-46ba-4753-b122-eaf1f14324ad",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d47b1dfd-e5dd-45f7-9807-6b23df0e8b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb8b811-024b-49cc-bb09-1cc5078c68fe",
        "cursor": {
          "ref": "7b9ce028-7cb0-4f05-94ea-10164b7b99e0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1104aab1-ba8b-44d0-aabb-5d132bc81623"
        },
        "item": {
          "id": "6fb8b811-024b-49cc-bb09-1cc5078c68fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6a359e7b-9e99-461f-b852-17f2372b5215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0a50e3-8652-45ac-8181-9efde8a0ca89",
        "cursor": {
          "ref": "7ddce9ec-e40f-40c4-8d9e-73509bd1d97e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1c56815d-cdab-4f76-af70-33bc81c9a31a"
        },
        "item": {
          "id": "cf0a50e3-8652-45ac-8181-9efde8a0ca89",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8d518af3-cb35-4ce7-8697-8ef471fe7008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2321ea5-7634-4d93-ae71-efa469030856",
        "cursor": {
          "ref": "3f1f6819-902d-4cc9-ab24-e5f128ad47c6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5bed8c95-dd5e-492d-9af8-14420bf90fb3"
        },
        "item": {
          "id": "b2321ea5-7634-4d93-ae71-efa469030856",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2bf299bd-8198-4ef8-ac53-d8a5b35c0653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a98651a-bc86-49db-90e9-9b13ef650382",
        "cursor": {
          "ref": "ce429c78-4d1d-475e-9904-a212ae5af653",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d5f72725-8a98-4114-b0a0-f22405435a45"
        },
        "item": {
          "id": "7a98651a-bc86-49db-90e9-9b13ef650382",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "52dff0a5-ad4d-41d4-bf84-b4470b6f7ca6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ed10c2-03a3-446a-b479-4895a28ce4c8",
        "cursor": {
          "ref": "626c5dc2-9aef-4fb0-965a-70a26546fee6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "99cbd4b5-d7b9-40f7-9699-79d2679c1777"
        },
        "item": {
          "id": "13ed10c2-03a3-446a-b479-4895a28ce4c8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6670c1d2-577d-470e-801b-fc8a735328a2",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d277a12f-a333-4236-b9b8-12a311ad1e9e",
        "cursor": {
          "ref": "b5738645-60e4-4335-a68e-b7de562ed46a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b4b6a7fe-2071-4096-8f01-f9cf0dc147c1"
        },
        "item": {
          "id": "d277a12f-a333-4236-b9b8-12a311ad1e9e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "91c79c19-d9c3-4ea9-b56e-d183fbf75222",
          "status": "OK",
          "code": 200,
          "responseTime": 3316,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6629b049-f919-4a44-8bb9-85378798c2e4",
        "cursor": {
          "ref": "be7b136d-61d2-45a2-9116-05b4452ecb8d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8b7f3332-4c65-4fe7-8518-f67b7abb54b6"
        },
        "item": {
          "id": "6629b049-f919-4a44-8bb9-85378798c2e4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "58666092-7794-4f8f-9d7a-c5106d177af8",
          "status": "OK",
          "code": 200,
          "responseTime": 2366,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d092846a-8b19-4207-975f-0076eeaedabd",
        "cursor": {
          "ref": "afa96aaa-ff14-433c-9c8d-0a9a737b5f28",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e10a7c9a-8b87-4faf-895b-29169d92d153"
        },
        "item": {
          "id": "d092846a-8b19-4207-975f-0076eeaedabd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5f56895b-f507-4b24-961b-50f8a643779a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d092846a-8b19-4207-975f-0076eeaedabd",
        "cursor": {
          "ref": "afa96aaa-ff14-433c-9c8d-0a9a737b5f28",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e10a7c9a-8b87-4faf-895b-29169d92d153"
        },
        "item": {
          "id": "d092846a-8b19-4207-975f-0076eeaedabd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5f56895b-f507-4b24-961b-50f8a643779a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e47b96-2697-4481-b016-9a143a6d09d1",
        "cursor": {
          "ref": "3cc58a6d-c09d-4821-bd89-ea1815c3deb0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b60abae3-8bba-4616-847f-8ee4eccbf435"
        },
        "item": {
          "id": "65e47b96-2697-4481-b016-9a143a6d09d1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f1553e01-8a93-4564-8d4b-4aa2f5d48ce9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abe4143-74c5-443f-aa09-b13f9448c04a",
        "cursor": {
          "ref": "10b68a66-760b-4861-a139-28c6e0ea1b65",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "25e45737-604d-44ab-a21f-ba823d602180"
        },
        "item": {
          "id": "1abe4143-74c5-443f-aa09-b13f9448c04a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8d3fc758-bb97-4a1a-9d4a-2b265221537d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}