{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "488e69df-7c8d-4e73-a834-98c68daf4c9f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3aceb65c-53ec-4f78-80d6-96fe6b850694",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a8e5111-82d5-4fee-91ba-77d6249c9c07",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c9d19cf3-d3eb-4a5f-87a7-2de8917adecb"
                }
              }
            ]
          },
          {
            "id": "922dc850-4be4-4104-b961-6608c847fe1f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2985fb50-68e6-4e4b-8b98-964749c7e232",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84a21110-fb5d-4797-8e40-536cbc6383f4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f72ac86b-d921-4f4b-9b60-dc3296cd547e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9c437480-2453-46f1-8496-4b1cb0e09a74",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9788be70-b495-4426-aa3f-2f2537ad234b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07d92c2f-b78f-40b3-8126-5e1235ba605c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df7cc350-08ce-4ade-9dc3-fffa340d912b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcba419c-115c-4581-b460-3bd356997571",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3b65bdf-4050-469f-bc3e-9ba5980942cb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c160cf84-17e7-4577-9e8b-edc04adea073",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e43f6812-31d1-423e-a90d-8de52e94745b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac03e784-1beb-49a7-83a9-5167917d02a7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "13e396b7-7c6a-4d7f-a4c9-262d514ef7cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15fe4a5e-0224-4a56-bfe9-25a0924e50ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59a2489e-8ac2-4117-8b0d-c468cade1b61"
            }
          }
        ]
      },
      {
        "id": "0a690ef2-e813-4f31-8ffa-2b7a9fbd7927",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "37c17029-d4f8-4267-adad-8e8de9378889",
            "name": "Negative Testing",
            "item": [
              {
                "id": "063466a1-9e93-49fb-bc7c-f9861df436e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2626d83e-8e57-4726-a731-1a692db2f288",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612f48d6-5461-4819-88cc-a3eb68085370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ed11ddc-9b70-4407-a9ce-d365383b9e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e937a5f3-2737-45f5-84ef-32649613d1f5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9a29e8-867d-4239-90c6-3a56813844b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7477014-5c25-4ca6-8401-ae374b38738d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623b774d-4bc6-4aa2-9311-f3faee8c9d1f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab27c91a-06f9-47fa-b010-9b264cbaff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc16e149-6f11-4388-abdc-452e0750c547"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cde164cd-cea1-43d9-9e08-4d5705532fb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "749c8801-5b04-4bc2-ab99-b0759e0ea6b9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5dab90-3ed6-4c93-9638-fb19c8d515e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f2fc668-6d2a-4ef5-a363-3d812213d506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36e670a-bfd3-4a35-a702-bacaf523c7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20599ec5-45d1-43fa-8d79-a7bd18b862b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8cb33800-6986-44f4-807d-ecbe324e9658",
            "name": "Positive Testing",
            "item": [
              {
                "id": "745a6694-64b5-47c5-8857-4e69adbd62af",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90ee3b96-3712-4c07-ba3a-c5edf0c12517",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "24232a49-812d-44b8-86ec-69c1a78c30ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84bdcd39-9277-41e4-81ec-c9750a4b7e81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "83172fb0-f9b8-4b33-8ce6-23607baf6294"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea125f4b-a555-4a7b-9c77-2c41d85ee9da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f2b5ebc-3d9b-4de0-92f1-0ddb037f84d8"
            }
          }
        ]
      },
      {
        "id": "0f620623-11f4-4347-b984-8b43e6df9a48",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2b904971-67e0-4052-8c12-a3425a8ca088",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b8d590d-49b4-4198-9140-83a544a2953c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "80b169a8-8a77-4167-abc1-9a9d177852b1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4587c039-c496-4a94-8654-0f5f6375a4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50143391-ded5-4939-9a88-e714ef18df05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fa12e1-97d9-458b-8fc2-c6826c858610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a58fe9b2-f49c-4cbe-9b45-27bcecde80b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d1a624-43bf-4714-8a00-227b5f6554b9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1973e200-e643-4fa3-af4e-ba9841e7051a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200cffae-95c2-4cd4-8465-9dcf51fc7a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e190d4-c5c0-4fca-bb73-58a82f2c2dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a966534-f8fc-4ee9-a149-cb56d188ea26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6c76ca-1b27-4797-aec0-50576da8ad9f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b915336b-feec-40f3-b4fd-a0471800d659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bc2a62-1042-40b4-a594-f76619972145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542c3aef-438a-4b44-9be1-bba2f3c40f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94ccef38-4995-4c4a-9b72-2e716a3c6cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468aae15-984f-42f6-a24c-99a4f82ddeb1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05777e85-d738-4bcb-8936-3e62de510109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37168d7b-1985-4ad9-ac33-18499a5dc090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797444be-f4ad-4356-922e-5568fa32391d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c93f23cf-2029-4475-9794-17a851203676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd0d675-ecc0-482e-a93f-eb8aab935149",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47c9b91-e9e9-4f0c-9c5d-7e27829cf11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630be57a-5ee8-4782-b109-60c2bf2bd8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739365bd-4081-4086-a259-2cfb195d4df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be20d2cd-acae-4ef2-8c97-0f4d13a22803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d457071c-71f9-45a8-b0a0-a00c8a576b61",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d6a4c3-841e-483b-ae33-5a02ba33dbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca326b0-44d8-460d-b54e-f22ce024c79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01199b3d-67b3-413a-b644-f29b845b3768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69e3dc27-e38c-4ae6-9c2e-a1fa12549abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df7e15f-9cc3-42fc-b285-3a55049998b9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a96cd2-3625-41db-b567-febd33432b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6077cc84-8fd7-4efe-856b-289727ff2340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce5e704-9381-4465-8f7d-38434d3bf12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ce7ad24-a8b3-419a-8340-528f875b67df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e489076-1613-4bf0-a8a7-bf90c915b6d0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850c69b4-c7a3-4d34-addd-96bc2c9c3492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc975a4-52ed-4952-ac63-4b5e59ec541b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ce7aac-8901-4610-ab59-f4ad35409190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6afc2c84-7b3c-465c-ac64-40fb23921157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587e0896-65dd-4ad4-a102-39522c3cf49d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf4a013-59c3-498a-b6d3-bc2ffd06ccbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81574aac-b144-4a34-a399-5e46caf8d45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501bd549-ba32-4e36-ac19-456da5516fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c4d360-1c0c-492a-9782-ca18def07ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69641269-12a0-497d-b58c-9d61da21c848",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ddea5e-89e8-407d-838a-012b460811dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb04376e-dd6b-4f10-92b2-767251e93420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e666f53-875d-4b18-8a55-5724bf6c6efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "050df93a-2305-45b1-bb18-fc5a1e2cd6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411adea0-29c4-48b6-af01-98835e73a21f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04831769-1099-403c-80cf-abb31ea90c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc8560b-d488-4ddd-8685-dcad8715c6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef3faa1-680f-4427-b98e-85693c1ce8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ded6d270-75f9-407b-b98e-b56e80dbceaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99813dd-9039-420f-b886-8ae52cf5ce4d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad336b64-e4fa-48fb-8f0d-a1ac9e7d8809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868c6e8a-fd3f-443f-95b9-0cf096657637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f4f028-69ae-4f2f-856b-c60046b188da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd9b1397-3c89-47d2-b06f-b8ef52aa36e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e972c94-0b1a-48fe-8e45-ade0cfa47c2f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c7ef46-6f05-4395-af71-5b8fd35a617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a970ec-ad07-41d6-b74c-fd2b18dadb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e5dd59-9cd4-422c-98ee-f608ecb14d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10c6c890-3e8c-483e-925a-9a38c5f9d85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb87f06f-95f4-40c7-85ea-91ce9d33eaf9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ffea24-ac98-4bd5-9e82-2ceff75072b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d07b797-5981-4bc5-8f48-a2a557dfb0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162ad760-6229-4bbd-8056-6b12c698ecbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "591cb987-6781-4fac-9fcb-86a9029fb15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b96d5b2-6e7f-4053-a667-9aedfd5a96ab",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f4cf64-93e6-4bd5-b164-e973c21e60a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c0544c-3c55-4c34-a724-b13ddae7b8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98d65fe-9515-4e51-a0f6-0b33367da5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1814d91e-eb99-4137-b5b8-64740fab64de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba77eca-e431-4daa-bc8f-8c9b2d22007c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb9056f-e454-4cd6-837c-179c88c04419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac7a5f6-ab20-4509-baf7-4d93702a3c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a29b1f4-61bf-4f9d-a787-8132d2a22dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "815584ae-43a9-4906-839e-d4c40afba180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e4f549-544b-4e1b-8b1b-a6e26339ae4a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e687f240-05cb-4bad-a331-79b696fb7fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af663fe3-48e7-49e0-8d97-09bec0debc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf4730f-aff9-4694-8476-1416d0d82eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f45d7e1-444e-4ee4-b843-4ad124ea71a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bf3837-6d4e-4443-8dcc-2f89c87d1dd5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff44d96b-203e-4ed0-b3fc-3c5b2f079cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59735bde-f283-4b40-9a71-30cd0b11f26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6799cf48-0f9a-48fc-b63a-d8b80cb3ee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ca2268-6260-4ed2-bc30-70710455393a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074d9e7d-319f-4975-ac87-1160634cdb40",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4104c8af-5336-4ccc-bdd7-341938b4973e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a753dab1-3e33-465d-b004-af8cd523081c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f065bcec-afea-42bd-a1f2-91f05140075b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b324c128-cac2-4035-8df5-41fdf85c6238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e1ce49-1ff0-4608-a8b0-39de66efd09e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35938917-4c89-4056-9a4c-f59caeb113b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e357b5b-945d-446c-9561-17e6c93ed6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f16d428-b0d3-4620-9601-77b44dff7d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05287874-7840-4071-81ac-169568b8a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb95d2c5-a720-4254-b11d-733bd9e0ecc5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aae4fd-b285-470d-af77-c903ac540677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ef0577-cd2d-4671-abe9-0c907f5ea07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d0d55b-2957-4920-baea-0f5b5fa1b3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc0d3c0-9835-43a7-9049-6e8c55eb85e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df13bd61-1d86-4771-aac9-f8faeea3dc04",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ef6556-454b-4ede-95e9-4bb91e6ccde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5488ec-7565-4912-9560-3e761a9ecfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a388dce1-76df-4845-8c15-153270683405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f960371b-914a-4dc7-9388-c06a752e1528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c79e75-f3e4-4f1b-889d-825376a1c64f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab18de9c-98b7-4edc-98ed-0d6c1aa0275d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9aaf54a-f70f-480d-9d96-cc05848066cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d1cc78-62ed-4165-bd65-b8be0a9962de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae02d26c-a29d-4334-bbdb-fecdbb8a89a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6861d29-3306-4dcb-9d2b-5e6032fc56e9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7550205-3283-4109-9cd8-c0c3255a7d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff3f8b3-504b-421b-b6af-56aa9c8905bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a64e94-4e65-49be-830b-e56be772fedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d34911-3416-42a6-96f4-2aad6a5d06a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c4f1c7-0fab-4e11-b334-75517d266d33",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfec9db9-4281-4fa8-b532-8fcf8186b97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e7cec0-e76e-4e6a-8315-5654402a6148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40becbf-c0f6-4b7f-b393-99c9a9b387f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0f0991-33a9-4e27-8682-5bbd0d77d2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d6220b-5d18-4f81-af94-06ded7a55a28",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98150146-5581-4218-9847-3e8327d952ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca382d9-40ce-4f82-ad55-d780ffdd3b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2b5a51-089d-4786-9057-4ee93461f465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b9caa5-8807-4e62-a3e5-e34be4b9b8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c9e16f-412d-46c7-8077-743aa1a5a82b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88e574f-311d-494b-af9b-4fe1dea7c02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e604b65-c01a-4fc2-bd4d-b87f049ad345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7d58fb-bfec-48ef-bdd7-f83becf0e9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3abab075-bb8f-461d-8b60-c8e64a240cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87d93c8-aa02-4149-b8cd-6b062b1a0e00",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4982c3-57cc-4528-ae99-6214cb136de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee14e543-bc02-45f0-809c-b1b97aadb06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e871ae-8130-4064-9863-de8db85cbb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43586524-f18e-479c-8300-69a6335e065c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012a889c-3db2-4535-bae0-3a42a0cadc54",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36708973-a7ac-481d-8c49-9b0f01446948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256e8400-bc7b-48d2-ad83-112958579e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e927894f-fbfd-42de-81e3-262570bf90ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "793a3462-c2dc-4862-a030-2ac1e1cbe2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bc702c-ec26-4166-8f99-12b113f56f32",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfc689b-3ea3-4be2-9f88-6290c8945753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d188d9-45e2-4969-87b0-8ee2734fd6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cb90ef-af54-454f-a8d4-9de4364da493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "679d63d9-fad5-4d5e-b9fe-19812c3e1b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2f0d49-914f-4993-81d8-d6ff049c79c1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3258ee43-15d3-45f6-9e82-22edf09f38aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab27467-6e46-4d4d-8010-2adbbc30b48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee28c7e0-b239-4c94-a459-c444c12c6aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce2379e-5dee-4711-8836-b168333013cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdd4a77-cac1-4473-a19c-59456d0a26a3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08696aa-faeb-4e80-aca6-5ef8c5c4d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77a0fb2-43bb-40d1-983f-e52295a346b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd0fdae-00f4-46aa-8b57-5b8505bae016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9ae947-65e1-4ee9-83c2-74722c0007ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f49435-22c9-4bd3-bb48-14a6dea65833",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c4bcda-6704-47f6-a13e-bd63ebb02d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458419cd-29ce-497a-9083-df2c5cd62d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad97797-6fcc-48dc-bfd9-e9286df58d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "407dcc36-d7bc-4d13-ad0a-4890185a5154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481609c7-d258-4795-8075-f0f360d917a7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bdc684-2279-4efc-b962-fc1ed251d0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601f5327-fc3f-40a0-bcf6-ad3833aed688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60d8697-46d8-4b11-9c70-21d712d843ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23463f74-9a03-411f-9e95-43f7b8be271c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbe9984-272e-4955-a60b-69968d578d4a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfbe2e0-396c-4a54-a1e2-cff85a3ee584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d710e40-cdbd-4059-ad27-8a15079dd2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f6d4a0-d15b-4573-b9db-31bd307feb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "645e8991-42a4-4661-81d9-779ca4fba1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4633e9ce-aaf3-4e50-b1d7-1646b64d8dbd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154ac55e-b5eb-4e3b-abb9-aebf9b9a479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e752596-1f8d-49bb-813c-6fb64147fc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee803e46-edf0-4360-8bf0-3290a339f699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5aed5adc-43f1-4d97-89b3-abcaaf826d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e54e78-059d-4cbd-ab20-df0c809f59e0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42898e3-aea6-4a78-8a5f-2eb2f1d8950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f7ada1-8c6f-4a00-b250-4219e15158c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9ca120-468e-42fb-b13b-53b2208bb774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6514995f-2423-456f-ab3c-f058e49ebe36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35800d1f-09ef-4ac0-b88b-2471280ac292",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd643b2-7aa1-4fdb-8462-b2732ee3e239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774b83fe-cff4-4080-a883-964a3a4e316d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43452e4c-4053-407c-a546-7a6a388327d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acf0b69c-94f6-4166-8059-89e57705a926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55f9632-d41b-4157-a9b7-fb92ae7b01de",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1feb9c-2e40-4f59-9660-5184d3626603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000a15f1-bd94-459e-96da-615823af3042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947f755a-721a-438d-964e-297be45083cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ceae35a-3701-48da-9e13-5dda78eb17c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f4c670-bbd6-4648-b636-40526af323a4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c554139-4f09-4e72-a96a-2e4b14217bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3dc5354-cd07-4b72-a8e2-434db44148f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab5aabe-af91-407d-8575-4a257617e535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b924f4e9-c062-4734-914e-a5c4347c6bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3421051-05a9-4487-8cb5-b3038798c911",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9340173-de8a-42e5-ae8a-66d1e0b53678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6c3877-f124-4cfa-b969-31577be65ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfbe38e-095f-4115-bb64-f5b791941d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba6e52d-d061-40fd-86fb-299b2237f1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c4053e-8bd7-4e6e-ada5-1c20612118b5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fe5964-aecf-4624-a420-2127005c6f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fb8502-378f-432d-9655-dea02c1921d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8431131d-ab65-41d2-a564-7d22ae4d0729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb5be1a-6428-474c-8d23-8d05c62f3606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11567c82-06ad-4f52-bb84-82535aa44cce",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3737cabd-877f-4c8c-8528-7f78c8dbe7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e942a87d-523f-46a5-8f01-faf1edd9fa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c265f6-52cb-42c9-8c98-397f68cb4a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c18f45b-c400-4fa4-b597-83926a435ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee788ee-ca3e-4442-93dd-b3e64a87e23a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9f553f-ac69-43c3-9c9e-6043892548c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e37804-2c3b-444a-8a7e-6ec0d2491496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740eaad3-3e14-4e1c-8229-010515756ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb25c928-0ee7-41be-b61b-63d665b098ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e8176a-97e9-467e-8d4c-365243a8dd4f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cd8a2e-56a3-42a2-9e2d-0589019a4c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a05dfd-e608-4968-b015-0e57f150a17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50cfc35-82f6-454f-a14a-ca9180da8bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc02be50-fb88-4e56-b5cf-dec4a97c5e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce7972d-0d23-4b9d-ba50-5b1987c7ba9a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128d73ac-0b4f-4c3a-9c2b-a980005e7f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ceb018-ef1c-4e0f-b591-4f457e41bcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19911002-1e8e-4b9d-b1e3-aadfc8c62f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3f42a3-91d7-469e-8e4e-3eac86b7d8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286ce4b2-99f3-407c-94ab-9354670c1e7a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf9e0aa-e28b-4f2e-be8b-d1188c886b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca50f350-3be3-4bf3-9376-c3a8ed2c47dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6847d40b-7992-4aaa-b440-325dd7c65d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d17a451-9277-4bef-b680-75097bb3c4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fa5c89-055b-4eb6-990d-6972cd4f1ca7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf045fb-564d-4220-ba2b-4d156bc83e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9f62dc-d703-4f8a-9856-d82018c9ecb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59ed994-e099-4c24-b4a2-a9343c146010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b12c18-5dcb-4190-8bad-ff8eeb4d6c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5bfaa2-c877-4b60-9b7e-be9cf1a39905",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8876b9f8-68e3-4ed3-aeab-e1f10bd70695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ceb9cb5-5137-4cc8-a332-370db5e2cb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80bb58e-f1ad-4b01-86d0-57c55b8d04d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02fc7874-c461-4417-b222-a08c372e664a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5429b016-5b9d-4880-9961-9754ef8ce70f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21818588-75f5-4671-8f40-9d0a33e1e16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251324c6-aff8-4af2-8934-ac903a8fc319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03744e44-67c4-4f2b-9d06-98efa768e293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c610b72-d01b-4ba9-8892-9020c63cddea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b91c66c-90ca-4f4f-ac84-73425909a574",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fae1790-2383-4009-86ce-85014207503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16bfb02-b902-44fb-a8cc-cb263609031c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4c2ca5-aef6-4bf2-b7cf-fd514b014ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e67a10-9b1f-42c6-8f8a-9adc4e4c9df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a683f624-54fa-4de1-9951-3cb5da88974f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e8b747-b46d-4823-b865-5772a45a1b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bac0dd-1122-446e-ba8c-dbc5bee76908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab8d66a-336b-44a8-9d2a-3fea98b6b837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e02a41d-56a3-4311-8cea-3067e0b8605f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bad7d15-9af3-4e03-a95d-451c24c2353b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d66b064-d333-426d-b0b6-569aace0a2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32849996-6f2f-4f74-9d04-390c48515cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce41060-b8d8-4ef0-88b5-2eedabcaf824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d89d999-1401-44a0-8f3f-8545ae075608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb980ca9-9171-4cc6-b65c-d9e94e07b83a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90f71c1-44ec-4331-83aa-8ec3b6b13bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c1b396-bdac-4c90-b868-b9da78c93273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d0c5e7-eb36-43e7-8189-dd5f69a42f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "210225ca-5d11-4d84-9411-315ead8ab53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85c8ea4-6c4e-44a6-9ea5-7379a03262f7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374fe417-d9c9-4d90-8f46-1fee1650939b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efef662c-1612-42a5-876f-a43179aab48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ffb467-6def-4c98-a43e-f7ac9549932a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "593740b3-2d0e-4e0f-9d71-9f794ed09a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a0c91c-07fa-43e0-8e90-26953d3ea73b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8fb1bd-e6a3-40c2-8582-c1f0414e5c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0af977a-c5a5-4343-a1ea-aced844798aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83da8348-94c9-4c85-8593-f8310f95d8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e6951495-0287-4da8-9c5f-73cbac315bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa983ea-71ca-4844-a31d-52251ddfdf55",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fdb865-6be9-494c-ad91-d773706e2ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08e74fc-2f16-490a-a3b0-232ee8fb0bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5a6d43-e2d5-4f45-bed4-319d8c9f3923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdb0269-9167-4054-9966-8d222e3511b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b83e4bd-eab5-4180-9d82-aa8022ad6cdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c44193-9d90-4399-a1d7-ef4db37fda48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fad51f-e6a3-4c97-a38f-e30279faf573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a61faa-cf41-45dd-a11e-0d363985f0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "42eb9e18-5098-424d-b3ff-d1c3188348e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2705bd98-d911-4215-a2ce-aa4a18cfddd7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9373627-ee6a-4ddf-a792-b6071f0453a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674e50cc-3c97-46df-bff8-389f468b474c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91ebc9e-052b-463a-a160-1218d5c64755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb235ca-8d8b-4319-ab25-a1d66618ca8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0af4951-597a-4815-a3c2-74416d64d900",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f131a5-5de2-4ad4-9bdd-23b1d4fdfd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d05915-4ffd-4484-b427-16ead9d5a49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa9e4f2-e742-471c-83c4-7fa03b04f07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e189ee0-e8f3-4086-8bdf-7306d9bc2a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7417715-9de3-4756-ab38-bbd1ffc74a3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446a561e-5ec5-44e0-8e2f-dc1f0ca14285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a72a753-b72e-45b8-a6ce-5fdd6e63d8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe3c021-8bc0-4baa-84ae-3c8b68ab55ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "96fc4bb0-d24c-4641-bc67-7c879b27eff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e72895-9807-4ec5-83ad-2c2a1a926de5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8bc167-7ac9-41f2-baaa-9c227cbb0e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b27a9f-c485-47ea-a8a4-1bc788863a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b836469-b40f-4bdb-8bd3-a86e8b283e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f69aa211-0a42-4010-8d46-88f56c2f77c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba125647-4e61-4595-b371-3565d026469d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091ff8fb-4669-4f4f-9c2f-732343743423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b551d199-bfec-4d7a-85c1-ef472e506624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a684a243-4387-4b67-837c-c50f71c47988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ab43ed-8993-4856-82ed-73d80538fa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406253c4-efc4-44ef-9dde-66322b4871af",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9a07b5-9ee8-477f-9966-f8995634e2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93ed9b1-bfc1-4470-8c63-44b9337f106b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c5f4b0-18f0-47c5-9b3a-0c2037eab6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7401aa-de3c-4a53-9fd0-b0d388099211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fb8223-f3e6-45e4-98d4-55a0192e07ef",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3ccc48-b0ff-435f-ac61-f6347da685cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc38774-798d-439f-9f2c-3311b4b65783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc002a8-1032-4452-af0d-fbd1e79418b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a46d166b-31c7-4d98-8853-643ec4c65d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cc5d8d-0e58-44be-82ce-4071cb421c7f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def70686-52bd-4e20-869d-7565d268a1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a056717-dcaa-42a3-bca2-3645e393f4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c82ada6-dbfb-4964-8529-3db8cf1a9781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0632b003-3d86-43e0-88a6-cbe05d828847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc189f7f-d78b-4770-b39e-25336940610c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b498ad-3f4c-4b42-8d3b-0744fcca34dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d792eb2f-1e5b-4066-8906-4c53de3c7092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98fb46c-06fa-4770-b8f6-c254aa179b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cad5840c-0fbf-425f-abe1-bdca67a7b057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3cb1ed-b324-473b-b51b-f1eb3d8f70cb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1b8481-e768-4544-9262-7cf0762be373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa309bc9-9c8d-4bfe-bc51-48c63e96fd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cf2067-9209-4b9c-b8fb-b1a4c5bdc71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd13b74-37e9-4fef-ac9a-8b5f2d2cfcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9141e270-c2ac-404b-8c48-9175898088e6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178d6692-3a8b-4047-a7f3-5e77a1012f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1defc24-fbf4-4a8a-aca8-3b797be4a723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4ac1ca-57d7-41a7-9b76-78bf04bcb519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfed87c8-fc90-4095-a43c-b0e0fa4664de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cef1b75-3852-4496-a9ab-6fb2a3080944",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f114023b-e711-486a-8991-3b33c8534853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efda133c-932b-40a3-a376-d421976c0bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7af5e9-7201-4ff7-a930-1174589769b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af321bb5-0d6e-4a17-8b13-a12c3896f57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478b3de7-bc83-4f2b-a917-c6c59a0c4ad5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87a8cc8-d5bc-4ee5-bec6-a220ef12cdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d64a64b-b290-49ac-8afc-431af48cc345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d4b545-cea5-490d-b8ac-6be458a949d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e68c2b-9a82-450e-b535-fa97c1de3770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d84812a-8b42-49e7-ace7-a32857f36b6c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f8f09a-50f9-4c15-8899-cb5d2cef2c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebf3e80-7efd-44c9-a08b-96da63f51765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c86e080-2c92-4566-8c22-994ad3c0dbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd61b20-fa3a-431f-9751-ffe7254d5271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943515fc-f4e9-4440-b632-52af710171f6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c3329f-ca2f-4d24-97d2-5b097b339074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d0bb20-6ca6-4609-b40e-867dac74cb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a30aa80-28a9-449f-b6a6-1b36fd653c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc34388-c18b-4f91-ab36-55c466fbb24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c74e0f0-3f83-4091-8812-f9da89a9f287",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde8b7fa-1952-46cb-85c7-4075e6e1aff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1bfe99-ab77-41b2-82b0-1166ebe818c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baffa1b0-d440-4fed-b367-5eadd8926226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04fa0af3-7afc-4fe2-b3e2-8326639d5e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37e77de-0706-46b0-9089-2416ae4bdb04",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b646bef3-d998-489e-b292-d01aa463ff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717db09c-6ef8-41a3-90d9-215b761f311e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7449489-087b-4b36-8e37-be78f8375acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c162930-61e3-4a19-a6f4-567f0a921e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addd55c4-2922-4683-ae20-4982ebbd176e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ca9202-d244-41f6-9aa8-19551054dd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920ea922-b528-47d0-9554-add52383eb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe8266e-07b5-4bb9-84a6-870d9a5ebab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3680d0-1ef5-4d22-98f6-98910cfa7b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf229fd0-7f05-4642-a2cf-0d076a299a25",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a30229-aea4-44fe-8443-cbe92fbf83d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890ab478-8b1c-458b-a8fe-299aefaf4113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217fa4f4-c2af-4263-b62e-d2bef5b82ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1adad6e-1b8a-4e0c-be46-b67fb51ee212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a49810-06ef-4791-8682-f0be4721d9f0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a58782b-3c09-452b-87f9-1d69c5703b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003874bb-cfe3-47f4-a2cd-226b6d21708a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112aa4dc-b279-48cb-8408-b1a0119865ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "468542cd-b7e4-4f93-8707-ef0951ec75e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d192845-99fd-48f3-b28f-db40ee059559",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe92ff0-e597-4cea-8278-21302818d5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41f7d24-a36a-4efb-b6cc-0aeea2204dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efb2cf4-6653-4812-8e02-b8fa17e3d7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68efba70-f19c-4d77-ad1c-ebf4accaa1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1d9a08-b0b2-426d-b3d5-ad9fc02ba58c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ec1ebd-7d5c-4129-9efb-9fa3ac0fc76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6152e5b9-d2ce-4380-8661-03b96973f2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff100370-d06b-439d-82b4-7866e3039127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94bc5e81-aa72-471f-acb1-d9f4233304ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7e9fe3-9aed-4a8d-a649-e3c3aab2998d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaa4994-7d58-4c0d-bd26-e0b2b748f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a79203-8705-40a5-8242-325ae55f2a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fda1a3-6abb-449b-a51b-8e3243ccfe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a77f274-91f8-4afa-bb36-1868edc043e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9043ca28-8297-4fbc-aea1-574ea1304062",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ca3f63-100d-4847-986b-b3d17670984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a8db02-f766-4037-bd2b-e52dafe0b341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557122c3-636f-4596-8c51-6a72eec1449a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f83c4cd5-b4a7-4bf3-955c-8902d14d20f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fa2a53-104b-42d2-9910-51272be12fad",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e6dd8d-01f3-4d84-a1e8-cc787ae4c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39313258-6bf5-4882-831b-b885d336332e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f567393-38b9-447d-957b-60a0123ad1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3261bcc-f67f-4caf-babc-6bcdddeb6a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3d2587-1018-47b6-a95b-2226d414a6fb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c737fc-7b8a-42e6-8508-33b82b16dba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a9f866-5ece-458b-8111-b05ba97b0df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b5e13a-03e4-424a-a8f9-e946d4ccd28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7e7865-6ba6-4229-9e6b-f00203ff9772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7868f9df-6717-4831-8567-45d9acac7b98",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea8d9d7-1cd4-4133-b6ce-4cc9953844b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96363e1e-b34b-4799-b52e-daef09c14f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb530b2-88cc-4c38-9432-1142cf1cc163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1439a664-ee0f-460f-a965-a071dd63b6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f24c534-5e27-4ba0-86b5-eba9d3e97f29",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a4e8ab-7747-4ac0-9159-5074bca0884a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968a447d-123c-491c-99ad-05156046a221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739897fd-87c9-4a8e-9f2c-3f6957f9fad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd100306-09ba-48ce-a460-aab83848937d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2aac812-8fae-45e0-bc95-bdcecc95e093",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee774a3d-4e17-4165-acd2-f74c2c9977ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39313737-4e84-4ab2-a504-cc07fdcc0ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be8b986-6217-47bd-aa65-68a0ac1fff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8adecb9a-e10d-4faf-a921-c79786b5816f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938716c4-51d8-4c49-8184-792235c3c3e8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd173cb-b6c5-4b79-a26f-f368348163a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddfb4c7-9282-42f5-9811-32b2521d3086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02c0777-9eff-4e36-b340-5fa820445af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca11c912-9859-436f-b09f-e0e67fcb933f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f693823-b12e-4df9-b412-3492bb528a56",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accd83f7-bea0-46d5-84fa-1526572e6d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b055d00a-15d8-4191-9027-7e929f13291a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65790dae-edf0-449f-a96e-5a388db0f644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3e11c3-f785-4757-a3ae-a1aa89878f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46748b4a-b65b-4734-b96f-e30be97834cf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da91f76b-6556-4fe7-86ea-48215418ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c8705d-c383-4783-bb55-79986ecf19af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38300ff1-0292-412b-b393-adf29ce996ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b959fe2-426d-49b3-8e5b-ba174b8e1e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff59b3d-aafd-4f10-8dec-3745e5de0b86",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5cf2c6-80c3-4f1f-8cb3-9d323c427513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d124f0da-47dd-41ca-ae95-c7f0ae56239f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1714ca49-0d60-43fd-a220-571c8d0f17db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "02419c39-b34e-4547-92f4-8a5130ead9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5329fbe1-d4c8-4df0-b8ce-c8f276c4155b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8df7fe-9100-445c-a36c-08c2534b68ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d14e8a80-4c90-4e2c-8b43-2cb2cb580df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9a84f8-3e51-47ea-a289-919f8884f2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "60bc4959-77a7-4867-8a10-efc85b0f7e39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cc6d1237-c529-4002-8c9e-627ff7fc0bb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8336ce2-43c2-4855-82c1-cb3151b3f393",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b12e1b-ad15-4dca-a41e-cf8d0a2fe31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf930d72-dbd0-4c65-ab78-0a91a4979c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a650e596-ec58-46dd-bf4a-c5dc031b2e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d351f9f3-f57f-4a13-aa15-b9504bca6227"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "025337da-12cd-43d6-8eb4-284c4cb697d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bf9ccbf-0ed4-495e-8d4f-5bf5ea397461"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e20bdd0f-0843-4aa7-816f-b4bd74e68ee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34700e20-9c8e-4682-b0e3-6ad72d735ee0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b089e49-1332-4fc0-b9a5-3e868ed1aa5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1afdd41-ffc4-4429-9ff4-b767cd6f40e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f24b2053-44f0-45a9-97e7-13c8503a6180",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f81e210-a680-4383-8516-2405d575a96d"
                }
              }
            ]
          },
          {
            "id": "20386742-adb3-4968-8407-f1ea704d90a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70fdc88f-f808-4480-a299-68186b79100e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "178c25ee-8d93-4af9-9464-eaf90b18bc0a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a896aa-9b3a-4ad6-b24e-8c9607bed4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "56e6b8c0-1018-45bd-89d3-56dead3945bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d91774f-a972-44a6-8461-530e5fc24160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ad9574-2db5-4d61-889c-d91904de9778"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46311bc8-7d12-4d86-9073-dc18f4dd0eed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3d5370f-da3b-498e-b4d4-ff1cefbc35d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36e043be-ac32-47ac-8367-26cd7c5b3ece"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04a6310c-303f-4d39-9114-000f1c37cb57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "899790de-914a-4cf3-b301-7b79beb268d3"
                    }
                  }
                ]
              },
              {
                "id": "2d03cc60-370d-466a-a225-35986df8e712",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d25d473-e797-4025-85ae-230eeb0c1246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24c1a58e-520c-45a1-8f37-5e68a3125685"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "304fc1ee-ef4c-40f4-9eec-2b68095ccafd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d0c19aa-e647-4c34-9846-470fbcebf9cc"
                    }
                  }
                ]
              },
              {
                "id": "2c14dcf0-3bc9-4f94-bf22-626a30745f85",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83836a67-e5fd-43b3-8c68-a4ecbb4a5a30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e384580f-d92a-48db-8725-20d24706ceac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dff55477-b305-43a4-b047-ed576c4ebf90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "280b7b17-2260-45f9-bf04-dd59845433fa"
                    }
                  }
                ]
              },
              {
                "id": "c8697b06-c107-4fb0-a4ce-4bef741f8de1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edaa1ae5-75f4-42d3-8e27-ef57f937af49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bbdd67c-61bc-4da5-aaad-aa38ab6b997e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49c48107-8d7f-428e-bdf9-49e8f2ab4e57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2b9425f3-f779-42fd-8c42-a66aa8d69f07"
                    }
                  }
                ]
              },
              {
                "id": "e6e60a51-c59a-447a-8b12-aba22bbf2a7e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45a68dd2-f873-4385-83bb-9bf564ec702b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4fff69f-d57d-4a31-9172-ae4dba860abd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e32c6628-146c-4712-a5a8-ae3a9312e9a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1e0c549e-a064-4777-a72f-3f88f95e18bf"
                    }
                  }
                ]
              },
              {
                "id": "d6300814-0a17-4083-8b34-5ccc54ca34a5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cca015d5-cd5b-4be4-9fde-ad67c9aa4d65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3befdc2-77fa-47f6-a5fe-b39d8648137b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31b6dfa0-2bd6-407a-bb66-8f05efa85310",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31f6d9bd-3868-4fc8-9d57-0979ee07c751"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "768ee980-242f-467f-aca5-b242262137f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05774c9f-f442-476a-b05e-d1727ff2056f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5b30bee5-31ba-47a6-9ede-0dff6f31b6bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04f36571-262d-4e97-b07d-55807e61bf49"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd044a99-5feb-49a9-a597-773ef3bd3e34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "49d9cc01-4419-4c93-b57d-04db3a9baa3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e4bb94c-1387-4883-96fc-a4d65fbed2d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa9eccc6-88fd-483d-9460-1efa6f1d3530"
            }
          }
        ]
      },
      {
        "id": "eb66b406-5f90-42f3-9bc5-a81f83a15a9b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f116c24c-70d4-4f33-bf51-8b8a85c7be7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34af61d0-216c-4736-9b6a-d9833deb659e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a51553c1-b59b-436d-b328-fa9cad30bffc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bd8e4c-d209-4640-9208-f578ebc79d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ffb1bf-49b9-498f-a5df-f49ff116a7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69bc29a-fa15-42d6-bfad-8f6d62b768bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "623fc1f8-c81a-4e42-8c10-e45b7480f814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1984edd8-caf3-4432-bf63-06e65896b44d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f2dbf5-7fd6-428c-b521-8ff3c8c420d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb02e5e1-d4c9-4734-ad88-213450041b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7db4cea-ccf1-4ae5-a931-f93ba22f8455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "383c2939-1fc6-41f4-8c4b-9e1f96084edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc454edc-fc0a-461d-b7ee-8a31be7f4f98",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6567ce9-39ab-42b0-9f20-b2de38d40649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb28fdfc-cf4f-4299-88e3-71c379fcd4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0890bf15-db30-4ecb-936b-f54746cd321a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de50fa5b-03a6-4893-999a-2ffbcbf93c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b97aae3-621b-47fe-8032-378840dc0ce3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b449ea-ed30-486c-88cb-963f348c7a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44789bb-466e-4967-85bf-fbc1e5ed0f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b00885-daf9-4202-8c3f-27c430a94466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25dce262-5cb9-498f-b146-b9e1c4413ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707032a9-0072-40da-82fb-c665156a89c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29797912-c801-4bab-9bd8-6d92d5b4257c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5967d9a-8f6c-4501-adb0-8844f46eaac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c8879-a08a-4ac0-9581-271fdd8b53f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "612fe307-c023-45ef-8293-d874332b1ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466e5b8d-8b4b-4c5e-9a9c-3f1b805ea132",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83868f4f-8de9-4c5f-83fb-392c32d615b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9b66fb-0575-4946-80b2-450bf3c23d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13947cce-9a71-425e-9695-dc298a275198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f172dbb-fc2e-4bc3-a47b-e6e8c67a934a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38acca77-c9e5-432a-b489-059c007070c7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384fbb56-f356-4060-9558-48bf130effcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16d96e0-98e1-4e2b-9b17-45e7452aa8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4e9978-7f9d-49ba-938f-be7137584f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaf730e-c320-460b-8001-d7fd2693176b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b664e4-8dad-4235-a259-84fb553f180e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247abc8d-b35c-4eea-af8e-09d5ebde1fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5263b51-9c28-48ae-8c4e-dd80fb382dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d905d2c4-4771-44cd-843e-a021ddd07d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c783d657-0fa1-424c-aac9-af1adf148cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f532657f-8b4b-4afa-9467-21de5040b6c4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24f5192-6983-4491-84b0-d53f8176ddb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a395c7c-9ad6-4add-9d45-916e8d1f7ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78291a6a-8888-4932-8761-a356fb96a81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4626c0e5-2170-4ed3-9033-4f111c55a712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9425388a-ace8-4007-8456-f710953c6e25",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1351d393-9f6f-4c1d-8b2d-ca916706d51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92beded4-2ee0-4c39-a5d4-3f28eb8a6f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe7930b-772a-45fa-be52-f80ed9f52a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5faccb23-7d12-4cf6-9cb0-8eb1ba214324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0ddf3d-e5fb-483d-b7c3-d8a964c82105",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569ce641-c477-41e0-adf2-b7c9663aaf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e45b74-dc7a-431e-9591-f5e7de3ed3d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d8c31f-416c-4496-a704-f1f4ad6a58c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a800fb1-8c5b-4d31-89d6-a9517541f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dcea4c-0b0c-460d-93bd-2a2b54da16d6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0471c267-5c09-44b5-b893-203a7a7ea53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef787fcd-1f3f-4be2-ab6e-0d888f882e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a942566-9946-444c-ad3e-6b83806a7b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b940620e-fd99-4ad8-a023-20b255810c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f98e66-9928-44de-a4a2-09b072a1421e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef8b149-c332-4aad-99ef-0a2869aed7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469f9e5d-9639-4553-8aeb-d9f611fcd822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31391653-7140-4e3f-b208-965cba9ebc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b751c7e1-03db-495c-a2df-9cf749444254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d21138c-a9ac-458f-8b42-becf6e60d2e2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e812277-cc9e-4932-812a-ad4603124aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4e635d-719f-4a3d-a069-e77c0a9e7277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c1dcfb-68cc-4c40-800c-5d0f012122b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2aacc6-1888-44cd-bdcb-79a69c83e685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b654d9-5677-42aa-9a66-4af99e508253",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb29b31d-b90b-4bc5-8502-73c7b8fb782f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1135c809-007b-4538-86b9-9eaad2dcabf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649426e9-286f-4a9c-82d2-65fadbafb78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c55ed07-a6ac-43d4-9c83-7d34616d871e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede6aef4-6952-4d6b-8e26-8b7211a4f121",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18f521b-c827-484a-bc2f-9b4f5db57490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296e7e6c-bb2e-4b27-9c6a-13c432d7422e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34daad42-e6af-4410-bf6f-b66de43380ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d7e367-dede-4103-9820-66aa52d9b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541bd061-89b5-473a-9b90-b9dad06fbb6d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acd4536-b067-4446-b8c8-e38c15089302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b47c91-50b0-435d-a6bd-1a1c2c8f7fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cc2993-3df2-4b02-bbbc-bc9047df1ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "81261755-22f9-4253-8eca-450bd69f5644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6595803-bf51-4e86-872d-86d1e36e24e7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7c0438-fd0e-4658-88d1-806135400518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55cfab02-8d66-4d1f-b8a8-28b06a1a70ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b663f4b9-e4a2-4b59-9e14-3412e1de6cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d6364f-28e6-41a8-a4d4-1eb3242d4fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8a4c7c-84aa-49f5-820a-38689eb9f743",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9024738c-b157-4f97-9837-ebbe31070c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9eaa2a8-8c10-4a6f-b9dc-b4b2c53a740f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea191489-a4a2-44b2-9ae8-879b406488c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1807c4-abc7-4633-98a4-e2a587c5f6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fe46ef-48e9-42ea-bdc3-adf8c07927bf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38543122-a972-48da-98e8-ce7071cee6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89d1229-bbeb-48c9-99b6-463e9ce08b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e16ab78-14aa-42b9-bbc0-02d578731ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2306a61-5e92-415e-a34d-5836ce15c3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063b49ef-2f36-4e4f-9da1-d8aa78fc6016",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6904d5-d6a7-460e-be90-c74296649eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ccc3fa-dceb-45ec-932b-accd779cd72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ef6f4b-c4e0-4429-b888-103176b5dd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff11944f-9bcb-45e6-826f-42d7fe4d8277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec663572-2543-46d8-91c9-3430f50f438b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d6203c-6395-49e7-ab90-fa7382addfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46386fbb-db82-4438-b1ca-5cfa0e532cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c83ae7e-2661-4b86-a5bb-b9a9d21e66dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf805274-8d5f-4c4c-8e2a-ce46e7fa92c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc65336-3c30-42f8-ac2f-28ade9048689",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cdd6eb-36ec-4479-8721-db0447d8ba7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f488c93b-34f6-450e-af6d-9f963385fc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5123349d-f69b-4248-9b09-fef6bf93720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e221c6c2-1489-40fd-8dc0-163d9fdf1698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd99b9d-6c34-4000-9ed0-d8e4c22f1f1b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de285e60-7105-414b-ae8a-0aba91b1a486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b85aa2b-bac3-4c5f-827b-00b3cd567e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a586488a-2477-4234-a551-2ea40f60b2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b55257b-6619-499d-aefc-a3e4329a22d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d55f54-a368-4761-8499-6fece0888a06",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee23d8b4-515d-464c-824d-f3d83df11f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573d5c80-dbe6-46f9-875d-df454d90fb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0459890-a6b8-4179-8ddf-b304c8f39153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fc853b-19ae-4a7d-9e6b-2b023ded7672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4361407f-3fd1-4b75-8876-ef5f90ec44b2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960c7db2-3796-4eed-9cce-346d6c1c61a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cd2116-0c04-41d5-b618-a28138e4e198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b0e22b-811b-42f6-836e-b34fb77ae7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "376efdee-84d7-4ba9-9d90-b40c72ac6c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4dbf6d-c476-47e4-80e4-479208a96d6a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cc1edc-b62e-42d1-9862-d4f2db78a7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a107c8e3-ab00-437e-9366-f5ec07805b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10e6df2-4db0-4025-aece-9a9de9455011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d567fba-8f57-4c84-bc8c-37afb9638a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119eeb6e-c2f4-426e-b058-087c2a3c8b5a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3b10d3-f21a-420b-bf21-705080850e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de68065-63e1-4a5a-9560-3203d446bb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc5a25d-cc25-4460-89cc-d2cb0d07822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe44c637-c3ff-4586-88d5-c3ade887c415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74833eb6-d636-4b4e-81a0-5ab556940f2d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25452f57-6b8d-4b29-9c22-34b89e15d8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1bc451-4b93-416f-bcd6-f123ddc12f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9f2fe1-e783-4751-ab55-ad06e174e910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "359484f2-43ec-4f26-91f6-4f560e4214b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c975e7-0cdf-4dfa-9d9d-60da46ed1fe4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d74191-156b-462e-a19c-f12d9236a673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21628f85-f643-4d2d-90fc-36dc880ee684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d8ca09-c79f-4527-89de-4cd60ca3ab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42d289b-56d6-4430-be04-3f9ebc967214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9331095-2aa5-4b07-ab64-584d30733654",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858e676b-ed85-409c-b250-9ecf66e3ee4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4213a31-b994-4834-8410-3fe1eed82e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e11a2ef-c6a6-4856-bd70-b7aada5d6eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58df990-aa0a-4230-b4e7-5203e3f34352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4d84c8-008a-40c0-bb21-bc9f0836bc9e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85634add-3ef4-48f3-b33b-05049f7af0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a33fa0-59d0-43da-948a-0d5a1642df13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68398cbf-6692-4f64-88dc-e08bd18a95d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb396ad3-a858-4745-857c-e4fb09af085b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef06bc39-12bb-458f-96cc-a8eb0d7a4fe7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4f90c96-7a05-4710-bca3-a4ef23427961",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0402741-0772-43ec-8be9-6c686c81919e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4700e013-9f4c-47c0-9a0d-aac1aeb3fc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27960c3d-3136-421d-b34f-8d6fec79f268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a8bd9fb-af73-4013-b5c1-8fb30b20395b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecd9648e-ff9b-4de2-8542-3d1aaab98a47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fe25afc-ad11-447d-83d1-06b06dc4f4f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f2f1f9b-cd25-4ee6-961d-2c90dcba6c2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "369428cf-3433-4af1-bd87-f6fa2b5ffb0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d27a4e5-9ddd-4a7f-aeb9-c491db244560",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50f7c739-b56b-403e-ad42-8335db389413"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caef1646-7a87-4fd8-8247-d8bad46e7fb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d7c062b-0b2e-40ce-9a0b-5d00c9de4ddb"
            }
          }
        ]
      },
      {
        "id": "c966fb34-2941-4f18-82aa-10a472351d67",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1a300cb0-8dc6-4bbd-847b-5c126032136e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1735934a-140d-432d-88e3-2b1e807f2909",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef7260e1-26f7-46d9-ba75-3515941b5b38",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb60f06-1909-4ad1-accd-3e389bb6f720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa71bdd2-c5c5-4a96-adf9-4d4178a765ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0c0d67-adf7-470b-b9d0-b7dbe854b7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "48573c13-938c-4f93-a322-c22416ed7dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f967b6df-5228-4edf-9727-e22562aab4b9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf71ba8c-430f-4fc0-876b-80df602c318f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65ab203-198a-478d-94e0-2a7901269aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef264dc-fdb3-49a7-8f40-f60535acd0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02cb1bb-3277-461e-b9a3-d564627700d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b939459-6e10-486d-9567-ede6dfcbbdad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18231022-12ba-4a58-92d4-25e0b5e344d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704b89d6-1185-4923-902a-aa117d3b81ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43a20dc-5f3b-4fb6-8dc3-064db845db9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24ba121a-6459-4dd6-bb46-8af19a503498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f267e78-dbfc-451e-a198-e6b11ad46902",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a8934f-8f1b-43ce-b672-fe7ae477b6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b841c0ee-37f3-42b2-a005-14af34dc0a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e18581-9c0e-4259-820d-8e40156a0f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "039af82a-cb41-4551-a2a5-8af7bf0c6612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5409fdfc-50ef-47c5-bff4-a06ce58c53b3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e815c373-ea2b-48e9-9ba3-2ffe28e8978b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830aa3df-8730-4acf-a4e1-7de8e8e37f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4891f962-7b79-49d8-8911-fd921125e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2228851e-9cd3-4fbc-a5f7-f4db1b2e91cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42533544-ae1b-416d-b27c-cf32d1216363",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f8e528-839c-41b9-86db-4a5c3fe8f53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251f1eba-e768-40e8-80d8-481eea927b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a32fca-086a-4775-84e6-4fa0f79e79e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8388df6-1b96-49fb-8e49-cb197045ae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af09419a-4a96-483d-ae1d-50780e0744cf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b29f3fb-d991-4085-899d-584e1bbf60dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273e0a3f-8237-43fb-8b79-d81bb141561c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc663d3-1dd5-406e-aa99-35ee714ba83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f210f7a-b200-4405-8ba2-e1db09d7bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2d6013-a479-4f20-8cd1-556e0dfe09e4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc1d615-73fa-413f-8e54-a7273330508d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236c0a64-6dcf-412e-9d28-d25537318c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7abe02-7fd7-4e7c-8ee4-9cc7e999b100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57568794-c5bd-48db-9dac-df3c030b6eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a52cf4-c2ee-4dea-bef1-00fa973c5975",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c964c06-cd0e-43a3-8c06-8b244b5892a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1a5c86-b47e-4a77-8a07-ec21dd9f230b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205198ac-25f3-43ce-8574-8d6bc6682cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9033487-3c15-476b-a282-0dd20049b4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49925bc-b990-483e-b965-3eeb7062aafd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e1d927-856a-4469-a663-c9a0a0b20e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c64867-721b-49e3-92de-51238d1cb11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5c1833-27f3-47de-bbe3-e9af5cd5791c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ac449a-de56-4d33-8758-09ad9620e31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f031410c-8c9a-4adc-9b83-9983726dc4d5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ef6e84-c835-4716-9d49-19a2c64016f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cc6c85-9971-4388-8e2d-d3fe85b07cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002cddf8-84b8-4cf5-9002-5ed956df46c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "986144e7-35ec-4d69-916f-cd4c833e0166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2684ff15-c39f-49a5-881e-51c0b81f56ac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ce5f54-d1af-49ee-9ff8-fce187cb3b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3156cc-e0e7-4aeb-806b-d563ccacc521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f166e3a7-2cc2-4eae-8fcd-3fe1b74e525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02985992-0ec6-4f2f-85f0-3d89faf012ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb889032-eb1e-4bbd-a6a5-453974ea5a76",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bc493f-3dc3-4a49-b8fb-346f08ed99cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b4bfe5-8759-4861-99aa-b191dda5c880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe9bd63-f572-4acd-a719-8e8c37260287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6b1646-2831-4f87-bc37-5231afcc1bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034654aa-a488-41df-9959-8d99f09c5d89",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eb2859-f599-4be0-831f-05ecf6ba0b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b271de66-4aeb-4136-9a48-bd4fd270765e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a827e4a-e678-43d1-a650-043628d7211d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f6f919-395d-4d90-9c42-4f2184bf6ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ba10f4-d2fe-4fbe-9bbb-2f8ff291108b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080af2b0-9bce-4ce6-9a0a-e9fecd4fab36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c12e8a9-e3e3-492a-810a-d031a917c39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dc55d7-308a-4369-b0bd-c1a16e47d42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "50442924-168f-427d-b83d-dfbe139a8588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bb36bf-daf4-437e-bf06-94767b0cd318",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff67035-f1aa-4c79-8ce9-e58035806be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08f624b-4a15-4cfb-9d30-3e1a2ada7ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dad9753-e9ff-4d64-8352-f54f27bc936e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a929bca-fff0-4573-8feb-07d458d7d08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278c66ea-393a-4473-98be-f05d2af42bf8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479fce7d-109b-4162-b83c-e2066994891f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789e5027-f988-4ae5-8b53-e4688d36eefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab07251-8caf-400f-b702-dfa0b7d69315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "135a4f33-a0ef-4a66-b001-a8c6412bd970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e63ea7-fe7a-4e42-ba40-c2e22dd9a495",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8c7b67-51bc-4d76-8551-9fe5e215a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10db0289-3332-4103-afa7-2b56118658b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595967cc-abe6-419e-bf9c-70bc88793dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68330da9-ce85-4113-9b78-d3f90622eb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6019f6a0-287d-4139-983a-45b210ccb401",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b2132d-cee4-47d7-849f-3dbaf764ed50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d192541-5994-497f-bc9d-7fe7a4a90017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f2a4e7-96d4-429d-94b3-b7a62c0fc62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98fc7a91-778f-45da-8d12-c53d62aa68fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac4046f-483b-4a31-9b12-3a508c0b129a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f954165-eadc-4c68-ad54-55564de975da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed74c13a-32be-4f3f-b96a-59b5ac3cd4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fb622d-c0bb-4cfa-849a-64d4c1f52ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46a6cc02-7436-4cdc-b83f-f8fdf23a6b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b5f7e3-9ac9-45ed-a8ed-372b2ad9d5f5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba063cd-0feb-446f-8d1c-35d4146d22bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae739e7-18e1-4684-918e-79ef8925307b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e15d13a-42b0-4f1f-a9b6-032b104ca0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96adbb4f-8026-427a-ab12-f75db83c2ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e283da-fb65-4335-8e7c-2f88a0e4ee32",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce5aca5-fa54-480c-866a-2d8905db8822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5711d6c-18f9-40e3-a9f8-5a6541d0ade1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07894580-796b-4f73-9291-8b58c2e8ebf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f51401e-cf17-48d0-a6c4-b078779ae945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfada949-c346-4383-a028-56844717462e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7654c18f-a699-425d-97f7-6efe98886a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43597c83-3575-4cb2-94d7-41246b270bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e66d2a9-fc84-4780-933d-af92e5f2af21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db8af66-2ba4-4706-ae07-d80844889b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995dd768-5a9e-4b60-a933-c8920fcfe276",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f34038-f58e-4bc3-9daa-bc607bcf2e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a06cb7-cdaf-4f90-8c96-3b6b0270b711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693771b6-a968-41f9-8869-16fc78a9db86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7964e09e-962b-4a2c-ab46-431c09bae1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60d519a-91a0-4ad8-8736-6df9081dedff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07843d87-0fb8-498a-ac86-eaa13e90982c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe409a61-4fab-4efc-bb87-d49d5e456fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff45ce7a-f811-4142-8d72-f71d3c1df4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9346e2-8edb-4a2b-8a95-e32290972ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f23bffd-2c12-4a13-b1fd-7aeb0af3b8d4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85f72ee-7659-4e5b-a9eb-149e3517e86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1147b321-a621-4dd8-a88b-7fa9758a2258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89914b5a-9950-4654-99b6-97a3f686e3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b9d170-8cad-42b3-97ac-cbbff2ff15f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4121b1b-cb6f-4aea-8911-569e38077532",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64b9826-fb01-44ce-a325-1d2a0f1241e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df05754-7535-4040-823f-db8e25c77b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df266f9-7bf2-48b5-9004-a333dc0f1a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bab925-be69-4c2d-affd-8173376b1f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be27d1ca-64ee-4fd9-bf4a-ecaa80dfe7dd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7956b997-3a9e-4c3a-94b7-3552f79f499a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630b8d3b-e1fa-4dcc-b95b-22d5cbfa4a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95816a99-668e-4cc4-af87-203e73ae8a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "681ec039-af49-4c12-a5f8-3df988f63cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b6d0a9-ecbe-4ea5-913e-8c48c00159b2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb69a5e-61b4-4b38-a9e9-fff502a43975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a36bad1-e1a1-4008-9d5a-403ba326f345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7472589c-62c3-490c-bfa5-74d97a094000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e739ed6-8371-4aa5-b40f-47a9083f285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ba0887-3c4f-42b8-8903-22a95e6faa9a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184f8e1f-6e9c-418a-86dd-329ed36f8525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e407549c-6560-4d96-a8c0-e85cf354738c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1d12d2-dd48-45e1-8ef8-7a2d578f3c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f65780d4-082e-461c-976c-6fcb90a5cfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7736e5b-880f-4b6d-80d4-009c4857f576",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6632b9fc-5488-4812-90a6-cdbfa3f32083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4559a626-7ac2-4d79-afd6-d79bfbf4bf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc7655f-9228-43f4-aec0-c91ece570268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57db798b-2a30-4e0e-86d9-b87a42545fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5409db5-d8d4-416d-858c-0aa9a713d2f6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14e05ed-c8b5-4b48-838d-5a81d2de874e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2e8101-04fc-4107-9b13-f0c5e256f43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39069ca2-6a2a-46d8-9630-9113967c077a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "118ef4a6-038f-4e0b-a635-71a40cfe4667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74e7ec9-441d-4eb4-b7d7-e93861fc3797",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238fca98-17fc-49c8-87f3-9e906ec9b080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7937635-c107-4955-9725-bba2ee8f78d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f32c62-1eff-4e5e-8b8b-35b8122102e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18fce9f4-d652-428f-be8b-cf5ddc58a07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca802558-741b-4fe4-9d47-2fd97a907320",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bcec8e-05da-4849-8857-62440fc84d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02416c97-bc28-46f3-b65d-d734f9276a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d698202-3513-44f6-bb23-005c50238dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3609a2-230f-4b44-8bfc-7857bbaee43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1346339-5c0e-4110-bc6d-fc4b94a73abb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbe2a34-4411-4f25-8c40-62127e949005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca133603-ca63-4e15-bbbd-ed2ad9c36434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dba07c-6f77-4b6f-81c6-b77bc46c8f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed223f70-64b1-41e3-a689-f94fe1d44a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb26f991-2620-4d13-be62-3fc1b401dea8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdb2734-2d16-441f-a9be-06729741a0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bee09f-0473-45f6-8b84-f8c181935e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e149816-3260-4955-94d7-b6bfb585d360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b84994-0292-4dbc-a22b-30577f47e9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf84ded2-8255-41d4-b443-ca51b50cf69e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a6909a-9312-4bf9-9820-6aecaf092e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c488875f-285d-41ea-9e1b-56eb8a92e320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9657839-0783-43a3-9d20-6a60303c11a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9ab2f9-b5e0-4093-bfb0-2130c18292b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "88ebc679-fd65-4987-8e0a-d73821492c57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63e798bc-5274-44c4-8ea5-57eb72c76796",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9fb106-a8f7-46e2-8a3b-39edddfb4c89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "163da4c2-3b71-44e8-b426-d0585a21ba2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60817b06-59f6-4dee-b21d-ea48b2b8ae1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b87a4114-06fc-4c8a-9c8a-5229d5aa9d24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c371b98-4827-4544-ba63-09d4b1dfc91f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6abe608f-a685-43ce-acb0-41d6713b59eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "722f7afc-f47d-483e-a5fd-8bc85f5ed5f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43f66052-4bc3-4203-845e-c688e8c60f83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20fc43a5-11f8-4446-9190-1ecdecec3e86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65567b04-56bb-440c-a831-1f72ee0a40e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae8f79de-d4ef-41e3-ba11-8703664158d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3fa2c49-06b8-4a86-ad13-bb816d94047b"
            }
          }
        ]
      },
      {
        "id": "4d7a796b-d02e-4b50-ad92-79abced12911",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "87205798-ad10-4c94-8760-d5593aa97196",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f1866ed-7fc9-4245-a781-4bf3037f08ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bfe2afac-e3e9-49ea-90c5-9363eca8fb9c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171402cf-2be0-4ed8-932f-ebe8c820af6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468c1b15-0d04-4020-a923-ce3a6a6480c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd167c1f-3072-4d90-8bdf-c3033391a56d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d0ef9-9136-44d8-a60a-26479e3204c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9741fdfe-7fd7-400e-ae87-5ba0c3f086ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc59eed-e2be-4097-8425-6cef97652e05",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f2ad71-b67f-4909-8978-10f5f5ff9faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aef1465-d69a-4377-a939-b55b1ef230a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717d5323-5fed-4c92-8a33-abd8d9ff84f6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0fd047-c1d2-4d04-b6c6-f93cd40313a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be2bc3f-63b7-4a28-a846-b29f136a916e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b5d4d4-d9e9-40ac-941b-d602bcff94c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393ab858-5087-4f20-9e5a-e659a821ceb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca970fc-fa79-44b4-8abe-fff0b3d8a1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2302cc-0ac4-416d-a677-5404c4b8553e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11ce62b-f225-42cd-875f-421b5c1d8b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c107a1e7-4ace-4519-8ea3-a1a5e50b0789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7694a8d-5476-4a82-b742-bb5178528c68",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20c37cd-9f83-41e7-90e5-7fae64753793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74707430-0680-44f9-a5b7-56e6b020d20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507578a8-5d2d-4842-b67c-bb1b0a7db528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf95e024-2287-426b-a2d5-b590123bcc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2615bebf-b967-4396-a55d-a0bb0994ca37",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebafcdfa-34da-4377-b9b9-ef7d41e54d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec3e9af0-bd40-4ab4-bebc-afdb094d905f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bb7191-7722-417d-a33e-d79482e4e972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322b511e-4c1d-449b-b88e-7ace3a322a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b8ec94-d9e6-4fb5-931c-ca11c3523916",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0e01d5-4692-4306-861b-e380d24585b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e702b55-1065-41bc-af35-b997ff2fb101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef4b8d3-503f-480e-aacf-35946cf32a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62000958-6b23-4cb2-bccb-c54d3b7ae02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d875a1-d833-45f7-8de5-23b50505d570",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f86f21-7900-4d27-a8fa-5bf6d6914e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e05faa50-ba8b-49a4-8265-ac231d31231d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67eff41-9174-4cd6-b2d7-fb45c66846dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89701061-3926-44be-a1d5-7febf8c4de6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c20da2-8a6f-42fe-9430-8b1d36a8bf67",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a532b0-21b1-4e8a-977b-f5b024fbd830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e3517e-605f-4a75-9741-1da007279516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7560b8c4-1b8c-43a8-9b63-6bc5570feae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13df626-d339-4a26-8bd3-bdea291783e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852ff755-3710-4ca1-a9cd-5063393d6c97",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910451a0-9f0c-42ca-bf09-a5573a89b612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6f5332-014c-4e39-9626-2684f0d50d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d8d43e-cf2c-4a70-8edb-5dbf43344a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2df0f3-4e08-4e64-aaf6-6d2aec35ae82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909848e3-fb2f-44a2-94e1-ebba6ba417fe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c366987d-8aa5-418c-8f3f-98919031f5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec89df2-1cb8-4567-816c-9d87ef4e186b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5a9cd3-86ef-412c-a071-376b7fb2c2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50d89be-650b-4bbd-9252-f778dcdcbe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156b1181-b828-4173-8456-8f6b0f4c29fa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611dc157-d075-4da2-a2f1-028a7a712a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba07277b-d51f-4306-80ba-bb7d2f44e85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dc1186-4d5c-4a4f-b654-828dd99afa18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b34ef6-fea2-412a-ae43-f095e7462b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8064b9b4-6631-4743-b9e5-4574616b9bf3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2bfdbf-0e97-4fb2-8003-f200333065f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d0b0c6-4c94-410e-b776-25f5963f1d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d037b2a4-124b-428f-a0ec-91542ab64a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4e1888-2270-4157-984a-92871b187314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dec5be6-f9d8-4102-a9c8-af2e942e8fc5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8583f503-81e7-4134-8c06-f222f7baaa31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab17033d-67d3-4cdc-a39d-544793ee0b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ac81e4-1409-44d0-b465-e0994164934b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd57a7ce-a553-4a47-8f73-861949664874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b1bc89-2bad-4e01-aa5f-449545d53389",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683bcdb7-cfe9-4885-8575-c3d7f1d3b0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4333e1e-a570-4f26-83b0-c77290aadf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e6c6ad-d1c5-4acb-a577-4a3c5645ae5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76902ac-007a-4e81-b46a-438f93a82904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe83eab-e0f0-4be0-b3c1-5e5a7b3b2fb4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fb2109-91cd-47eb-8f6c-de03051e2322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806a5e05-238e-476a-bcd3-00ec23b5f59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14190f9-31ce-4eed-a0e8-bfb9eaadf018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9971d7f-7664-4fcb-973a-bc06ef27d5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1321ee59-996a-4f9c-bb7c-2647b9bfc6fc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b129ce3-71aa-4569-ba25-7f78059d28fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15e93cb-191e-45f4-b286-981b792a3c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38bda1a-badb-4b30-bb73-8326f7961a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691fddf2-7259-4b39-b191-c61dd90eb28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2f24c3-6830-4366-8dd8-87372d637f08",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f9625e-e0f9-4065-a5ad-d71ff8518d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c531db9-67ca-4765-98d4-386bd620a6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa172ea-c8ed-4b83-a5e8-4be5402f4d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6faa1b9-afa0-483b-825c-e1d12696f9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3620c8c1-1ddf-44c3-a263-abbb20c209ad",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2217094b-1eda-48eb-8765-639677cf7e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c24088-f286-4ea1-a797-b52fa8fbafa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2735a989-cfc2-4096-bd6a-cd28c779fad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c2001a-48eb-4fb2-8c4c-846bd86b8f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2228b3c-6a8a-4070-a1fe-3066bcc5a5db",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf37259e-5ad3-4b9f-9814-ce8d0b6a95b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2ec595-6764-4cf0-8fd5-6386f860e97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2404d5a0-298f-4a88-b7fa-70c65c7c28b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2844b5c-d61c-403d-9285-365fbe9a8c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba679d6c-6165-4390-ba92-c3da239421c8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce08ddf9-1756-4676-9da1-1dbe6234096a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859087c7-fb0f-4d64-9ff1-c4511c973716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b5dd15-0ba6-4704-aeb4-c902242a6ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42138f07-8327-4a43-afb1-aef19457561c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caddd76-82f5-4b19-934d-7205a1e90b01",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0754a968-7a1c-4f64-abbf-f605d99f7ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6b5e18-022a-4ffb-8006-e13f78de77a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fb9b4c-5383-4e04-920b-97abed5cf0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b059c54-574f-49c9-b781-f3872a67d233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c4c4f4-f3e9-4673-84f7-56ff744acbaf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24de4b0-d17e-4a0f-9168-ed1871b287f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb9119a-c8e7-4460-92b3-2b894dc2fa4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e05f6d8-fb03-41be-9ade-1e97c83c40a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8687053a-2d94-40e6-b749-c9c66a5df41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f887da4-7080-422b-be1d-3d527f90d773",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf820c05-9363-4a53-a1a2-7e0ad099cdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb9431b-fb0d-4b74-b827-bc6c36c4a397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a476f81-4d52-4b2a-8888-8c37060c4d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e060bfb-b50b-44b1-9427-38846d74f674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1667c0a-3dfd-458f-af1c-3d25d8b80f86",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0461534-f64c-447f-a123-346bdbb44af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a68e98-423b-4acc-a73a-334557a8b29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bed953-1004-48a6-9ca4-e31ea3e8b50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baeedd8e-9bac-4018-9959-5b239e3d846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4ef2f4-c969-4fba-ae3b-ed09bb7df06c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31013334-962e-42e4-af4b-f70269d4256e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e49a8e0-9825-4ce8-ae1e-eb55f49add76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d01eae-22fd-4408-ba7a-57071feb0d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0803d9e2-f033-48e2-b34f-54aca1ca48e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873c6ba9-cd0f-48d5-a26c-c28f05cf8c79",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b29c3ad-431b-400d-ac37-49be2afa5781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9424ea15-d463-4769-8933-38d2a6c8048d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8545ddbd-3ab8-4e4a-aa2b-5091b44316a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e4e26a-896c-4821-9cdc-3df5dfb6bef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666d169b-3386-4d6c-bc49-5afc74fb5f30",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd397b2a-6db1-4b97-bdc3-3b84a9d0d57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35fb4e2c-c207-455e-817d-eef4e943e00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e045020c-fd04-41c1-ad50-75e24fa37ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b043f57a-9f9c-4a1d-9dde-debb761e2661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e527118d-0ba4-412e-8577-2ec2a59b241e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26399779-4f51-41cf-a224-c45af3d6f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b7c071-7ab1-45cb-afab-f07f1582c9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be4dd0c-2864-4898-9fea-4337ccbc8d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2312a33-49d3-4861-8197-71e959ed6e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baecf99-5432-4e3c-a0e9-7d8bebb03678",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea0b3af-53a6-4f3a-81b5-b90b80ffed1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4387643a-910b-441e-950d-dcec2023a368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3fb496-9bfc-4a4f-b849-1599b742eb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fded6a4-b656-4ddb-803f-9a411081fd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87356199-9f4e-4f1c-85d1-747f49440d64",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355a518f-e7e2-40c6-9b65-082dabaa0fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1264a0-c844-445a-bbbc-408e3221450a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5588933-ffb5-4be7-b447-fe4661ed75da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfab6465-83f7-419d-aab9-f4510f343634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42cf145-4b80-45fa-b46b-0e93dbc598d3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e30a3d6-b997-4388-904c-56229306f21d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6afdf6f6-74ea-4c45-92ee-63b95194e975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7f452c-67ce-41ec-a0ec-22d4d9e9e754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05871900-204c-4285-b962-672666ab21fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d03a11-c7ae-4921-9cfc-8a07148f59fa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6fd1c4-e5bc-48d9-aec9-294c30e83ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de38b567-5502-44c2-b0d6-8a3e6329bfbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529bb74b-e896-4a7b-8c45-16bdccc9ff63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200b4100-afcb-4f6a-91b1-1bf528df2e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66c8d40-6779-41ae-bb33-3adc912c46be",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe630a68-e3ce-4ee3-851d-170871aef388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe837d89-c1b7-4c57-8461-4897805b34af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2639bb2d-e89c-431e-9a02-89ca6f3bcd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94903c2f-d0bd-4505-a948-9026f8e4664b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452107fc-6688-4097-8366-ccaae906951f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789a6a41-bd1a-40ff-9cfd-e5446decff05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0f8ae6-c5ec-40c2-bf56-46d31fc33ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3627e975-81f7-4843-b109-2c71d32bbc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ad50d9-9379-410d-ab9a-da89214cc013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702f9056-bf9e-4e5d-b94f-efca49ac7451",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aea89ef-6be6-4ca1-baba-168048edfe96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b142a7-67bc-4615-90c5-c3ffdec31a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6168b6af-58fc-432b-b558-0ede707e16fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485941a4-e710-48bd-b640-d8264838c4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0903bbd-0320-4851-ba83-e74509724c03",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18944e2-638f-4d46-a71e-cdae1dc5f356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72330694-831c-4cd7-9573-96e0aaad0773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667c47ed-8d55-4ddc-b30d-bfdc708cd37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727992d7-d5b1-4d9c-b55f-cc39a9518e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8297fc3-d19a-40bf-b2ff-5a349b185f6c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665469fd-82d5-4f52-b388-407bf797f1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cc2c66-cd92-4b54-a203-2d9ac4a53e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66318cb5-aefe-4288-b4e6-c0b087952013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c688803-33de-4de3-8d88-ba8468464ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea202972-41a7-4da3-8af1-cd1fc2603b2c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28665f37-6392-451d-812b-6ed0755c15b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0873e1-da38-45ba-8dee-2fd1487d85bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86da927-cc1b-4488-b30f-a93445a1cadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9742e5-6712-4c7b-afab-5a35189e8b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d4c109-dc11-42d3-b437-6132b893aa9e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec3c094-2dfd-4b0f-ba3b-66dec710b9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e8949c-3133-4c7a-801a-10bbf2f6cbff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c616ccfd-c19b-4519-a244-87a97cf6eab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c73bea2-74a6-4536-b917-8bfd09ec12ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dcd6b8-2f6d-4ff1-a0c0-e3e3e517f3c3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc3267f-b511-48b3-88be-e87aa8a90a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fc8f31-1774-4213-a685-6a73d774c9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974dc04e-7af4-4178-9f31-dfbbf50e35a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b4e37b-f95c-4523-a166-541b4214b1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78781f12-d971-440b-a72d-5e76d07c8212",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75eef6a1-676f-43e7-912a-2d5d9ea51790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fdf51a-0c6a-4081-9a2f-d3dbdee3bdde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b160dcb-592a-4e91-83ab-cdc982389ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aba82f1-d6e4-47de-bd6b-9724fd772644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d7550d-b868-43c3-a372-c8aa14235692",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c84da46-311e-41cf-86d8-7c0601387e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a79066-611b-47c2-a8f7-c548723973fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f3645a-760d-41e2-9db7-e45377b194c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e33757-7311-4431-aa79-38de49276d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2063eaf7-fb1f-48b7-be27-d5188228a05d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a03b558-07d8-462f-85b1-8a5154853810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dabf804-5ed1-41ac-9714-cc15a2f28f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cd2873-10a3-4376-978d-ee9a09675707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfe4dd6-90a0-404b-bea8-042f01c9e61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ec3637-0f2e-4bc5-83cf-e15a3b6bb5df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09916fa9-01bf-45c3-a17f-221e5c8aafa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb17652-73d3-4b19-8ded-8266e952f001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a6b06f-56be-48d1-b91d-d28743878bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40fa576-60f3-40df-a9ec-546caa692889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0a03c7-84fc-4f67-bc53-1cce48a02610",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd7c090-36ac-42e0-bfac-c847a1f81ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dac18b5-2cd2-465d-99a0-703edc3224d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b745881-c05a-45a7-b04e-a42578e86feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6649e7e8-57a8-4d75-9f7e-490da0c8b751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c35efd6-1b55-489d-a8d6-cba2546c12fd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3afb5f5-665c-46b5-892c-2b07d57fabd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1addab-4cbe-436a-bd46-6fecfb947888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4dac6f-af6a-4551-b502-164b29113287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce932271-8fa0-475c-9016-4816e394c662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a269dec0-91f0-4892-b2b0-554c7aa7041e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2918e5-5e1a-4e1d-a6c9-909df53b8eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67343505-1114-4b1d-be17-bad3f4cb77dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3c3bd0-c331-4fa2-a6e3-3c1201e07241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e60588-f575-4f9c-81dc-981d757f75e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f264fb-fa31-4d9c-b9d6-0748bf413c9c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cecd50-4ae2-4dc5-8123-90c346088a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617219b7-c906-4cd0-a931-a4a5dac2cc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0a3f0a-4b46-443c-8d29-64b52d13064a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46dc8c9-1ad2-4db1-ad8a-b2ec39027534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d680df-6e02-487c-ae95-1777299d7368",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0032859-5384-4e27-86fb-dc50ebfbfe6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9ae6e5-2c23-4770-b8b9-266d1355c9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7827c28-105b-45a4-9c51-2a1f70e1e67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb048496-02bb-4343-817b-a66cf33dfe89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fefaf9-7a5b-49ab-b9c6-6fc559ffb277",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d8111b-2cf9-4947-abcc-f3e17638d577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447759af-0091-4ff8-9ad0-43875563a230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525cfdb1-4c51-4145-9d64-c9196b1eb0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d755f9-2a6e-4423-873b-5635c4a801f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d315e3-f7f9-49bf-901e-800e145d1dde",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ff76b9-4f51-4020-80d6-03c113f5fa69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d05342f-0463-40b1-b0c5-4b5f586e0a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbad4199-7107-470a-bcdf-641b7a31dfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a3d9f6-3abf-4a2a-99f8-e7f2089cb127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e09310-fcf9-4a76-9406-3dd77af0270a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81491b1-56df-41e8-a97a-63d6c28d171b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a157d5c-a892-4565-bfa2-c0eb4df8fa60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9ef0ff-a40b-47a7-a478-49a71dc672c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4724c5-35fb-4ff8-b767-c35dacaef908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339c8162-0c23-455f-8e28-71bd50fa8d2b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03cb42b-6184-464f-8a8d-823683070fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e678479-6c9e-4f26-8eeb-bfbce959472c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7180dc7-2e02-4b34-98a7-8de909ee3c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9290f922-8dc1-4715-a555-9afa8794a5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef2be07-aeed-407f-b280-a97c7205d6d5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8082f907-8acb-41a7-976d-b60490e9737d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd0d02f-24c4-4c26-b95d-92ecb726b824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a28d41-b994-4b2c-a867-9c0de0a213df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90705a32-745d-4323-b00b-8c2127f4b588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e13b606-f33f-4568-8dbf-ee76f457d140",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3656ddc1-c656-472b-97c5-1aa7d15e0c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38684b26-252f-47ca-a9d4-c8d283c642b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05edb006-3a58-4f97-baee-afb7b29942c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c220de0-97fa-400a-acee-8e74178aecf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed4341b-6cbd-4253-903f-40bd89860d22",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c95cd41-ec69-4d71-bc2d-484e547e8892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6ed02c-99a5-4807-8699-e8b1f308ff7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7384830-effb-4855-ac3f-7bf7d5e2e6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b44a43-8b61-4a2e-83a2-dcb49bf8da5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55956df9-4e10-4647-bd01-61d0165d23c7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b965ed2-8aeb-46ba-8057-61160e6ebe9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8afe7f0-5f90-4802-b0c8-66656256b22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f6dcc0-83af-4d12-8c87-c9a0b54b332f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3aab733-633d-4357-a77d-a7c9f0d6cf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668618ae-d293-44a1-bbba-1546557f4a60",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cd6f9f-39f7-4239-9159-30eaf7853525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b3e61c-4432-4b39-a08a-c6c0e8a37f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dd4dbc-cafb-4e57-9781-f617db3038db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8161b00-9865-4631-a6a8-235c595f3df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a836a6-aca8-48eb-b3e3-3bb5b538b119",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d998c1-f5a5-45ff-b37a-b76f3edf92ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd08b593-0805-48a9-9d1a-8b526a891a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20816a76-900b-4030-be6a-13c9b4d18867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6684a077-affb-409a-8b36-25e1a839069b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b56767b-6c7b-4c68-9863-13dbee1133bd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4407af0-fd06-43af-b7f5-f8b3ac4cd2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88549f2-b616-42dc-97a0-22caffd5b50f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75e7960-e3a0-47ee-a0d1-af0b5967dd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465011cf-2e33-4339-8038-6cc009881056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf90cc21-1682-41f0-9203-fe2f89c06016",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fcf76e-dc64-4d48-b7d8-0a116cea8e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a0c29b-96c8-450b-a6d5-b3a40bcae4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e1aec7-8736-4dc6-ad73-ab8b79d5860d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49057e03-9a56-4508-93b0-53cbe889caba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fd4cae-7722-40f3-a137-2f24ab7b451d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22675a0b-b4cf-45ab-a8c5-d84c78ea4f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4816be4e-57f1-4cdd-b833-cc4e20a3c8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082d5487-0209-49f4-a1c2-62dcabf15af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535a06a2-77f7-4fb7-a148-08694f2b5f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2801b69a-231a-4880-b24b-0f7032cff45d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e9fa26-4978-4638-9840-02822b45df10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "404f3546-2a6c-4407-9e5b-56a21cf05cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e3e494-0774-41e4-9ea9-ac46754c6305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a90cdd-465c-4480-a8b6-fd233ec20e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c8c6f4-0338-4381-9dee-fb4f9f76f371",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10ce3b8-86db-4afd-88fc-934691449943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e4a8c6-9b1c-4500-ae87-d35b463d7b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6619da-82d5-401e-b1d8-84d18560898d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11bab257-eb0b-4bfd-82cd-a392d95834f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb210275-671b-42e2-8ce6-7b370acf8151",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c2a3a3-f6bf-436b-ae49-db5effed609e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1886e926-1ea6-4a9d-86f8-aa41e1c1460f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f3c8e3-6a15-45f4-922f-04edc60fe105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122680da-05ca-4aa6-ae51-9c1f947ea559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea133d7-0845-433e-836e-83cac6bb912a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c56c79d-1174-4184-9f4b-9ad19b05e5de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c3be0b-fa4a-42db-9c9c-160d79bb7759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ad650c-71bd-49ec-9ebc-d33b325a5218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbddd553-bb1d-4cd2-8764-a6e38a166d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219e03e8-4c96-42ff-9729-85ebd6b5e5ef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d9f3eb-016e-4bba-a71b-7537268844d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f263b3e5-8f98-44f7-a18b-98998656cb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6be9f1-0aa8-43db-8c57-bef916baa618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a9f5b2-a261-4804-83b7-5cf5f3e1e125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366ddd4b-2404-4631-a7a0-653fafd41a22",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b184faa1-018d-4ba4-85f5-cca59275c4ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aea98b9-959d-450d-8d8d-9a61c1109d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceebe4a-7d7b-49d6-a7c4-4d830bbfeaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdae5d4-b88b-4b36-b111-886de98a16fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e165f2-a702-4e2b-b90a-8d34ead0e5ee",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06549663-b99c-4ccf-81ee-82ff947c4261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f9a906-5475-4e66-be93-d6b43d212bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1322317-73e4-4b4c-a8db-902755fa1c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29248ec7-7a31-4e2e-b4bb-9960d492c95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f955f8b9-4844-4797-a353-68ef37d8e541",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbf8445-42ba-4bb5-beee-961c4bf6cd60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3483dca8-0638-4691-af96-09829f3fefa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c710274-b797-4da4-baf3-766891afa51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af766439-8e3a-48ec-b311-ab539d4a5b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ee1ff6-85cc-48b2-9ad6-1788aca4f9e3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da29efa-5e1b-4165-9e22-ebf15c77d619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce0cbaac-23e3-4a2a-8774-bbe30e44465e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2dbc7b-e112-410d-868e-458419eb22de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59652612-7ed0-413c-bbc3-e9e43d6fdbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3407b9fd-bf7a-40a5-bc35-de9b31162f46",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcdab4d-189f-4764-9c11-8d813bb656ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed6253b-2465-41dc-95af-a9dbf6d7e800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d922050-645e-4a62-bd9e-2039bb8c583d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475fa1ec-ec97-4cab-ba57-2e34836de3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0504b6e-1fc3-4a4b-844b-e6678367ef4e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95331c11-b51d-486c-9ecb-897f0f21aad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1118d351-6686-4dfb-933c-b907462a4e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec1d64d-c37f-4e52-a000-491afb759ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aec8bd9-5eef-4ce6-ac7f-fde54746184c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe2632d-b9b0-473b-b07b-d873d37e4c73",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c3675c-101f-4549-bc2a-3a3d3be1e3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "375cc7eb-c5b6-419a-866e-093d9a62627e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45150ee8-174e-4711-ba49-e704c4308eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6453355-5783-4c2b-88da-6c018daa76e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b91aaef-c857-4d36-8e05-795f00720e06",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea99cb1-633d-4837-ac78-7340974284b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc56429d-6ae4-4380-80ec-65aae2e98faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9819a26-2272-4c4b-add8-31cf8ab70e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a38324d-e062-413b-b529-cc79df377a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991a5dba-836a-415a-9205-93756809abf7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcd07e4-a17e-42bc-91b9-aa1ea9ce22a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a5af22-ac25-4be2-893a-ef0d0efb48c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f68ffd-defe-4371-81bd-a81dd8d12799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f6cd91-a273-4f50-a08b-e64806f680cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc4d599-e654-4923-b1d1-a270bf38d648",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a1c283-aa95-4d1c-b9dd-c846f4d92a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c890cb8-f7cc-4a0c-9f5b-82bf496cfcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860d74eb-73f9-40d5-9f77-9e09e06f113f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5638099b-a7a3-456a-8c26-5aa208d64f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da70388-2f53-4110-8674-4cbb6fb6dc13",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7cd5f1-42ad-4878-9838-1499a8b35e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c513de5-fe3c-405a-ae45-f569bb7d78ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b662e6c8-91c2-44f7-a261-a37b2bf3ab56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8820f476-4ef3-4954-b51b-7d09d40b036f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75049171-fe1a-4fc9-ba36-83ebef51f6bb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f3f692-d78c-4dd0-a0ec-a9266c640182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24914944-b467-4a7f-9302-120a58e9df53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fe8872-1023-4ebc-989d-9e0e91fce6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5685d79b-8413-4b77-bb37-0a5f9cf384df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f678d03-e008-4e2c-8fa7-809e798fdc64",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d444a41d-283d-4126-a947-7620adeb2bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f578077f-7c33-40e4-99f7-ec3d3cf166f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7266a472-288f-49f3-b7f7-034743bce0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12a71db-b86a-44b5-955d-fedaf118f3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b4bd1d-7c67-43f0-a8e0-89af62775a0d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0028e264-40f4-4aa9-a1cb-d4809ab3ec19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb8e965-c01b-4f32-82fe-e53a2ca5961a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1c70b8-cffa-4c49-ae6f-9d2d1b617ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02918aef-888f-46d6-b5b9-f3f78fe5394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32da3c10-4741-4c42-b8e6-f6f40870d8a9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd4d4da-e0c2-4063-8302-0bfcd26830e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c43ee496-cb50-407f-bdf4-7e7106242e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78163cdd-69dd-472f-be63-33fe8a0765d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637db8e2-84d9-42d6-ae30-ddb1a35c33ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f9af6d-b72d-40e3-868f-21ca598e8dfa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779faf03-fae6-41cb-9ae6-2e7d386f1648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f6eba3-98e1-497d-a7d5-e47be8fa965e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50933005-c49f-45b7-b849-63979dbd3454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632ea0d3-aade-454f-99eb-fe376fc4a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5a0d42-e74b-425a-b653-f05f98509b90",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6144133-0fe1-47a3-9d28-68f46bb57a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23f878b3-fbeb-44f7-bf1b-b83a79a137bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c457d6f-301c-437b-922f-cd7eac2f6504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189d4a53-8bdc-4fa6-aa78-b4cba6b19703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec0a215-5b3d-48cd-8e33-363fcaaeafe9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f32d457-335f-4b06-a221-248917a0aca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1ed6a5-cd14-4970-bbc7-767c313adfbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c8ec84-fd27-486d-9d5c-ddf1888412a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde699e3-0e4e-456d-91fa-200f38d25e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26f9a67-b2fc-4fde-8521-68a4e54fc3f0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f51f58-83e3-4420-a1da-800665e96cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8926cb59-dca8-4841-a9e5-c4f6bd21ccce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823fe440-23c2-4366-a583-8bf58209dc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a33c2f-7391-4142-b629-e77f90a3dbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb66920-109b-4595-851b-8621e224b8a6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0f17b2-af71-435e-8501-109718e46aed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5542afb5-a1bd-4c14-b0dc-b98c0fa5db84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f373b566-9488-4acf-a485-bae175170475",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637da0d9-3c1e-4908-aad5-1821d1b22065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0984d9-3bb3-40d3-b3b1-6b7994656b84",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735a84db-c6c2-4e18-aa97-fbc39c41ba53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a61d9a-8dab-4dde-bcb4-69b13eacd26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3b0784-07d2-4e03-946b-83b3f38da13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66ba389-3dd2-4a85-992b-c629cc317bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744dcd35-fd64-49d3-ac0f-26d64b4e121e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ff70b3-c814-4c0d-9466-4293c0d20fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b00983c7-2676-4cdf-8773-794747b37ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a73a24c-ca69-449c-aac5-46d9716260e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356d1a7a-c9e8-4efa-a249-7531fe328b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9608dbd-be9e-498c-8a91-606eca4d509f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa70abc-0993-4d6c-a31e-b5258ff2eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daebcc5e-00e7-4191-be7f-c2a8e936909f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806d57be-c5f2-438c-9148-32540f0e4fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c8791a-3e60-41c8-8f85-53a96f8f150f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86239a31-8335-41d9-8ab0-15ff5deca4a4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fc6252-96e2-4d4f-9d43-7cfaec0cb4bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841c6c0c-652d-4972-899e-c3e426dd3285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4e64d1-8dff-450d-a1a8-917d4497739e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb06059b-b6bf-4b90-a7c2-ed92447a7d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d84eea-c623-47b6-bf91-8d95db887d5e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca61d31-6c55-48e2-8183-3e02015f7c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a34501d-e19e-4af1-9307-cb9235eadf8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7d5f4d-a6c5-4c5a-988c-eac5aea6220d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbe1d77-50b1-4e4e-89af-2730cb257759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef22290d-0e56-4ad7-b9f5-04c9e38707ab",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6279479-7517-4d39-8b9a-f0c820c3b88f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f6ffbf-516a-4cc1-a0f6-c5455bd54605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aa8ef0-31ad-4449-a641-46da0bd6ab07",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec45367-6bf0-4c5f-83b8-92c48f56ef2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd97b161-06fa-44ad-8e4c-c58d49b53e8d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4098b4f9-9611-4af9-8c61-c5192effb4b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fecba55-07e9-41d9-a0fa-02e5b875a577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ddaea3-0b61-458a-b9d9-1df23bd93c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47cc7c5e-6b5c-443b-b99f-02f53ba1e382"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b990dd58-a5be-4c35-b27d-040ae5d5bc82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "434a83ef-d873-42cc-a4e1-d169a0f12f87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "355e4193-d359-4b31-b2e5-491013962db5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06edb980-1e9d-4245-a541-98d979326d12"
                    }
                  }
                ]
              },
              {
                "id": "ccf4a7b4-d46f-42e5-8fd7-3f250f3e741e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e86705b-f62a-4351-8f7b-35a08dffe42d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b7ffca-a7a3-4a94-a378-47ddd486c017",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fff420b2-ad40-43f5-8912-0fd72b4773e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d422ca0f-55ae-4ebb-a62d-928d80f25f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33923875-352c-47d9-b13b-3a1efac5db07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9758c693-1004-46fb-84dc-64d3a72b6cbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11eb8b08-0ab9-4975-a947-61bd92a5cd31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c58a6aed-974c-4047-b9ed-9aa1e6245bfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e95a2b60-560c-4240-ad13-8c710c0e0af1"
                    }
                  }
                ]
              },
              {
                "id": "54dc374a-361b-41dd-a88a-a108cd66363d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "df4fe78a-5a3d-44e5-b341-d04f34da6014",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa625b6e-4f1d-4118-a28c-c55c059c9c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "469f9cb4-e098-4736-b883-532c2504276e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0586e88-388c-4575-bfa6-88007b1bfeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9265d70-8617-4671-a356-08000c08e231"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dcaa2204-a880-4bb2-9005-5addfb61be86",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2214d301-b33b-444e-9886-8cbe515c00cc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d005812-0cf0-4ab0-9802-ccb8e0551186",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "82368ed0-89f3-40e9-b608-22f6f2063d98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1161b49-e690-42e3-9097-a4ddf6cda894",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e920f7f-3588-40dc-a406-c272c8f12f67"
                    }
                  }
                ]
              },
              {
                "id": "e8a69a7a-c298-4ccb-a506-c13a331b29f0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfc51a1a-5724-47b7-a166-ec8fd444530c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6d37388a-069c-4a1b-9972-25e1f64cb327"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efd5fb67-20f6-43c1-95b1-23985aa0577d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1459a8a2-7bfd-433a-bb4f-c2ce1080c1d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e43e028-32a5-4483-8237-9c433605e0fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "72dde908-0803-4671-81c0-50cf293b918d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7b6ec02-aaa6-4e17-8d7b-c67c1ed08760",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ef81da5-6bd7-4be4-b0c5-fa4c8f1c95fc"
            }
          }
        ]
      },
      {
        "id": "9792db4b-63ff-4a32-953e-caadc87701eb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "01a255c7-19e4-4cf1-8b20-4b867d3cce19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "867be7d8-a72f-4adf-b4db-926e7520be67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7254023-f984-4930-b18f-7370c8f55658",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234a91ba-6cfb-4d74-aa9e-23bee8af538e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "37ce9807-4ef7-411a-9c3b-ebeb37cad18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066c62f0-42bc-4d3b-8c05-9e09efa23b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7470430c-e52f-4d26-9287-34c8fbc1a666"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5791b3a6-5b2b-41ff-b8cc-07ba8ef6902e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78606b22-a1ce-4959-8015-e8facc09d299"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17611def-990e-455a-a8ad-f7acb4410787",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82e87f84-4d4d-40dd-a691-5bd00d3e3c97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44d15c5c-5b92-401c-8a56-90032cc53c5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "55be7b71-355e-4b34-9cee-56d00c86b7b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f58b715-10ab-4ebc-ace7-cfc6026ecc03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cac14b87-244d-4ebb-a82c-d35bce8e292d"
            }
          }
        ]
      },
      {
        "id": "8b9160fa-aae3-41bf-81f6-ddf82b2eb8ad",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8a6b9648-3942-429c-9bc1-86566e186e79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "414b4bc9-1bc2-42c1-b613-7a3445bdc713",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8041e0c-4dca-4e38-ba1f-a38f0ae5841d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c31ca8b-f556-48d8-bac5-558745786d25",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3e9654c-d0ae-45cc-bcbe-3404e9d9c99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7355bc4-55c5-4395-afdd-a1ce2a12a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a92b0e8-fc73-4789-a459-42b865a6f23d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cca231a2-cd1b-4442-86fa-004721f79472",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13dc42ea-8bd0-4bc5-a9d5-d2b000e9b01d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89d21a2c-8aea-4bb5-bed7-8805fb5026cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "939edcad-c4f9-471d-8b14-962150303a58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c4fec59-f023-4c56-a781-bca4019b3b60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "99b75b0e-6eda-451e-8ddc-6141432b9145"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11462cc4-0365-4e30-8dc3-a3388dd86094",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "240f5808-6228-4314-a3c4-058d37ae7327"
            }
          }
        ]
      },
      {
        "id": "e922b1e1-9e21-4971-922d-e67b467d7678",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "08911819-56ec-4511-996c-f8cf03ac4eef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5a3a6e9-fb86-4b1d-8236-1441be0ccb58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6c3ad91-728d-4739-a649-30efc456f7db",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60194764-e89c-4ce8-812d-04f5915127f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12791673-99b9-4af8-9abf-6722c69fef80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645890e8-3c9b-4c95-8b3c-fb3d6464036d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c59cfcc-1096-46b3-9dc4-65f240d481a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4142a13-69eb-4a2b-840f-2311404a150c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c71bfc8e-7892-4469-aa80-fe5092099209"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58f069ec-3371-41b6-90d5-da2eb7973abe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e45659b8-030b-459c-b1c0-0eda45aec281"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a68a84fa-66ad-41f9-adf4-325169183eb2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee433f53-d379-4803-aae5-e4e27d820061"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc7aad4f-1d6c-4bb5-9141-fbe54fca144d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c4ce51f-caba-40dc-a789-83dc9d6cf209"
            }
          }
        ]
      },
      {
        "id": "a2d7d40b-3eed-48c3-b82b-96e4738f2f21",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba606ac3-36e8-40b1-a442-c7e74f303fd3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b57ffd3-2247-41fd-b270-979437b9c853",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "425304ae-c781-4874-8f13-7e6f5ab76e1b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5add4150-cc96-409f-998a-b10d9fe4b7ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a3880a6-b1f1-4ee6-8f34-b129f51715e9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 90.719298245614,
      "responseMin": 11,
      "responseMax": 5170,
      "responseSd": 388.0262314512315,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698712440801,
      "completed": 1698712478706
    },
    "executions": [
      {
        "id": "3aceb65c-53ec-4f78-80d6-96fe6b850694",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a18df822-5b10-4c7a-a297-2124d8d91870",
          "httpRequestId": "3c46d12d-3a72-404c-a46c-714c441a65ef"
        },
        "item": {
          "id": "3aceb65c-53ec-4f78-80d6-96fe6b850694",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4bc343b8-b2e6-451c-8f76-89c963bb6e8b",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "922dc850-4be4-4104-b961-6608c847fe1f",
        "cursor": {
          "ref": "1f869a1b-942e-4f71-b9ba-254a418a1ed7",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f3f3d63e-43ca-404f-953d-0ecdf7ab4abc"
        },
        "item": {
          "id": "922dc850-4be4-4104-b961-6608c847fe1f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d650d2cc-4e21-4f65-af6b-b9c218b66ae7",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "9788be70-b495-4426-aa3f-2f2537ad234b",
        "cursor": {
          "ref": "34240f1c-fc81-4bdc-8594-066cf91eeb2a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "70ea4faa-895c-4d95-867e-2df53ff01150"
        },
        "item": {
          "id": "9788be70-b495-4426-aa3f-2f2537ad234b",
          "name": "did_json"
        },
        "response": {
          "id": "19676b00-0940-46cd-8d3b-75fb01914f83",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2626d83e-8e57-4726-a731-1a692db2f288",
        "cursor": {
          "ref": "20533d95-3e90-4e61-b241-eabe2e86451e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "16f51095-1c92-4ed3-a4b0-0a327d4fecdf"
        },
        "item": {
          "id": "2626d83e-8e57-4726-a731-1a692db2f288",
          "name": "did:invalid"
        },
        "response": {
          "id": "897d21d6-9e9c-438e-98a3-27929d3369a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2626d83e-8e57-4726-a731-1a692db2f288",
        "cursor": {
          "ref": "20533d95-3e90-4e61-b241-eabe2e86451e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "16f51095-1c92-4ed3-a4b0-0a327d4fecdf"
        },
        "item": {
          "id": "2626d83e-8e57-4726-a731-1a692db2f288",
          "name": "did:invalid"
        },
        "response": {
          "id": "897d21d6-9e9c-438e-98a3-27929d3369a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e937a5f3-2737-45f5-84ef-32649613d1f5",
        "cursor": {
          "ref": "e89f8bc5-150a-4710-9acc-bbc6e95a67ef",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e68a0bb5-21be-4397-b27d-d6dbc3dae032"
        },
        "item": {
          "id": "e937a5f3-2737-45f5-84ef-32649613d1f5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5213194a-cacb-42ec-929d-142f7a6b9476",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623b774d-4bc6-4aa2-9311-f3faee8c9d1f",
        "cursor": {
          "ref": "2ce7cc0b-20d7-4dfd-a87c-ef67d76ba670",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "938be1cc-048d-4b1e-aa77-18dbe02b1c8e"
        },
        "item": {
          "id": "623b774d-4bc6-4aa2-9311-f3faee8c9d1f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2114f6cd-d2ac-4752-92d7-272076ed19fa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749c8801-5b04-4bc2-ab99-b0759e0ea6b9",
        "cursor": {
          "ref": "d21dbfc6-555a-4928-9755-7f1ea218f62e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6eb242dd-9a8c-45c4-8e42-c628c7c24bb9"
        },
        "item": {
          "id": "749c8801-5b04-4bc2-ab99-b0759e0ea6b9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "63a2247f-07de-40b4-8889-beb31bcc7921",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745a6694-64b5-47c5-8857-4e69adbd62af",
        "cursor": {
          "ref": "47e2a0fb-da58-4a0e-9e86-6d6224facc73",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9b0701f5-39cb-4922-a696-0f26ad6d2202"
        },
        "item": {
          "id": "745a6694-64b5-47c5-8857-4e69adbd62af",
          "name": "identifiers"
        },
        "response": {
          "id": "c060028d-d067-438e-aac2-19baeb2fd4da",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b169a8-8a77-4167-abc1-9a9d177852b1",
        "cursor": {
          "ref": "e379ddf5-12ac-46a6-b7f8-e7d5b6ddfddb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3435704a-9e55-47e3-bc34-69953d40770f"
        },
        "item": {
          "id": "80b169a8-8a77-4167-abc1-9a9d177852b1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "afc353b1-9d5a-4392-bcf6-390bea5df4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d1a624-43bf-4714-8a00-227b5f6554b9",
        "cursor": {
          "ref": "9409ebf5-95c2-4ec4-b9f9-0a1816368973",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7127ded1-9e11-4b46-81cb-4e068890e53e"
        },
        "item": {
          "id": "17d1a624-43bf-4714-8a00-227b5f6554b9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "11cfdad0-51f8-43a8-bf19-39f3dbd7cb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6c76ca-1b27-4797-aec0-50576da8ad9f",
        "cursor": {
          "ref": "7d58f75f-eee6-47aa-82bc-46e464b1ad97",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "87f0e4b9-adc0-4345-b231-722b714cc982"
        },
        "item": {
          "id": "cc6c76ca-1b27-4797-aec0-50576da8ad9f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "34834c6b-be43-4bcd-bf04-d9692eb04017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468aae15-984f-42f6-a24c-99a4f82ddeb1",
        "cursor": {
          "ref": "b416df27-e92a-4197-84c2-a6f621e6c6da",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3b0d4b4e-b2b0-47d0-8eef-57cc9e75f805"
        },
        "item": {
          "id": "468aae15-984f-42f6-a24c-99a4f82ddeb1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "792932c5-24ba-4765-8f64-55f04eb5575a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd0d675-ecc0-482e-a93f-eb8aab935149",
        "cursor": {
          "ref": "38ca186b-3b5f-465b-b006-21425ec56071",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c29d6f9f-fd6f-459d-b769-bf645388c736"
        },
        "item": {
          "id": "3bd0d675-ecc0-482e-a93f-eb8aab935149",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2fdb5f23-1974-41b5-8e1a-27aef7b895b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d457071c-71f9-45a8-b0a0-a00c8a576b61",
        "cursor": {
          "ref": "e275e7b7-458d-4abe-a0f1-6d0babd62b51",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "86a61909-05ac-4a8b-8d5f-70642fb78ea5"
        },
        "item": {
          "id": "d457071c-71f9-45a8-b0a0-a00c8a576b61",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7eb3c729-a290-4397-9a45-16d55a9c4012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df7e15f-9cc3-42fc-b285-3a55049998b9",
        "cursor": {
          "ref": "f276f305-4455-4a76-b792-566bf7d96dda",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d5aebe77-56a4-4e54-bc74-f9d86c164ac5"
        },
        "item": {
          "id": "2df7e15f-9cc3-42fc-b285-3a55049998b9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c9b47339-f7cf-4f9f-af41-7e655ed29180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e489076-1613-4bf0-a8a7-bf90c915b6d0",
        "cursor": {
          "ref": "69d5b1d0-1a93-43d7-bd53-7e19597f4002",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e6716df3-5265-43d2-8476-ea7ad038fae6"
        },
        "item": {
          "id": "6e489076-1613-4bf0-a8a7-bf90c915b6d0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4a1fb1dc-793d-4edf-a51c-070a5afb45de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587e0896-65dd-4ad4-a102-39522c3cf49d",
        "cursor": {
          "ref": "9d55374b-387f-45fb-9bc2-e308be839670",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b2e65ccf-0842-4fcf-98b5-9ee33bb75328"
        },
        "item": {
          "id": "587e0896-65dd-4ad4-a102-39522c3cf49d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "120ba56d-23e4-4708-8400-446f1f4e9ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69641269-12a0-497d-b58c-9d61da21c848",
        "cursor": {
          "ref": "6afbd745-ab33-4680-8962-2f04408019b9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0d285070-dd70-44dc-9c8b-4e3dcd68c1bf"
        },
        "item": {
          "id": "69641269-12a0-497d-b58c-9d61da21c848",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c8cc831b-f125-4777-b6a9-314c38e3e1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411adea0-29c4-48b6-af01-98835e73a21f",
        "cursor": {
          "ref": "bc3a7292-fb7d-4468-8d4e-653c24aa88d5",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "33895c56-8a41-461d-9361-200f317f34de"
        },
        "item": {
          "id": "411adea0-29c4-48b6-af01-98835e73a21f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "de0899e6-de2b-4824-ab02-0622473cb484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99813dd-9039-420f-b886-8ae52cf5ce4d",
        "cursor": {
          "ref": "302ea5a2-0909-4f33-b586-52e652dce929",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a83f254c-ae98-4ac7-a4ca-8a72e83b518e"
        },
        "item": {
          "id": "a99813dd-9039-420f-b886-8ae52cf5ce4d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "35153418-08a3-480b-a2a8-7dde6f55fab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e972c94-0b1a-48fe-8e45-ade0cfa47c2f",
        "cursor": {
          "ref": "c3751134-d4b8-4e58-adf0-4fbc73317c60",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a5ef717b-b992-47c8-a214-de23b1036b04"
        },
        "item": {
          "id": "1e972c94-0b1a-48fe-8e45-ade0cfa47c2f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6816cbfd-c1bb-455e-8412-1a107d4174f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb87f06f-95f4-40c7-85ea-91ce9d33eaf9",
        "cursor": {
          "ref": "3c8d9d61-82c3-48f2-994f-883bd477660d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2403b99f-8c79-418f-a933-15e2ab36cc0d"
        },
        "item": {
          "id": "fb87f06f-95f4-40c7-85ea-91ce9d33eaf9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e360a4a3-56f1-40f5-a751-e35a35ccceb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b96d5b2-6e7f-4053-a667-9aedfd5a96ab",
        "cursor": {
          "ref": "2186db66-0918-4e4f-91b6-346c07ece8da",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "34e7885c-db68-431b-9926-340fb1563d1c"
        },
        "item": {
          "id": "2b96d5b2-6e7f-4053-a667-9aedfd5a96ab",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "89e76b86-68ae-4eb9-9de8-efc0649fe110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba77eca-e431-4daa-bc8f-8c9b2d22007c",
        "cursor": {
          "ref": "1804739e-d65e-4435-ba5e-183dffc63ffe",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "de446be2-b3fc-43cf-9a9e-035cb26f904b"
        },
        "item": {
          "id": "8ba77eca-e431-4daa-bc8f-8c9b2d22007c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e8c8601e-4844-4e46-baa1-752444198539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e4f549-544b-4e1b-8b1b-a6e26339ae4a",
        "cursor": {
          "ref": "57eea03b-8967-4ef7-891a-fcbdb0c454ee",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "34f249a2-1840-4ff2-a58d-bb97995eb001"
        },
        "item": {
          "id": "09e4f549-544b-4e1b-8b1b-a6e26339ae4a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "99a5f5e6-1dbb-442e-9a8f-975d474c4c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bf3837-6d4e-4443-8dcc-2f89c87d1dd5",
        "cursor": {
          "ref": "2ed3882a-db9e-4559-b100-4ef87f89e7c9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f8262e1a-d344-4915-b5b9-cae696973a42"
        },
        "item": {
          "id": "48bf3837-6d4e-4443-8dcc-2f89c87d1dd5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f637047d-4e17-4576-88fc-781d7e4acc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074d9e7d-319f-4975-ac87-1160634cdb40",
        "cursor": {
          "ref": "5147a41b-5f91-4309-bdf9-36123e65f265",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "19111fc7-e3f5-48db-b64b-f0c32d898052"
        },
        "item": {
          "id": "074d9e7d-319f-4975-ac87-1160634cdb40",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f72ec1d2-1e69-49a6-a2c4-b5efe390e662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e1ce49-1ff0-4608-a8b0-39de66efd09e",
        "cursor": {
          "ref": "f5d1bd9d-e58c-4189-8333-04cf6598579e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e76e89c8-2f0a-4731-b45a-3651d50b0f44"
        },
        "item": {
          "id": "b6e1ce49-1ff0-4608-a8b0-39de66efd09e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4c806491-087c-4989-9474-4cdd4d8ebaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb95d2c5-a720-4254-b11d-733bd9e0ecc5",
        "cursor": {
          "ref": "7240f081-db3b-4a8e-9acc-5b52c86e2baf",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "92ffc7c8-c31a-4d86-8b35-10a5ad69e87c"
        },
        "item": {
          "id": "fb95d2c5-a720-4254-b11d-733bd9e0ecc5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "188fcd54-b6f8-4e0c-993d-2d878b9e8a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df13bd61-1d86-4771-aac9-f8faeea3dc04",
        "cursor": {
          "ref": "985eeeb1-d2c7-42b1-8b04-632fec8de0d8",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "39019748-cf29-42f6-ba3e-80c14e77e00c"
        },
        "item": {
          "id": "df13bd61-1d86-4771-aac9-f8faeea3dc04",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5060f0df-394b-4b95-ab83-58dfc59052d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c79e75-f3e4-4f1b-889d-825376a1c64f",
        "cursor": {
          "ref": "9675c7ff-81cf-4777-b648-004c82738fe1",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "28f54dbc-2bb2-46d6-b6a6-d6f9c634d325"
        },
        "item": {
          "id": "93c79e75-f3e4-4f1b-889d-825376a1c64f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "551a2d93-316e-4d4a-be22-80a293559f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6861d29-3306-4dcb-9d2b-5e6032fc56e9",
        "cursor": {
          "ref": "2cb72c9a-76cc-4c3b-90e2-b00e74289962",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f86e28ab-d716-46d9-a3a5-d4a5f14f8edb"
        },
        "item": {
          "id": "e6861d29-3306-4dcb-9d2b-5e6032fc56e9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6ae94707-ae21-4bd2-ad56-863efc698420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c4f1c7-0fab-4e11-b334-75517d266d33",
        "cursor": {
          "ref": "34f007f7-29e6-42dc-a55a-b38b5ef39dc0",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "67430e82-1ceb-4ae5-94bd-c82c6726ffcb"
        },
        "item": {
          "id": "e5c4f1c7-0fab-4e11-b334-75517d266d33",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1e05d58f-e5b1-4043-a843-f8e15efeaece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d6220b-5d18-4f81-af94-06ded7a55a28",
        "cursor": {
          "ref": "874bd2b3-2689-4d4d-8733-89d418d712a3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "51fc9832-8dcb-4d5a-a8ff-5db715034fa1"
        },
        "item": {
          "id": "30d6220b-5d18-4f81-af94-06ded7a55a28",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "da4db8fa-3b26-4450-8af0-e0626ecbe080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c9e16f-412d-46c7-8077-743aa1a5a82b",
        "cursor": {
          "ref": "e3cf2259-7dda-4a4e-a92f-c3f5e265ce57",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "37d3e5d9-794d-47e5-8b83-130d24dbe553"
        },
        "item": {
          "id": "08c9e16f-412d-46c7-8077-743aa1a5a82b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "06782711-bffe-47da-9130-c465ef5263b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87d93c8-aa02-4149-b8cd-6b062b1a0e00",
        "cursor": {
          "ref": "7d20ebcf-7c64-4130-a03b-3fad5ee61ecd",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "54c132cf-790b-4dfb-8c35-94ed396f8330"
        },
        "item": {
          "id": "e87d93c8-aa02-4149-b8cd-6b062b1a0e00",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e6766892-7ba6-4959-ab67-32c207d87909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012a889c-3db2-4535-bae0-3a42a0cadc54",
        "cursor": {
          "ref": "8d017251-5f88-40a2-b305-0ae3ca80e80b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b5e6846a-ea49-4e40-b4cd-f49ef263b1fd"
        },
        "item": {
          "id": "012a889c-3db2-4535-bae0-3a42a0cadc54",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6c146b79-786b-46c9-842a-987f4fb0bbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bc702c-ec26-4166-8f99-12b113f56f32",
        "cursor": {
          "ref": "ac27ee3b-0f4a-441c-9da8-e0bc4b29b523",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "777c4707-4876-4481-b34b-36fc6593a794"
        },
        "item": {
          "id": "25bc702c-ec26-4166-8f99-12b113f56f32",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3206d599-aaa9-4e99-a305-a081b56665fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2f0d49-914f-4993-81d8-d6ff049c79c1",
        "cursor": {
          "ref": "cf8bf8c9-cb53-44bb-94dd-030e417b29ac",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "da4d9220-20a1-4b98-87b5-e47460713b34"
        },
        "item": {
          "id": "2e2f0d49-914f-4993-81d8-d6ff049c79c1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c16aab6d-aa4c-401d-9dcc-ce928289c57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdd4a77-cac1-4473-a19c-59456d0a26a3",
        "cursor": {
          "ref": "a56385ba-0611-48c4-855a-2de7800af0a6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0e35770c-c200-417d-906d-efe784bde683"
        },
        "item": {
          "id": "cbdd4a77-cac1-4473-a19c-59456d0a26a3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3ab840eb-930e-41bf-943b-bbc4b9e8318f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f49435-22c9-4bd3-bb48-14a6dea65833",
        "cursor": {
          "ref": "ce33e39d-21e7-4523-9f70-9860a8dc1022",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bd062feb-dfb7-4f40-8d84-e590eea7e416"
        },
        "item": {
          "id": "86f49435-22c9-4bd3-bb48-14a6dea65833",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "90d47c5a-3495-487d-8e08-937e1bef335c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481609c7-d258-4795-8075-f0f360d917a7",
        "cursor": {
          "ref": "4b62b3dd-0b1d-4e1b-ae36-9a10f24b7a6e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "90a01147-edab-4402-8b09-bf20271f64e4"
        },
        "item": {
          "id": "481609c7-d258-4795-8075-f0f360d917a7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b1f0e884-d7d4-44ff-9e3f-2cb949035888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbe9984-272e-4955-a60b-69968d578d4a",
        "cursor": {
          "ref": "76b3a961-b390-4891-b2ee-1970aec5b334",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "be1bd3fd-c891-4078-9ef1-1aca6f3da5de"
        },
        "item": {
          "id": "0fbe9984-272e-4955-a60b-69968d578d4a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ad02b6a1-d674-4c2e-a8f2-fba7b8226fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4633e9ce-aaf3-4e50-b1d7-1646b64d8dbd",
        "cursor": {
          "ref": "cd0b0e64-6560-49d9-8508-11fa3acf81cb",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "131297a6-1319-4e93-8c64-16dfedd34791"
        },
        "item": {
          "id": "4633e9ce-aaf3-4e50-b1d7-1646b64d8dbd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9f336383-fe81-4a11-93ef-b1b126e9412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e54e78-059d-4cbd-ab20-df0c809f59e0",
        "cursor": {
          "ref": "bffb935a-b24f-4a7d-bef3-9d7f27b32d56",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e1c06ac0-785f-4cdb-8a46-ccac163e5a74"
        },
        "item": {
          "id": "f3e54e78-059d-4cbd-ab20-df0c809f59e0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ee8dadb3-2b47-4e4e-bf8b-2c375f9416f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35800d1f-09ef-4ac0-b88b-2471280ac292",
        "cursor": {
          "ref": "32b1c4ef-edf9-489b-a497-da83ff6f86ca",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d3e7e28f-992d-4be5-a3b9-4ba367d67c06"
        },
        "item": {
          "id": "35800d1f-09ef-4ac0-b88b-2471280ac292",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cd9a034d-d768-42ee-918e-8671b0dc3fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55f9632-d41b-4157-a9b7-fb92ae7b01de",
        "cursor": {
          "ref": "b1cdbd64-ae41-4c97-ae29-cfa3b82e7e06",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e5a809a8-8df8-4d1b-9e52-7045793e0e13"
        },
        "item": {
          "id": "f55f9632-d41b-4157-a9b7-fb92ae7b01de",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9bf01948-3bc1-4fb4-a1ce-1b4c0388d5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f4c670-bbd6-4648-b636-40526af323a4",
        "cursor": {
          "ref": "50078775-7734-49ce-a0b3-09d2c0e86766",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f4067fda-c27f-462b-9e3a-c773a57995f9"
        },
        "item": {
          "id": "69f4c670-bbd6-4648-b636-40526af323a4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5efb1f6a-0f89-4a04-a734-cae03534b8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3421051-05a9-4487-8cb5-b3038798c911",
        "cursor": {
          "ref": "af2b8d22-29ae-4c19-ad40-ca264c94a808",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7b58228d-71de-40dd-958a-893d73b0e528"
        },
        "item": {
          "id": "b3421051-05a9-4487-8cb5-b3038798c911",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9a3c3ccc-177d-4cc0-82de-d3206ceb542c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c4053e-8bd7-4e6e-ada5-1c20612118b5",
        "cursor": {
          "ref": "dd950f4e-83b5-472b-8956-6b3edca027c8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "211329e8-5fdf-4ac9-a7e9-0adc8008a412"
        },
        "item": {
          "id": "96c4053e-8bd7-4e6e-ada5-1c20612118b5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b7a536dc-cfcc-4900-994d-c3f2c006b5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11567c82-06ad-4f52-bb84-82535aa44cce",
        "cursor": {
          "ref": "ad81fa97-6f8f-40ed-bb33-a04ea1b5f040",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3678b7dd-f81d-42c4-b86d-baae593216c2"
        },
        "item": {
          "id": "11567c82-06ad-4f52-bb84-82535aa44cce",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "542626e5-e0f7-4805-8bd3-301f71925cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee788ee-ca3e-4442-93dd-b3e64a87e23a",
        "cursor": {
          "ref": "bda823fe-9679-472c-be56-005da0cfc8d2",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "960bf68b-d672-4ffd-ba8e-4baf337ee9d4"
        },
        "item": {
          "id": "eee788ee-ca3e-4442-93dd-b3e64a87e23a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e076ea61-f73d-4dc5-9692-7d74bf76bb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e8176a-97e9-467e-8d4c-365243a8dd4f",
        "cursor": {
          "ref": "af8c316d-31b6-4d48-86d2-5211fe4a7903",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d295c105-f04e-4ddb-ae25-7348c649887e"
        },
        "item": {
          "id": "e3e8176a-97e9-467e-8d4c-365243a8dd4f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a9ff353b-2f71-4956-9545-d92d6782bec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce7972d-0d23-4b9d-ba50-5b1987c7ba9a",
        "cursor": {
          "ref": "13daf384-8542-4b79-abc8-5cf8490468c2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "68d86907-b0b9-4b77-a847-d0cb8a88f0ba"
        },
        "item": {
          "id": "7ce7972d-0d23-4b9d-ba50-5b1987c7ba9a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "37fd9dec-acea-4a74-89de-98326e798938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286ce4b2-99f3-407c-94ab-9354670c1e7a",
        "cursor": {
          "ref": "5c88e9a5-4b52-4cef-85ac-7d7c56672727",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f0f37eca-11c4-44e8-84dd-f5e90131098b"
        },
        "item": {
          "id": "286ce4b2-99f3-407c-94ab-9354670c1e7a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2768130e-78ea-45fc-8bd9-33ea087fa2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fa5c89-055b-4eb6-990d-6972cd4f1ca7",
        "cursor": {
          "ref": "52f139bd-3de3-4f2e-ad7f-9df816765595",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "53fabf2e-eaa9-4735-8d1a-b2c1d4d7a44a"
        },
        "item": {
          "id": "26fa5c89-055b-4eb6-990d-6972cd4f1ca7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b85a4e00-7154-43e2-aa49-b34eea39acdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5bfaa2-c877-4b60-9b7e-be9cf1a39905",
        "cursor": {
          "ref": "26a4658c-9e55-4982-921e-2c14f876338d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "068b189d-bd09-45d1-a6bb-6202faa8e356"
        },
        "item": {
          "id": "2d5bfaa2-c877-4b60-9b7e-be9cf1a39905",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ad8eb6f0-db2f-40f9-a15e-5c672500c757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5429b016-5b9d-4880-9961-9754ef8ce70f",
        "cursor": {
          "ref": "2224df46-4264-4f7f-b0ca-176c7226cf90",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "462d14a8-457f-4354-be64-ef4bec386743"
        },
        "item": {
          "id": "5429b016-5b9d-4880-9961-9754ef8ce70f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "09f70079-b6a4-420c-848c-c486408d1aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b91c66c-90ca-4f4f-ac84-73425909a574",
        "cursor": {
          "ref": "16c69e2a-7c69-471a-95c3-a56372c847dc",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b01ac0bb-4a82-467e-8c2a-866419a60ae1"
        },
        "item": {
          "id": "2b91c66c-90ca-4f4f-ac84-73425909a574",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a1b133ed-05b2-47f6-9a9e-b383ad567c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a683f624-54fa-4de1-9951-3cb5da88974f",
        "cursor": {
          "ref": "7436f4c8-49f2-47c7-9e9f-7117677f2010",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c791a0eb-ec2b-443b-b4d3-b5747a6d8963"
        },
        "item": {
          "id": "a683f624-54fa-4de1-9951-3cb5da88974f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dec8f1f8-3dc2-4f45-b521-399d19bad511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bad7d15-9af3-4e03-a95d-451c24c2353b",
        "cursor": {
          "ref": "c6aa1ce0-5cbe-4f58-bea2-c554a5c04373",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "85ff8302-1820-4fe4-8c40-81ba816ced01"
        },
        "item": {
          "id": "5bad7d15-9af3-4e03-a95d-451c24c2353b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ea12ae7e-c1bd-4156-bedd-da53b4f32085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb980ca9-9171-4cc6-b65c-d9e94e07b83a",
        "cursor": {
          "ref": "b8f625ca-781f-458d-a152-13f89a9b6530",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b8d41a9d-8e15-42d6-879c-13b0be61340f"
        },
        "item": {
          "id": "eb980ca9-9171-4cc6-b65c-d9e94e07b83a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "215d4c01-63ac-4817-8ee0-33ace7d8fc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85c8ea4-6c4e-44a6-9ea5-7379a03262f7",
        "cursor": {
          "ref": "0b7d0a0f-1f0b-4d6d-9413-34c1bb92b5e1",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c73d52d3-3d07-4900-8180-d758e5c8a1e4"
        },
        "item": {
          "id": "f85c8ea4-6c4e-44a6-9ea5-7379a03262f7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5651caa5-f43e-481d-9bc8-dc54d2409d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a0c91c-07fa-43e0-8e90-26953d3ea73b",
        "cursor": {
          "ref": "6b19483b-7582-4620-bdd6-50e0809228c7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "95864ff7-e2fa-4580-a5c4-da68fe23f07b"
        },
        "item": {
          "id": "a0a0c91c-07fa-43e0-8e90-26953d3ea73b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7e517ab7-977e-49a8-8118-e3cf811062ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa983ea-71ca-4844-a31d-52251ddfdf55",
        "cursor": {
          "ref": "43ca9070-ba4e-495b-b937-a92847cae8e8",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2d2b46cd-5709-46d8-8dae-b2d441e1039f"
        },
        "item": {
          "id": "9fa983ea-71ca-4844-a31d-52251ddfdf55",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7f50da8b-c4de-49db-a9f3-d24e93388179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b83e4bd-eab5-4180-9d82-aa8022ad6cdf",
        "cursor": {
          "ref": "69c71ba2-c84f-45ea-a5c4-b8ee1370338c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "79ea8a15-1ba4-4530-b290-d815b4769234"
        },
        "item": {
          "id": "6b83e4bd-eab5-4180-9d82-aa8022ad6cdf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "12c0f2ae-be96-4749-8d2f-dacecee4fa9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2705bd98-d911-4215-a2ce-aa4a18cfddd7",
        "cursor": {
          "ref": "763d839d-e3a2-41ab-af22-a7162a092c81",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "94526e53-9741-4a76-b31f-789e4b00b665"
        },
        "item": {
          "id": "2705bd98-d911-4215-a2ce-aa4a18cfddd7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ba028103-4787-46cb-9806-6904eb6e4127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0af4951-597a-4815-a3c2-74416d64d900",
        "cursor": {
          "ref": "f0939d25-33f2-44ae-ac6e-7bf63b56112f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "10c17433-fff0-42b7-b5b4-b652c450a9ac"
        },
        "item": {
          "id": "e0af4951-597a-4815-a3c2-74416d64d900",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "394d7196-b6d7-45db-a78a-ba83b6288756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7417715-9de3-4756-ab38-bbd1ffc74a3e",
        "cursor": {
          "ref": "89978888-bbff-4638-a6ba-aee42abb4f82",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cd96b026-54ed-4644-bdca-5e853366b53a"
        },
        "item": {
          "id": "f7417715-9de3-4756-ab38-bbd1ffc74a3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e70cc7f1-8b92-4ca6-90a4-63d0d4ac1161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e72895-9807-4ec5-83ad-2c2a1a926de5",
        "cursor": {
          "ref": "e134f2a0-28d7-4362-9d2f-13b6efec9cd2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "45bf6ffe-9908-40b8-96ce-70abeda5656d"
        },
        "item": {
          "id": "03e72895-9807-4ec5-83ad-2c2a1a926de5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7b0c84cf-900f-4d51-a89a-e4f18de70614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba125647-4e61-4595-b371-3565d026469d",
        "cursor": {
          "ref": "50d16528-12cd-45f9-9829-2989f2109f07",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e04bca78-80a0-4306-958e-628752a552d2"
        },
        "item": {
          "id": "ba125647-4e61-4595-b371-3565d026469d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1b3eee16-795e-46e5-81b1-f28ff1107dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406253c4-efc4-44ef-9dde-66322b4871af",
        "cursor": {
          "ref": "b7d5e48c-b7b2-4692-bb93-de971612da31",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "09091703-e891-4a36-bdd5-6b523fab9302"
        },
        "item": {
          "id": "406253c4-efc4-44ef-9dde-66322b4871af",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cf3aeabb-a3d7-4224-87ac-0849e461f760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fb8223-f3e6-45e4-98d4-55a0192e07ef",
        "cursor": {
          "ref": "0fa144f9-f2e4-4943-a9df-fd916c9a11eb",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "46c8bedb-b5b1-4fb6-b683-44eda71a9b09"
        },
        "item": {
          "id": "b9fb8223-f3e6-45e4-98d4-55a0192e07ef",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "583ede29-b296-4afa-8de2-1ac42479ae8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cc5d8d-0e58-44be-82ce-4071cb421c7f",
        "cursor": {
          "ref": "1d69bc71-ea3b-4711-bd15-f8f33e6a2dbf",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "99293d12-0970-4856-a4c2-28124ee8fc02"
        },
        "item": {
          "id": "61cc5d8d-0e58-44be-82ce-4071cb421c7f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "438c5c27-6630-464d-84b5-afaee2ed61ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc189f7f-d78b-4770-b39e-25336940610c",
        "cursor": {
          "ref": "23b3f12c-89b5-4c7d-a4e2-5ff360784185",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "74acd887-c784-4eb5-b3e0-632ca2d5d06a"
        },
        "item": {
          "id": "dc189f7f-d78b-4770-b39e-25336940610c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8622ab5e-f683-4582-933f-fa0d997dbf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3cb1ed-b324-473b-b51b-f1eb3d8f70cb",
        "cursor": {
          "ref": "bf52cc71-998e-44fa-baa7-995c328535f0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7461ca42-d8b9-4518-bc9e-b28f0dbfd08c"
        },
        "item": {
          "id": "ae3cb1ed-b324-473b-b51b-f1eb3d8f70cb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1c9c18e3-fdf4-46a4-aad2-8f7e4c43a43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9141e270-c2ac-404b-8c48-9175898088e6",
        "cursor": {
          "ref": "171fd9cd-d991-43eb-a912-c82aedeaccb4",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8f170170-b57f-4e88-9547-10928131fb53"
        },
        "item": {
          "id": "9141e270-c2ac-404b-8c48-9175898088e6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6a032d70-7db4-41fb-8b1c-98ed094f6861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cef1b75-3852-4496-a9ab-6fb2a3080944",
        "cursor": {
          "ref": "4f7656b4-38d1-4a54-b70c-a7715cd9bf8b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "56f51d72-deb7-495b-aada-69159548f17f"
        },
        "item": {
          "id": "3cef1b75-3852-4496-a9ab-6fb2a3080944",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "943cf869-b6c5-4547-aa9c-c92df9334276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478b3de7-bc83-4f2b-a917-c6c59a0c4ad5",
        "cursor": {
          "ref": "bad5610d-7a51-4983-a31a-3ce435173985",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8bee4fab-596b-42e9-a1ae-6e11267d004f"
        },
        "item": {
          "id": "478b3de7-bc83-4f2b-a917-c6c59a0c4ad5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8ad3b163-480f-4da5-a1f4-5484886ad8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d84812a-8b42-49e7-ace7-a32857f36b6c",
        "cursor": {
          "ref": "2fb7ca6a-425f-4b15-a771-4741f81e43df",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b0ae88e3-3a19-41cd-af25-d26e89896435"
        },
        "item": {
          "id": "4d84812a-8b42-49e7-ace7-a32857f36b6c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d673cdc1-607c-4020-b034-0123dd8ccc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943515fc-f4e9-4440-b632-52af710171f6",
        "cursor": {
          "ref": "08dfc1d7-0dba-4746-96b5-80706e54119f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f7e5652b-703a-4cf6-bba3-662b285c88ac"
        },
        "item": {
          "id": "943515fc-f4e9-4440-b632-52af710171f6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "49637986-ff03-4167-8a41-257ececad820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c74e0f0-3f83-4091-8812-f9da89a9f287",
        "cursor": {
          "ref": "e8505d7e-e0b8-4e72-9ebd-c47cbffb2618",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "822218ad-5ee8-47a9-949e-95759753aba2"
        },
        "item": {
          "id": "4c74e0f0-3f83-4091-8812-f9da89a9f287",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "34f2153b-a5a4-48b4-9c59-d5e10d2e16e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37e77de-0706-46b0-9089-2416ae4bdb04",
        "cursor": {
          "ref": "cd9f9961-461b-4cbd-91ba-ad28921b43c2",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b46cda2e-4aee-469a-aec5-fb32a9685b2d"
        },
        "item": {
          "id": "d37e77de-0706-46b0-9089-2416ae4bdb04",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6032e641-dbdb-45e7-a93f-be06484bc3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addd55c4-2922-4683-ae20-4982ebbd176e",
        "cursor": {
          "ref": "8243468d-1e53-4f6e-bb34-15e129dbe41a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d8b77b76-5299-42cb-a9e9-a96b3691b248"
        },
        "item": {
          "id": "addd55c4-2922-4683-ae20-4982ebbd176e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ec78113a-c203-4152-991b-3384a84d193e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf229fd0-7f05-4642-a2cf-0d076a299a25",
        "cursor": {
          "ref": "3f602a9b-9f2f-48f4-8803-5f53a587fbea",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cd089000-1896-40cb-ad5b-b64eff383038"
        },
        "item": {
          "id": "bf229fd0-7f05-4642-a2cf-0d076a299a25",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "839d0a0c-8380-4655-94d2-f8952347f299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a49810-06ef-4791-8682-f0be4721d9f0",
        "cursor": {
          "ref": "411abf46-653f-48c2-a30b-6dccb15f3fec",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cdf4153c-9241-45ba-ba88-9e8003259b5a"
        },
        "item": {
          "id": "e8a49810-06ef-4791-8682-f0be4721d9f0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "339170dd-e357-40c6-8e3c-472a8985f340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d192845-99fd-48f3-b28f-db40ee059559",
        "cursor": {
          "ref": "61d77e14-710c-41c8-99da-b6fd8be94cca",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "41aef4dc-c9e1-4ec0-952d-7716e26209e6"
        },
        "item": {
          "id": "5d192845-99fd-48f3-b28f-db40ee059559",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0602b2f5-550e-4fbd-8bbc-6f6549b3a00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1d9a08-b0b2-426d-b3d5-ad9fc02ba58c",
        "cursor": {
          "ref": "fbc91f48-3066-44bb-b84e-74a4e16d9c37",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8576acab-d34a-4032-879a-368ccc056b20"
        },
        "item": {
          "id": "da1d9a08-b0b2-426d-b3d5-ad9fc02ba58c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "18d2ed1b-2d28-43f0-a978-73daaeff7fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7e9fe3-9aed-4a8d-a649-e3c3aab2998d",
        "cursor": {
          "ref": "c334e8f6-4508-412a-a2c6-1acfd946d882",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "42e2f132-b4a1-4920-b2f5-c2279357d16c"
        },
        "item": {
          "id": "ee7e9fe3-9aed-4a8d-a649-e3c3aab2998d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "66f33ac0-eccd-4e59-adf4-60715a996d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9043ca28-8297-4fbc-aea1-574ea1304062",
        "cursor": {
          "ref": "9d1ec137-7c5e-4398-a266-9a2c5cf5340e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7d68c596-3f78-4c33-8544-5a66d0f1ed44"
        },
        "item": {
          "id": "9043ca28-8297-4fbc-aea1-574ea1304062",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d6f2bc26-84e8-4217-a67f-1289456f3ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fa2a53-104b-42d2-9910-51272be12fad",
        "cursor": {
          "ref": "086d2b8b-3f1d-4d78-af2a-098133c3e33c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b227bcd4-2339-4817-a0bc-2094e40e3103"
        },
        "item": {
          "id": "94fa2a53-104b-42d2-9910-51272be12fad",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8f7b4305-0460-4c41-87db-00ed6271646d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3d2587-1018-47b6-a95b-2226d414a6fb",
        "cursor": {
          "ref": "ef29bbf2-2a77-4293-aca1-9ef846627576",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5223f93f-b5b8-41bf-9d42-fa143605551a"
        },
        "item": {
          "id": "1a3d2587-1018-47b6-a95b-2226d414a6fb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cd9eece0-474b-4bbe-90ed-643775ff0a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7868f9df-6717-4831-8567-45d9acac7b98",
        "cursor": {
          "ref": "0a23a4c6-ccfe-4c65-9bb5-132b97ecb2f0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fcd2b568-a263-4eaa-81c7-1bf8fcff0eac"
        },
        "item": {
          "id": "7868f9df-6717-4831-8567-45d9acac7b98",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b5d06c8b-98de-4211-8817-627d0af150ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f24c534-5e27-4ba0-86b5-eba9d3e97f29",
        "cursor": {
          "ref": "a62077cf-9293-40a0-8d62-9052ab8e27b6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "183bb5c8-90af-42ea-adae-1c1cfbfb5418"
        },
        "item": {
          "id": "3f24c534-5e27-4ba0-86b5-eba9d3e97f29",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "01799e30-798f-4b38-97be-80e7919d842a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2aac812-8fae-45e0-bc95-bdcecc95e093",
        "cursor": {
          "ref": "85907cf4-986f-4ccb-b716-c81425ac67dd",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3ae5224c-6bd7-4490-915c-97f3cbdaf838"
        },
        "item": {
          "id": "c2aac812-8fae-45e0-bc95-bdcecc95e093",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0d0767fb-2c31-49c4-9f18-17287c337b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938716c4-51d8-4c49-8184-792235c3c3e8",
        "cursor": {
          "ref": "cba5d294-6c9e-472a-8395-6c004a4a2055",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0a04f78f-7014-4e2c-a1dd-0bb36cafee11"
        },
        "item": {
          "id": "938716c4-51d8-4c49-8184-792235c3c3e8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bbda093a-33bc-4f97-8941-3252927e7d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f693823-b12e-4df9-b412-3492bb528a56",
        "cursor": {
          "ref": "011102e6-ce25-45be-b052-860755688c62",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5bfba1fd-bf4e-459a-b277-06765041d711"
        },
        "item": {
          "id": "0f693823-b12e-4df9-b412-3492bb528a56",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a645df28-b62e-46ea-8bee-25186953e702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46748b4a-b65b-4734-b96f-e30be97834cf",
        "cursor": {
          "ref": "4b192dc2-7c77-401a-b0a4-35fc5e1afb65",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "44b8b874-d0d0-4575-ad59-66b6a3243d95"
        },
        "item": {
          "id": "46748b4a-b65b-4734-b96f-e30be97834cf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1c81940b-1b70-49e1-81dc-ed4856747f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff59b3d-aafd-4f10-8dec-3745e5de0b86",
        "cursor": {
          "ref": "dbf34fb5-177c-403f-a8c9-03b50c88f533",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "60a7c298-02c4-4ae3-b8d3-59498038eec1"
        },
        "item": {
          "id": "0ff59b3d-aafd-4f10-8dec-3745e5de0b86",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ba6ad3cf-af66-4949-b6d1-9087b735c391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5329fbe1-d4c8-4df0-b8ce-c8f276c4155b",
        "cursor": {
          "ref": "b0b31e04-b31d-4cc2-946c-9033d19ea713",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "86ac29cf-c8e5-4f52-bb85-3a1026c9173b"
        },
        "item": {
          "id": "5329fbe1-d4c8-4df0-b8ce-c8f276c4155b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "36eea2c9-19bd-4dbb-88a2-17bb66fb22b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8336ce2-43c2-4855-82c1-cb3151b3f393",
        "cursor": {
          "ref": "0866181f-c5e1-41b9-a06a-5da39ac34bb9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "df6515e5-3209-4807-80e4-bcf9b9bc0f47"
        },
        "item": {
          "id": "e8336ce2-43c2-4855-82c1-cb3151b3f393",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "59311955-15e1-4bb3-8b6d-592412335fa7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178c25ee-8d93-4af9-9464-eaf90b18bc0a",
        "cursor": {
          "ref": "ba354178-0693-486b-a4f1-ac04615b1ef9",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4052ce0a-867b-44e5-9f2d-69f2488b042a"
        },
        "item": {
          "id": "178c25ee-8d93-4af9-9464-eaf90b18bc0a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "92699913-3fb0-4faa-bd60-492ad659be2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "46311bc8-7d12-4d86-9073-dc18f4dd0eed",
        "cursor": {
          "ref": "567e06b5-411e-43c3-8aa7-2cc6c1d0399e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "898b9a41-a5ff-4dfb-8caa-5732ce645d66"
        },
        "item": {
          "id": "46311bc8-7d12-4d86-9073-dc18f4dd0eed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1bb610dc-e92f-463a-a9c6-edb7c36054b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "2d03cc60-370d-466a-a225-35986df8e712",
        "cursor": {
          "ref": "1353a8d8-133c-4e1a-a514-3b0596eeb13a",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "62f02445-9240-4344-977a-2e3514270f01"
        },
        "item": {
          "id": "2d03cc60-370d-466a-a225-35986df8e712",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "29e26eba-8f66-4713-af82-9052d4253eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2c14dcf0-3bc9-4f94-bf22-626a30745f85",
        "cursor": {
          "ref": "fc2fee08-7095-42c3-b94e-8bb2d92ae6bf",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e007769e-65f0-48cc-85e9-a2ab79446074"
        },
        "item": {
          "id": "2c14dcf0-3bc9-4f94-bf22-626a30745f85",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4b60f5f7-b465-462e-8c70-695847a93627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c8697b06-c107-4fb0-a4ce-4bef741f8de1",
        "cursor": {
          "ref": "00338449-11fd-4692-aa41-7a092207c811",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "165d0c7d-8b78-4cf9-88f3-579af89cddd3"
        },
        "item": {
          "id": "c8697b06-c107-4fb0-a4ce-4bef741f8de1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7cbabba8-c8d2-4e66-9ecf-c7ba91c60d42",
          "status": "Created",
          "code": 201,
          "responseTime": 5170,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e60a51-c59a-447a-8b12-aba22bbf2a7e",
        "cursor": {
          "ref": "cae05769-c390-4f35-811a-e1cc01f77b1f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8ff7a564-025f-4bbb-a365-b025aa46f781"
        },
        "item": {
          "id": "e6e60a51-c59a-447a-8b12-aba22bbf2a7e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bbc2b1f2-eb95-483c-9cba-dffe4fbb648d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d6300814-0a17-4083-8b34-5ccc54ca34a5",
        "cursor": {
          "ref": "13d4a1fe-35ad-4b44-a69c-32199664bb37",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a8fb70ef-f1d4-4be0-ab1b-f66c61fb5ff2"
        },
        "item": {
          "id": "d6300814-0a17-4083-8b34-5ccc54ca34a5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1de86935-d318-4407-a882-4c75f08c2816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a51553c1-b59b-436d-b328-fa9cad30bffc",
        "cursor": {
          "ref": "14769caf-3f5c-418e-b469-782ed47e3533",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "425ab07f-0949-49cb-abe7-c03826d4c74c"
        },
        "item": {
          "id": "a51553c1-b59b-436d-b328-fa9cad30bffc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4d8b3a31-7fe9-4caf-96e4-306fc0a1ed97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1984edd8-caf3-4432-bf63-06e65896b44d",
        "cursor": {
          "ref": "bca7cec3-9daa-4f64-9e65-94ef2b4e298d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8c9e9970-65ae-459f-9bde-3dccb24d1965"
        },
        "item": {
          "id": "1984edd8-caf3-4432-bf63-06e65896b44d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "13c2a7c0-9382-4a4f-b606-997ef9c41cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc454edc-fc0a-461d-b7ee-8a31be7f4f98",
        "cursor": {
          "ref": "a579eca1-e0fd-47da-9a4d-66efd3323069",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "56a70322-dec3-455f-b47a-896aa1d32f29"
        },
        "item": {
          "id": "dc454edc-fc0a-461d-b7ee-8a31be7f4f98",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1e78d181-ee15-4764-b009-e6322382f251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b97aae3-621b-47fe-8032-378840dc0ce3",
        "cursor": {
          "ref": "36616d82-a423-4d73-a6ba-08a68c16a70e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7026f9d9-fc8c-4ac3-b124-cc073121a81a"
        },
        "item": {
          "id": "5b97aae3-621b-47fe-8032-378840dc0ce3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c6805749-7388-45dd-a439-83002d110af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707032a9-0072-40da-82fb-c665156a89c7",
        "cursor": {
          "ref": "ac05939b-994b-4be7-abc6-2ca857947728",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "44433059-666e-41a9-aaab-694cd027ecc5"
        },
        "item": {
          "id": "707032a9-0072-40da-82fb-c665156a89c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1efcbe1b-4f67-4185-90f0-73af5204e77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466e5b8d-8b4b-4c5e-9a9c-3f1b805ea132",
        "cursor": {
          "ref": "48e19413-3048-4005-a5a2-6473184018ea",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b4034e46-4d1c-47bd-9f4c-a3350fdbe0cf"
        },
        "item": {
          "id": "466e5b8d-8b4b-4c5e-9a9c-3f1b805ea132",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d0cb7ba3-f15f-441e-8fc9-06ff3be04fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38acca77-c9e5-432a-b489-059c007070c7",
        "cursor": {
          "ref": "f34b672b-96d3-4e79-95b7-5356cc5522a9",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "23b4f007-2216-4cf6-ac59-f2d253997314"
        },
        "item": {
          "id": "38acca77-c9e5-432a-b489-059c007070c7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "92376749-d0d2-4b2a-95c6-162fdad81590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b664e4-8dad-4235-a259-84fb553f180e",
        "cursor": {
          "ref": "68bbcc06-1000-43c2-8722-8e4ad95e691d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2c6c4a75-999d-4913-844f-88c07068c998"
        },
        "item": {
          "id": "53b664e4-8dad-4235-a259-84fb553f180e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0a314999-ca79-43bd-8e77-13da183e3bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f532657f-8b4b-4afa-9467-21de5040b6c4",
        "cursor": {
          "ref": "e478be71-9135-45e0-a6c8-4952f41cd172",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a55da3c1-079b-40f6-8a04-c1129c3b143e"
        },
        "item": {
          "id": "f532657f-8b4b-4afa-9467-21de5040b6c4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fdfbc4d2-5e4a-4b70-a08f-34b4fff6af94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9425388a-ace8-4007-8456-f710953c6e25",
        "cursor": {
          "ref": "bd9ff900-7572-4ccb-9fd8-f965fe865e11",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5c6ec6d0-fbba-4393-86fe-fe488ae0ccd4"
        },
        "item": {
          "id": "9425388a-ace8-4007-8456-f710953c6e25",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3959e10a-bba3-4a3e-a78a-db53fa99df2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0ddf3d-e5fb-483d-b7c3-d8a964c82105",
        "cursor": {
          "ref": "353311b1-52b0-4a4d-bb9a-b6a744350940",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8ece2d69-c8a7-4bac-a681-d7267c0e628e"
        },
        "item": {
          "id": "6b0ddf3d-e5fb-483d-b7c3-d8a964c82105",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "50a62595-cfa1-4d62-9c31-7cc9e934f986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dcea4c-0b0c-460d-93bd-2a2b54da16d6",
        "cursor": {
          "ref": "97efc06e-882d-4df2-9b17-68053aabe4df",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8e8889f5-c321-44c2-8ce2-39234a5f2e05"
        },
        "item": {
          "id": "39dcea4c-0b0c-460d-93bd-2a2b54da16d6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1576651b-776b-480d-be3d-69537181a9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f98e66-9928-44de-a4a2-09b072a1421e",
        "cursor": {
          "ref": "1026826f-034b-4298-8b70-b66f11436955",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e63aecd9-abbe-4c74-809d-338e3b78bae9"
        },
        "item": {
          "id": "26f98e66-9928-44de-a4a2-09b072a1421e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "04334f0a-4778-4c93-845b-60eaa3849cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d21138c-a9ac-458f-8b42-becf6e60d2e2",
        "cursor": {
          "ref": "10f56bb4-d4d5-4a4a-9160-67888ef1b928",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ad120770-ae6c-4d55-8d1a-d66fa7298ab4"
        },
        "item": {
          "id": "0d21138c-a9ac-458f-8b42-becf6e60d2e2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1c76e915-8b07-40dc-bd2a-aeb2fff9ff71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b654d9-5677-42aa-9a66-4af99e508253",
        "cursor": {
          "ref": "7ef82ec4-a600-4c0a-8c5c-dfdd509b5912",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a96dcc37-28a3-47b3-8429-1529b15257f2"
        },
        "item": {
          "id": "34b654d9-5677-42aa-9a66-4af99e508253",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e648ead5-f3ca-43b2-9332-e9f1a2121e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede6aef4-6952-4d6b-8e26-8b7211a4f121",
        "cursor": {
          "ref": "daf90e97-31e2-4d67-90be-6738294e3531",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e7063b8e-a4c1-4485-b36b-1976eb8baccb"
        },
        "item": {
          "id": "ede6aef4-6952-4d6b-8e26-8b7211a4f121",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4fd87a1a-454f-4121-9d4b-0a4d916ff953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541bd061-89b5-473a-9b90-b9dad06fbb6d",
        "cursor": {
          "ref": "276490e5-17a2-417f-98fd-949042f56f53",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d22d71ca-f5e8-47d2-a19b-a0fb6bf24a2d"
        },
        "item": {
          "id": "541bd061-89b5-473a-9b90-b9dad06fbb6d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "def23b27-c67c-4760-9839-2e1421204a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6595803-bf51-4e86-872d-86d1e36e24e7",
        "cursor": {
          "ref": "8a37fbd8-a47f-407f-8c5d-6393ca9b742f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7459c203-af83-4f9b-8852-880812e263a1"
        },
        "item": {
          "id": "c6595803-bf51-4e86-872d-86d1e36e24e7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d97e3811-20b0-40ac-8ee1-2eb322f88af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8a4c7c-84aa-49f5-820a-38689eb9f743",
        "cursor": {
          "ref": "dc209c4f-d252-4ffa-a59a-7f020baaea47",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e92c4704-7e18-4953-a1af-bea906dbab26"
        },
        "item": {
          "id": "9f8a4c7c-84aa-49f5-820a-38689eb9f743",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8ec8edd5-7db3-44c8-bcf5-d86dc7c07f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fe46ef-48e9-42ea-bdc3-adf8c07927bf",
        "cursor": {
          "ref": "46d642bb-d3c9-413f-bae9-bfff10b23fce",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b0ebd16f-06d9-4621-aee8-470d923ccaaf"
        },
        "item": {
          "id": "56fe46ef-48e9-42ea-bdc3-adf8c07927bf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "24132fbc-329b-4895-9f2e-5ec59c0f5403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063b49ef-2f36-4e4f-9da1-d8aa78fc6016",
        "cursor": {
          "ref": "cce3308d-8ebd-45f5-b830-07358d35c4bf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "da6956a6-ce94-4333-a724-f181dd272a99"
        },
        "item": {
          "id": "063b49ef-2f36-4e4f-9da1-d8aa78fc6016",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20203101-2e7a-468c-bbea-bf55b9b0d5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec663572-2543-46d8-91c9-3430f50f438b",
        "cursor": {
          "ref": "2535f60c-925f-42bd-84b5-d546825d19d1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d3608333-16d5-48be-be8d-356207ebafdd"
        },
        "item": {
          "id": "ec663572-2543-46d8-91c9-3430f50f438b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b9bb4625-d4bc-461a-af56-0077fc6c2c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc65336-3c30-42f8-ac2f-28ade9048689",
        "cursor": {
          "ref": "164d142b-ef76-4471-b4e3-6c657be07848",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f8240777-d9a4-4a04-8c95-5a4d7203cf30"
        },
        "item": {
          "id": "ccc65336-3c30-42f8-ac2f-28ade9048689",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "932c2198-529f-4e60-a056-02daf098fd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd99b9d-6c34-4000-9ed0-d8e4c22f1f1b",
        "cursor": {
          "ref": "9bf5a8b5-c102-4405-9899-592b734a3ca6",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a14e4fe3-c3f3-4dea-95f0-868bb04ea237"
        },
        "item": {
          "id": "9fd99b9d-6c34-4000-9ed0-d8e4c22f1f1b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "96eb0775-d943-4a44-bccc-5b65059f0ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d55f54-a368-4761-8499-6fece0888a06",
        "cursor": {
          "ref": "6246b6e5-69d1-44bf-a1b4-39e5d93144d5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "049f5367-e03d-4cb9-a438-e41b125ebc91"
        },
        "item": {
          "id": "a0d55f54-a368-4761-8499-6fece0888a06",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f905252d-07f9-4940-8e0d-d0ffa1029672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4361407f-3fd1-4b75-8876-ef5f90ec44b2",
        "cursor": {
          "ref": "f939e5f2-5a28-495a-9277-314418cbfeea",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "79a47ec4-5c33-490a-b528-eeece78ec5f2"
        },
        "item": {
          "id": "4361407f-3fd1-4b75-8876-ef5f90ec44b2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3c032c2a-0f44-4c03-8e44-7fa95ec9f328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4dbf6d-c476-47e4-80e4-479208a96d6a",
        "cursor": {
          "ref": "8181570f-2114-4cc4-8fb5-f20e41b954e5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "16649694-063a-448e-ad4c-3f3fa4e1d304"
        },
        "item": {
          "id": "fc4dbf6d-c476-47e4-80e4-479208a96d6a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9a83e5dd-a6e7-494c-8ff4-23a8d2414bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119eeb6e-c2f4-426e-b058-087c2a3c8b5a",
        "cursor": {
          "ref": "d656b88b-eed2-4391-8b73-c771fe1df3e9",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bdb9fb0e-ed7c-4d03-b4d6-bbe1e8c289b7"
        },
        "item": {
          "id": "119eeb6e-c2f4-426e-b058-087c2a3c8b5a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "de98b894-24d6-4af3-bde2-b82cf62e3d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74833eb6-d636-4b4e-81a0-5ab556940f2d",
        "cursor": {
          "ref": "dcacf402-0ea0-4ff2-8712-66f617366e6f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2ba811c8-af8d-4f44-9264-d31da6d67d6f"
        },
        "item": {
          "id": "74833eb6-d636-4b4e-81a0-5ab556940f2d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "26655a1f-3006-48f5-a4ae-ec355e86841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c975e7-0cdf-4dfa-9d9d-60da46ed1fe4",
        "cursor": {
          "ref": "d8e16635-c9f0-41dc-9cb3-b8d86ac2f1da",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "314d6dce-7e01-4578-922f-39617c1b4229"
        },
        "item": {
          "id": "e6c975e7-0cdf-4dfa-9d9d-60da46ed1fe4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6ca3e199-7c1c-46cd-8737-73ef40ea92b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9331095-2aa5-4b07-ab64-584d30733654",
        "cursor": {
          "ref": "8bc768b5-6b47-4aa5-9a38-cc4676916a32",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2c5cd3f2-abac-4f0e-9b5f-0f62a8899ad0"
        },
        "item": {
          "id": "c9331095-2aa5-4b07-ab64-584d30733654",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "78e8b0fd-8aec-4f59-894d-84ddccd00f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4d84c8-008a-40c0-bb21-bc9f0836bc9e",
        "cursor": {
          "ref": "78c2b4f8-a3bc-4db0-9584-5078ee9c3d65",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "28d96d69-a739-49c9-99a1-c39a4fc4010a"
        },
        "item": {
          "id": "3a4d84c8-008a-40c0-bb21-bc9f0836bc9e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "251351a1-3ca9-4fff-bc03-bbc616cafe53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f90c96-7a05-4710-bca3-a4ef23427961",
        "cursor": {
          "ref": "81565f16-1559-4128-812b-9a281bbadbc6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dbcd32ac-d922-41ed-9321-fbb2e1fe00cd"
        },
        "item": {
          "id": "c4f90c96-7a05-4710-bca3-a4ef23427961",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c8adc127-dee1-4402-8080-2992cbd03164",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7260e1-26f7-46d9-ba75-3515941b5b38",
        "cursor": {
          "ref": "3e4aca9c-ac4e-441c-874c-eb8faacc3829",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6189ec69-e039-49de-b295-be22dd00af7b"
        },
        "item": {
          "id": "ef7260e1-26f7-46d9-ba75-3515941b5b38",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8bf5b0da-c71e-4e8c-a76b-4db90b8f828d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f967b6df-5228-4edf-9727-e22562aab4b9",
        "cursor": {
          "ref": "39136c7f-a4fe-4f85-a8c8-5a9b5f2b7af6",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c4bdf35c-99d5-45ec-9165-40ec18d022a7"
        },
        "item": {
          "id": "f967b6df-5228-4edf-9727-e22562aab4b9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a927056f-8e95-4d2e-85b6-ed9670a42c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b939459-6e10-486d-9567-ede6dfcbbdad",
        "cursor": {
          "ref": "7458e4d6-2505-4b34-a776-8afa7b192b8a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ed41d175-8dfe-4778-8c27-eb5573d607c9"
        },
        "item": {
          "id": "5b939459-6e10-486d-9567-ede6dfcbbdad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "00750dec-80bb-4500-bf81-68396a8b67bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f267e78-dbfc-451e-a198-e6b11ad46902",
        "cursor": {
          "ref": "0384fd58-1063-4da9-8c04-dabf370e265b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "eacd4318-253d-4b11-9128-a966a5572710"
        },
        "item": {
          "id": "2f267e78-dbfc-451e-a198-e6b11ad46902",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "34277044-236b-45e6-9bba-a759e12419c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5409fdfc-50ef-47c5-bff4-a06ce58c53b3",
        "cursor": {
          "ref": "668eb6e5-401e-41b5-bd38-9fefc0e9a419",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0b8a8a7d-e3c5-4375-919c-42930d245d57"
        },
        "item": {
          "id": "5409fdfc-50ef-47c5-bff4-a06ce58c53b3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5efd390b-4fa2-4215-808c-4087ee13ca9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42533544-ae1b-416d-b27c-cf32d1216363",
        "cursor": {
          "ref": "bec9a651-a6e5-457f-985b-413d58eecac1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bc87dde4-c1d2-4147-9887-7d6f268a746c"
        },
        "item": {
          "id": "42533544-ae1b-416d-b27c-cf32d1216363",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "01d839e4-b6ab-4167-8ff3-df10bc013a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af09419a-4a96-483d-ae1d-50780e0744cf",
        "cursor": {
          "ref": "a3fb507b-3237-49bd-aa64-1152da28a84d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b9d1d9ef-82e5-4ab3-a6b5-39fc9f829648"
        },
        "item": {
          "id": "af09419a-4a96-483d-ae1d-50780e0744cf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "44649fc1-08cf-4514-a073-bd42def0570f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2d6013-a479-4f20-8cd1-556e0dfe09e4",
        "cursor": {
          "ref": "59da48eb-115c-4a9c-9eaf-c04db5cc6ea2",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ad07d0d7-6133-4738-885a-e6bafb4146ba"
        },
        "item": {
          "id": "8d2d6013-a479-4f20-8cd1-556e0dfe09e4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c1f3314-8cc5-498f-946e-f2c7eace28f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a52cf4-c2ee-4dea-bef1-00fa973c5975",
        "cursor": {
          "ref": "91a883a4-0b45-4a6e-aab5-7d41fd7890b4",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9255d2c4-6d55-496b-bb32-a8a1683bd937"
        },
        "item": {
          "id": "e9a52cf4-c2ee-4dea-bef1-00fa973c5975",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4f1c0c79-17b2-4837-89c2-bd2a2feadbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49925bc-b990-483e-b965-3eeb7062aafd",
        "cursor": {
          "ref": "8dad8bef-ec1a-48a7-8f8d-43494fa296c1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f3eb4905-c3d7-46d5-b6f8-9e5ccc5d85dc"
        },
        "item": {
          "id": "d49925bc-b990-483e-b965-3eeb7062aafd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e1f32e1a-0112-44cc-a6ae-0c6c3c099971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f031410c-8c9a-4adc-9b83-9983726dc4d5",
        "cursor": {
          "ref": "ff081cde-3060-4232-9e45-208587412341",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8921215b-42d1-4535-a129-66bc4828087b"
        },
        "item": {
          "id": "f031410c-8c9a-4adc-9b83-9983726dc4d5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c60fa7d3-6736-470e-a43b-686c0ed61dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2684ff15-c39f-49a5-881e-51c0b81f56ac",
        "cursor": {
          "ref": "4bdb47f9-358c-40c5-b378-07a444957cf2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fe751782-d943-4a1d-8a86-d4b559a7634b"
        },
        "item": {
          "id": "2684ff15-c39f-49a5-881e-51c0b81f56ac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "02411c5e-7ad7-4a58-8e22-a51a147060b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb889032-eb1e-4bbd-a6a5-453974ea5a76",
        "cursor": {
          "ref": "d2372e46-6b8d-4aaa-a928-030a21264970",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c1ca63c8-48d1-40c0-a272-5bbebce745ca"
        },
        "item": {
          "id": "fb889032-eb1e-4bbd-a6a5-453974ea5a76",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "19ca1297-c71b-43c8-b74b-41ae4f9ffb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034654aa-a488-41df-9959-8d99f09c5d89",
        "cursor": {
          "ref": "18974c74-1cd6-44c8-9fd8-172b546713ff",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "59033d02-ca76-4f62-9a1f-3acdc7395b5b"
        },
        "item": {
          "id": "034654aa-a488-41df-9959-8d99f09c5d89",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "98cafbed-d7ed-4069-86ad-61ec62b6a818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ba10f4-d2fe-4fbe-9bbb-2f8ff291108b",
        "cursor": {
          "ref": "343308fe-1750-421b-8b1b-2a2e6ba3dc14",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2990750c-f6ad-4f18-b182-215e096bd477"
        },
        "item": {
          "id": "37ba10f4-d2fe-4fbe-9bbb-2f8ff291108b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4ecb8a26-4bec-4ab6-8d40-6877eab7dda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bb36bf-daf4-437e-bf06-94767b0cd318",
        "cursor": {
          "ref": "8bd2b01c-8f3b-4513-a1ca-46d24c6118bf",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "95fd5322-2b06-419a-9f17-e3862987d18d"
        },
        "item": {
          "id": "64bb36bf-daf4-437e-bf06-94767b0cd318",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ba080409-cacc-4c45-980d-658e149559bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278c66ea-393a-4473-98be-f05d2af42bf8",
        "cursor": {
          "ref": "c1abce75-284f-4a26-acf3-a89e9b07db54",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "601b3fe5-dec5-48e6-89b1-97529cdf2493"
        },
        "item": {
          "id": "278c66ea-393a-4473-98be-f05d2af42bf8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "568b298e-14f9-43ec-b505-fcea8df9e46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e63ea7-fe7a-4e42-ba40-c2e22dd9a495",
        "cursor": {
          "ref": "2ea2ab8f-cc1b-4977-bb29-22debd197ff7",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d9844f3c-0234-4105-b6cc-1c9b2add9332"
        },
        "item": {
          "id": "61e63ea7-fe7a-4e42-ba40-c2e22dd9a495",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "77088ce1-252f-4874-9b57-de97edf28e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6019f6a0-287d-4139-983a-45b210ccb401",
        "cursor": {
          "ref": "7662eb7f-f773-46b9-8bc1-a1f7206b5308",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c437b9b9-4131-4bc9-8a70-0d51a993dca2"
        },
        "item": {
          "id": "6019f6a0-287d-4139-983a-45b210ccb401",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "509595da-96ff-4cdc-ae37-053869e527ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac4046f-483b-4a31-9b12-3a508c0b129a",
        "cursor": {
          "ref": "5b72a623-0ce7-4671-92b6-f5fdd08d9a0e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "176df7ce-845b-48c3-ab18-6c7cc80de5a6"
        },
        "item": {
          "id": "5ac4046f-483b-4a31-9b12-3a508c0b129a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "948033ea-6962-4af3-8098-2bfb51002f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b5f7e3-9ac9-45ed-a8ed-372b2ad9d5f5",
        "cursor": {
          "ref": "095c66a5-0f25-46e8-9639-6d68d3ba418f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6cb63de5-162f-4dbb-bf20-f998412c59f7"
        },
        "item": {
          "id": "07b5f7e3-9ac9-45ed-a8ed-372b2ad9d5f5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bb8766d8-52e8-467f-ac54-394f8dea7905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e283da-fb65-4335-8e7c-2f88a0e4ee32",
        "cursor": {
          "ref": "dd5da70f-1446-4624-bafd-0d99697f212e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1fe5274c-54f1-4f77-b5c9-6a839d462ba8"
        },
        "item": {
          "id": "03e283da-fb65-4335-8e7c-2f88a0e4ee32",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "80e8665d-d450-4fce-bca2-bc4c97596231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfada949-c346-4383-a028-56844717462e",
        "cursor": {
          "ref": "14a5da38-e34f-4c8b-a233-f2d4ab88fdda",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ed459a90-c25e-4a6e-8352-07f024fbafe4"
        },
        "item": {
          "id": "dfada949-c346-4383-a028-56844717462e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa4fef91-2284-4239-9740-ac4b38574582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995dd768-5a9e-4b60-a933-c8920fcfe276",
        "cursor": {
          "ref": "f25cd774-c1f8-4739-83ec-d3d99a0babfa",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "75e3d73a-abc2-4871-891e-fd671b1d3e4f"
        },
        "item": {
          "id": "995dd768-5a9e-4b60-a933-c8920fcfe276",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a0f57213-2329-462d-881e-a018df02e658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60d519a-91a0-4ad8-8736-6df9081dedff",
        "cursor": {
          "ref": "79c01a8d-71e7-4875-b3c2-0fcb03bfe7d5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "993256cb-4068-4203-ae93-3c3483367576"
        },
        "item": {
          "id": "e60d519a-91a0-4ad8-8736-6df9081dedff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d7e6b2bd-e114-444b-a9c3-4614ade11da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f23bffd-2c12-4a13-b1fd-7aeb0af3b8d4",
        "cursor": {
          "ref": "69d84cc9-eeeb-4561-ad69-5d851799d638",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a9c6482e-dc52-42da-ad13-ad801e030552"
        },
        "item": {
          "id": "1f23bffd-2c12-4a13-b1fd-7aeb0af3b8d4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "92d04e7c-8822-4a65-a4ef-310dead65bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4121b1b-cb6f-4aea-8911-569e38077532",
        "cursor": {
          "ref": "49766e99-1e00-4ef1-ae38-e90ad75af6ab",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aae72556-471e-4668-ac05-d7e917a3d36c"
        },
        "item": {
          "id": "c4121b1b-cb6f-4aea-8911-569e38077532",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1fb77515-27df-4f86-9832-73212726d27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be27d1ca-64ee-4fd9-bf4a-ecaa80dfe7dd",
        "cursor": {
          "ref": "53d948ab-ff5e-45a3-a7c7-ee6f168e21f2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "793598f7-bf32-4630-a388-c240ae9e0781"
        },
        "item": {
          "id": "be27d1ca-64ee-4fd9-bf4a-ecaa80dfe7dd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "468982c2-7a07-434d-87fb-dd5464aa0b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b6d0a9-ecbe-4ea5-913e-8c48c00159b2",
        "cursor": {
          "ref": "3bcae55c-5718-461a-8094-562ad3daf6da",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7a22225e-fd8a-4fef-b46b-f1f8f8e4e2a5"
        },
        "item": {
          "id": "28b6d0a9-ecbe-4ea5-913e-8c48c00159b2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "744435fb-1446-42e3-b5ce-3e414b9b26ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ba0887-3c4f-42b8-8903-22a95e6faa9a",
        "cursor": {
          "ref": "506ba84d-7672-4825-9ed6-6547eb38a095",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c9a9f991-8ed7-49e6-9147-bd76118475c8"
        },
        "item": {
          "id": "41ba0887-3c4f-42b8-8903-22a95e6faa9a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "86f751a0-6ff9-40a1-ab7c-b3c0a9b7c3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7736e5b-880f-4b6d-80d4-009c4857f576",
        "cursor": {
          "ref": "0896de73-42e8-4729-90ac-f1c03718d837",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6f75a299-4f9c-435a-ac93-51a624aa97b6"
        },
        "item": {
          "id": "e7736e5b-880f-4b6d-80d4-009c4857f576",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e1a7d7c9-a681-48e0-b3d5-9d87559321c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5409db5-d8d4-416d-858c-0aa9a713d2f6",
        "cursor": {
          "ref": "0ce87d23-68ac-4198-a464-54bbb23d8f5b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1b35299e-aea0-45b0-a4ec-841395b3d61c"
        },
        "item": {
          "id": "f5409db5-d8d4-416d-858c-0aa9a713d2f6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a4b47d66-35da-4221-9263-4e20bb7a674f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74e7ec9-441d-4eb4-b7d7-e93861fc3797",
        "cursor": {
          "ref": "40b55681-68da-4064-b164-4d0fc9298cf2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b587a744-c8fb-4b2e-95bb-2d9aace05c1d"
        },
        "item": {
          "id": "a74e7ec9-441d-4eb4-b7d7-e93861fc3797",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4c1e41f7-b547-4747-8f94-e7664f912b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca802558-741b-4fe4-9d47-2fd97a907320",
        "cursor": {
          "ref": "ce711ca1-2d1b-4935-a3f8-d4ffbd0224d3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "70a8c514-2a2f-4a7f-9f73-e6ae6489f7cc"
        },
        "item": {
          "id": "ca802558-741b-4fe4-9d47-2fd97a907320",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6db53969-1894-495e-8f4e-ce99beaa850c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1346339-5c0e-4110-bc6d-fc4b94a73abb",
        "cursor": {
          "ref": "eeb37d57-be1b-4434-a77d-b5ee7b4aa3f3",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5febe2d7-e270-445c-9145-0e20c7178541"
        },
        "item": {
          "id": "f1346339-5c0e-4110-bc6d-fc4b94a73abb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0a6d6f89-1dab-4867-97ae-d89519187e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb26f991-2620-4d13-be62-3fc1b401dea8",
        "cursor": {
          "ref": "dba31ece-fa85-48f4-862b-7ca8258a5ceb",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7a9c6979-00b4-446b-a781-1cca9a42e069"
        },
        "item": {
          "id": "cb26f991-2620-4d13-be62-3fc1b401dea8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bf05f4d1-212b-4fd6-bb91-7f38a0b9ae51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf84ded2-8255-41d4-b443-ca51b50cf69e",
        "cursor": {
          "ref": "4f8aee80-3b11-4e30-bdfd-2be82ef75d6b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f2bb62ac-1014-45a7-b3cc-a7c017eabd4d"
        },
        "item": {
          "id": "bf84ded2-8255-41d4-b443-ca51b50cf69e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1b72565c-7103-4124-8426-eea93a9a4856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e798bc-5274-44c4-8ea5-57eb72c76796",
        "cursor": {
          "ref": "40a5da07-0c7a-4d1d-8fef-a493f2b24613",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b6dc4c03-19a5-4940-b417-8a647c0c8444"
        },
        "item": {
          "id": "63e798bc-5274-44c4-8ea5-57eb72c76796",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4102aa0e-0a49-4bff-a665-5d36c2d8ba58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe2afac-e3e9-49ea-90c5-9363eca8fb9c",
        "cursor": {
          "ref": "7c2d52ff-c938-4eef-b985-ce6d4ce2aa02",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3042edc8-f249-4868-815f-7474b63d6b34"
        },
        "item": {
          "id": "bfe2afac-e3e9-49ea-90c5-9363eca8fb9c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "65bfc2ab-ad01-4bcc-88d5-23527f1ff444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd167c1f-3072-4d90-8bdf-c3033391a56d",
        "cursor": {
          "ref": "9bb087ef-e3ed-4fef-ac8d-98557c117606",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "26086fc5-8320-4a69-8eb0-9ba24c206a92"
        },
        "item": {
          "id": "fd167c1f-3072-4d90-8bdf-c3033391a56d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d284e944-7646-470c-8b1d-2521fd7a33aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc59eed-e2be-4097-8425-6cef97652e05",
        "cursor": {
          "ref": "d4302f70-3ffb-4e7d-a13d-06b9ba30cf16",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "75c823bb-1e2c-4f95-96eb-4f4c20f034ae"
        },
        "item": {
          "id": "bfc59eed-e2be-4097-8425-6cef97652e05",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "46a213ee-15b0-4a40-ae6d-d0fb0b3dac7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717d5323-5fed-4c92-8a33-abd8d9ff84f6",
        "cursor": {
          "ref": "37df9e56-bd72-4859-9727-c3a98dd1ec62",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "09d02e25-427b-4646-a394-d70ac066598c"
        },
        "item": {
          "id": "717d5323-5fed-4c92-8a33-abd8d9ff84f6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1f534167-546a-4027-9c1e-91bc67add1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b5d4d4-d9e9-40ac-941b-d602bcff94c3",
        "cursor": {
          "ref": "0deb57ad-8ddf-4e89-b033-0bed5b9b74e1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "05a665c6-967e-48de-9aa2-9f4acfb052ad"
        },
        "item": {
          "id": "c8b5d4d4-d9e9-40ac-941b-d602bcff94c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3fc4e15d-6237-4810-9e64-fc6bbe7b571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2302cc-0ac4-416d-a677-5404c4b8553e",
        "cursor": {
          "ref": "1b878662-334a-4f6b-ac85-9ab8279a7998",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "71f1863c-e1f5-4ac8-a477-3807540161fc"
        },
        "item": {
          "id": "3e2302cc-0ac4-416d-a677-5404c4b8553e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "97628246-f285-47dd-8230-ba0df6e0f918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7694a8d-5476-4a82-b742-bb5178528c68",
        "cursor": {
          "ref": "7103bc21-ae97-484a-882a-d828d23b867d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9f02f822-e580-419b-ae2c-d58c00a28d8b"
        },
        "item": {
          "id": "f7694a8d-5476-4a82-b742-bb5178528c68",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "da718ac6-a871-4aa9-ba5d-bb58c44d4c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2615bebf-b967-4396-a55d-a0bb0994ca37",
        "cursor": {
          "ref": "7dab99b3-375b-494e-85ab-608535d86f28",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b2d7f764-3333-471e-8c3d-3a42246a2cce"
        },
        "item": {
          "id": "2615bebf-b967-4396-a55d-a0bb0994ca37",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e85d1225-c59b-45e0-9c5c-6609dd62a409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b8ec94-d9e6-4fb5-931c-ca11c3523916",
        "cursor": {
          "ref": "0ef7e7fb-3a94-48b5-8139-2355b9cf5e69",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2f080108-74f3-4214-ab2d-0c7c3d45ebf6"
        },
        "item": {
          "id": "04b8ec94-d9e6-4fb5-931c-ca11c3523916",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0c7b4932-a9bb-4a4f-a727-f6af7bf00bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d875a1-d833-45f7-8de5-23b50505d570",
        "cursor": {
          "ref": "81398d18-fb96-4fe8-9105-bfd6669c20fe",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "10847246-d80f-4900-8e3a-f375901218f8"
        },
        "item": {
          "id": "c6d875a1-d833-45f7-8de5-23b50505d570",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5ef2f0df-b62b-4231-bb72-f2236695966c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c20da2-8a6f-42fe-9430-8b1d36a8bf67",
        "cursor": {
          "ref": "d43926fd-c56f-46df-9429-f5fe67472a04",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9b7b5fc6-c4dc-4c38-8f3f-56849bb23c68"
        },
        "item": {
          "id": "79c20da2-8a6f-42fe-9430-8b1d36a8bf67",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "20ce5edc-56af-4fdd-af19-49a22b9f3bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852ff755-3710-4ca1-a9cd-5063393d6c97",
        "cursor": {
          "ref": "c6523cf3-a6b5-4e16-a4c8-866db5c229a9",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "078a2459-f83e-4c9c-8a94-22c272878546"
        },
        "item": {
          "id": "852ff755-3710-4ca1-a9cd-5063393d6c97",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8ffef8e4-35c8-4e05-81ab-77b4ab814e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909848e3-fb2f-44a2-94e1-ebba6ba417fe",
        "cursor": {
          "ref": "f7bdb91b-3f03-442b-b3c5-381bc6e848e4",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dfc66243-ac3d-48b9-a54b-00d1d9b87c55"
        },
        "item": {
          "id": "909848e3-fb2f-44a2-94e1-ebba6ba417fe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "13c87e24-f5a0-4bee-9d15-08a7b6f62321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156b1181-b828-4173-8456-8f6b0f4c29fa",
        "cursor": {
          "ref": "739d5d85-4e6b-4ed0-bda0-5573aefa49a5",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5309f2ba-3919-4250-b6e3-1c52becfa087"
        },
        "item": {
          "id": "156b1181-b828-4173-8456-8f6b0f4c29fa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1664f041-912b-44cd-bcbc-c8ecdd56bffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8064b9b4-6631-4743-b9e5-4574616b9bf3",
        "cursor": {
          "ref": "55ff9bd0-d007-4b14-a720-af4ed987f803",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3faa986e-b228-417e-86cb-64d64e46a601"
        },
        "item": {
          "id": "8064b9b4-6631-4743-b9e5-4574616b9bf3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a0d4a9f5-3cde-47ab-82c8-f8f84ff3f64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dec5be6-f9d8-4102-a9c8-af2e942e8fc5",
        "cursor": {
          "ref": "b2576216-dbca-47b3-a36c-d11434ffd73b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3b026540-ed76-456e-9483-43a2b046b7bc"
        },
        "item": {
          "id": "6dec5be6-f9d8-4102-a9c8-af2e942e8fc5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f0ebee5c-da58-40fe-b06e-27a76abdf599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b1bc89-2bad-4e01-aa5f-449545d53389",
        "cursor": {
          "ref": "a481ce89-221b-40aa-8917-acf6f3dba36c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e05ae658-def1-47c2-bdc1-c1ef6f3da820"
        },
        "item": {
          "id": "29b1bc89-2bad-4e01-aa5f-449545d53389",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3ce8f691-3574-4388-a187-da3607e54b20",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "7fe83eab-e0f0-4be0-b3c1-5e5a7b3b2fb4",
        "cursor": {
          "ref": "a01dc205-2a2e-4fad-8234-617001f25107",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8de21a92-3728-4327-8f2b-140337885018"
        },
        "item": {
          "id": "7fe83eab-e0f0-4be0-b3c1-5e5a7b3b2fb4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2df6e5f5-6c2b-4a38-bf82-87bfec47f9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1321ee59-996a-4f9c-bb7c-2647b9bfc6fc",
        "cursor": {
          "ref": "7a0b0599-7c9a-42ec-aa69-107da6b4f3e8",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "15ea6465-ceca-4398-864d-9b19073c93af"
        },
        "item": {
          "id": "1321ee59-996a-4f9c-bb7c-2647b9bfc6fc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f70b47c9-579f-4c48-96c6-9aaea10baae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2f24c3-6830-4366-8dd8-87372d637f08",
        "cursor": {
          "ref": "b3762cff-2362-4b00-bf6f-147fa424dc7c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c99ed1c8-6e49-415d-8e75-6b4aae771aa7"
        },
        "item": {
          "id": "ff2f24c3-6830-4366-8dd8-87372d637f08",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5ca7045d-3175-4252-b8da-ce6ddd350d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3620c8c1-1ddf-44c3-a263-abbb20c209ad",
        "cursor": {
          "ref": "1cd4ed81-5b7a-4d74-a6ab-b43aa5757815",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "99393c5f-4a30-406f-8c04-ef320fa22d80"
        },
        "item": {
          "id": "3620c8c1-1ddf-44c3-a263-abbb20c209ad",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3c41abf3-a68e-4fba-a249-992919006284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2228b3c-6a8a-4070-a1fe-3066bcc5a5db",
        "cursor": {
          "ref": "ee412f6b-cbfd-47a7-90aa-96264fde8400",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5801722b-5d4a-4855-897e-0b809eecbe00"
        },
        "item": {
          "id": "a2228b3c-6a8a-4070-a1fe-3066bcc5a5db",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7fc80d4b-ee43-4b38-a69b-0704659a65c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba679d6c-6165-4390-ba92-c3da239421c8",
        "cursor": {
          "ref": "5ad47808-38e0-4577-bc39-0d9f2e83cdd2",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d14f98b7-1c4f-4da1-8415-de3f9c15865e"
        },
        "item": {
          "id": "ba679d6c-6165-4390-ba92-c3da239421c8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b302f31d-670c-4192-b98b-f85916d241c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caddd76-82f5-4b19-934d-7205a1e90b01",
        "cursor": {
          "ref": "1277d8fc-ec84-482c-a93c-94db7e8c5ca3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3ab397a3-d486-49f4-9d88-4a7a4fd51537"
        },
        "item": {
          "id": "7caddd76-82f5-4b19-934d-7205a1e90b01",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8140de77-cb5b-4560-9d46-ede3063a39c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c4c4f4-f3e9-4673-84f7-56ff744acbaf",
        "cursor": {
          "ref": "65232452-02e2-4d96-b004-34e300f500e5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "06fa2e08-1315-4cce-afac-a78ef7c5f750"
        },
        "item": {
          "id": "a5c4c4f4-f3e9-4673-84f7-56ff744acbaf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "89356ccf-8420-4b4e-be93-3c014f8d67b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f887da4-7080-422b-be1d-3d527f90d773",
        "cursor": {
          "ref": "32829fc1-bb46-425a-b008-071d8c3b44a2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e49d4f02-8f44-43ac-a111-2a78b7111700"
        },
        "item": {
          "id": "2f887da4-7080-422b-be1d-3d527f90d773",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4091baa6-3aac-489e-9b5a-ecc15a932df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1667c0a-3dfd-458f-af1c-3d25d8b80f86",
        "cursor": {
          "ref": "3e9c2c6e-d9f6-4762-8616-7c82f2a225ed",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3d20b7b4-1dac-4fa8-8ec6-af3f04d004b1"
        },
        "item": {
          "id": "b1667c0a-3dfd-458f-af1c-3d25d8b80f86",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1a70ec17-f39b-43fd-80fe-09bdc876a454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4ef2f4-c969-4fba-ae3b-ed09bb7df06c",
        "cursor": {
          "ref": "a688efe2-cc0c-4ec1-b3c7-44b939872d62",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a8fa0f65-73b7-448d-b673-5eed6e189e07"
        },
        "item": {
          "id": "2e4ef2f4-c969-4fba-ae3b-ed09bb7df06c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b2979114-00c0-4ca4-b336-9aff273ddc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873c6ba9-cd0f-48d5-a26c-c28f05cf8c79",
        "cursor": {
          "ref": "af9ce941-0641-4678-90d0-0aa86c5a1206",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f4971203-c343-418a-8a5e-ecb1390ca90d"
        },
        "item": {
          "id": "873c6ba9-cd0f-48d5-a26c-c28f05cf8c79",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2faecd0e-f70e-4290-a0d1-15a2cc227d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666d169b-3386-4d6c-bc49-5afc74fb5f30",
        "cursor": {
          "ref": "24736e25-281d-4a57-98ab-fa1b82850af0",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "65255a1f-75aa-4076-b85c-da2651fb7f4d"
        },
        "item": {
          "id": "666d169b-3386-4d6c-bc49-5afc74fb5f30",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c4c3418a-b681-4962-8a1f-e5d3098fa0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e527118d-0ba4-412e-8577-2ec2a59b241e",
        "cursor": {
          "ref": "730ddde1-8294-4e6b-85e9-9756d5c24fe2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "36bcdbab-045a-4da3-91ad-896a7f82039b"
        },
        "item": {
          "id": "e527118d-0ba4-412e-8577-2ec2a59b241e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8abe6846-4be2-4295-b4dc-b7fde9f2985c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baecf99-5432-4e3c-a0e9-7d8bebb03678",
        "cursor": {
          "ref": "4a853ff1-de78-4826-9f26-e035dd684028",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0a6b9986-8524-4e36-bca6-2afa996ce08e"
        },
        "item": {
          "id": "6baecf99-5432-4e3c-a0e9-7d8bebb03678",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a04d0084-d8b0-4a62-a999-df5d4e281502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87356199-9f4e-4f1c-85d1-747f49440d64",
        "cursor": {
          "ref": "8b0aaae5-240d-4266-b14d-856ca43e89de",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ca9f717b-b87e-4e58-b4a0-999b40f53be7"
        },
        "item": {
          "id": "87356199-9f4e-4f1c-85d1-747f49440d64",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "95dbcd4e-09c0-43b1-9e7d-14088004c13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42cf145-4b80-45fa-b46b-0e93dbc598d3",
        "cursor": {
          "ref": "e2f368de-c7c3-495a-931f-2f8bdc0a90e8",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "82bc8c1c-b383-4327-aedc-bc501847bcab"
        },
        "item": {
          "id": "e42cf145-4b80-45fa-b46b-0e93dbc598d3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f796bb3c-5a82-4dff-b38d-b2ff97370149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d03a11-c7ae-4921-9cfc-8a07148f59fa",
        "cursor": {
          "ref": "60b27a66-324f-4446-a07b-8166b2d39b81",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ebd00115-cf68-40ca-bf03-2ebcc065f9c5"
        },
        "item": {
          "id": "79d03a11-c7ae-4921-9cfc-8a07148f59fa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "75b41a0e-e8eb-49eb-8f00-491e07af99b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66c8d40-6779-41ae-bb33-3adc912c46be",
        "cursor": {
          "ref": "7cc048c2-24fd-4932-b4dc-78682f107019",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5bac74f4-eb48-47ff-ba3d-de371f0f1f69"
        },
        "item": {
          "id": "d66c8d40-6779-41ae-bb33-3adc912c46be",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c7c77dde-fd21-4856-816b-b228211560a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452107fc-6688-4097-8366-ccaae906951f",
        "cursor": {
          "ref": "cb0d98e0-2bbc-4fa1-95e8-1c34b510a9bf",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c445d906-b22b-40a1-9492-97503f925904"
        },
        "item": {
          "id": "452107fc-6688-4097-8366-ccaae906951f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "45ccb068-8180-422e-adc3-f8a00be8cd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702f9056-bf9e-4e5d-b94f-efca49ac7451",
        "cursor": {
          "ref": "130769c5-55d6-467a-a658-efd2ff45bc5f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c6e18796-5861-49b1-ae9c-2cf3572bbc9a"
        },
        "item": {
          "id": "702f9056-bf9e-4e5d-b94f-efca49ac7451",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "adbd14b6-eeab-4aab-aff4-dbbee7b2e88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0903bbd-0320-4851-ba83-e74509724c03",
        "cursor": {
          "ref": "6d7b27bd-e116-4bd0-8c9c-61c41a312fab",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "127ab420-93c1-4e7b-9264-b29645818338"
        },
        "item": {
          "id": "f0903bbd-0320-4851-ba83-e74509724c03",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2fca1f17-6b82-40e9-8756-3aae16a43d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8297fc3-d19a-40bf-b2ff-5a349b185f6c",
        "cursor": {
          "ref": "28e86f06-2da3-4241-a652-535600e2aa27",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ea567fec-8e79-4da5-abf9-8501e9771725"
        },
        "item": {
          "id": "f8297fc3-d19a-40bf-b2ff-5a349b185f6c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "906a7fe7-75c4-49f9-92cb-5ed46d6e1618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea202972-41a7-4da3-8af1-cd1fc2603b2c",
        "cursor": {
          "ref": "9d2fc91d-2561-448e-b953-edf5d1a893d3",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "462377a7-d36b-427f-b60e-3e5928e530c3"
        },
        "item": {
          "id": "ea202972-41a7-4da3-8af1-cd1fc2603b2c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "edad8e33-62e0-4ea4-ae7a-783ac87c2451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d4c109-dc11-42d3-b437-6132b893aa9e",
        "cursor": {
          "ref": "5632b1c1-5056-476f-826e-bb7e4301bd05",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "87a8ea46-ae89-4946-8256-e89c99b5c9ed"
        },
        "item": {
          "id": "88d4c109-dc11-42d3-b437-6132b893aa9e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d33176b4-e1c8-40f4-b491-98fbd8f0deed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dcd6b8-2f6d-4ff1-a0c0-e3e3e517f3c3",
        "cursor": {
          "ref": "befd07f9-d3ba-4881-acb2-94f8c12ab394",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "81b50e2c-6766-47ca-b974-923196638e86"
        },
        "item": {
          "id": "61dcd6b8-2f6d-4ff1-a0c0-e3e3e517f3c3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7e4355c5-0148-4231-b48b-d6aa80bcfb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78781f12-d971-440b-a72d-5e76d07c8212",
        "cursor": {
          "ref": "f9a8bd95-e042-4ee6-8256-8a049dad9e00",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "db108839-5087-4357-81bf-7ca4e0125c2a"
        },
        "item": {
          "id": "78781f12-d971-440b-a72d-5e76d07c8212",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c14aba3f-cae8-4593-93c6-826e11443fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d7550d-b868-43c3-a372-c8aa14235692",
        "cursor": {
          "ref": "d36ccc1a-f81e-48ad-a089-270220949da8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "960de1ec-05fc-4edd-b07c-1844a2714fb1"
        },
        "item": {
          "id": "c0d7550d-b868-43c3-a372-c8aa14235692",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9352a1ef-759a-433a-9b3f-4316af4eb4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2063eaf7-fb1f-48b7-be27-d5188228a05d",
        "cursor": {
          "ref": "52da5a8a-16b5-43e8-89f3-66b858eabe31",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2ce543d3-09e0-4989-939e-9d2f521b357a"
        },
        "item": {
          "id": "2063eaf7-fb1f-48b7-be27-d5188228a05d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4f7181f8-4bbb-4602-afc8-7b045fd0039f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ec3637-0f2e-4bc5-83cf-e15a3b6bb5df",
        "cursor": {
          "ref": "4d31b32e-153a-4b13-a11d-592c28d07942",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cfea338b-67ef-432a-801a-ae767f4c4abc"
        },
        "item": {
          "id": "07ec3637-0f2e-4bc5-83cf-e15a3b6bb5df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1b42d210-c53e-408e-9822-e6491638952b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0a03c7-84fc-4f67-bc53-1cce48a02610",
        "cursor": {
          "ref": "240aaa8a-964b-4a1d-b8d8-578126e41c48",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3c46a9fd-20d9-4080-b594-7a6ca4e87be7"
        },
        "item": {
          "id": "ca0a03c7-84fc-4f67-bc53-1cce48a02610",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d5cdbf45-4dbf-4ce8-a435-5c275cc7e21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c35efd6-1b55-489d-a8d6-cba2546c12fd",
        "cursor": {
          "ref": "599015cb-fa97-4b95-9a7b-135452c5fefd",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a58cd32b-c532-4a88-9709-2a9cca3328b3"
        },
        "item": {
          "id": "6c35efd6-1b55-489d-a8d6-cba2546c12fd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e16b00f-a405-4d81-833c-23d69b26af04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a269dec0-91f0-4892-b2b0-554c7aa7041e",
        "cursor": {
          "ref": "f39f038d-ed67-437d-afba-9b26df1eed97",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a21bfcec-0462-438f-b151-c0fdaa26aea9"
        },
        "item": {
          "id": "a269dec0-91f0-4892-b2b0-554c7aa7041e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a2539b48-076f-4330-a0dd-895b354a30b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f264fb-fa31-4d9c-b9d6-0748bf413c9c",
        "cursor": {
          "ref": "3a8cfeb9-c742-455f-8bff-8d0020b29834",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "607cc7e1-6171-4004-8352-0e06f291aaf1"
        },
        "item": {
          "id": "f3f264fb-fa31-4d9c-b9d6-0748bf413c9c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "979db60f-8dc8-4fa1-989c-07bca1bbc636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d680df-6e02-487c-ae95-1777299d7368",
        "cursor": {
          "ref": "41dfd07a-4595-4ae8-9078-92995c57661f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "102bb898-d3e4-41bb-a6c9-241971e59961"
        },
        "item": {
          "id": "34d680df-6e02-487c-ae95-1777299d7368",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8e41ff81-8296-4f96-be62-b625ab2eb10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fefaf9-7a5b-49ab-b9c6-6fc559ffb277",
        "cursor": {
          "ref": "40c1cf7d-c0c2-4ccb-9191-c3ca5f717dec",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "caab71bc-032c-4017-8f94-d94c559b5eac"
        },
        "item": {
          "id": "e3fefaf9-7a5b-49ab-b9c6-6fc559ffb277",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fe993b33-619f-48b0-8610-93d9530ee7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d315e3-f7f9-49bf-901e-800e145d1dde",
        "cursor": {
          "ref": "09a8c7aa-0f00-4885-8262-4e59b918522d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0c73d70c-52ef-46f5-99ce-bc0e0606788f"
        },
        "item": {
          "id": "93d315e3-f7f9-49bf-901e-800e145d1dde",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "72ab6760-9156-46a1-ae06-a99833e49d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e09310-fcf9-4a76-9406-3dd77af0270a",
        "cursor": {
          "ref": "99fbc6d8-9d3c-4a70-a4ad-478d3395a3c6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9c694bc7-72b7-48ea-902e-8e9aa5b462dd"
        },
        "item": {
          "id": "d0e09310-fcf9-4a76-9406-3dd77af0270a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c6d949b3-4226-4c9c-9afb-c4f9ab34f94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339c8162-0c23-455f-8e28-71bd50fa8d2b",
        "cursor": {
          "ref": "a88d0b21-5a76-4df1-80a1-e96b523e4427",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "30282aa4-f8b7-4c9f-a33c-9d8a99e43a95"
        },
        "item": {
          "id": "339c8162-0c23-455f-8e28-71bd50fa8d2b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a22c70ce-5d99-4216-ae95-cb9c717a380f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef2be07-aeed-407f-b280-a97c7205d6d5",
        "cursor": {
          "ref": "c31412ac-b601-4a10-8842-465e09244cd3",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1cab9eeb-ee18-43ca-b26d-07a63df3e4bf"
        },
        "item": {
          "id": "8ef2be07-aeed-407f-b280-a97c7205d6d5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "802d4baf-0da2-4f5b-9e8d-4988b474e5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e13b606-f33f-4568-8dbf-ee76f457d140",
        "cursor": {
          "ref": "90d13b6c-ec3d-4713-83ac-4e627c9d48f4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "227b8bdc-e566-41c6-b8cb-04e843f0f37b"
        },
        "item": {
          "id": "8e13b606-f33f-4568-8dbf-ee76f457d140",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6f8eddf3-2e19-4bf4-a40a-c342fbef0aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed4341b-6cbd-4253-903f-40bd89860d22",
        "cursor": {
          "ref": "d1177fcc-5b6b-4931-bd4a-d80d773f5f58",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e1cd7b10-b8fe-41f4-a93f-7fccc98b070e"
        },
        "item": {
          "id": "aed4341b-6cbd-4253-903f-40bd89860d22",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f6597a38-4865-43a3-85ba-122fe911a37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55956df9-4e10-4647-bd01-61d0165d23c7",
        "cursor": {
          "ref": "573092ac-3a86-4329-a43d-c51d7f822522",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c2b94600-2694-44fb-b23a-44d90dd70983"
        },
        "item": {
          "id": "55956df9-4e10-4647-bd01-61d0165d23c7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ecc20c09-965a-4c90-9a16-79e3399a0606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668618ae-d293-44a1-bbba-1546557f4a60",
        "cursor": {
          "ref": "c4e43080-a9b6-42ec-9ef8-1c898ad24272",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b6a92b66-df12-48b2-b1d2-9e4a42c64539"
        },
        "item": {
          "id": "668618ae-d293-44a1-bbba-1546557f4a60",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "345f4ff3-86cd-4bd6-bab8-8d2cbc2b067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a836a6-aca8-48eb-b3e3-3bb5b538b119",
        "cursor": {
          "ref": "4d8cf81a-23b2-4698-90d2-bb668d1ad749",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2d9e51e7-7bc5-427a-b7bb-067979d58c40"
        },
        "item": {
          "id": "d7a836a6-aca8-48eb-b3e3-3bb5b538b119",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "46a1a05b-4c51-4ff1-94b0-b13a069aec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b56767b-6c7b-4c68-9863-13dbee1133bd",
        "cursor": {
          "ref": "078a8298-1df3-4ab7-af2b-99945d52a24b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "782356ae-e9bb-46d1-95dd-1e7faa37bd05"
        },
        "item": {
          "id": "3b56767b-6c7b-4c68-9863-13dbee1133bd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5d49780e-29c7-458a-a1d9-9c4609d0f3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf90cc21-1682-41f0-9203-fe2f89c06016",
        "cursor": {
          "ref": "3bba65f0-44b7-4556-bcfc-798b384d9671",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5b0b9cee-400e-4df4-81ba-af620e7f91e0"
        },
        "item": {
          "id": "bf90cc21-1682-41f0-9203-fe2f89c06016",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "16c88754-40a5-4176-b00d-4f27c247acb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fd4cae-7722-40f3-a137-2f24ab7b451d",
        "cursor": {
          "ref": "70949914-fe0e-43ac-ba64-92d03e82b67a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "23eda486-b6f7-4f1c-afed-e51aa0308644"
        },
        "item": {
          "id": "c4fd4cae-7722-40f3-a137-2f24ab7b451d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4f22bac9-063e-4520-a21a-654a4484f51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2801b69a-231a-4880-b24b-0f7032cff45d",
        "cursor": {
          "ref": "a90f3f81-a1f9-4496-b06c-e3df255f1843",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4271355d-a114-4d16-9359-98517da91c1c"
        },
        "item": {
          "id": "2801b69a-231a-4880-b24b-0f7032cff45d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "af3fa1a7-9b6f-4141-9101-2a453e0ce4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c8c6f4-0338-4381-9dee-fb4f9f76f371",
        "cursor": {
          "ref": "026b3879-7331-413b-a9a5-91a9431b7514",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5854c27f-d64f-42d5-b8bb-45d938df1fac"
        },
        "item": {
          "id": "b8c8c6f4-0338-4381-9dee-fb4f9f76f371",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "19d7e8f3-1a68-413f-9631-2446e3d3b384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb210275-671b-42e2-8ce6-7b370acf8151",
        "cursor": {
          "ref": "87bae8db-7be0-4a51-9d9d-ad47a16b96f8",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "493841f3-6409-4493-8ec8-221e7f1f6170"
        },
        "item": {
          "id": "cb210275-671b-42e2-8ce6-7b370acf8151",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8493e0b0-bf5c-4bb4-84ec-c1a21a8e12b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea133d7-0845-433e-836e-83cac6bb912a",
        "cursor": {
          "ref": "92ea9034-afbd-4cd4-a7ec-2737321decab",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "206684da-63e5-4c4a-8d79-230b048fdbf6"
        },
        "item": {
          "id": "aea133d7-0845-433e-836e-83cac6bb912a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4c6383a6-5044-4ef5-b806-08ac948f9d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219e03e8-4c96-42ff-9729-85ebd6b5e5ef",
        "cursor": {
          "ref": "3ce8f6b1-3efe-40d2-9132-e79f88de2b75",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "550ec646-ce73-4f68-9162-f5801f755796"
        },
        "item": {
          "id": "219e03e8-4c96-42ff-9729-85ebd6b5e5ef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "140bc911-af73-40ba-9703-320e0211995e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366ddd4b-2404-4631-a7a0-653fafd41a22",
        "cursor": {
          "ref": "675f8f22-78a9-4f00-a425-713cf08bcec6",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "843cf128-2f0d-43c9-9fba-7f65cdf64521"
        },
        "item": {
          "id": "366ddd4b-2404-4631-a7a0-653fafd41a22",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "33ad533f-125a-4c4e-9cf6-247907f6ae91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e165f2-a702-4e2b-b90a-8d34ead0e5ee",
        "cursor": {
          "ref": "ab490b6e-3cb3-4a28-b626-5fef838028c7",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d7eff41a-4536-47c8-a5f4-96af3080bc51"
        },
        "item": {
          "id": "a2e165f2-a702-4e2b-b90a-8d34ead0e5ee",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "747cc7ce-e949-4da2-8614-18494bd57ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f955f8b9-4844-4797-a353-68ef37d8e541",
        "cursor": {
          "ref": "32f018b1-417d-44e2-945b-44a0b015c88b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3c1d8922-556e-42dd-b9ca-ee18d5c7d69f"
        },
        "item": {
          "id": "f955f8b9-4844-4797-a353-68ef37d8e541",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "001bf2c7-aa01-44f5-81aa-7d4798698cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ee1ff6-85cc-48b2-9ad6-1788aca4f9e3",
        "cursor": {
          "ref": "3f6cd741-2aa6-453f-b660-1941d3a8708f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5ec4f1e7-5457-48bd-b289-1e9a3c4df765"
        },
        "item": {
          "id": "74ee1ff6-85cc-48b2-9ad6-1788aca4f9e3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ef564cf1-7c0c-4e52-8ef7-25b3882e5f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3407b9fd-bf7a-40a5-bc35-de9b31162f46",
        "cursor": {
          "ref": "5f232d82-1059-44a5-bbfc-18b621235c75",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "87ebeb5b-eb6c-4b11-851d-07868d189aa4"
        },
        "item": {
          "id": "3407b9fd-bf7a-40a5-bc35-de9b31162f46",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a53851d9-2490-4c4d-8174-1f543675515f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0504b6e-1fc3-4a4b-844b-e6678367ef4e",
        "cursor": {
          "ref": "909c086a-9a95-4383-b550-fcccc7e304ef",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "23214b96-299f-4fb8-9d37-777dd23143ed"
        },
        "item": {
          "id": "a0504b6e-1fc3-4a4b-844b-e6678367ef4e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "859b062a-38f7-43ba-b142-a7e03e66138c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe2632d-b9b0-473b-b07b-d873d37e4c73",
        "cursor": {
          "ref": "abdfcfda-a87a-46cc-975c-f35a42d25afb",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6add4b7e-efa3-4397-8929-5ceb8fcb4d2c"
        },
        "item": {
          "id": "5fe2632d-b9b0-473b-b07b-d873d37e4c73",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9ff9f830-f131-4107-83c0-541f352130e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b91aaef-c857-4d36-8e05-795f00720e06",
        "cursor": {
          "ref": "46b07fd1-c30c-4fc9-8ec8-6b306a0f1913",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f5af8ae8-42df-49f4-ae8a-3557ce5b8698"
        },
        "item": {
          "id": "6b91aaef-c857-4d36-8e05-795f00720e06",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ee73dfc2-1252-4302-aeff-0a383eb2d447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991a5dba-836a-415a-9205-93756809abf7",
        "cursor": {
          "ref": "e82d8e83-5999-47fc-b6d7-1fc5806407a2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "139d7bc9-13e9-4ee4-b50c-7661abd1e56f"
        },
        "item": {
          "id": "991a5dba-836a-415a-9205-93756809abf7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "113eee23-0ed9-4a57-9fea-12cb57590d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc4d599-e654-4923-b1d1-a270bf38d648",
        "cursor": {
          "ref": "e1d73fa5-0059-4d3a-8c52-2a927d697c56",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8b5255c2-1214-4088-8326-bd586acdf687"
        },
        "item": {
          "id": "0dc4d599-e654-4923-b1d1-a270bf38d648",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e23831b9-6a03-421a-a92d-6903c6c6be45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da70388-2f53-4110-8674-4cbb6fb6dc13",
        "cursor": {
          "ref": "be8e7934-5648-47f4-a90b-5efdc6332385",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "de411e55-6776-4016-9a4f-42acdf10ff4c"
        },
        "item": {
          "id": "4da70388-2f53-4110-8674-4cbb6fb6dc13",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1aa1d169-8f9e-4bb1-a282-9d21c3c2b14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75049171-fe1a-4fc9-ba36-83ebef51f6bb",
        "cursor": {
          "ref": "f3f80684-351c-40a4-92af-a6d315adeac6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6e624f51-a506-4587-8dfb-d13daae04e44"
        },
        "item": {
          "id": "75049171-fe1a-4fc9-ba36-83ebef51f6bb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a91be1d8-3147-44b5-b8b3-a81748ad05b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f678d03-e008-4e2c-8fa7-809e798fdc64",
        "cursor": {
          "ref": "66db5bc9-92a4-44df-83e9-0f68ef74febe",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "54ed871b-cd3b-455c-8510-2b0087b564aa"
        },
        "item": {
          "id": "4f678d03-e008-4e2c-8fa7-809e798fdc64",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8f76791b-c77b-4001-b9c5-054bb2cb1818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b4bd1d-7c67-43f0-a8e0-89af62775a0d",
        "cursor": {
          "ref": "1abfdaf5-c0db-49a2-9422-5136bf49fd38",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6d3b2b2d-0730-4782-b297-596e2cfd9d0b"
        },
        "item": {
          "id": "99b4bd1d-7c67-43f0-a8e0-89af62775a0d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "103cf52c-ac07-465a-8653-0075c17b2f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32da3c10-4741-4c42-b8e6-f6f40870d8a9",
        "cursor": {
          "ref": "1c28fc8d-1847-4518-ad3b-35189973f715",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "027d8953-fc72-473d-8998-8779d2b367f3"
        },
        "item": {
          "id": "32da3c10-4741-4c42-b8e6-f6f40870d8a9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d50e47df-7101-4bb5-b3a9-7dc80243381d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f9af6d-b72d-40e3-868f-21ca598e8dfa",
        "cursor": {
          "ref": "3b35aa7a-d3cb-4c6d-b95b-030ca8bd12ae",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "50a53e16-e29f-40ea-a4d8-83fc6e903b70"
        },
        "item": {
          "id": "d2f9af6d-b72d-40e3-868f-21ca598e8dfa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b19f1cc3-8293-4faa-ac9e-e8a3766e70d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5a0d42-e74b-425a-b653-f05f98509b90",
        "cursor": {
          "ref": "b00db478-a960-4cd2-938c-fd2f0dc5a96f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9d1cbb8e-f277-4ccb-9aea-9ac094e1b627"
        },
        "item": {
          "id": "ca5a0d42-e74b-425a-b653-f05f98509b90",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bbe9d276-b348-4b19-9ce6-01e6514ddae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec0a215-5b3d-48cd-8e33-363fcaaeafe9",
        "cursor": {
          "ref": "63262079-1880-42ff-93a8-ba900bf0c38b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "81097df0-f68b-44ea-9c64-b77e1f16f9e3"
        },
        "item": {
          "id": "4ec0a215-5b3d-48cd-8e33-363fcaaeafe9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "58c6e000-3b29-4232-986d-8c100a865ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26f9a67-b2fc-4fde-8521-68a4e54fc3f0",
        "cursor": {
          "ref": "fc596d6c-4ad9-40eb-bc84-552284ae5e9b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b2109bc3-89ee-4f25-bf89-3291948f93de"
        },
        "item": {
          "id": "f26f9a67-b2fc-4fde-8521-68a4e54fc3f0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8f6a861a-6854-4357-9815-d1464146d048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb66920-109b-4595-851b-8621e224b8a6",
        "cursor": {
          "ref": "92b6842b-785a-4f48-8629-26db259ac569",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a6ef8742-a4a7-493d-865b-a43ddd85e21b"
        },
        "item": {
          "id": "0fb66920-109b-4595-851b-8621e224b8a6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5bcf4c31-f997-42fb-b332-0c19e2ab4b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0984d9-3bb3-40d3-b3b1-6b7994656b84",
        "cursor": {
          "ref": "a5a7ae9f-2b03-4d4d-8aa5-f8c4dfe2aba5",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "25cf7ec0-dcda-493a-83cd-da7753f2dd53"
        },
        "item": {
          "id": "5b0984d9-3bb3-40d3-b3b1-6b7994656b84",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "86ea6325-06f3-41c3-9934-b5f0e2e82f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744dcd35-fd64-49d3-ac0f-26d64b4e121e",
        "cursor": {
          "ref": "921643c5-1d7e-4771-9971-d4ca7e44ecdc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "46bc6b53-1854-43af-a25a-4a5cc7908e6d"
        },
        "item": {
          "id": "744dcd35-fd64-49d3-ac0f-26d64b4e121e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1e06e1ed-d711-45ee-9c4c-062aea192223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9608dbd-be9e-498c-8a91-606eca4d509f",
        "cursor": {
          "ref": "3b2e84aa-6b9b-4447-900c-71536c68f0b3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a1696f97-f3f8-4769-b2bc-4b4e18655284"
        },
        "item": {
          "id": "b9608dbd-be9e-498c-8a91-606eca4d509f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "30099918-82e6-41f4-b4a9-7b134b07e2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86239a31-8335-41d9-8ab0-15ff5deca4a4",
        "cursor": {
          "ref": "a36a5177-f6ee-4221-8071-30d2cd196c41",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8c91c8e2-f0a2-4cee-affa-aae6764313d8"
        },
        "item": {
          "id": "86239a31-8335-41d9-8ab0-15ff5deca4a4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "14be9ecc-9e9d-4489-9f19-c90093161cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d84eea-c623-47b6-bf91-8d95db887d5e",
        "cursor": {
          "ref": "97d94471-3ca8-4725-b185-9ba5bb4b0414",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d91c4cd3-4c67-45ec-be62-c369b97debb1"
        },
        "item": {
          "id": "64d84eea-c623-47b6-bf91-8d95db887d5e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "79fc59d0-7d67-4bfe-add1-f38079ce40c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef22290d-0e56-4ad7-b9f5-04c9e38707ab",
        "cursor": {
          "ref": "bb1aa87c-4e6c-431b-8128-1b5b41589516",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "412e5893-00b2-4644-9c8b-bcc39b0ee46c"
        },
        "item": {
          "id": "ef22290d-0e56-4ad7-b9f5-04c9e38707ab",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6a978252-0f39-4b3d-9645-035de62e904e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd97b161-06fa-44ad-8e4c-c58d49b53e8d",
        "cursor": {
          "ref": "ec93cbfd-dce8-4a41-a140-5919e829674c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7bb43419-bfe3-4e34-856d-17cf10ed2f05"
        },
        "item": {
          "id": "bd97b161-06fa-44ad-8e4c-c58d49b53e8d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c0fe8851-4774-4831-8cac-ac05704a28ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e86705b-f62a-4351-8f7b-35a08dffe42d",
        "cursor": {
          "ref": "cc4a5e4b-8a77-41b6-b59e-01c20d6a0827",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0175a6a6-b364-4efd-b997-30a5afab163b"
        },
        "item": {
          "id": "3e86705b-f62a-4351-8f7b-35a08dffe42d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "56692057-a982-4d87-aa0e-9cfcecb5c5a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 140,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4fe78a-5a3d-44e5-b341-d04f34da6014",
        "cursor": {
          "ref": "5f4daf7d-c1ff-46e3-8609-946f545ae80d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bedd5062-4cf1-4036-ac34-bea39df21cc2"
        },
        "item": {
          "id": "df4fe78a-5a3d-44e5-b341-d04f34da6014",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "63ae0a16-8470-4bb9-8743-73aa2f0fa505",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2214d301-b33b-444e-9886-8cbe515c00cc",
        "cursor": {
          "ref": "cd3288eb-3869-4d37-b541-ad9fe791980e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1313333f-802a-4477-b77d-31efd95e6f73"
        },
        "item": {
          "id": "2214d301-b33b-444e-9886-8cbe515c00cc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a9629c40-7e1b-48e0-9c66-0bdc0d75831f",
          "status": "OK",
          "code": 200,
          "responseTime": 3118,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a69a7a-c298-4ccb-a506-c13a331b29f0",
        "cursor": {
          "ref": "22ef188a-9ff9-4f4a-9fd4-7df137b52465",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ad613ba2-b9d8-4a9a-b8af-596a1566ad48"
        },
        "item": {
          "id": "e8a69a7a-c298-4ccb-a506-c13a331b29f0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cf67a723-502e-43cd-bc45-7f8d90246217",
          "status": "OK",
          "code": 200,
          "responseTime": 2692,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7254023-f984-4930-b18f-7370c8f55658",
        "cursor": {
          "ref": "a1b0fff3-5762-4859-aecc-629965ff653f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "32e2e23c-9615-429d-be7d-1812a720788d"
        },
        "item": {
          "id": "e7254023-f984-4930-b18f-7370c8f55658",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eefdb420-8161-41e9-a29d-a6276f91e474",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7254023-f984-4930-b18f-7370c8f55658",
        "cursor": {
          "ref": "a1b0fff3-5762-4859-aecc-629965ff653f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "32e2e23c-9615-429d-be7d-1812a720788d"
        },
        "item": {
          "id": "e7254023-f984-4930-b18f-7370c8f55658",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eefdb420-8161-41e9-a29d-a6276f91e474",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8041e0c-4dca-4e38-ba1f-a38f0ae5841d",
        "cursor": {
          "ref": "98bb9ea8-be83-408b-95bb-0b2aa14b4326",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e6c7b8e2-eb8d-4d1f-82e3-b0a085788cd2"
        },
        "item": {
          "id": "c8041e0c-4dca-4e38-ba1f-a38f0ae5841d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c21bf40b-5eca-47c7-bc37-ccde162a840d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c3ad91-728d-4739-a649-30efc456f7db",
        "cursor": {
          "ref": "f0b24f4b-f963-40be-81e8-6d99543cd3a7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "19baa404-377b-40ae-89c1-e1a021283fcd"
        },
        "item": {
          "id": "d6c3ad91-728d-4739-a649-30efc456f7db",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "35513495-ccc5-4ccf-a218-0c3733c363b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}