{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "70e0dcad-6c19-48d6-9174-67b15790e6ce",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6b2593fa-6018-49dc-926a-a4fa65d7eb1f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78e82106-c8ec-47a9-af87-6cf88a5e088c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b4054c2b-72b2-4990-a643-f6d4d6c8ac91"
                }
              }
            ]
          },
          {
            "id": "106fe9bf-b52a-43a2-86e3-9537a8362aa8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84dfbfd3-a532-4699-86e5-6a800d71863a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9b6984cc-6a13-4dda-8acc-88046e8038b5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e91ed113-09f9-4db2-95d3-1976b04105f4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "45e067aa-23f9-4ce0-8bde-30d3e8b35d9e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8d7566a-7d8c-42fa-aadf-305797fefcc2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3228f916-b073-40d3-bd6f-8b3ec94396da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b81c737-e0b4-4791-a124-6f258cb99e9e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea342a5b-44d2-4c43-94d9-0194d84a04f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f40c4da9-9ccb-43a8-a573-8fee6dbfb4cb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cfb46746-c71d-4d4d-9d8e-caceadebf264",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1fec22ad-0385-4f59-ac01-935764372d25"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be957c4a-8b29-4463-8290-82f83eba151d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fe38fe93-16e5-49da-9872-d76461b886a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da1dc6b0-304e-4d46-810d-248ccb468916",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42ad8558-0c1f-48d2-b941-8b1658cb0b33"
            }
          }
        ]
      },
      {
        "id": "62b7c663-41ff-4225-93fe-385dce345218",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "48494aa4-c946-4cac-a85c-b49c6d197ffa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6957232a-12db-4a18-8a97-56be7dd67d4b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53b1cfab-2d80-475b-afb5-1d5cb4d46bf8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2a5982-0421-4efd-a8b6-ce2c1d191c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55640062-a8ea-46e2-ab79-8434d45d0ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23ab68c-2345-4058-993d-4a40fe96d74c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d2abea-665f-4ab2-bc08-6b8f3b926a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf205263-54db-4dcf-b897-2b900c961a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6148bec6-25dc-4f93-ad5a-f26bbb224976",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19998644-af22-4325-a3d8-0d5376b20a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b1ab1d0-28f4-4d7e-b56f-79c6bf33787b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56f77103-0a76-4085-8ef8-9f99ad752f09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b56eabf-c64b-467e-b8f7-08599d907683",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e289e91f-f156-4e3a-aa91-9cdce1551fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f630535-3994-46b1-8d3e-8b8fdd41ddf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df18f3d3-ec38-40ef-b139-cc0799dff1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edbfefe-9311-48e2-a05f-778c732abdff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ec4884fe-2ec1-441c-80a3-9544fcddc914",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8eb4bc7-6a0a-4a4c-b765-cd78c7ed0e7f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "287e3292-d97b-4fac-ba90-f89467c47607",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c12adb28-470a-499e-bf3e-a4e2c7c529e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00788703-62bb-4279-a107-20c65edaa03a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f341b634-7fcd-425d-abfa-e0a97876d148"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72c4243a-e747-4f80-b44e-b06484e5079d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c8caf2a-3795-4caf-b64e-f566ae544317"
            }
          }
        ]
      },
      {
        "id": "90d44321-3689-4e98-a643-b09604269b76",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b21bbb79-3b9a-4312-8590-30eb0eb668b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5cbd6b8-9e5f-4b15-8edb-ba91fa4e1095",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "68118547-4ec2-4213-8812-9ef3523b7f53",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5226d0a-e8b6-4b4b-a37a-bd768f5b8fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0d159d-80dd-4099-ba73-5e0e02dc576d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d6acd0-3605-4c0f-a4ec-4457829b987f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3d9dcdf-ac6a-49ee-b1cf-037d3d9aa05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ece077b-17aa-4687-80ab-d7741964cbf2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c2821e-6922-4672-b654-e78c19883f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4e47d8-9d5e-48c9-945e-6ff980641fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6224602-c773-4b15-b1a8-f6ca2464416a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a987bd7c-2435-42d3-b75c-9f056b23f88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b1a11c-6b9d-4b3d-80a3-66dcd02fbd5d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d782d4-c3d5-4cb5-9293-12e781eb1b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289e5cad-95a2-46e8-a045-3d72a935cd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7089ba4-b49b-47c2-842c-777203a9c20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f47654d4-928b-44f6-bc87-3d4a9dc3a71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29658b5f-6ce7-42c6-bfd0-401741386d10",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06beb60-c12c-4bcf-b082-76a415ff2763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec19f2b-ab82-4de5-b8fc-546ac7cd0f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e0052b-8580-4b52-a52e-99facb322bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "750ec194-a442-4cd6-b545-194a33a8a5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110da7a6-5728-4731-a0b1-77e74062db5b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98b90c8-0670-41ce-829a-58e39ab02e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b09023-bf4f-48f4-8e24-acbd9b019a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e610c6d-e516-479c-8cb7-6f856218a747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d30c91e-816d-4feb-b401-d190c1a9c199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b3289a-cfe1-4137-a67b-540c90a9a06d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c917e102-0f84-4eac-b613-796f80e90aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb5bb64-1779-4cea-a0ff-8d573988f89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb40599e-9ea7-4720-8c5f-c9b23fe69337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea4e3ac0-1577-4c70-84f0-441a2766392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27b6f73-0806-4bf3-8602-5bba34adb9cc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b071b76-cc2f-48d9-ad20-e2204b6b21ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bb173d-dec4-4840-8325-ad0b5d736bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a56929-5f1f-4931-b0ba-5d9262a75cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70a2ed68-51ee-46ca-9af3-f65577d8e0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e099a93-6f3e-4c86-9c0c-95760067bc78",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f34c651-d68f-4f50-9da8-5afc6e2a82c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be933413-19db-4311-ab07-837b56859d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1e897d-0115-4e7b-9f2b-e2eea114bb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5865c28-3f7f-40b7-bb32-9d1c805aeee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d1eeb2-0bcf-498c-b241-10674ed0fcc2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b6a5e7-7d90-40ac-b1ad-eb8f2233c08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9beb4f-59cc-467d-8a87-d560b50298a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e92ff9-4779-4df4-8634-aa5b3d5e4f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "481f6ba3-40ff-43cb-b3e8-b59e281e6c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359dd845-a6e5-46c4-bf95-b35fbbf8460b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b4d983-8fd2-4f9c-b1ef-2c9cffd51561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232fc7ab-cd9b-4e1b-bbab-b6f7efaa3d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87304353-ca0b-40de-8d95-64b1a3472568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcf83040-46a0-403d-9d01-bd084e1fcaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5080416-a180-4d65-9093-c593aacfa8c2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8561f7-70be-425e-8399-af350150c886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5755f01-b03f-4096-aa2b-85b417193988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0a2d48-5278-43e5-94b8-2ab75b6bf592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a889283a-28b4-4e1a-9f3e-59512c45ecec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbd72a7-ae76-4b11-b684-6c68d6807f6f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd435ea9-fb0f-418e-a4af-d89903c18f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355064c7-5a14-4733-9700-a432511c10e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4c789d-7cb1-4821-a517-ad279ac4d23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cc08596-259f-490f-aa93-877265108d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b0b934-30f7-4a82-9c2a-fe7008c8d77b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07185025-7cae-49e3-9bbc-4520f31dbbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df26fa28-e4d9-44f9-9b84-0faf75d274c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7d7534-d11d-4db8-9c29-56ff4fb145ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b86e390a-ab03-46f1-b124-f1051d31fed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8afb101-4dd2-45f9-96fa-6c8c18d9e119",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffde129-c6b2-4ee5-bdcf-2ec9abf69485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c07e053-fc65-4904-aa65-37c7b5d17062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c0bebd-0740-4c04-95dd-b3c5faebd97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cf7ec1c-c3b6-4519-ab6a-698176dfa240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a633e5a-fe0c-4d78-922e-8802b8b340d0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfef0a32-4923-4341-932d-0a09a4905ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc51a119-a9ef-4dc6-a976-b1ae00df2b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd034e0d-093d-418d-b34a-7c10c128080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e68644f9-4995-4ef5-9f15-c4a8c5193513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d15a64-7f25-49a0-a422-a42cd9487af4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f4badb-4e33-4f7a-9a4d-655a96f5e3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6312768c-1c45-4b8a-9de7-a5bc50439151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f71bee-3d01-40d4-ac8f-58fa92371629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c867945e-2bdc-4dc9-8316-12e7f8822fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99f38a3-52d2-49c4-9f2f-dae838ebad85",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151791fb-6176-4c61-8af9-e5056440d7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729d3d78-80e2-4680-96d1-96b1181e24e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbaa0ad-4cd4-4f42-944a-e4c54433a7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c842682-5099-4aac-bdd2-7cbd65325341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384a0032-3d0d-45ae-a0fd-b2319a4ad4b9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd5337d-3052-4227-ba39-bec6a0281ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a66f851-2053-4b2e-b16a-afc9cb9a49e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0ed360-5a7c-4960-9808-d47ae2f98e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eac4230-9edc-4451-855f-5099b3394bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f73f453-37a6-4236-be8d-c02e504f6755",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d3a9dd-e781-4529-b725-097f771f6a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b255d76-7fc1-4c39-be0f-1f2c1c8f7e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106b6f60-1d01-42ea-b6b7-fd7eeabcfaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bfd50ff-e80c-46d6-891e-82e8410ccf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e416f99-3f89-48ab-a59b-ad03a4cdd9d8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3018237e-f9e8-4c6e-859b-3c978115a335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8aca4a2-7523-4d53-ad7f-5f31be577e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca52d28-05c7-4b47-bbc9-4229802a38e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0afdc463-737c-4ce1-a210-ebbac68a5f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64bfb78-2a38-40c3-8113-85de10652567",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7488a5a9-e71f-4e94-b4ba-8aa03ecece12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ab506b-950b-440d-9977-6ba5359b2efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5008345-52a0-416e-8e98-4de122ad62b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1025d3ec-a773-4f47-a834-88c384badb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f89118-ae05-4ecb-9afd-aade544dfa6d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3965de4-27ee-485b-a84f-a71a2d65882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388faf97-4a3c-489e-a208-2822cda855f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37628cd-e472-4071-a584-cbeccbc65ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a90791b3-22bb-4e9b-a451-38ea3557e5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5a2d79-5ce7-4dad-8e25-b4da399cbc3c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ae37e3-2e36-4180-91b3-d652b65fed62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32238dd1-1a8a-4455-b907-edbba3d8e396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec596e88-b0aa-4a0a-a610-01113c6b17a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa83a93-871e-4c88-b338-d7260fa12d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddb1f3f-dfdd-48bd-b205-4c9f744d2cff",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded6c485-0831-4a71-8066-fe55331e81e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b7a63c-8429-4c11-b465-17d00f972c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0e2678-fcf6-4534-a7c8-4af504cd3382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f53814ef-48d0-4a38-9e96-8667613dc382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534745d2-7814-4572-9c07-852537bfedfc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289ce60e-2f10-40c7-88f9-72847d422144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ea2562-ef6f-4557-8c3a-df79b1cce8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc298c82-eedf-4131-aabb-99345cffd9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9eb6f90-de6f-4cab-ac5c-5585bb7ff7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143b40d9-f00b-4fda-a5ff-51b6c2d9409f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b0461d-bdc6-4c67-931a-e08da1281b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bc3290-b5d0-4bdd-aaf0-221ed30e7fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754350ed-1362-44c2-9746-a7a22199b97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8fcb92-f49b-431f-bd1f-aac8acd0e99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddbfcbb-8476-4f56-9cf8-72dc692216d1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780f5812-edf3-4763-a800-15cd2d146c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a842e6c6-cabb-471b-adb9-d96e16442b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bf7273-30d7-41ad-b565-be86dd3b6e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f265f4d7-ddee-41fa-9cc6-2e82b50a0fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ad1ca9-5687-48bb-87b8-33aec90079d9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae821ed4-6c62-4e41-9cb6-4630ae760f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d778b0f0-57d1-4ad9-9782-8c2a0af234d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8314033f-34a5-48b1-b9f7-b9c65b248b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95f2d48-57d8-493b-8489-a1fa65fe1121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050aa610-e444-4b7b-9c45-035d9bcb2bb2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a1c378-da9c-4195-a09a-5f2b97f5885e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb897171-3f35-4a13-8327-c3324e456917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6f78ed-fe4e-45e1-9390-2e324ab0afa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a9b636-d873-4d11-b3cd-bbbf508277ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b9df2b-6853-46b5-8518-fbadd06d1ee8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844ebbe1-57cc-467b-87d9-4436fef41897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9a81e4-e7be-4cab-bfbe-92d72ecbafde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05838b23-dd92-4724-b07e-366ace217234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad0e204-0636-49c9-a9a6-8c6b5ffd3700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36819d1-0e73-45b4-af42-3c99cc1e142d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72562dac-7e85-4c2e-93bc-258a7cbbb060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d1b320-24e1-4a48-ba07-0e77949687ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38707d02-24e7-43d9-a37b-9b6b8a4c5b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39050e4f-8679-435a-a31e-c9b4d86caed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759f02a3-26f0-43bd-bb00-5f4e9d11d172",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f71dd6-382b-4d63-915d-ec845bf2549d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fbe15c-bab3-42e3-98f0-107d4729c81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4300cca-f240-48fe-a6b4-8aba62144e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c155951-7de3-4223-8c88-d774fa29acaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a637bd-3121-41c5-90cc-6b176a4a5371",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d15eff-e675-49dd-9965-cd91c0583c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f14d21-8f54-4b8d-8a12-5a31cfb66177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec446edb-8dd4-4c5d-883b-3324674b9217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f75626-f1de-497a-b609-f2d3a8fbbaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbbc001-8a4b-4a8d-98cc-0a12b5915fec",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9d463a-4fd6-4057-b1b5-6a32cbef0de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb85df34-3560-4b78-946c-0d9134018c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bc0806-1bab-4980-8c16-61087b1409ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb024cfd-20c5-439a-856a-26c328b3dc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8dc327-8b7c-408f-886a-344cf52d9c6f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a46e9b8-5ba7-4cd7-b438-553481fda61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4d084d-373e-4fe7-ad10-3576ccff626c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf8a62e-39b3-4905-9b0f-5bf3770fc244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "eaafdee2-38bb-44fc-9b98-aaac14f72f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2735f57-0176-4239-9d7b-da7b370475a4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e655fd14-1717-42fe-bbdf-b76c692f62a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e9d16fd-4581-44c1-8734-5b3d4713d70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf44496b-6aac-420f-9cbd-8db7a7cfc3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c7f32b-ed79-49d7-a840-1248a70ff277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbac5e57-418f-409b-9d7e-08f7dd027817",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee15afdc-822a-43b3-91ed-ca2a02fe0f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39784fb4-a5b0-4f53-8707-d940843ad60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6985510-1709-4e3b-bfdb-430769ed37b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd57c0b-32ba-4e23-80d8-7f4a71aff6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3aaa48-46e6-414d-a20c-c498aefc3ad6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087d54a3-ed68-4f95-be0a-593c74022959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5e00d4-4baf-4a62-94ca-08f621e79470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f21948-ff88-4f7b-a048-78da971cb142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "037071e2-a739-4407-86f1-b76eb27be6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdaebda-7b84-488c-9033-bcfb537d2f9e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d2eda6-fdd0-461e-a610-19663aad38f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf21631c-faa4-4175-8cad-32653e4df020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4091a69b-9a5b-40ca-a437-f2a922d2d56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73acee9f-17c4-4312-b2bf-148b21ce22ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55e721a-6906-47c7-aa5a-6c88d97e3229",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1607f9b2-f449-4cfd-93cd-fe7c189a89da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37566d6-fe17-41cd-923d-37fddab71903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d9ef31-bf8d-41a7-b81c-3288ef7a781c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b08d80a1-4ead-4c94-aee0-d49e21885bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8990aa07-59c5-4ffc-bd72-3dbfce53eabf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6754aaeb-075c-457d-a423-16d2fac0a205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4074f96c-2040-437a-ba3f-d080fac579e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3d083e-f344-4e5b-8c71-6c99c3a230a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "611246d4-c062-4597-94e3-4f633eed46ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c7c3f8-2ddc-47ec-a9a3-125ac6907cf6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8942db-157a-41c3-9453-42bdbda25f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a68946-44f7-4fec-af1e-35658c161b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469ef437-06d6-4c01-87c6-b17e7c95d1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8a493fee-8b5b-437a-913c-a30838cfe72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3528cd8c-39f2-44ac-bd11-6188aa96c80a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26a6942-cc7a-4a25-a003-510f71e09358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8cc591-4936-4cc7-aa69-385389567378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176bc270-c639-4554-83a4-3da065faefb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "052a0786-cab5-455e-9e76-e3e7fc273e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7b1517-d385-4c48-9497-be226e2fdc64",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02c73bc-7bba-4e0d-9f44-84d5e2d2a48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdbf069-e4f1-4c7c-9355-13d2951ce641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dff430a-6a84-4cf9-8156-0518b9ae3171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4648b8af-21ce-482a-b138-ea3fc6d8613f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ff90cb-bad7-4a8c-87af-4c361263e54a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8408fc9e-c875-4f07-84e5-70b9873b9933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5568025d-8e52-49d0-acb6-2b72c75c34ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58247c4b-5337-4ecb-8bfd-2ea05a8c4b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db1cc35f-b1d4-4239-874d-7ed763b5dbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbac997-6175-482a-ac4d-9583d5227846",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b9f2e7-1656-43c9-add5-60d636cf8957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2ce252-fda8-4cc1-9485-089767e3f44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b2ad56-b990-45c8-b57d-6a8aecab96d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ff53ce-8365-486a-a032-6ebc2bdda36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f9c2d0-581c-4e1e-b7dd-11e65e33132d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845d544-0bf9-4652-ab33-9b5bb4d51348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4e9d5f-4550-4350-8554-f0caab44ee4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f6ff36-dee2-411b-86e0-9e9fe51dc7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29003bdc-23a6-4ea1-8711-689144580573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f395ce2-2861-4221-9f1c-16ccfb6f2c90",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fa992f-77ae-4ecf-99d0-0f035eb463d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa3996e-0625-4c9a-82b6-dcae18b8c32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757633b1-f777-40d2-ac0e-8ebfdce938b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "292c2dae-f22b-4863-b5b7-797cb0308a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd3ba98-ae06-40af-8920-30a4bc0de18e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1953607b-d149-4228-b489-2f3c68a86901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8d65de-a927-4f7e-b215-60eac126381d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4058c3a-d796-4c8a-be98-649605e56d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52e96c99-2cbf-4ed5-a733-6bef377a792e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd28d27-7d74-4dd3-8c3d-171d2781c384",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a3ef63-882a-47bb-8bb2-a0660c629bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716e3771-4cd1-4503-a835-f2e54f7053c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624e89d0-8d01-45be-97e3-0c5fd45bea5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e88405d0-5089-40fd-b982-da6392fd562f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edf3e2a-e8fb-422a-9c6a-c80d4b4052ce",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f951c14-f6fb-4be8-b0fd-620081221125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce4a134-1ce1-4492-ab94-1698c4d2883f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be06a8ad-67bb-4b57-9938-6f9e28966003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "741e38d4-3eb2-43eb-b663-842e34a4a0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20902724-0aa7-4bf0-9db1-a3236ce9718b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9926fb2d-c739-466c-bceb-b536ae4e7b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147b75bc-8356-4cbf-a0d2-8d7cbc2fc39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bda6eb-29e9-4e47-b961-0a382fd96126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb32f4c9-126f-4aed-abb3-879f6a455f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52f0949-f357-4d90-8b80-baaeb26f596b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae4b542-3d82-4873-990a-dec1c9b732a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da701d4a-2384-4241-a75f-c79d39b2e319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c44ea0-9d79-49eb-ab1d-045cb7a6ce2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4bb6f2-30f8-408d-94d9-58e66fe48631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9c311d-b2d2-489a-b0fb-120ec1b9791f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4094cce0-4b5e-4e98-8ce8-c8cf6e7dab57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74a0278-873b-419b-a5c2-5b717bd766f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f32396-f369-44db-a075-8c355eeef8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "107ba6b8-e805-4cf8-8c52-2dfcf2598cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d00354-4f4d-42e6-9f2e-fef4ab37de20",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9e5208-030a-4e15-acd5-eb8baebb7e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f0e9e6-0578-43a5-8c9b-9024498103c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf705e7-a8b7-4807-9bfd-98b1e3d2e0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c594533-1dd3-4a23-8abf-73ead3cae3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e21979-440f-4e72-bdcc-696c4e104062",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01469255-91e6-48c1-a350-b3f019cd2f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349fb5ee-4d4a-47a8-8ea6-3df8c25536c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0808784-338a-4d35-a999-b0e6fdbdafca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a6005689-4922-4998-a228-09e2211b3ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e30e354-5888-4c7c-b551-b1fb01c3b1d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79580bf-c65e-4ed2-877a-3d76c3f882ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10be86e6-ff46-4275-b12d-11b58452570d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a80ad1-e008-4ad4-8355-2bb4b0905a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "265c07c4-c1e0-442a-8e97-3e0997f17000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ce931a-3d51-4e3e-a7c9-261999ed2600",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5334877d-552a-436b-977d-a87cefc84fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0046ad-efea-432d-8e66-a07b91ca2bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6629ca4-e63f-4a71-bf6f-0430342bdf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a357af36-34d7-477d-a6c4-5298c03b7193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0979fcf5-0e42-4949-ba4c-b3fb9400500d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df3df43-6358-4b9f-a536-509970ac4f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44c9bf2-dd54-4fa6-8d3b-10313331bed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab02489d-2d26-479d-a845-c80d2aa29126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22d1d14a-38d2-4073-aecd-bc180bdfa8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a732d1-a402-471a-a802-c41aabc18d9f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe89c4c-a6f1-4713-b097-b287949d2e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6173f5-d3fe-4bd1-859e-1ac2dc6f33c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eb2b7a-9d64-495e-90fd-6a4ffdec23c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96178624-8d9e-4806-bd43-671324c47c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40db97a-2a95-4ec2-a961-218d53b4d4d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6159a0dd-9f1a-48d7-a396-9e26f7888106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60565239-9ad0-4828-a246-c37fbf10ad42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08a2422-1108-413e-b3a7-87161b66e9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8db251-3c1a-4d23-9bf9-db9a4df727e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c97c34f-e70d-4917-9583-92e09b48bc7f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609fb151-bcdf-45ec-9554-6079e901ceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304b2d46-ec7a-4147-b378-9d0586bcc962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f795c46-1ee8-4fa6-b259-cc481e86c88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "72813acf-2372-42bd-ac11-55cc15fa8e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497bf714-da3d-4a08-abd0-ac8383863b10",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3436dd4-c470-4f93-a5ad-dc6d80f5f05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c9a52f-dbf5-46d1-8829-08ad8a1fecab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc39a90a-ecec-49e4-a66e-e951fca71c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75684ff-077f-4cd6-a312-141c4c1b3d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea029b9-4fa3-4f42-aeed-277202ea040b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626306f4-ab27-4f33-8c18-9874bf9f3b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019de894-5954-43c1-ad2c-1ac6724e4ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7d7e01-49b5-417e-a701-57aaca1ced19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c28bf0a6-4855-4171-80d5-8c1fdd8341f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbf88a2-427b-48dd-8a12-28b6042fcd6d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5818c6-d3d4-43ee-9a1c-7b9e956585a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad27cf9-bcb8-4dbb-aa52-fa696b0c0e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e59787-05fc-48ab-a068-ba3a324ee4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afc14a97-7ca9-41bb-ac2e-f2e550416c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef4de7a-4317-4bd7-8f2a-a7fc81d0f5dd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acbdedf-e50f-4de9-9d24-46c4e025351a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea923138-4a1f-45cb-a5d9-15322bf25cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5ff08f-62f3-4fd3-a4b0-b61a8b6a6503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2f2dd7-a7b6-43a2-a756-70e196984b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1e39d5-ea2d-4d1c-8f25-e7357ef3ecfd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfabd47-b52d-483e-8afe-2bae1a219cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52e9726-2e4a-47ad-a4c8-f6ab024b8ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f48f177-fa04-40c3-9ec8-4dd1b32bc5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9eaf61-f17c-447d-8af6-7a9667032c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d142305-0a80-4a71-acd2-ff43f4ddce62",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4536eb14-5b6e-4a82-9cd5-d9365b127d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e617caff-4be0-4aa3-b4df-c6980fc5e06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c13591e-674c-41ae-a8df-7cda0d6baa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8506ac-6f33-48f5-a6b5-442efdbf40e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2712a391-8db1-4b63-9008-14e8757f0275",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8fad73-9557-4705-a717-609a5f7bf64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb0d313-006e-4ac7-a1f8-81b1a63ace86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1af5c0-16b1-4a8a-a9f3-9e7280e921f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1285ac3a-1f4b-40dd-b170-f3484b921faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac78bcb-d8f8-4bee-88aa-9ae460e5a56a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9e34b2-17b7-4ef1-a74b-658a543c3e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcea745c-f199-4425-94a2-03111f057811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fdbfdf-a0f1-43af-b86f-e8c17d1582ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5098665c-c38a-47c4-96c3-9d2d4e01f97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1464ddb3-a786-4d99-a00a-b9accf49eaa9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7335504c-1797-4fd7-aa69-872225992656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fb95b4-3599-478a-9b19-636fc6348827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724c2759-e598-438e-96ea-698dbfe76d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9725c804-0c01-48cd-b6fc-6aef0556b29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df71d85-f8a0-4864-8a51-a4e49b6da2e4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52049e60-0e54-44ef-a134-02cce693d87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0159d40e-6bab-4f17-80c1-8bc13a2c6f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1985875c-9ba2-4067-927e-91217692663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaec2264-0213-4d97-9bcc-99715e6b3a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98960236-c2bb-4d1a-9f63-cab7320e14c6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fa9b81-8d15-4dea-aac4-8761aff00f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe48d08-aea0-4f2b-95ac-6600af6e50d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f3ebf0-d8a8-4abf-b3a0-9e3c9bb6f468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d30b95-9f94-4f88-b2b4-9dc20edb8c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dd85a2-e896-44de-9b33-0ae2a76889c1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e132f5-20f3-4729-afb2-d9a3909626ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3a2ded-5727-4eb3-b686-f82de804593a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26f1b43-d3a5-45ec-94be-784d021c1331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19bc29e1-5bf8-4125-b3fb-42594f0335a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c218e0a1-492a-4cc5-a965-df78d5198940",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e34390-aa3b-496a-bd9b-abba5ef00f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a680b5-4e0b-4631-b8db-05717a73c6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4998c31-7bd9-4b76-8e51-75f0b3583ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f9cea6-2245-4022-b1ad-2fae89a60cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d801b9f0-6a85-4e8e-ab26-da973f22ec17",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a885f120-8a48-4e4e-92a2-ce279679afe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb08315d-9883-4667-a8e8-e2a1a2459714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b60a96d-9eea-40d6-9838-a8909eedf4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6925a5f-1983-4992-81a0-71bcfe049198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41cdc2e-89f2-4900-aad7-9c497a1403e8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d0472f-b305-4236-a782-09141c740aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a049b87b-c77d-4fb9-b15e-0b8fd2db85f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395780c1-a780-4d1e-bfed-690f11902847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a410b7e0-9ab5-44ac-b118-7d583cfa7a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc0ac1e-0f1c-4a0c-8a81-559dbb7eff98",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5269397-eebc-480e-acf9-03f51e5d1b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4192a61c-3bc4-48eb-8b01-ea461ef64582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7410ca52-2c8f-4a11-8b24-4376731f3896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be75286-4ba7-4443-ab16-fd4cdd84f0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc31be0-68f9-41ae-8b66-e306122893f3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46640bb0-21fd-4dd6-9e1b-3555178a79df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2155309b-73f4-4bca-ac6a-b0792b80e5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3e1220-55b7-4d1a-aade-2c2e631c2da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7044cb44-c8b7-49c2-b0b3-2a2f429cc7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cd9fb6-be80-49f5-a237-19f647faae53",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e92da2-8c93-4096-89d9-13e6dcb54774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5119dac1-b4b1-4282-b916-ff028a39fb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a725432-ef88-4938-91ef-e0f8c4adb27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84ebc518-82e4-4cc4-81ff-54f375a4ac83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef6a993-2dec-4aa3-b1e1-919e3612d07f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481064d8-09c3-4386-93a8-2a7a7998584a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63e05c5-36d5-4125-8684-cef92dd2586b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f171729-4e2e-4d30-8b38-7af8b50403ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bc81f7-af86-43a1-a2c8-0ccd09268352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f1723e-0ecd-4a7a-8ba6-4c2783486b10",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4185019-059b-4e85-82b0-e514cc2f5049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5586477d-5c04-42f1-a17e-291e1169bdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4aa055-5ec5-4135-810e-abedba54fe25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b8b5eb-a24d-4b6b-84bc-ecba53a9a5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3968387-dca5-4c18-a43e-0266dd30d6b9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2285aea7-ae89-4107-b834-622665e23207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03a7e93-a29d-4481-9faf-6ec3f424eafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8129298a-d74e-4a57-9bd8-3ffa33604b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc251f0-4001-4901-9da1-0cc84940eace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bee59f2-70bc-4c05-a208-13d5e8989e73",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873ce69c-6eff-4f1e-b5e1-b2217e0baa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12823dd1-79d2-4ede-9bce-ba90194f2359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc88c569-3996-4a31-a0f4-847e3ea151a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65fa72a-565a-44b1-acba-1157277fd44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6cf369-5924-4fa9-a15b-9c2092ca31aa",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965619b8-37cc-4900-8c10-aa1d444feb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131fb538-36f8-494a-9694-e3ff373eaa23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650a06d5-1b0c-4351-ba6a-b30ee51729f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf296391-01bd-48e2-a968-f377ea8f26d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a0858f-3840-4db7-b535-70afb67bd0df",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f1cd8c-124f-455e-a698-a79090350bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b013c6-1420-452c-b3dc-2b941026c3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4865cd0-db2f-4f6f-abb9-48a76852a7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3411d1-3380-46b5-b5b6-09c0345dbc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235a80e7-21f6-4d62-b23a-a77057567a43",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8d0870-208c-47f6-9181-d94fc76bd6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe910f0-b86a-4191-b292-b0f2f133cff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d78dd03-0f80-4dcc-98eb-4097eb03bb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "112e22e2-9c82-4d16-946c-d1fd266df5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c97dc8c-1916-4fd7-a714-396136457f3a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddba35d-8921-480e-b587-eb15909d4f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fbd3a0-ce05-43ea-9222-128526b3b4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b1a768-767c-4c54-97b5-71fe23563c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "512ade46-2bbe-4918-9874-a6426531d1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b259d0b0-7098-4c53-be73-529fe7b69c9d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633b380c-4e37-4de3-b6b6-da6d630ca42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faec7fad-8705-4b7a-a4cc-637a6a8e11b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c19cc7c-5ef4-432a-8807-6411f6324561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ba6b43-38bf-4f87-80ab-3ab1c5beb102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89e3501-c17a-4920-898b-897a27e2367f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f137fd80-d88f-4663-8a08-7c8f935b4023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4856941c-f215-4434-9da7-48ed0866e6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a4cce7-d360-4ff5-b5a2-1968e551b258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbffe337-160b-4c52-b6dc-326d6c7bdb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338b938e-039c-4858-b837-03144e9bb30a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212ea732-6007-4382-8164-70dc2ed76ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d96a89a-d6a2-4e50-9f2a-28b626cdc329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0179f025-9b7b-469c-a10d-6fc70cf489aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c332d54c-915d-4772-b203-e8f872645c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5326165d-b9c5-4927-87c6-71d8f5d12f56",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590f80b4-aa3b-44da-8e7e-c0cccce1a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8c887728-77f4-4897-a6f4-10d9a229ef4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe9f629-6275-4a4c-8bd9-2576f1308740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d793482-a792-49f3-a6ac-f82f415a7d84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f147424-3930-4805-9bd3-a5c0ff1b4955",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8636735b-8332-49fb-b6cf-da3a0811b2c4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecef999-ea3f-4998-8ebd-74dd016997c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b4c954c-d07d-421e-b2b6-a40b1966262d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0ab106-14f3-4890-bffe-35a936907720",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef546a79-bb51-46bb-8e61-e43810e5ce6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "281b6f94-8668-4221-af1b-3ec0fbe0d057",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d3fea44-f42e-4eeb-94e7-6a08a658155e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7757302d-a5a4-40a3-94bb-d2dba12c9cd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34835f88-1925-4fa1-83aa-5013453d44a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "518b81ff-f29b-483a-bdf0-734fdeb10e7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "933f8a86-a32c-4f2a-a28b-a7e65af9daec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19ddb368-719a-4c53-9c17-89a9a2fec566",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7bf1ce47-30d7-4a43-ad9b-d8e7b6502b30"
                }
              }
            ]
          },
          {
            "id": "07cc50dd-2740-47f8-a597-431d57d809b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "702dba87-82f0-4e3f-a726-f674801d1a4d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fbc58182-eeb4-41d4-a2e3-73e469442072",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d135f6da-a5c3-4a6a-b3cf-f1ca34d7b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9a281d0c-f698-4f15-ba40-d66235b4bbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d80dca3-baa6-4f26-87e3-d9220d521ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ac2c12-a972-4c63-805b-52d0cc4083f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "78b8dc94-c425-46cf-ab9f-3b4ec144f01d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ea582c9-ab8b-46a5-9139-09f504ee9d60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fe905b3-d190-4d42-8130-446d227e526e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5506d287-a31b-4d19-8a82-51d529b927ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43b9c346-dcfa-41df-a43c-e7e00d006e36"
                    }
                  }
                ]
              },
              {
                "id": "6e1f2ee5-82c1-4c85-af55-ea165ee72285",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2bc6e92-cc28-4b7f-b7df-f206aff151c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d456f04-bb54-45c1-b0b3-a83d924f9aff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86d67c05-6389-4827-9a29-ef723ae6c140",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3e6d2212-197f-49ee-a73b-4db1a83ca2f5"
                    }
                  }
                ]
              },
              {
                "id": "9284293e-c8b6-44ff-a9c6-139cc6cd50ee",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcb3ab0f-b639-435a-a789-218e074a69f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e255bf49-8461-44b6-86eb-0d52fbc538af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3109f547-a970-4efd-81e4-988fd9b2fc96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94ff2398-388c-4834-bbec-65695443904f"
                    }
                  }
                ]
              },
              {
                "id": "0fcc7ec5-27c3-4f74-be08-28fd88a71a1c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f52757e-c9c1-44fe-ac78-e185218003e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a9d9bb1-6cd4-4e76-9878-a850e02c9f81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17dd945d-053d-4e77-ace8-f77df76a4c38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "04ade9ab-4cbc-4085-9162-79a4bf85785b"
                    }
                  }
                ]
              },
              {
                "id": "203ba39d-82b0-4049-833d-08faf9e67d80",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6ea9e79-06a5-4a4f-aba6-d6a74c91c8d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69e6dcf0-0714-40b7-a2e7-2b140ea67f6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ccf7072-ab36-44f6-a230-1e7aa00e4b35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6501ac44-a917-4794-b3df-0b105db1b550"
                    }
                  }
                ]
              },
              {
                "id": "7baedcba-29c6-4f13-868b-c90f8ec64245",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37fee895-8ae6-448d-918d-b454de3ec902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8dfe030f-6664-403a-89f9-14e3850976e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6aa529ba-6f08-4fd1-9a52-9062dcf7b034",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f80ca5d-56c6-44b7-89ef-bf3df71efe78"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63b9bf5b-7b06-4cc6-b2fd-804b6bad8d29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ff2d3e4-7d15-4154-b5fe-063a42fc48d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aaa09ff6-44dc-4322-81a2-df4393dbba80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0005a725-3b15-4084-adf6-aaf4b1692f76"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d3ce470-93a5-458d-a035-159fb2d54480",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "45aa495d-c78f-4eea-89f1-3492cf915a30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d39e383-9aad-4670-8b96-dfb0753c6740",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fb535b3-07e5-46b6-a038-ee6c94052351"
            }
          }
        ]
      },
      {
        "id": "0889c4cf-e511-4dac-b83f-3df1fb8b7a9b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d33583e3-5662-4ce9-983f-d990145646f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "187fa717-6ca3-4839-90ed-45f53cadaaec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7645ba2a-48a1-42f7-8fdd-cdb4c4bb15b5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e46096a-2465-48ea-ac54-a7d404207ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5597a3dd-b054-49c5-9533-cab3c547a09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f767bc-c605-449e-9151-6e72a5aee090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef6e465-7e64-41f0-983b-17fa1d960ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1338a0a4-2906-43bd-9b2c-2b6612d86eb7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4120c4ad-68b0-4da7-9595-effd27752c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585e8cd5-b73e-4692-96f5-a9c9d9569d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf435f4-392d-46a9-8c8d-ad4ff4888263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2863099-6a34-4db1-99c7-2c55c6b3b0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6a60fa-e53c-4a17-a548-160f4cdf460a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ece2d7c-9e7a-4558-a45a-6ad24e30f103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff55e89-f3f0-403b-8390-f2f09fe2b503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f60be9-b329-4259-a870-f151e3765ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1631d71-c5d8-4b01-b0e6-7226c8e7c337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7e80b5-b26f-4751-aa07-6f4c64876c0d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f82030b-9a88-43eb-9c2b-43435a863de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc10a83-beb8-4fef-8684-8c9363e9ccb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343b302d-fbe4-460e-83fb-ceae9f7ce916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ed63d9-9df9-4cf2-b9c9-84fd56e37770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cf17a9-faac-428d-bef3-9b91d61a292b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44f0167-d3d2-4e69-a48b-bb9aed882d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c629a2e-569b-4db1-8cea-e9ff82ef9bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ea70a5-fde8-404f-98f2-e4cfd1088bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81c0693d-20d5-4d39-9aaa-41583a530309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66199dbf-4561-48d4-a0e0-991d9008b80a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a2e1d0-df5c-489a-b1a6-5e9d06daac58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf4f95d-487b-4dbc-a808-b4ebdf0cabc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e70e85-4972-4c13-bce0-631642c06143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16713c8d-d40a-4087-87c8-b3ac995cab5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6364855-ee72-4c86-8c73-5c55030e2bba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e324650c-3308-4251-89a4-491181b00fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec2c4c9-4586-427c-94f0-d11cd1e7c9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2792a1-8b06-4360-b79e-cd9789ab4acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "994923de-2ba5-4b6a-a2f8-64e66a3b39a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3377309d-03b6-4be9-87ad-e91be458bb17",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dd37e2-271f-4e8b-9450-0ddb4d834e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8181a5-c45f-41aa-8150-5d787e005984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6d3908-7b65-4e23-b733-df51255d1b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83649bfb-5afd-4d92-8155-0524ed05bde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cd3455-f22f-41b7-b9a5-de3220511330",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b118a6-fb7b-4ed9-abff-2b18f2fa4be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e59b1c-a232-4013-8fdb-7fc704c6784c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb6cb00-e972-447a-972d-df7af4e82571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "989efa01-dacd-4c17-9ce1-da06c4e834ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ec9455-a137-4d38-9dc4-68093c75d8eb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd364e1-6d4c-42e7-904d-8c75a2978062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba72cb03-eee5-4f89-834f-2b0843b6e604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef13c0fd-facf-4065-8228-9433afd8c215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f245f466-38b2-4dab-9954-983d6c36e7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055019ed-0c73-40b7-a263-c2803a15e87b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeee8a2d-86e6-45a6-bdc9-a447ee8b3795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979f80d6-65cb-4832-9cd0-e2469bbc071a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad024587-cef9-4f1d-a6dd-1b43d4e9d571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "869551a2-3b74-4194-84bd-d2abf510fa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fcc09e-4436-4524-8227-fd72819003a0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0541e7-d071-425f-8a04-693f8469fe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfff8f6-9850-49ef-b9d0-19eac982a1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd55a8f5-1c8c-4a7d-87f2-d927eeb67648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85ee38a8-8a78-4500-a070-20a544cad6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476af01f-fdde-4583-a357-c8eb86cda3cb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6bfe23-a9ad-4662-9f7f-35ffedd420be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06db8f7-d9cc-4ab5-a262-38789ac8d885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8952033c-f657-4250-8abf-2e5852510496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5ba1e6-8b88-40d0-8327-dc09127345fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd326f53-c570-4719-93d6-f3b17df54d89",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89edf28-3052-4610-b0ce-0d2a038af0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b101fbcd-cf8e-452d-8341-14d946e46b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a5fd9e-7c4f-47d1-98f4-0195987ad1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ecbf0d-f1f5-4858-9427-7241d4a8b85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16edf88f-bd13-47f3-a817-13f0f3446219",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1c854d-159a-48c2-b67b-ac4eae995b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a8c9a4-f740-4518-b199-51ec861f25e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990405ea-da31-42d2-b8d8-4764f32e5e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e108d1e8-7ab4-4233-b335-19c3884c8510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e60376d-43fc-49a9-b7c7-4dbdd9ebebcb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88c1a71-ec39-44bb-804e-b39cf0325835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f9ae30-1292-4422-acfd-26ab06df8f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff026fec-ed78-4db9-b10a-0efd426ebb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebb87d7-6217-4152-857e-1b09cc1433d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ecc85e-0dda-4808-992a-465486d12fd8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6f6d56-6d0f-4e57-89b8-391117298221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd86e55-3add-4b7c-8936-f49b62c01b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b61967-f24e-4e61-8e86-be493757e0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b9aba1-e35b-4cfa-bd69-23bf3c69bb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2c93b5-02f6-4dc6-ba96-465d987a3db8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faafa79a-9565-4b12-8e21-78d7a4a5bc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890b47c7-d27f-4b0d-a287-977db81a5b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f96843-df93-453a-b8d5-ad7dbbce2113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab75622-180c-4949-80f7-520501898146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f28ade-7dad-4f8f-b292-85f501a00b9d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a927b18-fc4a-4ba3-ae8a-6ebb54bf06ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab2969a-934c-4fbb-8e60-43d1b8b42ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df48b1a-ec1c-4dcf-a39c-0582a167d98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07fd9988-eb0e-422c-8dd5-de26d3c7f9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e47bef-9326-434a-852b-000ae43e1768",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7451e891-bd13-4421-8f33-cbd4f14298f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d83ca4-4ab7-49f5-afa3-47ae9f842c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a2b546-25ec-43d7-aca5-dfd9c2b66906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb7be39-ee8a-4a41-ae68-803e86d22d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9015272d-fb87-4863-be98-998cb76457bb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75470269-6282-428e-b8e6-9b6be702252f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c571a2-1f51-4692-8dc9-6fb26b45e558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d108a2-39e8-4a8d-b8c4-c3fa73cbaf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a1daf2-ca57-4b93-9735-12d641535cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c935dd8-60c5-4b1e-a9c3-0d5d34b083e1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0c0944-2db9-42a8-ab10-b44b3fa2186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3b47af-17bd-4cf4-95d7-f94941be4d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ccfa83-f123-4fc5-a7f7-457bc87bcea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38cd23f7-dd32-4b34-9b53-bc9770a42225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1687ca1-fc05-419d-aee1-6be2325f3053",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfdb623-71f1-415d-b9c4-8c8c5f4c024b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675c6715-f2c5-403f-b631-03285141334c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761c13e2-9d22-47a0-a2bb-3ffe4b13a443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb2e97f-095a-49b9-a3c8-17d19c3669e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad236a2-d7a9-4728-8670-8bd8ecc8f181",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81853ca2-a60c-4647-b631-468e149017d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2cfff7-1a04-4adc-a011-80247d3e94eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59870151-6711-42fa-9509-ed7538065af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e80911-6fd8-45ee-9731-ab13fc70d0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d46c55-966f-40c0-8c4c-60515a4a8e1c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b01d2b-7805-4c24-9ad8-0c126667ff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8069ccba-b016-4f5e-bf85-1ebef1a2f5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1883e023-9862-4891-8636-2f3a9e5db7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3f7088-b274-4907-aef1-01a8180e5e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c5cde4-2fc1-40e8-aeed-8ffe7cc0e755",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e0f469-fa35-4bc7-b776-48423086c5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff947a55-fad9-4f48-a2cf-393181bf2b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654533ce-017e-441d-aff2-e66ad981304b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e303324e-f332-43cf-b40a-f14e8ab376d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee20754-b837-4646-b86a-3213e4de2967",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1795b1e4-096e-4800-9558-0d5d36666df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8391b7-2925-4c7b-94f7-cab8a53d84f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2e5bf0-ef20-4125-bb70-9c5dd86cc12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9118d061-35ac-41ec-ac06-44b023590d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca3b75a-c088-45b6-b15a-9146aa7a6a1a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b3b6b9-9e35-4574-b212-e7dce664a189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c19c6a-91b1-493e-90f2-95f11212c922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4662dd-c211-43ef-ae8e-d2e8c4430848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94294f38-a496-4ccd-80a2-ed4fa15a9ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eedcc1-4b5f-4db2-8123-62baa01a4b3c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b065e8a3-1cfe-4071-94c8-537f2989b668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0f0be0-1b22-420f-99b1-db409cc29648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c74232-5a0a-4d85-a601-22844fbe6d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9cb526-ccec-42b9-ad5f-1bdf068fdf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec90308-9cf0-4f73-b14f-cce1301428bb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84de2085-2f07-4459-8aa8-3c903251e77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b6361e-2b6a-4918-96e2-949b127dce18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635a0d00-a0d7-4a72-8c59-a04edd043170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b77d0ce0-1649-4b00-af4d-03b4f2e362fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d37cbf4-2e84-4f91-9879-fba1ad1dd148",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089f537f-8aaa-4836-85b8-170ddca01823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba70d376-dc5b-4fb0-b7ec-774b0cd96ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed53b68-81ff-4a8e-bb35-46b70671b7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5708a6f1-b399-4fd5-9234-be0c89a82079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6644f8b6-1e15-4b2d-87fe-37809147c37e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c43218-3c8e-4b27-972d-2222008eed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31b6de1-8ef7-44dd-b09a-b0fd161cbb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ed0f2a-7da7-44b1-aab6-46b15e5df97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f04d69a-06a1-42e8-85fb-649604eefdc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbe593e9-6670-4cf4-a075-c1066cd6a162",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6807c707-3ea1-4a99-9026-a15cc66b6284",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60f651f-8b36-47f8-9717-62b26e0f5902",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23885dda-f37c-4494-bbe7-5b6944cde4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf2fb8d-144e-4a45-8376-c2d4bf561a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52aa94e9-293e-41e7-a800-661205ba481b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92640645-9ed9-49b4-876c-542d6af266ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3355af12-16d4-4104-b4c8-9b5cacceb5cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d294c0ba-7027-42dd-b07d-0ff359484a38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44a6d641-39ee-4fec-b7f6-e80fd18ba9d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d391b289-6ce5-401c-9228-255f24850c76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d056ef9-6a2f-46d3-a15f-eca08006b6d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1445b8e3-5c46-4ae2-9a62-5832e0de90db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06b945e3-6923-4bb7-acd1-382e55336fcc"
            }
          }
        ]
      },
      {
        "id": "09addf8d-606b-428c-be4e-cab9e0ab1d9b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2c7ce83c-ecd8-4da1-af15-3de07129ed39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e0a418e-e48b-4194-aa90-9cada4756a0d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b53c24c5-d6b1-4dde-8a88-18be4af4081d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c22b2a-bf41-496c-949a-4e881154ce74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49a343d-aea2-44b7-b373-d6258aee85d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fc65a6-d5c0-4033-be67-24fab6aa563b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d1999e-08bd-41e5-af2e-222ba1c95d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4cf950-8b2c-4765-ab44-e923b7370d02",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f705adde-8dfd-415a-94fb-c1479318c943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743ffad8-9273-4c11-93d4-4de1ec7398e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b9cc7f-6040-4b7b-bfce-80e884579833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b8f213-5fbb-47c1-a15f-5f0ecf0c6033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25205885-ea84-48ad-8ca7-53a2459051b3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cdcbea-1817-457b-97e8-022025e7221c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6e0230-a4ef-4143-869a-f6ac91831409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926c619a-aa2c-4496-b3fc-89b4863870a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda7766c-c89c-4306-8ea4-7009a8ce6084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acbe4a1-482b-42c3-b8df-76de4cc41f1f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2822e0bd-2504-489b-af23-5307fdaf0ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfb1fd0-4e85-4f4e-b748-119ba7d69b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94773bc2-b7ae-4277-a89c-18cd29ec612d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5ff9f9-115b-47be-9133-317c8b9b2b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d5f345-9989-4047-81c5-e2ba9dadb67b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358b070b-5a38-4f2f-a247-17b0d2c778a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229c1617-7ce8-42a6-a997-8ee9fe145812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba30135b-eddc-4c5a-afdc-ab035d4808d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff6861b-85c1-4ed9-8c81-8b494797dad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3179387c-4b4c-47f0-b8ab-b3017b0347ea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72faeee7-6142-4cb0-a6c9-262a62db12df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19c72bf-5260-4388-9b23-28fba4542a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04da144-cac5-4206-8976-fed6fb4d5713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9839f6-cc39-43e3-a6f9-71be67993a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a0ec6f-aa49-4c81-82bd-3e98d819a514",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb596c90-941a-4684-b08f-922ebd28f7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff304a70-0ed4-4ccc-bf37-8a06ee24b202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c880ed0-f119-4a10-88f2-1122329f61e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa991c73-de47-40a5-a4fd-54d5bea76c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccef416-94c3-4ec6-82d9-43d3bd80b285",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c95896-b7b1-4769-8e0f-cf118b10ce34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72ce896-2ccf-42a2-8049-5ea2b24a790c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f66d963-8d02-4262-ad90-b768b0db048f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "464828df-0bda-48a3-9a88-3cdec2edf0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26ede65-7d10-42f9-97dc-f22127391de4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f2074-2831-4306-b424-691cb4e29faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55f3ed0-8d29-4d82-bafc-f0388856d8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf4786f-a41c-4ad5-9222-0f79891432b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b0500f-09b9-4ab0-88dd-c0de76e38c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a1c335-a046-493f-b313-4b043c0989b0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f04c8e-111f-4022-8ae2-c26ffa1c1ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289cc849-a41b-4af1-ae03-2c9deee75294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d2aa2a-50a1-467a-acf3-3e6212250f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75360a84-7b1b-4572-80a0-865e1128123f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ceb996-9635-459f-9b7d-d9aaf6a94315",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bdad16-f26e-4953-bb6c-6d29e3ae01b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f384f8-64da-4fb4-ae49-985a49d73878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51b14e0-c212-42b7-9394-a40dd2f508bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c9932ecf-769c-43b7-bdb2-8547f1cbf78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72509c73-0b6a-4f52-b353-f2606b74617c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffa6e71-e697-4de2-b217-d5cef22e5dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a0fb06-b00f-4831-9940-8b60cb3b0f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9a2300-0b49-416a-9ae5-ea2cf68b4daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "627a38a3-dd1c-4334-b825-375215217ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297f086b-483d-47f2-a8bb-784f64f882e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287e4ba3-b3c5-4345-a859-8fd4a0125335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe45ce46-e299-4d32-a146-082bbaa0b918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbfabce-77bd-4c22-a544-904262bf9b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc257c9-7f5a-4253-8ae6-9a1032d2f015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e38a6ff-51db-4c43-87f3-4159cc7bfd2d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a923bc-675b-4c3b-844b-fe031680626c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c02aa1-0f7b-47e4-a0e0-0b154fb9dd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e550d58e-3c5f-4860-a8e6-9246d9a38e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "724439af-3f30-48ed-8caf-7483616ba2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968bca09-ca25-49bd-81dc-553c3e81bba4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340fc5aa-089a-4b28-a7b5-d325d524a21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cebf39-7711-4efc-8de6-0634ddefe77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a820c3-1354-4c4a-a448-5224d8d2d095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4f8d47-9745-45e2-9a95-143361d617da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605cdb99-ddb5-4b25-9cc9-39706b8ff98e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a33296-d5b0-430d-a99c-6289de5c2b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de586f20-eca2-4fd8-b27e-55c18da66ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746930e8-c97d-443b-92dc-045a710430c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e214da-79d5-482a-bd31-ddd5d1f0adbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85439931-f7b2-4438-a75d-43d7474b8f0e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a241d57e-15e7-4936-a3c5-de339985916e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43c60f8-e967-439a-87fa-3a6fc2d1737d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78078e0b-afb1-421f-8ed1-e5eecb562bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f16cf861-1af4-4819-a3f5-d60a1595b116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136e264e-fead-4767-a8ac-10e2c6455629",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2006323d-0465-41aa-8fb5-03ad303d7ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7187ff8c-a78d-455b-8e74-dd2d0af274b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3716ce17-b8a3-48ae-bdfb-82ef8f0d1be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17c7f099-70a7-4f28-add1-5f20d62689ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968dd0a8-f2a5-45ed-888b-a0c9ad0bb493",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1994a37f-8cd2-47ad-bf01-e10cc31adb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da9ab16-2992-438b-93fc-2a184349ba51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8c27be-f563-475d-b617-797db6cebae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398d7bf1-545c-453e-a96d-a02912204917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12adac81-7d7e-43bf-8b5d-c0ac1cd77f8d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f52be5d-4105-4e6a-aaed-1b5b9591449d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66eb3add-d263-440e-a292-013d8d962b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775b68c0-e7a3-4e5f-a377-9082860d675b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a7b5f8-b15a-45a5-ba39-13ffe442e442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc66693-4116-4a62-9691-eca382481f77",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fb030d-8645-4220-a606-283aaca01908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb5968d-5a4e-478a-b2d3-af1574db9e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da14fcde-a5ad-473e-b82d-8dfefad41a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "725d9541-a018-428a-be58-61cfc0ee5d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cddf5a6-0b64-43c8-83b7-0db00b17c268",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4177d3e-fcd1-4633-81bb-7cff65b06374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa0b466-1992-49e4-887b-9a49068bb42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ebf3fa-f7aa-4953-be9a-7b62e55a7b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b0574a-751c-47ad-a224-05df5e9a857c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889fdceb-78b4-488a-980a-a73e7b6966cb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4acaf2-484e-4646-b05c-ce3412ec5af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cebd3d-04ae-4814-bde9-e6d8a715c008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6434628-7b53-4efe-b864-671342078f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b4b062-863d-40a1-b832-1cf56042154f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1fa474-362c-4d0b-8417-51428869ff37",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a1c2c6-572b-4bc8-b36e-0b1ca2564baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3a4229-5908-4c92-8548-d69a97c0170f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cdb992-3d34-42e2-b8a1-993e17f29501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b40e35-20f3-4ce9-a5df-22497fbdd043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bf7cd8-b277-43ae-83a5-80df32cacd8a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d196bec-1466-4cad-aa5b-21853248d05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaadc96b-9714-4694-8f8a-58055df6f31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acf3a47-009a-4669-82e8-811f631186b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb17a89f-5e64-44db-b014-27f7e0563dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ef508e-9d99-4a9f-a3a0-3e7568e38ee2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686c34d9-4882-46d4-8c98-8393027dec3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6ebcc3-97be-4fe5-8e8a-fca16823184f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27bb5c0-9b13-4819-ac5b-1d87768ba3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ba253b-5516-463d-b663-e41e12fe15e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebae27ad-8166-40f2-b2f7-3e1c9e4dcd06",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aa8bba-ab70-4f4b-897c-4773b794d652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae520ef0-f6b1-4ad2-bbb0-2c45a3805faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8302d6-32a8-4370-91e7-11b96c6f31b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be050d63-8045-4343-a750-912170217267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0924b8c1-c807-4d24-869b-a4747c1ead34",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db77dc1-32ed-4644-92c3-2a4d2f715613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a395e5-a2e5-4769-9ecb-0b164f8cd813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5aa6bf4-bc21-4745-9730-928554565b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eebc338-18f2-441c-b0c9-19549d5c24b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3951c3e7-6255-40af-9121-3a2d7ee21b83",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67e8235-6266-431c-86e7-3bad8395cfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc23c65-a2ce-421c-860e-e85c3742dd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bb6d78-507a-4118-8bb8-afc53c95a7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b33ee967-bc78-4821-8a76-7da0ac98b3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef514fe4-6e3f-485f-b832-a24ea4860ed7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0aed519-3726-4b44-8107-18ce33a09ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa01eba4-d7ba-42be-a1f6-0f013853d85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd008656-0d37-46a6-ab94-4258a1b4d598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "736d9bb3-5a2d-47cd-8ce2-9aad31893401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a03403-6510-4e47-b4f2-1112ecb23c9b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9337626-b7f5-4992-aa89-542b0c3122a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1b1562-82ac-4694-a0ce-6bf8212e2f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a395360-a5a6-4410-8281-c590c34542b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05218fea-cbdc-46d1-8903-9cccf6a85b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115a6e8e-db8a-44e1-91c9-ce34cf38c621",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e7abbb-9464-461a-a324-ad8f36fbb221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2413a2d8-817b-4fdb-b829-bd66231bcacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cb0847-8fd6-44a8-bb1f-50dfe0f25592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc57f63-d612-405e-86f9-da4582899e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06202a7-fe73-4bd9-9bb4-5193131a550b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c077e158-ab7f-4599-bce9-446d0cc4af38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5490a6e9-2725-4fcf-a1d8-12ee7d83d0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a1294a-3a9d-4c4d-8941-119524fd8e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8fe6a1-e51b-4039-a848-fd3488d7761a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdde5ad-f7d4-4d5e-81b8-72049c499d13",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4529dc9-3bfb-4b80-bad1-33a203bea8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d975855-3aae-410c-b5a3-62a9bae6106f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1037d47b-296b-4586-a528-9803958a5f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d8ff5a-6a41-49f4-8140-cb9454bd789e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aa711f-a56a-4851-bed8-20432590cff9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c589d33d-d19f-46fa-825e-2e84d727e154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96d2743-002f-4db6-9ec0-bff60f71080a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9c1845-a6a0-4a78-beb7-d4f198a89c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a3b1e5-2a67-429b-9855-47ec50cf30bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa4686f-35b0-449c-ab3a-f86a66a51582",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a6cb9b-6439-4e67-ba50-21af7aa1c514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d64cac-4346-4d1f-aa6b-425cf2dae5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56b5970-5c8a-4b4e-be43-515faa063c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58a3089f-3941-43d3-8169-bda6aae9f31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8249fe3-fd67-4a34-8818-06f8a1055ef4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff528c1-b9a6-4ce1-a3ca-79a07fc22ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a4a4d6-812a-44f4-9aa6-48a3b1d6d1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e0e475-7675-4039-812e-42ecb6f8a4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b011dc52-6bb6-4e91-bf3a-084e82020fc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24c67db5-f8ab-4ef4-8a43-6221318fd97b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4aca4c63-0bfc-4c5b-826b-fa321bfb51ed",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cbd00c-4a0c-4c72-a54a-61d87506befd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a5422c1e-d7f5-4514-ad36-39e2810a55c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca9248a-140b-4da8-943d-fa5338a91b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "355937fb-c8ae-4043-8ec8-d2250b40115a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45c94df8-e185-477c-bc62-9c576fae304b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2d5263c-c49e-480f-9412-9e526e93db73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adfb86fc-09b7-4cea-bd16-758024dc393a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b20f4826-5223-457e-8d0f-4f937efe3363"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae193e2c-39f6-4f28-9653-f228048f4861",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c15a49c-f33c-4c11-9317-646eff90b09c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fc3ca03-10ca-48c4-b4cf-800bc9ae679c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87ffeb4a-5fef-4a33-b9a8-9fa50f0df4ea"
            }
          }
        ]
      },
      {
        "id": "966c5196-be81-41d5-9d1a-bd889ea4ac2c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b0a904f5-5051-4cd5-b7ec-5116ec13b648",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d120ef51-5540-4bfe-94ce-d7b99304d791",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94ccc26e-0631-4c87-aad2-480ed29db927",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0b1669-b1bf-439c-8409-ed875bbfec44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4cc9e4-1472-4f1f-a6c9-cf165d6f3fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8987c01-5f4c-4c26-a474-9860ec3f716e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76693639-6c97-45b3-aaa4-1bb6a8505616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6106264-da59-4d32-b553-ab3d174af4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae66a81-a66a-47a3-be35-521c380959be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154173f7-dc4b-4bfe-ba0b-24da1b67f73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded45c14-946e-4c38-ba4b-69bc43b8794d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2822d30c-7b77-4ea8-b4bf-a9eb43c12b38",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e841d0dc-3fd0-40ab-9a96-cee273e7a8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301cb60b-8d69-4e8f-bd34-a8f8bc9da521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233e3950-3494-4835-bcc4-2e9a70aef4fa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23519924-d241-4eda-bbf5-978eb7e7fb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762c3748-ea2a-42cf-8dbd-851e4a847cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f528b48-560a-4e79-ad09-1ad5b39f54a9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d825e5-dea0-40c3-a6f8-51b7293450b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba06a73-67eb-4579-b821-68e61969be54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29781307-938c-4d2c-bfd3-cebbb77f144e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2122b174-046d-4d52-bab4-0e6f49acb382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca0773d-9ae1-4470-a5b3-7d9be9ae1ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795ca716-fea5-4543-9ca7-7710d6134123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32274a6-639a-4be3-9738-df5a17f31f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168290cf-b854-4356-9ce8-249cbf32c1e0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8374cb-1725-4f90-bc67-37e0a3d0d68f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d0c707-dd2e-4329-8720-f5ce6bfc46b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21980dcc-0947-4e77-8342-6d28e380cc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6d7a67-3bbc-486a-af7b-fe1818d0e768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29b8c33-d55a-44db-8e0a-a0bc5ea291b8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9bf560-9cf9-44bf-9307-8296dd9affa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b265e7f-acab-41c5-ac26-65f3de0c69b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4c16a0-7069-44b6-b296-1042014d3662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683643d8-7f0e-426c-9020-45a555b4f082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22928f51-675b-485d-8e59-f572ae211107",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c917bb-bee9-411a-8625-aca918cd6a18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8d553e-f998-4213-9154-18d788dbf36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dad98c-cc1f-4c32-966a-1fe65727ac4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f78c10f-0984-4c0d-92d5-843381068e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3455b4f-9337-439c-afa0-26dd8a62d29a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8df562-0b4b-4ec2-ac5e-3fbeed8239ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f19e3d-ad7a-4a78-aa6c-ebb21fc21725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1602e302-bbe1-441e-950a-53399f367550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9779c4-017d-4f85-a56b-14d1c8b3e79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcf2fe7-1543-4000-b0ed-9526156bda33",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9277dc5d-540d-4d58-84e8-585c054f44ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51fc087-8252-43c7-86d9-69d56cf387c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b360f1-8943-4e8b-91b7-8c0cccfd552e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faf875b-22fe-480e-b22f-e30195c31ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e7f09c-9621-4985-91fc-545bad7b38e5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd42b6d-367a-479f-860d-f29ed8187442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451b97d5-5a3e-403b-b6d2-633687948d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f10737-6de3-45c7-a44f-e639847e757d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c361b46-768d-4728-a14c-681af3841c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7304796-64bd-4ce2-a403-4b5e53f43edb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141e97a5-5b5d-4fb7-bccf-8626cfdbd69b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1d3cf7-0322-4d2c-99c3-dcb00a35064a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9be9c60-9336-4908-b428-11e0b6c3c5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3f211a-4333-4ee1-bc18-88fbf0ac935d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7519a1b3-6741-43f5-8471-525271d9a525",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529496b9-781c-450d-8de2-f83b6d64b2ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0989b3df-e694-4c01-934e-dda2649823e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecf4734-5bef-4558-a56a-9210ad3d4c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5240bb07-7751-44b8-bb4a-22fc2c8b3d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d965fa06-c4e2-4160-97af-9f7faaafde24",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f8df1b-61ca-417c-b043-c8254579f986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96ce7a0c-9b3a-429c-90b5-8cad7a74f38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6365675d-9bc1-4f4d-9646-7158504ddb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e16324-a6ff-4859-b93a-a11b6b245d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dcacdb-7078-4844-99ba-ceece6aa886e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a256b3-b332-4a67-9a75-6a8eba69b535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7780c1ef-0026-4a58-afcd-863b43dabede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba86ee05-99e3-458d-a7a6-3c5379c7c952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0283bac8-a224-4509-8f91-47eabcc11247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab302ce-4b7e-45d5-948f-49b05fef742a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f791b3f-2183-471a-85b6-4e1c2c548eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0332705b-4bb7-4f96-a0c4-6339a1e62557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5f0e1a-75c8-48bb-9f05-31fb9530ca20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e1e0ab-8c83-4a2f-b434-952228521bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d1676f-5513-4cff-aa04-36c61e849202",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e017954-7d7b-4d17-9d9c-06382d8c7e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69faf526-b184-4af2-a692-ead8caef4db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8e52fa-d524-4d9e-9428-639ffc478fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0056ecf0-ab13-430d-8bdd-bfbbe99e8a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059f0b4e-c37c-4f5c-a1fc-b23677868b62",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cc317f-256c-492f-a122-ac3be97829a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2275340a-b455-4c49-9a5d-862fe6e9b547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbea48a-4833-4794-b93c-c1da5540c414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f28974-c851-44e6-8c0a-3d628c8791dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d8c718-20ab-440d-8254-1f5b86c20ed6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d9eae7-7268-4819-be0c-268e84fb4578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf8f5a9-3895-4119-bee6-d103dc67efde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2229d62-4672-449d-a186-96bb2782f202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9bd88c-f641-443b-88e9-19547d2e41b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53629e35-ef38-4618-a89e-ee65bfd313f7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a3a8bc-fcec-4f3f-b5a7-70c4bad78177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe15350f-6d07-4dac-a1de-f7da40a8a1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3959b69-4814-445e-86b9-8b8c0a0c52b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb71850-16d7-457c-bee2-a961345fdd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a9d5c7-9631-4e9b-afa1-d9c2ff7e97ec",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb27ea9-d5ad-43e7-b8c9-1c9277839438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f52b77-0a7b-48f5-b118-e1432052838a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865a6fff-ffde-41d8-9b1e-e839a28c3ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96900113-374d-4bf3-9f46-b9de954d4a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5541ae0a-add4-460c-8e43-f97b537d0189",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a3c4a7-1864-4b3e-9020-3a1101f40fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02bcfd86-94af-46ea-a217-458a27ba8fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cbeff6-7284-47ee-9829-b9400d5d3a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee41bd3-80b5-459e-b889-d5cee773fc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36df4091-b124-44fa-8e5f-78f09b265e86",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18c55ad-8b08-4441-8fd9-ff9e4f82622c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b11383-1147-41be-9cfd-4079825a79b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0891c4d-c09b-4c33-a523-b614fafc813a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b111697-0b19-4f7c-939e-9a5e6a789356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee1d2af-22e5-486c-8aa9-3381be4870b4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ec83db-dc8f-4d78-bd58-de85d8029a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c1dc1d-b832-44af-bfa4-79408b38f5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb6f737-7312-4e7d-ad4d-539de683530e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da99b12-a949-4c50-ae2e-eb84b31a9953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbc5318-7c49-441e-81ff-704eeeade049",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b19ea5-e9ad-49cb-b10f-0103142601b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744ec557-c364-4127-beb4-72098748a5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80041b46-c5e1-45fd-b4a8-76f41dfcc7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb028c5-76ea-40fb-a56a-7c1f3bf5d3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0c6976-1058-4e2e-83ae-222cdcdd07cf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d46222-9576-48ca-b63c-2b2928a9ba35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e0a4b7-f576-4ad9-8167-f34472fa56a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713b8fef-541e-4f81-9fa9-3c8819f37906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd178a7-7ed5-4199-ada8-7aebcdd2a5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3daa4c6-6dba-427f-82a7-06f3b421e13b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b7ed09-b7a8-479e-8ae8-e76455e4e1b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae54140d-b706-41fb-89ed-1f6ab120e6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b34354-34a4-40c8-b14d-d0e8d7a2c60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1919eee0-e6cc-4b91-98d8-2be386b3976a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf80017-e960-418c-9bc8-0bcf8a79e919",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10dcad6-aa70-4f1b-adea-6e1608e78f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55e61fd2-4567-4d8c-95c5-0271162e69af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3f7496-838d-42dd-b453-d9056bcc22ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4998164f-42c6-442b-9228-e63b34a6f05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34a884b-0d57-4239-91af-a8dd8421adce",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9251711c-f810-4f4c-8639-9d1207863dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34444a8c-8dc2-4226-9c84-b658121112b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7575be9c-9a53-4b0b-aba9-99c7595059a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474d0310-1cf5-480f-961e-c8edefd2f186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efacc737-aa91-49aa-ae81-de6329bb8228",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d78dd4-f4d1-48fc-8a81-83cdbebde5de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad46b6e8-04ff-4ddd-b49c-95f0645d38e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0736a567-24af-4cf5-beac-caee79bf2cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a744d3-f8f0-48a3-99b9-69808220cee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2673bf4e-4e9e-4476-969e-d9f53576925f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771fc043-c1a0-48c7-ae78-c301fff6ea26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09049eca-7684-477b-9462-078638ab51c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a195d5d-c24e-456a-9021-b1587f739e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e1e5ba-c363-4529-a5d5-9cdad7cdf479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7c4a94-db7a-4eba-bb2c-5fa603259766",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd375c3b-d0c8-4d83-9be2-72fde7bf6efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b553b7c-d90f-467d-98b3-09403f3a3aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4532ab-708b-4263-bd19-1c6bcb35fbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a210739-41fc-4446-b199-175208d70900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b57e4d9-4c71-4357-b696-3cf3a2815fda",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0902d0-25a9-4a6d-86e6-127617567ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da39c1e-cd7e-416a-91b3-a5542507879e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82ce291-faa3-4784-8e13-cd3696af124b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391e5623-05b9-4057-b517-687d8fde77cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d77195-dc4d-4303-af30-b682392a8a67",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c512792-6bd4-4d03-8f21-0590164dde10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7984d4c-3aaa-4234-b096-484bfda8732a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69acf77f-e439-4eae-9cb3-dee695237fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0426979-adfe-487e-8239-41c6e6fe7be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2287d6-0ce3-4fcf-b8ff-b51c0f3baea0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39ec632-133a-41de-8acd-59d4eddee568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc447aac-52df-46f2-837b-3710163902c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b812cbf-766c-44ff-ada0-22d1f58581d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8235b258-2498-48db-9883-d67c3fe01899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5302ac7-4e15-40e4-a4f2-3422469f1738",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cd1acf-c495-43f0-9b6f-2cc04bb04631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a8f536-99b3-45cc-beda-eaebfbca2c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41b6a9c-8850-448f-8083-6901123ded12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ebbda0-6b77-4f91-a4c4-f029f4d3647b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f450443-449d-4d1b-9330-b0f4f876ad6e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d202fcd-00e4-4a07-86af-f94558214b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28660460-625a-4b92-8fd8-91449132d0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d02f504-31f4-4d0c-80f8-220254be348a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f603ab78-ee0f-47c6-b58c-e6e046553cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fa4c58-89b0-44d3-886e-32bb19184cd9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f17888-fdab-46dc-963c-4bbd828f33bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c67deae-4fd7-4848-90c5-270ff45e33e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ebf4ce-8064-4ca9-b1b1-08d746bd3fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8452fb-db36-4d66-b4ec-c2b170f5ce9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72277ff-8dcd-4a91-98de-8f27b5512a22",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2873ea0-30e8-4da1-b25e-39313b52a1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e3f213-3e16-469f-af0d-b6894b298164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52132810-75ab-4713-be34-8b30f4421c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ba539c-f411-41e9-8b20-3134e3e041bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b354e49-ad83-46f7-b39f-b74bc2e654eb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7fefd3-27b1-4ad0-ae44-3ecac8a69e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6979802e-edf8-45a2-9c6a-399a1c61962d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f056580-5318-41b9-bb72-3cc8f10771c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35090f8f-8cdf-4428-afa8-db7a9e599273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a87a5a7-ce67-4c59-80dc-12f0be687beb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bd2391-a06b-4b36-9029-4410725c4cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f812bd-3f74-4a86-a5f8-d822186099f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7234b10c-5697-4bcc-8c11-0d54e5c15c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2027b30c-c89d-4d12-bfc2-4e02f818f83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5a822c-bbee-4f68-a973-300072829b70",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc54e44b-2865-4834-b574-27bba16ee27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3b7adb-07d3-4d55-87fa-011c324f8cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ef7f05-2063-4523-8165-adc6884437e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ed587e-9452-4871-993d-9144758fd456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f635d49-6389-4ee6-bac1-9b6cdf72de36",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecb524a-aa24-4e0d-87c0-ec8f40a2cbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a05484-6088-4585-bedc-6795765f12de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a995d6-1e27-4ba3-854c-a0db7782940d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac19ba2-ab7d-4089-bd34-dd5bb1935a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fe9b04-169c-494f-834a-b66ebd141559",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e28961-3044-4b0b-971b-835e69a81eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7994d5fb-f870-454a-b9f2-55b85bb3274e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbedbdf-4bb0-4988-9865-d463d7ef153b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d55c251-ce7a-4c8a-989b-21216b95e017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371517c4-9b77-4310-aa3c-7a39063d558b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0fa201-6783-400e-8740-503fe38bdc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54d6d76-4dc1-4aed-8c73-df8fa350adbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01c1e18-b2a4-4554-8f72-0393bc870360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0071c4-94f1-4da2-8626-68ef4d1a2b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a28369e-25af-4fed-bf26-5d9aadabd0d7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3332554e-861e-4b00-8a76-f1be154e8f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798170f8-a98a-401e-a6c5-a70601556a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb74fa7-04ae-45ec-a7f4-d4c7e9c3b8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050fee94-df27-4009-a942-2e325ea83fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea51353-f4a5-4b49-b075-733618373293",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a81bbc2-248c-43fa-a8e6-a800f6dc83ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f10054-137b-4e0b-a128-07c23614464f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e860f2b-c973-42fa-a200-21c61a8aaa4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e743edf0-3d95-4f3d-bef2-9bb463a73a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0865ba55-4791-48cf-809f-80ce27f13c14",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f1f28e-db52-429d-ae45-f83edb8c8e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c23221-076b-4be1-aca4-f6a148fb2ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b313f9fc-b9e8-45e5-b5dc-9422da30f3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458a5daa-a778-4ff9-bb80-f4eb37e63ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb1e4a5-2d66-4637-b180-eaef05fe6723",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d23499e-5935-4bfa-a47a-f58c1233465c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4021c1a3-d115-4977-98b7-dd5c4d7ded86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb8010c-f2b9-4c75-8812-e90a16260dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505ed141-0281-4845-8441-586508256def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24895786-f64e-4afe-ab13-ead6912ea0f4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1eb148-f51a-47cc-91e7-6dafbea35cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e664072-ddf6-4a2c-a17b-8c70d29d1147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02207352-7321-46aa-b85c-4af7c3edc1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae192e36-a6ba-4572-a322-64aa7ee8f2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e276457f-b545-4c9c-89be-403a82c4674f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68be5444-7b54-4a75-a031-c88c86b6ba22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f180e71a-8f1c-4ba6-bd53-9faeba181629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceef7c18-76c3-4d02-b110-e74cf32d781e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aba3199-482e-4ffe-8bb1-a6a58affac2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391dd45b-8c6e-4d2d-8145-9ea7552901b1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c24933f-819f-4359-bfdf-5ea90b55a164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af37a23-08f0-4fbf-8fc5-86adc89b8b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4845b77d-4ade-41ed-a234-fdb0a180fa4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6407949-1585-4be5-85eb-5688456fcc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62902d0f-51e6-45d4-a4c5-1407b10f2e44",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a521ba-68f5-4536-a30b-db2e3909959c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9ae274-c426-4ac9-8c87-4e689eace2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19539eff-7a4f-4b47-80a7-42ee54899d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362448cd-bbf2-45ac-bd18-e8fc4e758c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb15a25c-6a80-4a00-b28c-224cafb209cd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762065f3-5b64-416b-9c1b-72f32662cb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7bc42a-8d67-445d-a467-6700991fe2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5c3c54-d7dd-4753-a4df-d65c9fecd9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860c7da7-fef4-4cc0-9b19-5ea708d89ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2469ceb1-45cc-483d-9d3e-0ab3f96945c4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88267e2b-750a-4d9e-beba-c01ea06587f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5611640c-db24-4c41-a13c-b5bc61dd7cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8e36a5-c1ba-4884-9e4b-c9e4e2abb09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2486c0-2cbd-493c-8073-846e926d857e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c350b52-3679-4fed-a46e-4caad90f0ca2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5a956a-b8ce-4fcd-8e02-0da7fbc92eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64205bff-ffb1-467e-8e58-8c182d0a94ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbc5155-9518-4b2a-91ca-94c8d02334cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a503ebb0-bc50-45d7-aad9-42fffc92b79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc93e135-9753-4bd9-9673-8c59606deb68",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce0eea6-59fe-4877-8024-0657693112d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea13abd-b432-40a6-b6c4-9afbe5caa662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03f7305-985f-4e34-a0e3-184d55c0f217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e999ce5d-7b35-4412-a886-2777ad905735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ebd345-821b-48a2-bc9f-b0338d9cacdc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06ed653-17c5-4e7f-93e2-c7a0cbea632b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0dde86-ab23-40b9-928f-3fa57430c271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8225911-9731-45c1-b3cf-c08519fe86e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c684c19-94ba-41d3-b0e5-facf51c2f8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da95db22-eddd-481b-9284-55b061263e5e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd6f080-b54c-4c82-b872-6449ddb861a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17a28b0-9f36-4c09-95a6-323f4e35524c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e4f2be-9f12-4368-bf18-0fb4abd9d8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e820c30-104f-4166-8f79-1bb29b3f5446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb22777-aff6-4b16-84f5-364b7c866f32",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8743bfe8-196d-4d10-86c1-5f1d3bfa502a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d956aace-02a8-4f77-8178-813129d73e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5c4f5c-7a15-4741-bdc4-6c8a3a884a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb29c34-27f2-40d9-ba2d-ade280e14e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f93c16f-d7de-49da-b0ab-451f2bcc9bfc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9c0dbd-4471-477d-997d-5a719e24429c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1ab0ed-703d-434b-ab6f-03f5f6d27fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94094c0-9e20-41d2-b74b-70edcdbb1d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fd5aa6-659b-4880-9e22-75fe5e9af553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3230b26-ea8f-4a14-b886-25c7f6fd18e2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a2a519-65e2-43b1-9129-ff8a60561683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86afecbb-9e64-43d3-b085-7e2770955527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ffc8dd-95f6-486c-80fd-f8c2367f8548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12e1580-cbc6-4853-8f12-73acab33e706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5709a92-f150-4e38-9691-966f5641261e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af180d13-2b08-421a-9c82-cedaebbefb0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2301c1a1-d874-4253-bc80-f9197f78919d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab307ae5-2b00-411c-9da9-9244a2b64707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73eb75b-62d9-4cdb-8018-3617d7449a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b85707-3685-4d65-99ce-f2c3173103ba",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e36e15-8796-48ff-aca5-5b330ee1abb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02b0a51-6e57-42f1-bd04-373baba822e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c855d81-3bcb-4074-b240-2f1fd3e3886d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f161ca3-2ebe-4095-8533-65310e5ed49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac01cde2-eda8-41ca-970d-41b8a1ddb542",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b076817-b4ad-4037-a7df-938b58e57496",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac450e55-ba20-49f9-a821-52b2ca2888da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed49edf6-ae65-4c17-9ca5-938aaf8eb04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037ea62a-ac62-435a-921b-994a7d395bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d66808-0705-4371-8962-8e254658c8e8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf01e60-756f-4d1f-96fc-44a5121af59e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d20de4-4102-4084-88a7-00c50d516ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f83e4f4-0223-49a1-bab0-bd93bac6407b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cc3b49-d2de-496d-bf0b-271994e675c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a404cd-8ca4-43c6-bd36-73c769962bf2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d542dde-6029-40a7-83f6-3d19b780c86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa7a966-7cd9-4e90-be02-36f8f888f56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dd2638-c773-4cd6-8cf0-8c28e6aa4e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbaa429a-d287-4175-94d3-3a8c900de9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90750de0-c067-4ea9-a3c6-1b630fdc9544",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d58a4a-f246-4ed9-9a6c-4aeeeb0f40ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e68f67c-915c-420b-a79f-40cb4163822b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3abfa70-560b-41c0-8e6c-3d9f339032db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ae8e6b-5bc0-46e7-8d24-5212a2fcb6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778f773d-2f38-4a3b-8106-9a227e010f77",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a816d96-9c5a-4b42-a6d1-34e63245d32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15d8e86-5ec4-43d4-a1f2-0f30f418e760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbf7a44-7d1f-4d94-8fff-70169a1f893e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344df033-eb53-4a3f-9d1a-f95c56fb7fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262cfc50-a90d-4bd0-9575-badf40593a76",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce58f55-12d1-4dd8-8662-e895497c22b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea44152-d461-4f19-960c-500911efa168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368c87a5-36ca-4b96-87b0-8431cea8c75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7d2dc4-41e4-4a2e-94e2-750011cd8674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b511344-3b4c-49b6-9f40-48c0a804f3a0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca892ab-26ab-4003-8af2-ef8a7d637f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eddac72b-16aa-44fa-9b46-62b42f8bc6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db294fb-cd01-40b0-a7f8-80d189baa41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f54529b-edb6-42c2-9693-eba32fdf35a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88c0e33-b9d6-45d4-b73c-8579db355e47",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94337c87-c133-4156-98d4-86db959ce8fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce91ff5e-1c62-439a-9169-5b2f4bffe01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adeaa13-db9f-4a0c-a0c7-51ddeb7fa95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950d17c2-df45-49ee-8a9c-12746b16b1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607ce509-46c0-4e30-afb9-feaa6913168b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8b5815-6da9-4734-9446-b2f74aa1287e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114a6ca7-2a79-43b5-aadc-c39edc6bda96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a9c0d5-0317-4394-9f79-9af20f921d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35d6d2d-fe1d-473f-8f1b-5d7cda0f0acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d42e6b-158e-4579-be45-cc4b7081566b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3e7be2-d4c1-4cda-9ae6-bde78af43b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6422cd43-7f38-4173-83f8-663a39b08d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412b80b3-ab2c-482c-835b-b72351e0eb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e59400d-e6ed-4fb0-ba13-4251f7208126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f07c34-15a0-4f11-a4d1-19cd87f70f7a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91d37e1-590f-4968-8314-6776313a8bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1036c0f1-7dac-4294-84e9-48f82265128d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5938665e-994a-4e4d-b61b-0cc961f628b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e2f3ab-04ad-4943-8253-1c76d47f40fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441ee9a2-0f0f-4c47-a6b4-baf0992b9647",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a8cd72-cc86-42b0-9c9b-5099aab4b183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab109891-9e27-4eb9-9671-68ad3d16a5ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277888ed-ea89-4b7d-82ec-5c07d07a208f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ea475c-f782-4a1e-a610-5452a823a4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc733fa-1be7-461b-b5e2-6376c7695556",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cb2eab-6afd-48a8-8658-cf2e8175008d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "679ca234-c0b6-4767-8182-cb089e6e1bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4595e9-de1e-4836-8301-d6360aa2468e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3032eaf-0ff6-4aa6-b243-c680c87b20bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96559009-2b19-4de1-b1ad-d99644320fe8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7de31f-d3db-499f-93c5-10398389e6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba48c3eb-5a56-4ac0-918f-cee787d74cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d84cd82-3d26-40bd-83f2-77ed5a3758e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c54408-7eb8-4545-a1ce-e7486c1f374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ffbc36-da9f-4f1f-9144-e0e5113f0bbd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92b50b1-7b8b-44df-8774-e021193560fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab42ae81-05d2-4ef6-9228-2fbaa6e9d6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3eb70e-82f8-4ec8-8f9d-830d11a118f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d029627-d24f-4311-adcd-fc8305c1d6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affa7dfe-152d-4a22-ba53-27973a7c9227",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f953bf41-0ac9-4a42-88e2-9910b600a031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1efe02-42ed-4c6d-8ac3-f319f426331d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cb0425-5228-49cc-8eb5-a15aec9865fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dea8651-d2ad-42ec-92b1-c8a8b07aff08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c79e1e-a1aa-4513-a993-3cf6e17df78d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b5c20d-6b15-4762-9b33-d52c8f4e12af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca048974-8497-4b16-94e9-fa7f08330381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d60e48-8d14-4f46-9321-221d3e43144b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10267855-8f1c-4074-9d5b-89828f11823e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b38a4fe-7092-4123-bdc1-2ed0243973a0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a4c629-3e8b-47bf-af2a-5d7e5f97c333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa213983-1de3-46a9-a3be-f0fc85a03ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd94f8f-a61e-4169-861b-ecda088340af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323f8f65-4ea4-43a5-bade-7f6edc89f87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4764f66-bc31-41db-b903-1d5aa9f38613",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d564fecb-c834-4b28-848e-4b25163158a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed2bfadc-d378-410d-9b80-cdcf36f6619f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1561fe70-a953-4f0a-8aa2-eaceb58aac50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa2f2dc-6acf-4e9c-8c69-bbc5e5f0e56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe199411-c80f-457f-be49-b9b083b463fc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e942cdb-5ac7-4a89-9691-5f5b3d9a921f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce15efb4-fcce-4e4a-843c-d6b000790912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd0c858-d31c-43b9-97e8-ccbe62e1d09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8315968b-a57a-48ea-809d-8abb7aec490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb602a4-beda-4e00-af88-c6d87c5c89f8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c7365f-66a8-41c0-ab57-50e0931f4c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783e660b-79d5-4be0-a318-0b34990dce41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb5dde5-9322-4720-835d-a360291880a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046e640d-f3dd-4b29-8f3a-3e090d93f0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b38ead3-477e-4908-a44e-eeabb0f8c89f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4296b97-5bd7-4bf6-99ed-1186b65d622b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4e24c7-5a6e-4226-be72-44d284d87ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab3595d-73fd-4aaa-80cd-cf3fee04a6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac114237-fb3d-445d-8dd3-95c6631f259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac5636d-4a1b-41ac-a060-d17836c8e8bb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c64df34-df60-4976-9095-baf8c0d61d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6300d0a-de1c-4cf1-b6c1-7f3b56106bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a21a480-ebdf-4f2e-9489-386aee300f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd53ae7-462a-4ffd-bf06-30df543bb94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290256e4-be20-4ab7-8556-e6fd4d7d2334",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5f3312-efe5-4585-a81d-685ad03f8576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d00e066-5f27-40bf-a331-20cc49f282cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7482ffb-13e8-45af-be39-d69b5b8b7185",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f98edc-ad7e-45af-a666-a88561ee621e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa6feb6-93f3-4f1d-8cf4-119271bd5fae",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d1b257-6295-434e-a1be-68be52baba97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed09672-078e-4a4f-9e21-ca610f09bdbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ecff0b-f2ed-4ab4-83b3-ca8647dd68c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdff65e0-4128-4f27-8f61-767f45b11ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3169e653-6c71-44f5-b70f-af1d45e58563",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313807d0-b2e8-4c8f-849d-03e4b3ecccf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c156a3df-a43c-47e5-af9e-fcc9695719f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dc22aa-3bb5-4b07-9d03-a13f51134f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26971462-02e5-4568-942a-a9e72c1fc7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d560f3c-4644-44bf-98db-fd535382e1cc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d686e2-5c68-4a85-a2e7-0e016f193ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5508f6ed-a623-4a84-9a69-2c5c5f21037f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5725a75-a505-46ed-91a6-11c72455b698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfcff52-a08e-435a-8caf-4d72c98e38fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2abcba-4be5-47d8-bfa4-eddc316da0a1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bff1c7-4c43-4e3a-9609-5239aea2b28b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef90ea39-7e9e-4e67-9a02-86a39cfc5569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bde976-dea5-40cc-9982-4f06f046f473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a2a3e8-2a99-43a3-a4f1-f80e2dbe9a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92898a8-958c-472c-b881-8ca0d3a9637d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a44e75-98c9-4aa5-bce5-118c841aeb83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe7a67d-4592-4a47-b8ff-4e08f6b19805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d9dbf6-117b-4238-8f93-29cbcee15874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4315325-a72a-4a94-9487-3c14ec30e8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2797ac-91e8-4b48-8117-8d9011f9d57c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60045a8f-2acb-4e1d-a070-a42aaf72f219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74f1348-3727-49d7-9da8-47b67d99cede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cd6607-ff6e-4844-9783-631a847e6c7c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38665d7-4c8f-4f6d-b9bf-1762d114826d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960e9e2f-fc6b-4505-a226-f0e05b9e6650",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339c0ea7-4c13-46ee-92b8-eb6b578c6289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7b5ecc-1c1b-48bf-9530-e7ebff201d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763c6ede-6ebb-4d0c-839f-b74842a81e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b18aa7-b87f-4a0f-b583-fe005200e911"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5a8a414-2b1e-47ed-88cf-3121e141e8d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "601707ac-0967-4420-af36-5a6221e181ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5ca4169-6b30-4283-83af-e359ddcc8f20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbcc7f3a-4373-412a-8c0d-c3757b0dd649"
                    }
                  }
                ]
              },
              {
                "id": "0fc04cae-d15e-4a25-af15-3756c92b5610",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2e9375e-4d31-49c0-8d31-30fd499c4ea4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e303edbb-b44e-4ab4-8cd6-3ee3a6955ae0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a51d1da2-7810-4bc0-b482-89fee766ca3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740bcfb9-ff89-4bbb-9a84-26f294cf0a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65a2d217-73db-4dd7-9fef-bb846a87b525"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6ba4c1d-35ad-43ca-843e-6bb90d06152e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb3f3209-4863-452c-9563-8ba45e22a08c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e58a5e56-34cc-47f2-99ce-f854963dd1e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "357730ba-33e1-407c-bebe-78c1c7444a13"
                    }
                  }
                ]
              },
              {
                "id": "600af73f-09f5-40cb-b479-079febbbea8e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "821cf797-36bd-4f8a-88c3-197d4e724a03",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5805c6de-9f55-40c2-95f5-7caae9b24666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9b775188-a0cf-406c-8cdc-21512a7b2f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d67698c-cca7-4815-8e6d-111a50be55c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3889fc-7799-4506-a383-da50641d6c73"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "df195f6e-ae44-4ac4-93c1-434019f27ff7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "daab3b3b-441e-4fb9-8b6b-237ffaa840de",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dc995e5-9393-4dfd-8c65-04fdb49678bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9700ab8c-1d2f-42fc-9f2e-c7d9a1005181"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17247973-3ca4-40ee-b57e-685542db23db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0acdbf8c-64f9-430b-8fa2-950133c455ac"
                    }
                  }
                ]
              },
              {
                "id": "ff14f3e6-4f3e-4d41-b1c6-b10f4c6a1450",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c717eb30-50b3-4c41-9b49-5f5405818cc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46198e1f-849f-4ebd-a366-c0730571481c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53722c51-db2a-4242-9b83-b1784846b920",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e581bdd9-911f-44a4-8636-e6f1167f4933"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "957e7682-e351-4301-9f3e-912cfd588afe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "855784c7-9e0b-41d0-b536-18f75ee31833"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6f3651c-3ada-4a3c-87f9-a3d8fa084f9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00a849e7-dab3-4ee5-9807-0418ded4e61c"
            }
          }
        ]
      },
      {
        "id": "5a30fa23-24b3-4ce9-aca7-ea05893a60fe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1fe55da1-54dd-453b-91c6-c4d455f20b31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48c2a3c7-a517-432e-a285-094cd48e919c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e038f392-21c9-43ac-8532-d2fd59305e06",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91f2d89-a36c-41f6-bc27-6dd9a2836460",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d45c601-800a-4f3d-9b16-e0bd02b07d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31698dbf-6692-41ea-b02a-2ca046b90a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f74de402-be10-4abf-a5e3-ec0265fb374d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ace85644-e347-4e55-819e-a8c4f0930dcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d527cf6-aab8-49e4-a069-26598cd32d2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3beb0ad-b2ae-487a-b088-51341ad73ffe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57dc8682-8222-45bc-bee0-cd20922301f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f346028-ddc6-4907-af22-58a40f246288",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7ba943fa-c40d-4471-b921-a220ab59ad14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10d06955-4ce2-4a89-983b-c26f5d9ad6d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25cd1260-d7c8-4271-bed1-b95fd4ad325c"
            }
          }
        ]
      },
      {
        "id": "c4b6b8e9-306f-480e-9c6d-eac14333b737",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "db91c0af-7271-4b92-8352-dc4119255f48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d44a453-07da-40b1-9015-9ec582e88d50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2f4d64c-0010-49ef-a68d-d0afb82bb719",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85903a98-138c-4045-99f1-19b69d8ce1b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4c6a95a-b5b5-4778-a54e-b7c094146a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8886fc47-a33a-4bdb-99a6-d9bdfed4a59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4d02074-e025-40be-bf8e-42dff2ecc43d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "290a318e-c563-4314-8f56-82c61c19493a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42e2ba80-bb77-428b-8b1b-65923143b75b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2adafb2a-1861-4de2-9494-f73755783935",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cecb2ea-54cf-48e4-8825-1a75b2e978c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d86ea468-b33b-475a-af89-cf457c2de5e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c1270fe-c67d-4274-9c46-a8b824dcd58d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb4373b8-040b-4bbd-9204-2ec1c56c3758",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4450db47-dffe-43f9-b9d2-2e947c366323"
            }
          }
        ]
      },
      {
        "id": "f454e1b3-1cbe-433a-bef7-76f3aee13e91",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5fe7ec47-aa6c-47b9-97b1-1ea85639c169",
            "name": "Negative Testing",
            "item": [
              {
                "id": "091a4be4-8b4b-42f1-b413-4272775a5b94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2c9efd8-82c6-4db2-aefa-2a98d82606da",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bad4382-c1b9-4943-b849-a3b667926717",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5d17cef-3681-4210-893f-ec1a7eedeb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e59f7f-fa52-4efc-862b-b5527dcd3a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86748dc2-0dc2-4e8e-bb8b-8f381b7ba90e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33eff726-a97f-4e0c-aaee-f28d514a28cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "571de26d-5922-4094-a0e9-82519fb504ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7294fe8a-81b9-46a3-9dc6-6f3194c39773",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bbcb592-0415-4488-a5fe-bcde4a3ac212"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "223233ad-a3c1-4b71-b837-5d48321813ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29381e1c-3d8d-4023-800b-97fea3bc898f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dbc1f6c-9570-41af-ae59-3eea4e32b971",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "045a23b7-b7e1-42f9-be97-5ae821474e64"
            }
          }
        ]
      },
      {
        "id": "7ee3875d-c22f-4028-b86b-057294f82bd0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8b7d1fb-bb23-45c7-851f-c843a84f1945",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b531dad-9c9e-4629-9526-2d74ddfbd4df",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "326b2639-0532-470b-8157-1f2976d970ef",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "467e3bba-6ca3-49c2-9325-f5fb103f92af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3bb1733-a867-49ea-a163-3567a5db43a2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 56.83157894736843,
      "responseMin": 20,
      "responseMax": 310,
      "responseSd": 27.620480310715855,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701477279931,
      "completed": 1701477305129
    },
    "executions": [
      {
        "id": "6b2593fa-6018-49dc-926a-a4fa65d7eb1f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4268a7ab-3b1b-4b61-8ef2-a810e5b320f7",
          "httpRequestId": "38cf2211-afc5-4082-bc14-72c043f5a4b9"
        },
        "item": {
          "id": "6b2593fa-6018-49dc-926a-a4fa65d7eb1f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "76063524-4ed3-4c8f-8fa9-604d8b644026",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "106fe9bf-b52a-43a2-86e3-9537a8362aa8",
        "cursor": {
          "ref": "04efdf0c-da15-4650-9f8c-79237c365a96",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9b309b0c-dd8b-49a8-879e-b6b03dd10d8a"
        },
        "item": {
          "id": "106fe9bf-b52a-43a2-86e3-9537a8362aa8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7257cc37-62cd-4734-92e0-6bf39de5e58c",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "a8d7566a-7d8c-42fa-aadf-305797fefcc2",
        "cursor": {
          "ref": "ecf6fde3-6cb8-4eba-8084-5d4d8219b09f",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1f1ffbfd-db42-4202-adde-d6c77421f6e2"
        },
        "item": {
          "id": "a8d7566a-7d8c-42fa-aadf-305797fefcc2",
          "name": "did_json"
        },
        "response": {
          "id": "1145d17c-3940-44f2-adc8-6be5ea2a0605",
          "status": "OK",
          "code": 200,
          "responseTime": 285,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b1cfab-2d80-475b-afb5-1d5cb4d46bf8",
        "cursor": {
          "ref": "a2daab77-2259-4899-abf3-fd91852f73b3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bcdf7b93-5a13-473d-bef8-7201730fb1fa"
        },
        "item": {
          "id": "53b1cfab-2d80-475b-afb5-1d5cb4d46bf8",
          "name": "did:invalid"
        },
        "response": {
          "id": "f3a1cc3d-2e44-490d-ab2b-7d2c18341e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b1cfab-2d80-475b-afb5-1d5cb4d46bf8",
        "cursor": {
          "ref": "a2daab77-2259-4899-abf3-fd91852f73b3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bcdf7b93-5a13-473d-bef8-7201730fb1fa"
        },
        "item": {
          "id": "53b1cfab-2d80-475b-afb5-1d5cb4d46bf8",
          "name": "did:invalid"
        },
        "response": {
          "id": "f3a1cc3d-2e44-490d-ab2b-7d2c18341e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23ab68c-2345-4058-993d-4a40fe96d74c",
        "cursor": {
          "ref": "3b539d4a-5d85-49aa-941c-65ec18ebffeb",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "32e999ed-b651-419c-bfa5-f6796cac2670"
        },
        "item": {
          "id": "f23ab68c-2345-4058-993d-4a40fe96d74c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f3040d33-1aea-4530-8183-6cfe8822e66d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 89,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6148bec6-25dc-4f93-ad5a-f26bbb224976",
        "cursor": {
          "ref": "2c99cce6-9874-4b6c-816e-0bfaf7897a78",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e196b807-7c55-416e-b75a-4691c53dc19b"
        },
        "item": {
          "id": "6148bec6-25dc-4f93-ad5a-f26bbb224976",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "62c3da71-c586-4f32-8ec6-c58c678f4222",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b56eabf-c64b-467e-b8f7-08599d907683",
        "cursor": {
          "ref": "74c3e25c-2fd2-47fc-b339-b7016fd37b0b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b35e09b4-c7cc-44a6-bbe6-41a13ff1bc9e"
        },
        "item": {
          "id": "1b56eabf-c64b-467e-b8f7-08599d907683",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ecb2416a-00da-4030-87e6-92d7f93dab43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8eb4bc7-6a0a-4a4c-b765-cd78c7ed0e7f",
        "cursor": {
          "ref": "f3fa06cd-9623-400f-a069-7f200d65a3ec",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aba5d691-dbff-4b04-ab90-cb6b66aabcce"
        },
        "item": {
          "id": "c8eb4bc7-6a0a-4a4c-b765-cd78c7ed0e7f",
          "name": "identifiers"
        },
        "response": {
          "id": "51734788-9290-4b22-97ef-a253e07d663b",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68118547-4ec2-4213-8812-9ef3523b7f53",
        "cursor": {
          "ref": "385f0f1e-a1b0-4399-9910-f82c7e9e5d29",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5514de65-3272-484c-bc23-ac1a84d77301"
        },
        "item": {
          "id": "68118547-4ec2-4213-8812-9ef3523b7f53",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "122b1e2d-a460-477d-abb7-8b36e265fe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ece077b-17aa-4687-80ab-d7741964cbf2",
        "cursor": {
          "ref": "ae2b139d-248b-4b5d-a036-782ff229b8d2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f6c8a3db-bed5-4a3c-9a24-bfd5e20803b0"
        },
        "item": {
          "id": "0ece077b-17aa-4687-80ab-d7741964cbf2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a41f76c1-ff13-4e45-9edf-30dfd8b4fe76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b1a11c-6b9d-4b3d-80a3-66dcd02fbd5d",
        "cursor": {
          "ref": "e23ca05b-f0de-4243-beec-5a770364fcc1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "46800cd8-46a8-44ab-bacc-a3e677f2d3a5"
        },
        "item": {
          "id": "40b1a11c-6b9d-4b3d-80a3-66dcd02fbd5d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4c80f91b-3869-4c4c-a1fc-1a2e154f66a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29658b5f-6ce7-42c6-bfd0-401741386d10",
        "cursor": {
          "ref": "5f5130a9-ea89-45df-8f49-00a79d8da3ee",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f8d4ab72-bf74-4f94-b044-9590795f457f"
        },
        "item": {
          "id": "29658b5f-6ce7-42c6-bfd0-401741386d10",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d8efe917-e60f-4dbd-9d86-3a1530e7a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110da7a6-5728-4731-a0b1-77e74062db5b",
        "cursor": {
          "ref": "e6352919-5b12-40a5-abee-4b79c8304d1e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0f6f9681-9901-4832-b12d-47e5bbf36a01"
        },
        "item": {
          "id": "110da7a6-5728-4731-a0b1-77e74062db5b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "999183c3-78a6-4c54-8041-d685ebb56f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b3289a-cfe1-4137-a67b-540c90a9a06d",
        "cursor": {
          "ref": "ecd644b0-5009-41b2-9344-673321eb4bb2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a7f34603-db1e-4374-9690-a1e4fea1ce12"
        },
        "item": {
          "id": "a0b3289a-cfe1-4137-a67b-540c90a9a06d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "97558f62-60dd-4e95-a8a4-5c01b62c8a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27b6f73-0806-4bf3-8602-5bba34adb9cc",
        "cursor": {
          "ref": "bcd10e01-f807-4cae-b541-fc83df209863",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1c506bdf-3f52-4fd7-a73f-814ac9eb2bc7"
        },
        "item": {
          "id": "b27b6f73-0806-4bf3-8602-5bba34adb9cc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dd737efd-a886-47cc-bc6e-d0861118826f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e099a93-6f3e-4c86-9c0c-95760067bc78",
        "cursor": {
          "ref": "c418c8c2-e8c3-431e-8b7d-a5400796e2cd",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "13dcf0ef-1ea0-4bd9-8b1f-f8959a7c88ef"
        },
        "item": {
          "id": "0e099a93-6f3e-4c86-9c0c-95760067bc78",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "59cc71ac-94ab-4b11-8b47-66f29e394f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d1eeb2-0bcf-498c-b241-10674ed0fcc2",
        "cursor": {
          "ref": "7654d3d5-83fb-4299-b314-636f1698143d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9146886d-b4bd-4f8e-8b90-639930ae25fb"
        },
        "item": {
          "id": "67d1eeb2-0bcf-498c-b241-10674ed0fcc2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aebe08ba-c22c-40f5-9567-e67ec98f1832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359dd845-a6e5-46c4-bf95-b35fbbf8460b",
        "cursor": {
          "ref": "03d0bd40-7de4-4def-ae19-f7dc0f5345c1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ab726edb-50ee-4a9c-953c-0c3b9f813143"
        },
        "item": {
          "id": "359dd845-a6e5-46c4-bf95-b35fbbf8460b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5144c183-42ac-4aa7-ae43-422dc4e52ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5080416-a180-4d65-9093-c593aacfa8c2",
        "cursor": {
          "ref": "27982b5e-7a6f-4fdd-abcb-8b219efb4ea4",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f788fce4-31f3-452e-ad2c-0795ef0eae2b"
        },
        "item": {
          "id": "e5080416-a180-4d65-9093-c593aacfa8c2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a93c8246-eeef-4780-a36d-eae6d6efeace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbd72a7-ae76-4b11-b684-6c68d6807f6f",
        "cursor": {
          "ref": "8f3a066b-d486-4469-8134-eb70434e5e70",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c1321a75-64ec-455e-9fb7-3f5875adf428"
        },
        "item": {
          "id": "4fbd72a7-ae76-4b11-b684-6c68d6807f6f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9b239e4a-87b1-4da8-8fbf-b41bb673c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b0b934-30f7-4a82-9c2a-fe7008c8d77b",
        "cursor": {
          "ref": "e8e18fcb-cc9f-48d0-bdf2-4dbf49cdc4d9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ea4acf33-da8d-4b19-843b-463613e653c2"
        },
        "item": {
          "id": "c4b0b934-30f7-4a82-9c2a-fe7008c8d77b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "96b618a6-49c6-40f0-8fea-84c9a1562341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8afb101-4dd2-45f9-96fa-6c8c18d9e119",
        "cursor": {
          "ref": "6e6cb5dc-058e-4a5e-9145-fc3b7b783c9b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "300808d3-5b86-44a9-aff0-39f1522746aa"
        },
        "item": {
          "id": "f8afb101-4dd2-45f9-96fa-6c8c18d9e119",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "657cae64-793f-485e-8f1c-160625a02997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a633e5a-fe0c-4d78-922e-8802b8b340d0",
        "cursor": {
          "ref": "3f79e081-a6c1-47cf-85f1-1914479010a9",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e6be2ca1-b986-4ab6-9cff-94cd83b17717"
        },
        "item": {
          "id": "5a633e5a-fe0c-4d78-922e-8802b8b340d0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8a1519e8-7a7d-41a2-b83e-ad260e77132a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d15a64-7f25-49a0-a422-a42cd9487af4",
        "cursor": {
          "ref": "3feceeeb-e295-43e9-9863-86143229357b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0c97b3c9-f860-4c7e-8d49-bd297c3d7837"
        },
        "item": {
          "id": "12d15a64-7f25-49a0-a422-a42cd9487af4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "415e67cf-a57b-472c-9817-1366e9151589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99f38a3-52d2-49c4-9f2f-dae838ebad85",
        "cursor": {
          "ref": "4bc61993-9876-4ee0-911e-1e3bcebe8ad4",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "011eebe1-b7e5-4c00-97df-b4de46856fb5"
        },
        "item": {
          "id": "a99f38a3-52d2-49c4-9f2f-dae838ebad85",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2341146f-5e94-459e-9f0c-53faeaa3371d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384a0032-3d0d-45ae-a0fd-b2319a4ad4b9",
        "cursor": {
          "ref": "fbf2a7ad-532a-4586-a031-878699b3ab78",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e970da82-b996-4177-bd84-e176e532a8fa"
        },
        "item": {
          "id": "384a0032-3d0d-45ae-a0fd-b2319a4ad4b9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "eb7c254f-6eb2-4ef1-8372-520cfdcd306d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f73f453-37a6-4236-be8d-c02e504f6755",
        "cursor": {
          "ref": "533e0972-0108-4139-a05e-d6cda8ac87f6",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "432cc47b-abab-48bf-b9fe-423b8fe0a37e"
        },
        "item": {
          "id": "2f73f453-37a6-4236-be8d-c02e504f6755",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1c45f315-0d0c-44af-af55-de5d4b4129fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e416f99-3f89-48ab-a59b-ad03a4cdd9d8",
        "cursor": {
          "ref": "7150d8a4-6677-44a5-9042-e60e3b87e9c1",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "85377152-35ce-4fa9-9400-196feb33a501"
        },
        "item": {
          "id": "6e416f99-3f89-48ab-a59b-ad03a4cdd9d8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2829b9b3-4f41-4f88-a42c-e4300952794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64bfb78-2a38-40c3-8113-85de10652567",
        "cursor": {
          "ref": "6c3e0bec-ba0f-4cd9-98e6-721d31ba7d60",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "13b592bb-216f-44d4-9d6a-d6118e9363cb"
        },
        "item": {
          "id": "c64bfb78-2a38-40c3-8113-85de10652567",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a3ea6bf3-b7c7-4b2c-aed5-2d2c9e050aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f89118-ae05-4ecb-9afd-aade544dfa6d",
        "cursor": {
          "ref": "c2d1b85b-1765-4d01-a0de-8a0ce0dc69b5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "91f95aa0-c615-46cc-b75e-d69c2dec56d1"
        },
        "item": {
          "id": "a4f89118-ae05-4ecb-9afd-aade544dfa6d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9f19ea61-f1d7-4119-9847-7650ab3e1854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5a2d79-5ce7-4dad-8e25-b4da399cbc3c",
        "cursor": {
          "ref": "25a71022-8746-47ee-8e9f-a8b385f6abc1",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "63799f55-af54-4572-ac29-8f749c8f4d2b"
        },
        "item": {
          "id": "8c5a2d79-5ce7-4dad-8e25-b4da399cbc3c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d299a3b9-e5e1-4559-8dd1-81f6ce60eb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddb1f3f-dfdd-48bd-b205-4c9f744d2cff",
        "cursor": {
          "ref": "8a316b6e-52ff-41ff-93bb-73b453fb32fa",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4f35c472-943b-41c6-9c72-c8325d377078"
        },
        "item": {
          "id": "2ddb1f3f-dfdd-48bd-b205-4c9f744d2cff",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d3fc2332-134e-44ec-ad1c-c3560bc1e20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534745d2-7814-4572-9c07-852537bfedfc",
        "cursor": {
          "ref": "2465c6d4-d94a-4c9f-9ba9-5a9d8a8c36d9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0af6b726-1fef-4313-a913-044e23561eee"
        },
        "item": {
          "id": "534745d2-7814-4572-9c07-852537bfedfc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "29cd8cf7-d7a0-4541-bfd4-d4572aacc402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143b40d9-f00b-4fda-a5ff-51b6c2d9409f",
        "cursor": {
          "ref": "ed1cadf0-48eb-445e-9678-9787864b5391",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5bc665d9-a496-499a-9942-1d06aaa30529"
        },
        "item": {
          "id": "143b40d9-f00b-4fda-a5ff-51b6c2d9409f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8fb1eb1c-afec-4cb8-8030-39ebfa0c00fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddbfcbb-8476-4f56-9cf8-72dc692216d1",
        "cursor": {
          "ref": "63e7c14e-065f-435a-b740-dbd0b4956b6e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "def55a60-e1fa-48d5-9fee-00e5eb977936"
        },
        "item": {
          "id": "3ddbfcbb-8476-4f56-9cf8-72dc692216d1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b81eb0ca-7679-4015-a7f4-b5feb2c23cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ad1ca9-5687-48bb-87b8-33aec90079d9",
        "cursor": {
          "ref": "00a54d43-825f-4238-8015-08a6df64bd6f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ee774f2f-2f8a-4c5d-a15a-a7f3c18c4044"
        },
        "item": {
          "id": "87ad1ca9-5687-48bb-87b8-33aec90079d9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "549d3f91-f879-4c93-93e2-cf88d1c97fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050aa610-e444-4b7b-9c45-035d9bcb2bb2",
        "cursor": {
          "ref": "b46e7f33-58f9-4ea6-93a6-82616e9a2ad3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ce3908cc-1226-436b-a4f5-795423a021f2"
        },
        "item": {
          "id": "050aa610-e444-4b7b-9c45-035d9bcb2bb2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "67528d16-a045-4c25-8670-a12392e8c77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b9df2b-6853-46b5-8518-fbadd06d1ee8",
        "cursor": {
          "ref": "8f4a673a-cbff-4e08-9c5f-280114089904",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "af5e6a8b-0349-42e0-a806-0244c604a7d5"
        },
        "item": {
          "id": "e4b9df2b-6853-46b5-8518-fbadd06d1ee8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4d9dc5e1-6630-4437-bca8-170e223dbf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36819d1-0e73-45b4-af42-3c99cc1e142d",
        "cursor": {
          "ref": "57272b77-b9f9-464d-bd8f-0e614ebef08f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "da3cdf81-5d47-45c8-a049-55d40a2b9c2a"
        },
        "item": {
          "id": "f36819d1-0e73-45b4-af42-3c99cc1e142d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5697cea5-563b-4e44-88de-b20beaa94951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759f02a3-26f0-43bd-bb00-5f4e9d11d172",
        "cursor": {
          "ref": "5248195c-9ff4-4a45-bda6-549e8b63a54c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "598989cc-a223-4e4a-8cfa-6534d074d870"
        },
        "item": {
          "id": "759f02a3-26f0-43bd-bb00-5f4e9d11d172",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8ab06907-425e-4c00-a97d-129ea2051708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a637bd-3121-41c5-90cc-6b176a4a5371",
        "cursor": {
          "ref": "a25ceee8-abd7-4b82-8353-e18fc57376f1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c3e95ea5-152c-4ac7-b8cb-7dae7ee3f62e"
        },
        "item": {
          "id": "36a637bd-3121-41c5-90cc-6b176a4a5371",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7410ad21-aa78-4c56-9951-6ab8e064c3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbbc001-8a4b-4a8d-98cc-0a12b5915fec",
        "cursor": {
          "ref": "6d8d4fdc-e9a4-47d2-aec1-47a7a7e31ae4",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "956d42cf-128b-433a-b7c2-14d7a76de0a9"
        },
        "item": {
          "id": "acbbc001-8a4b-4a8d-98cc-0a12b5915fec",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d5584fb6-59ef-46f4-9c31-e20369fef605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8dc327-8b7c-408f-886a-344cf52d9c6f",
        "cursor": {
          "ref": "c46e8bb3-0295-44dd-9242-8fcea0df3081",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b6f98aa1-ecac-4277-8c65-2926ebaf6990"
        },
        "item": {
          "id": "6c8dc327-8b7c-408f-886a-344cf52d9c6f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "12ce492c-874c-4f6c-9d04-0fea6207f516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2735f57-0176-4239-9d7b-da7b370475a4",
        "cursor": {
          "ref": "f417fb58-d080-42fb-a42f-4beb9d8b404e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "20170281-722a-41e6-9d06-6909c02322f9"
        },
        "item": {
          "id": "f2735f57-0176-4239-9d7b-da7b370475a4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "189ed3d4-f7bc-4f21-8c89-3945f8941bea",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 65,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbac5e57-418f-409b-9d7e-08f7dd027817",
        "cursor": {
          "ref": "bc6d3ebc-65bc-4baa-ba52-c6fde00ea10e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "afd631d9-ffe1-4644-96b2-1fb37ddc6fc0"
        },
        "item": {
          "id": "fbac5e57-418f-409b-9d7e-08f7dd027817",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "99dc1b2d-71fd-4607-b938-314057e9d3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3aaa48-46e6-414d-a20c-c498aefc3ad6",
        "cursor": {
          "ref": "5f301c3a-97a4-4246-9131-1f9c2cc14e3b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d33eea7a-7ebc-434e-8685-6883f4893721"
        },
        "item": {
          "id": "7f3aaa48-46e6-414d-a20c-c498aefc3ad6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1f85d0fc-790b-4c61-b85a-46b8a4f00d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdaebda-7b84-488c-9033-bcfb537d2f9e",
        "cursor": {
          "ref": "56f17b9d-2d3a-4e0e-a97c-aab7d23442c9",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "914c3b26-374b-42fc-84b6-6b621ac3f938"
        },
        "item": {
          "id": "bfdaebda-7b84-488c-9033-bcfb537d2f9e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "16678234-c130-48d9-b0ba-9e861f66c612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55e721a-6906-47c7-aa5a-6c88d97e3229",
        "cursor": {
          "ref": "4b237158-5276-4282-98f8-a5eefd5ef983",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "68a63398-c733-4664-aaa2-58c770b2aebe"
        },
        "item": {
          "id": "d55e721a-6906-47c7-aa5a-6c88d97e3229",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db828d7c-f98a-459e-a854-b5760e5e8f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8990aa07-59c5-4ffc-bd72-3dbfce53eabf",
        "cursor": {
          "ref": "85bcb972-85fd-40f4-8ce9-0726a9a22c99",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5b26c624-b307-4de9-a187-6e0322e83977"
        },
        "item": {
          "id": "8990aa07-59c5-4ffc-bd72-3dbfce53eabf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8592505c-30ec-4b08-8614-0dcfbdb301c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c7c3f8-2ddc-47ec-a9a3-125ac6907cf6",
        "cursor": {
          "ref": "06e73f8c-5ea6-44d1-a482-802252cc2746",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "053f70f1-fd6a-46e5-9602-2e12ad7ea663"
        },
        "item": {
          "id": "a6c7c3f8-2ddc-47ec-a9a3-125ac6907cf6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "877ffe8e-6cbf-4c60-a82e-43d02622e3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3528cd8c-39f2-44ac-bd11-6188aa96c80a",
        "cursor": {
          "ref": "141aa1bc-6b55-4c0e-8218-9ff8acbd727b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dc6fd8db-48e4-4c5c-b6a3-ef8cbc817acc"
        },
        "item": {
          "id": "3528cd8c-39f2-44ac-bd11-6188aa96c80a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0ea08954-8988-4128-849b-69872b99ec6e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 65,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7b1517-d385-4c48-9497-be226e2fdc64",
        "cursor": {
          "ref": "09c1585b-332c-4347-902c-0a3caa3d8c36",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5f11e368-bbe9-4698-9571-a4b481a60b7a"
        },
        "item": {
          "id": "ec7b1517-d385-4c48-9497-be226e2fdc64",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dd5559a1-8d3f-4793-a81d-bef88740f445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ff90cb-bad7-4a8c-87af-4c361263e54a",
        "cursor": {
          "ref": "92253509-75f3-4088-9342-98d4ed6eff1c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "87d3f9fa-52d8-4235-a01d-ba86de69094b"
        },
        "item": {
          "id": "59ff90cb-bad7-4a8c-87af-4c361263e54a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c1c53fac-0b7d-4479-aa6c-489f1fa8b4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbac997-6175-482a-ac4d-9583d5227846",
        "cursor": {
          "ref": "054c031c-58fa-4195-9a7d-6f0cd184e2dc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ab88c0aa-7529-4d4c-a6b2-e4ddd8f4e834"
        },
        "item": {
          "id": "7cbac997-6175-482a-ac4d-9583d5227846",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1bcc07fb-9519-4590-9139-1a9a1bf0e3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f9c2d0-581c-4e1e-b7dd-11e65e33132d",
        "cursor": {
          "ref": "af3da550-7961-4221-975b-da313c5c3f4f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1d19fd01-d2ac-43cb-b423-c1d94ee2493c"
        },
        "item": {
          "id": "e9f9c2d0-581c-4e1e-b7dd-11e65e33132d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ec112d67-c734-4f86-bef9-9ebe8c4579fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f395ce2-2861-4221-9f1c-16ccfb6f2c90",
        "cursor": {
          "ref": "37527ad5-c9ef-4c68-ae10-e71c667fdeb9",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e0d9f7cd-cfb8-4d75-987b-dfce1cdd1db8"
        },
        "item": {
          "id": "2f395ce2-2861-4221-9f1c-16ccfb6f2c90",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5ac263c6-1ef1-49ff-941c-583c8114fa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd3ba98-ae06-40af-8920-30a4bc0de18e",
        "cursor": {
          "ref": "0375de53-a573-4213-a459-48e97baf9c76",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "32691caa-9b98-4835-b6b4-c3479b366f81"
        },
        "item": {
          "id": "5fd3ba98-ae06-40af-8920-30a4bc0de18e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3379abf7-d1f7-4560-a78e-ef8f029433b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd28d27-7d74-4dd3-8c3d-171d2781c384",
        "cursor": {
          "ref": "440d2c79-ecde-4142-98a7-bd0dc7d6095b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "648497d3-c327-4c3e-a8b9-8e4d43c105f6"
        },
        "item": {
          "id": "7bd28d27-7d74-4dd3-8c3d-171d2781c384",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "38020705-99ef-4d53-9e5d-8adc40ab5070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edf3e2a-e8fb-422a-9c6a-c80d4b4052ce",
        "cursor": {
          "ref": "b94379a0-72f2-4492-b3ef-b64f6afc9d1b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0943ec41-90e7-4889-b368-989833a3c7c9"
        },
        "item": {
          "id": "4edf3e2a-e8fb-422a-9c6a-c80d4b4052ce",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9c30f73b-e45f-4cbe-b4a4-51aee0224032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20902724-0aa7-4bf0-9db1-a3236ce9718b",
        "cursor": {
          "ref": "d3c6248d-451a-474c-9c6c-c01f9072b49b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fabfd888-15bc-454d-b8a9-5abdf60c63a6"
        },
        "item": {
          "id": "20902724-0aa7-4bf0-9db1-a3236ce9718b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8198bc96-645c-4fe8-9923-8f633e05be5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52f0949-f357-4d90-8b80-baaeb26f596b",
        "cursor": {
          "ref": "ada696b7-01b5-4811-b130-67aafc7d385a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "133b81f8-8d1b-4670-814c-6ac0c118989c"
        },
        "item": {
          "id": "e52f0949-f357-4d90-8b80-baaeb26f596b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9d1c7e2f-0cd3-4748-91dc-145f8457db69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9c311d-b2d2-489a-b0fb-120ec1b9791f",
        "cursor": {
          "ref": "762ffa86-acec-481a-bb2e-51c3639d6513",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b1d19ad3-e844-41e6-8f21-876d2993db63"
        },
        "item": {
          "id": "ec9c311d-b2d2-489a-b0fb-120ec1b9791f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "25a205d3-cc34-4a94-9bfe-911fd1d7af00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d00354-4f4d-42e6-9f2e-fef4ab37de20",
        "cursor": {
          "ref": "b3d24c65-db99-46b5-80ac-0fa9eba98715",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "73f8ed46-2bb6-4269-b4c9-95d04ec6e034"
        },
        "item": {
          "id": "06d00354-4f4d-42e6-9f2e-fef4ab37de20",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "66b4a2a6-b783-4372-b5e6-060c6ba6d534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e21979-440f-4e72-bdcc-696c4e104062",
        "cursor": {
          "ref": "9333f596-9294-4438-a9de-4340fdeae117",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2270f869-8750-41d5-a529-31dcac573853"
        },
        "item": {
          "id": "03e21979-440f-4e72-bdcc-696c4e104062",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "61630064-932e-4bbc-916b-06a8e287ccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e30e354-5888-4c7c-b551-b1fb01c3b1d4",
        "cursor": {
          "ref": "f83a87d4-6ef4-4036-808d-91a6b225d65b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6f619290-8875-4803-9518-a780e2751cff"
        },
        "item": {
          "id": "9e30e354-5888-4c7c-b551-b1fb01c3b1d4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "efab4051-42bb-4a91-8e53-87ff70e8639f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ce931a-3d51-4e3e-a7c9-261999ed2600",
        "cursor": {
          "ref": "390d6bf2-6941-48f8-84ef-28c60fa37820",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "43f05187-fd9d-41f2-b078-9ab77f912141"
        },
        "item": {
          "id": "45ce931a-3d51-4e3e-a7c9-261999ed2600",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "be010509-0d3f-492a-9ccb-1410cf46fc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0979fcf5-0e42-4949-ba4c-b3fb9400500d",
        "cursor": {
          "ref": "b7ecc579-ee12-45d5-a914-74c8bae1f3c1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3cb11a3f-2973-4994-b20e-0d00985923b0"
        },
        "item": {
          "id": "0979fcf5-0e42-4949-ba4c-b3fb9400500d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "24bd9c75-3d8e-4c3b-8417-e2226939263f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a732d1-a402-471a-a802-c41aabc18d9f",
        "cursor": {
          "ref": "ec63137f-0603-452a-87b2-098327b30c8f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "258957a0-8dff-4caf-8eb6-9be84405d80c"
        },
        "item": {
          "id": "18a732d1-a402-471a-a802-c41aabc18d9f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8066ea70-99cd-4806-a8a1-05dcad8eebde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40db97a-2a95-4ec2-a961-218d53b4d4d4",
        "cursor": {
          "ref": "db752b32-78cd-43e2-b4b8-28b8744fb8a7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9b8b354e-9dc5-4413-b3d0-cba227e176e4"
        },
        "item": {
          "id": "d40db97a-2a95-4ec2-a961-218d53b4d4d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "710b847a-93e9-4c6a-a91a-16be199e8981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c97c34f-e70d-4917-9583-92e09b48bc7f",
        "cursor": {
          "ref": "7cdff477-7b5a-49b0-be91-d17c110abc2f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "265d05ad-1e65-4c39-bc1e-159f58fffd42"
        },
        "item": {
          "id": "6c97c34f-e70d-4917-9583-92e09b48bc7f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a4d61885-be65-49dc-8c05-32f2e514c20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497bf714-da3d-4a08-abd0-ac8383863b10",
        "cursor": {
          "ref": "02b208ce-4125-4f20-9d09-88ff2eeaf8ff",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f96bb65d-3b56-4750-b780-013eb87f0467"
        },
        "item": {
          "id": "497bf714-da3d-4a08-abd0-ac8383863b10",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ae45d3e3-fabe-4c7b-ab65-a0c26966097a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea029b9-4fa3-4f42-aeed-277202ea040b",
        "cursor": {
          "ref": "3225e40c-663b-4044-b9ed-ae9c9503af09",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2bf10430-20f4-4e68-8882-a8288900dece"
        },
        "item": {
          "id": "aea029b9-4fa3-4f42-aeed-277202ea040b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "72cb7b5e-4b2a-4e42-b994-c4ce162305d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbf88a2-427b-48dd-8a12-28b6042fcd6d",
        "cursor": {
          "ref": "f2f4a58e-06e9-41f7-b821-a53868d1f395",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3767ed0e-cef0-4658-86ef-4e16b4d7e3bc"
        },
        "item": {
          "id": "bbbf88a2-427b-48dd-8a12-28b6042fcd6d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7214f2d4-8a17-46a8-9d79-f2e2ce729314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef4de7a-4317-4bd7-8f2a-a7fc81d0f5dd",
        "cursor": {
          "ref": "10748a26-bb63-47cb-b011-72aa9dc8faf9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f075bab9-bab6-401d-b5e9-86049a1413e5"
        },
        "item": {
          "id": "4ef4de7a-4317-4bd7-8f2a-a7fc81d0f5dd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab95a869-afb9-46bf-8478-d3c5ebe682db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1e39d5-ea2d-4d1c-8f25-e7357ef3ecfd",
        "cursor": {
          "ref": "5c07ed02-8ce1-456a-9540-83dd11374f46",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "93169644-8693-4dbf-8493-f5185b8d7411"
        },
        "item": {
          "id": "6a1e39d5-ea2d-4d1c-8f25-e7357ef3ecfd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "53138b45-8bb5-45ed-a020-31e54fede42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d142305-0a80-4a71-acd2-ff43f4ddce62",
        "cursor": {
          "ref": "c3344ab8-38c2-423b-8e0f-af8c8fe84df8",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0bd0c020-8ec0-47dc-8b95-231dd8847414"
        },
        "item": {
          "id": "4d142305-0a80-4a71-acd2-ff43f4ddce62",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bca82022-ef88-482f-9c6c-2af8cc9a14f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2712a391-8db1-4b63-9008-14e8757f0275",
        "cursor": {
          "ref": "31ba192c-6481-4eab-adef-a563cefc5121",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3167f437-63e2-4e86-9438-a733d98a45c6"
        },
        "item": {
          "id": "2712a391-8db1-4b63-9008-14e8757f0275",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3181f9a0-0ff2-407b-bfcd-8c994c0e30c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac78bcb-d8f8-4bee-88aa-9ae460e5a56a",
        "cursor": {
          "ref": "3b31183f-0e51-4b8c-a252-5d02b2fcda79",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "611cfa33-9498-488b-82bd-a0deb3e10b89"
        },
        "item": {
          "id": "7ac78bcb-d8f8-4bee-88aa-9ae460e5a56a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fe26bd7e-780e-4f00-812f-514043a197c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1464ddb3-a786-4d99-a00a-b9accf49eaa9",
        "cursor": {
          "ref": "9ff9b15a-f648-427a-a6b6-110255ed7e8b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "751c604a-8cf4-4939-bdd3-a4682c600dbc"
        },
        "item": {
          "id": "1464ddb3-a786-4d99-a00a-b9accf49eaa9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e2a9320f-7088-4f38-8877-91b6e067b799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df71d85-f8a0-4864-8a51-a4e49b6da2e4",
        "cursor": {
          "ref": "47ee60d9-8c67-4a70-8a6d-96d0a9d425d8",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9e918b80-6dce-4eb9-8b6f-019c502d746a"
        },
        "item": {
          "id": "9df71d85-f8a0-4864-8a51-a4e49b6da2e4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7ece55e2-23c1-4767-acb7-6f62b227e53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98960236-c2bb-4d1a-9f63-cab7320e14c6",
        "cursor": {
          "ref": "b72bf5d0-4555-463a-a0e3-138a666f57e0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2681d00d-a603-4d7b-8213-41e793975792"
        },
        "item": {
          "id": "98960236-c2bb-4d1a-9f63-cab7320e14c6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7c6d7d70-5394-4c5e-85e3-5a05aa0a449e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dd85a2-e896-44de-9b33-0ae2a76889c1",
        "cursor": {
          "ref": "c3d53dbe-a7ec-4ade-9f2a-17d421ddfd6d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "eb500809-e4c7-404c-93a8-724aff0ccbf3"
        },
        "item": {
          "id": "72dd85a2-e896-44de-9b33-0ae2a76889c1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0d43d482-b709-4eaf-a370-3b759e4bc6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c218e0a1-492a-4cc5-a965-df78d5198940",
        "cursor": {
          "ref": "e0eaa8d6-5a34-473b-8aa6-4cec370f3587",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d1754430-6445-478e-8691-e17c3b8356d0"
        },
        "item": {
          "id": "c218e0a1-492a-4cc5-a965-df78d5198940",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0af58f08-2d44-404c-a3cd-de10bce62c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d801b9f0-6a85-4e8e-ab26-da973f22ec17",
        "cursor": {
          "ref": "a0a7d7fb-8d12-4348-b02b-c27cf8e6b2f7",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ffe48388-52d2-4021-8821-07846c0d1da2"
        },
        "item": {
          "id": "d801b9f0-6a85-4e8e-ab26-da973f22ec17",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1d60283e-996f-4587-8861-613b3e6d0d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41cdc2e-89f2-4900-aad7-9c497a1403e8",
        "cursor": {
          "ref": "4de23f7a-b00f-41ad-8800-686897584c4c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "869a904e-c0dd-46c6-97a7-dff035b42c74"
        },
        "item": {
          "id": "f41cdc2e-89f2-4900-aad7-9c497a1403e8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7b23b7f8-2776-4deb-bdb5-765b01a99e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc0ac1e-0f1c-4a0c-8a81-559dbb7eff98",
        "cursor": {
          "ref": "dabf6d53-c042-4d7a-8251-8d94962f94bf",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9f2b683d-a849-4c3d-81bb-02c14ac9af44"
        },
        "item": {
          "id": "5cc0ac1e-0f1c-4a0c-8a81-559dbb7eff98",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "05416c5f-52c3-4a8a-8de7-84a571ef7117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc31be0-68f9-41ae-8b66-e306122893f3",
        "cursor": {
          "ref": "5b64f2a7-28ca-4f70-bd49-fa563b2aa3c9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a91ee2dd-c000-4a71-ad69-543a12dee8d7"
        },
        "item": {
          "id": "bcc31be0-68f9-41ae-8b66-e306122893f3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fcd9565f-e868-45cb-aa2a-4d70e9cde1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cd9fb6-be80-49f5-a237-19f647faae53",
        "cursor": {
          "ref": "3f0152fd-2010-4e4c-a0d6-474f8b6423ea",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "69c89a2c-d6ab-43b2-8192-b5dc7e346271"
        },
        "item": {
          "id": "b9cd9fb6-be80-49f5-a237-19f647faae53",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "00c8e81d-daa0-4a22-88e3-edf27c498bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef6a993-2dec-4aa3-b1e1-919e3612d07f",
        "cursor": {
          "ref": "2d0f0315-52b4-44e5-ba44-41c4baa16a67",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bff26dc3-a825-42e5-9ada-2caeb684e644"
        },
        "item": {
          "id": "2ef6a993-2dec-4aa3-b1e1-919e3612d07f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "045336a0-6643-466d-a3db-efc7a0339090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f1723e-0ecd-4a7a-8ba6-4c2783486b10",
        "cursor": {
          "ref": "0d6a4a2d-deae-466e-b15e-ba1aa1f7b9c1",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4a4f2715-d023-409e-98ef-3557bdf0fbeb"
        },
        "item": {
          "id": "97f1723e-0ecd-4a7a-8ba6-4c2783486b10",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4eab9d76-83e3-4b9b-98bf-6335867ab2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3968387-dca5-4c18-a43e-0266dd30d6b9",
        "cursor": {
          "ref": "45da9e06-c807-4156-9ef4-533d656c12e2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "264b1109-1f2c-4622-9647-501851e015eb"
        },
        "item": {
          "id": "e3968387-dca5-4c18-a43e-0266dd30d6b9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "47e31fd2-cadd-4156-a200-45e175202e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee59f2-70bc-4c05-a208-13d5e8989e73",
        "cursor": {
          "ref": "f129dc7a-5256-405a-aeb8-08eb97a6f8fd",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b4e38fd3-7415-439d-8c96-c537c002e0d6"
        },
        "item": {
          "id": "3bee59f2-70bc-4c05-a208-13d5e8989e73",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "57e1b267-e122-4a39-b9b8-09e8f20cd1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6cf369-5924-4fa9-a15b-9c2092ca31aa",
        "cursor": {
          "ref": "e870d91a-fd19-4e44-b49c-dc319da0277a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "20015a58-d27c-4022-9ede-46509b5b8f24"
        },
        "item": {
          "id": "1d6cf369-5924-4fa9-a15b-9c2092ca31aa",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c09667a4-d6d2-4624-b2dd-5e6a6a26b4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a0858f-3840-4db7-b535-70afb67bd0df",
        "cursor": {
          "ref": "91c57bf0-dd00-4b91-b276-f25b1d3e9448",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "27d0a5c9-d21e-49fd-9083-1bce98d3ef08"
        },
        "item": {
          "id": "49a0858f-3840-4db7-b535-70afb67bd0df",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "43b73350-9605-4186-bff3-069daf682021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235a80e7-21f6-4d62-b23a-a77057567a43",
        "cursor": {
          "ref": "cceaaf7b-2b26-4b14-a6ba-c6021267f797",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6aed9c82-0712-4446-9fdc-d1e8ffa1627e"
        },
        "item": {
          "id": "235a80e7-21f6-4d62-b23a-a77057567a43",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "52f25318-b9ee-475b-9007-a8092f0cb2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c97dc8c-1916-4fd7-a714-396136457f3a",
        "cursor": {
          "ref": "29d49d82-3d1d-4d5e-8598-d657556fd5c2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7ccb33e4-3658-4535-9068-8c1d9b9b1ed3"
        },
        "item": {
          "id": "3c97dc8c-1916-4fd7-a714-396136457f3a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bd1995d6-04e7-46bd-92b0-b2530745274a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b259d0b0-7098-4c53-be73-529fe7b69c9d",
        "cursor": {
          "ref": "1f8964a5-19e7-4ff4-9456-843ec7229223",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f4777b85-6eba-4a6d-b39e-6cd64f305d34"
        },
        "item": {
          "id": "b259d0b0-7098-4c53-be73-529fe7b69c9d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cebfd5ef-28e2-4741-9f4d-3946dfc6ffd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89e3501-c17a-4920-898b-897a27e2367f",
        "cursor": {
          "ref": "68873e64-3fdc-411b-a1a2-6ba2910d5637",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1e74172c-4529-43cc-a62f-9ce2c17372d0"
        },
        "item": {
          "id": "f89e3501-c17a-4920-898b-897a27e2367f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4e9d80c4-106d-4cf9-bc20-17b6a08330f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338b938e-039c-4858-b837-03144e9bb30a",
        "cursor": {
          "ref": "09d3d2ff-b6e9-4947-be08-bdc3109cb0ee",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b0ed95c6-ca79-4f53-8350-3a691ae926cc"
        },
        "item": {
          "id": "338b938e-039c-4858-b837-03144e9bb30a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a23a70c2-6a0d-4f77-b622-d14111b602c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5326165d-b9c5-4927-87c6-71d8f5d12f56",
        "cursor": {
          "ref": "b65e3ebe-ecdc-4117-a685-6857663368f3",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "44aebcd3-69ac-46f4-a71b-7909d678600f"
        },
        "item": {
          "id": "5326165d-b9c5-4927-87c6-71d8f5d12f56",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7d5bff6e-d412-453e-ae50-b311b1220809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8636735b-8332-49fb-b6cf-da3a0811b2c4",
        "cursor": {
          "ref": "c33f2433-84aa-446b-a586-a2693789d6e3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "32362850-f6b5-4acf-9069-3dfa1fc3493f"
        },
        "item": {
          "id": "8636735b-8332-49fb-b6cf-da3a0811b2c4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "faba4629-f7df-4b52-ae51-3247cffdf0bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc58182-eeb4-41d4-a2e3-73e469442072",
        "cursor": {
          "ref": "61f28436-8922-46d8-ad24-1431ad1c1d06",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f9dc24dc-696f-43f5-9ab6-faa54b04b0d0"
        },
        "item": {
          "id": "fbc58182-eeb4-41d4-a2e3-73e469442072",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "76cc4e54-f72f-4aba-b7fa-18f7748fb52d",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b8dc94-c425-46cf-ab9f-3b4ec144f01d",
        "cursor": {
          "ref": "93a9ac36-64f9-47d7-8a41-130ab5c1c95e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4e710dc6-8539-4d86-8ce0-e8cd22189588"
        },
        "item": {
          "id": "78b8dc94-c425-46cf-ab9f-3b4ec144f01d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0d712bfa-d08d-444e-b361-bd9d3fffc8f6",
          "status": "Created",
          "code": 201,
          "responseTime": 310,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1f2ee5-82c1-4c85-af55-ea165ee72285",
        "cursor": {
          "ref": "8c2df54a-a11f-4446-870f-2592d537974d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "21b28ae8-e7b6-473b-8a08-78b6738d1210"
        },
        "item": {
          "id": "6e1f2ee5-82c1-4c85-af55-ea165ee72285",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "283a0663-a904-479a-b059-55dfd14e7ff0",
          "status": "Created",
          "code": 201,
          "responseTime": 268,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9284293e-c8b6-44ff-a9c6-139cc6cd50ee",
        "cursor": {
          "ref": "c047d980-87d1-4e59-97c7-1b51641ff6fe",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6fe81b3b-a6ef-47f3-afb6-431309e49144"
        },
        "item": {
          "id": "9284293e-c8b6-44ff-a9c6-139cc6cd50ee",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d6f33a0b-3587-425f-a386-75f68ea6ab07",
          "status": "Created",
          "code": 201,
          "responseTime": 78,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcc7ec5-27c3-4f74-be08-28fd88a71a1c",
        "cursor": {
          "ref": "ac15a48b-a2d9-4316-8eac-042d8bd6aff9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "05dcb404-c31d-4fbe-aced-0b167a361008"
        },
        "item": {
          "id": "0fcc7ec5-27c3-4f74-be08-28fd88a71a1c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6d67445f-4aca-4827-ad65-fecd703d5904",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "203ba39d-82b0-4049-833d-08faf9e67d80",
        "cursor": {
          "ref": "c116a0bf-8dc0-45bb-bd91-ac58a57a12d3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c2faabce-fb5a-43a6-9395-a5bf93c459cf"
        },
        "item": {
          "id": "203ba39d-82b0-4049-833d-08faf9e67d80",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6c32ab9b-9e3c-4cef-9953-ddfc59e73622",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baedcba-29c6-4f13-868b-c90f8ec64245",
        "cursor": {
          "ref": "79ea74ce-04c1-4394-8e96-79df409df78a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bdd7f68e-72a0-4e5c-8027-61c1bbe2e374"
        },
        "item": {
          "id": "7baedcba-29c6-4f13-868b-c90f8ec64245",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b1bb65db-aa46-44e5-a3a5-7cc53e24ea35",
          "status": "Created",
          "code": 201,
          "responseTime": 77,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7645ba2a-48a1-42f7-8fdd-cdb4c4bb15b5",
        "cursor": {
          "ref": "077a031c-157c-4dd1-badf-8dc733b7b4da",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7c473e45-ec9a-4387-8adf-4cc8bd801121"
        },
        "item": {
          "id": "7645ba2a-48a1-42f7-8fdd-cdb4c4bb15b5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d8c40c3a-4612-4c34-a737-a33dd5f9390c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1338a0a4-2906-43bd-9b2c-2b6612d86eb7",
        "cursor": {
          "ref": "f9ede362-473e-4231-bfdf-45680c0d7fb2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "14676e90-dda9-4a4a-b998-b6964e724f9b"
        },
        "item": {
          "id": "1338a0a4-2906-43bd-9b2c-2b6612d86eb7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "352ca54f-fb2f-40ba-a28e-daf776103161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6a60fa-e53c-4a17-a548-160f4cdf460a",
        "cursor": {
          "ref": "cac3dd11-922e-4c9e-8cbb-baa7dcd6ce84",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "84de4c16-dec0-43d2-9130-5f80717eb0c7"
        },
        "item": {
          "id": "cf6a60fa-e53c-4a17-a548-160f4cdf460a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ef0d3306-6816-4139-90c6-b84a1c77f405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7e80b5-b26f-4751-aa07-6f4c64876c0d",
        "cursor": {
          "ref": "1fe56618-8bed-4e82-95ff-7d8996042871",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0a797731-62fe-4cac-93ce-2417e91aa4c1"
        },
        "item": {
          "id": "cc7e80b5-b26f-4751-aa07-6f4c64876c0d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5bd4702b-81c9-4181-b03c-d3b09295a99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cf17a9-faac-428d-bef3-9b91d61a292b",
        "cursor": {
          "ref": "99729bf8-6891-4ac5-a191-22eaae47f65a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bc7a86cb-973e-489c-91f3-0bf0242769ac"
        },
        "item": {
          "id": "15cf17a9-faac-428d-bef3-9b91d61a292b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6d7fa394-b77a-45e2-8bec-2a5651e58854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66199dbf-4561-48d4-a0e0-991d9008b80a",
        "cursor": {
          "ref": "0c563954-016d-43b9-ab0b-4050d67e88b4",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0c9838b1-b57d-4dfb-844e-7c6957ebf7a8"
        },
        "item": {
          "id": "66199dbf-4561-48d4-a0e0-991d9008b80a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5edf698a-9fa1-43ee-bca9-f443d4b74088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6364855-ee72-4c86-8c73-5c55030e2bba",
        "cursor": {
          "ref": "03464736-b53f-4b68-89b5-50815f063bda",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ffab5b06-b59f-4784-b581-80445057dd82"
        },
        "item": {
          "id": "c6364855-ee72-4c86-8c73-5c55030e2bba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "86a004b8-8363-49ef-a4da-1e01fd8767db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3377309d-03b6-4be9-87ad-e91be458bb17",
        "cursor": {
          "ref": "c943ba70-cf4e-4075-8425-99c8f59a7883",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a6c4c49e-871b-49bb-8aba-32e0f1441cd3"
        },
        "item": {
          "id": "3377309d-03b6-4be9-87ad-e91be458bb17",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d171f096-5b4f-4267-9bd5-7de0a83197b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cd3455-f22f-41b7-b9a5-de3220511330",
        "cursor": {
          "ref": "aa267876-10a5-4d71-bb3d-3f1df64ef7b0",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c603a032-107f-4e6b-ac5d-3fc33ed7ec9a"
        },
        "item": {
          "id": "54cd3455-f22f-41b7-b9a5-de3220511330",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb16c13a-33f1-474a-b63a-4a5b90390279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ec9455-a137-4d38-9dc4-68093c75d8eb",
        "cursor": {
          "ref": "c2675b3f-de10-4e10-a575-f2544852cdb2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e7c8012b-3bab-4679-a2bd-5b97fa4d1ff7"
        },
        "item": {
          "id": "45ec9455-a137-4d38-9dc4-68093c75d8eb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c1187be0-c033-436c-9e21-dbbe5aedee93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055019ed-0c73-40b7-a263-c2803a15e87b",
        "cursor": {
          "ref": "2ce42045-26d4-4702-bb3b-e7f11fb42e1b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e08dc92d-b740-46f0-b414-dfc28325f06b"
        },
        "item": {
          "id": "055019ed-0c73-40b7-a263-c2803a15e87b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f25d6a7-f564-4891-a665-7779d82b0e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fcc09e-4436-4524-8227-fd72819003a0",
        "cursor": {
          "ref": "cc6e3dfa-b005-4073-a0c6-2061dc7c3806",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "83cd33a5-e826-4d30-adab-3235aba1cafb"
        },
        "item": {
          "id": "92fcc09e-4436-4524-8227-fd72819003a0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e9f8e0c8-ab8d-40bc-a549-956360aa77e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476af01f-fdde-4583-a357-c8eb86cda3cb",
        "cursor": {
          "ref": "9846e865-f5a5-4840-9ad5-9d98694a886e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "203da7a1-5e74-4bd5-81d5-168b0e417e89"
        },
        "item": {
          "id": "476af01f-fdde-4583-a357-c8eb86cda3cb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7ce5efc4-3d1b-46c0-a4a3-004a7427343f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd326f53-c570-4719-93d6-f3b17df54d89",
        "cursor": {
          "ref": "730660b9-078c-42fc-9a87-00dfe11b952b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3d7788a8-5bb9-4050-bb6c-468485585603"
        },
        "item": {
          "id": "bd326f53-c570-4719-93d6-f3b17df54d89",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "06b4853f-d324-408b-a15b-a6c5b3897a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16edf88f-bd13-47f3-a817-13f0f3446219",
        "cursor": {
          "ref": "b5d8dec2-cd30-4f04-84f7-83dfbafb2e5c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8efd9372-44c7-466b-a328-43a3812fd71c"
        },
        "item": {
          "id": "16edf88f-bd13-47f3-a817-13f0f3446219",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "edab149e-d2ee-4217-adff-4425213380cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e60376d-43fc-49a9-b7c7-4dbdd9ebebcb",
        "cursor": {
          "ref": "7edcf5db-3ee7-4738-aa3c-9addfdcb78ef",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d667b469-ac85-4433-bcca-18ebf6b1584e"
        },
        "item": {
          "id": "4e60376d-43fc-49a9-b7c7-4dbdd9ebebcb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3c03dfe1-d65d-4b72-a070-ac58ba5e84fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ecc85e-0dda-4808-992a-465486d12fd8",
        "cursor": {
          "ref": "d3e2e42a-142e-4141-8d17-b824985540d6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "999d9f1e-6c19-498e-939d-e99d942c82e3"
        },
        "item": {
          "id": "98ecc85e-0dda-4808-992a-465486d12fd8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0c38dee6-cbc9-4324-bce2-ca27ba491fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2c93b5-02f6-4dc6-ba96-465d987a3db8",
        "cursor": {
          "ref": "f2bb3816-3ed7-454a-b523-b1752f394716",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c6c267d0-b993-4e7a-b840-88ce33edd3c5"
        },
        "item": {
          "id": "2c2c93b5-02f6-4dc6-ba96-465d987a3db8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "20fb0f74-bb7b-4f8e-8d9b-0cfe4281120b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f28ade-7dad-4f8f-b292-85f501a00b9d",
        "cursor": {
          "ref": "3fd08eab-b5f4-498c-8cb8-ce87744983eb",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dc4ae69e-7b8f-40e1-a81e-09f7984f85c9"
        },
        "item": {
          "id": "f4f28ade-7dad-4f8f-b292-85f501a00b9d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f75afeb1-81fc-43fc-8e77-db68643e6c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e47bef-9326-434a-852b-000ae43e1768",
        "cursor": {
          "ref": "b47f9e29-f8f8-4751-9e43-85c4d9b0f964",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d6303418-612e-403c-9717-af0085d02aae"
        },
        "item": {
          "id": "76e47bef-9326-434a-852b-000ae43e1768",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8a1c4b2c-d08a-4db3-928f-fc359e8bce05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9015272d-fb87-4863-be98-998cb76457bb",
        "cursor": {
          "ref": "8d9c3fb0-e5a2-4ecd-b094-c099b2dbd6d5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b1df3a7f-fa44-4891-af4d-1afa90d3ff23"
        },
        "item": {
          "id": "9015272d-fb87-4863-be98-998cb76457bb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6a9f967e-6983-4dd8-82b1-0a3444552218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c935dd8-60c5-4b1e-a9c3-0d5d34b083e1",
        "cursor": {
          "ref": "09968b8b-cf73-4163-8226-c9a4bb093ccc",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3a88a8ad-b673-45eb-8b2c-8d903ccc6bbc"
        },
        "item": {
          "id": "1c935dd8-60c5-4b1e-a9c3-0d5d34b083e1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f0d83ab9-1a6d-4f1a-a783-35ad24d177b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1687ca1-fc05-419d-aee1-6be2325f3053",
        "cursor": {
          "ref": "69b76f9e-1a15-4bd0-9815-a789a90f6c61",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "381c18cc-4705-47c5-80b9-9a236c3c358f"
        },
        "item": {
          "id": "a1687ca1-fc05-419d-aee1-6be2325f3053",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "decbc7f9-e4f9-49a6-b2b1-faccbeb5d48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad236a2-d7a9-4728-8670-8bd8ecc8f181",
        "cursor": {
          "ref": "be94ba59-8f3e-4edd-9e3d-270c4be10705",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "acddc2d7-9e15-427c-a2e2-06e5b3e9375b"
        },
        "item": {
          "id": "4ad236a2-d7a9-4728-8670-8bd8ecc8f181",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eccc2470-318a-4617-a16b-3906c7f95c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d46c55-966f-40c0-8c4c-60515a4a8e1c",
        "cursor": {
          "ref": "b313126f-4604-4525-b13b-da1373e05fc1",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4bfb2713-6e1e-4bf2-b750-32a4078adc80"
        },
        "item": {
          "id": "f7d46c55-966f-40c0-8c4c-60515a4a8e1c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9285c682-a33d-43c9-aeca-5c308c43d7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c5cde4-2fc1-40e8-aeed-8ffe7cc0e755",
        "cursor": {
          "ref": "69035a76-6fa7-4e5a-91df-f6791b67bba3",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5ada148f-1fb8-4d4f-b190-c254db35fc1f"
        },
        "item": {
          "id": "74c5cde4-2fc1-40e8-aeed-8ffe7cc0e755",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "105642ca-4eaf-4590-87ed-0fcbf5c5983a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee20754-b837-4646-b86a-3213e4de2967",
        "cursor": {
          "ref": "166b94df-6ab1-4aeb-8d73-46f23b43d89f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fc20ead3-b6c3-4ab7-8ce2-40f5734f205b"
        },
        "item": {
          "id": "0ee20754-b837-4646-b86a-3213e4de2967",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3cf982cb-f223-4f42-9fea-5796cb3945e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca3b75a-c088-45b6-b15a-9146aa7a6a1a",
        "cursor": {
          "ref": "5586b4b5-298c-43f7-9fd2-205d7fe2e7f1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6f9dee56-2ad7-4017-b7ae-48804d1562f9"
        },
        "item": {
          "id": "4ca3b75a-c088-45b6-b15a-9146aa7a6a1a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "846ba242-90c1-4246-ad8d-2eb705aa5952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eedcc1-4b5f-4db2-8123-62baa01a4b3c",
        "cursor": {
          "ref": "4bca10d6-d1d6-415f-bd73-36f9cbf14b6f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "965d0b5f-fc6d-4d7f-8499-6ef4c216ca91"
        },
        "item": {
          "id": "a3eedcc1-4b5f-4db2-8123-62baa01a4b3c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "123f6e6e-94a3-4ef9-8f95-07c8aba95b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec90308-9cf0-4f73-b14f-cce1301428bb",
        "cursor": {
          "ref": "7775fc9e-fe0c-4048-bc24-8350b0738790",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "62aaec75-17da-48c6-a187-3b0cd1887cdc"
        },
        "item": {
          "id": "3ec90308-9cf0-4f73-b14f-cce1301428bb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1b27d848-b7eb-4be7-a107-0120817af225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d37cbf4-2e84-4f91-9879-fba1ad1dd148",
        "cursor": {
          "ref": "11faa366-def4-431d-8937-501429ed146d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b2d85b43-20bd-46e3-a7d2-d0b0da76fe35"
        },
        "item": {
          "id": "6d37cbf4-2e84-4f91-9879-fba1ad1dd148",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1e7a1b08-2f55-4aee-b707-39b5369ac820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6644f8b6-1e15-4b2d-87fe-37809147c37e",
        "cursor": {
          "ref": "25c1aab8-6e64-4705-b78e-e2b41b921b81",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "58a9fcbf-ae2f-4c8e-aaa3-8e1f1642cbbe"
        },
        "item": {
          "id": "6644f8b6-1e15-4b2d-87fe-37809147c37e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "16b71a6a-495f-4636-a651-f256b49bbe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6807c707-3ea1-4a99-9026-a15cc66b6284",
        "cursor": {
          "ref": "78edba61-5e40-415a-bb02-35cf31ae420c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5faa9bad-8770-4e42-84c5-fc8ba8e7c24c"
        },
        "item": {
          "id": "6807c707-3ea1-4a99-9026-a15cc66b6284",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b5544bb-7b31-4b26-b274-2a901e3efcf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53c24c5-d6b1-4dde-8a88-18be4af4081d",
        "cursor": {
          "ref": "e9f1e5c2-f63f-43b0-ac37-349066c0ec7f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "49875268-3090-4917-aa0b-ef4f7a30c889"
        },
        "item": {
          "id": "b53c24c5-d6b1-4dde-8a88-18be4af4081d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1d97a67d-3c55-4845-a4c1-bd540e0634f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4cf950-8b2c-4765-ab44-e923b7370d02",
        "cursor": {
          "ref": "b1cd3413-fe2e-4aa0-b641-c760f37e600c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3b4b8716-a46a-4681-9828-f20194cf2d95"
        },
        "item": {
          "id": "8a4cf950-8b2c-4765-ab44-e923b7370d02",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fe445338-c888-4266-9891-c0c277c47346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25205885-ea84-48ad-8ca7-53a2459051b3",
        "cursor": {
          "ref": "11fa6851-f193-4390-97e7-361852280c28",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "37583623-f626-4371-a510-9889f2ace45d"
        },
        "item": {
          "id": "25205885-ea84-48ad-8ca7-53a2459051b3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9fa128f8-a47b-4c8d-8523-2165f231d068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acbe4a1-482b-42c3-b8df-76de4cc41f1f",
        "cursor": {
          "ref": "c950798a-2e8e-4523-80e4-13a5341dc0db",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d526dea1-1cd1-421b-bfed-26831268c5f1"
        },
        "item": {
          "id": "9acbe4a1-482b-42c3-b8df-76de4cc41f1f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2be93e4c-4da4-4eef-b722-925599810efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d5f345-9989-4047-81c5-e2ba9dadb67b",
        "cursor": {
          "ref": "09c98838-ed56-4ca2-beb3-762079a1c90e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a0246286-9799-4f60-ade3-d33713db1a47"
        },
        "item": {
          "id": "03d5f345-9989-4047-81c5-e2ba9dadb67b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2eb6fa91-e4f2-4c8a-8d22-9a730ce9231a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3179387c-4b4c-47f0-b8ab-b3017b0347ea",
        "cursor": {
          "ref": "d4770f66-73c2-45ba-973a-1498c50b2d9e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e4d39ed8-2f01-41e8-b092-ad9331335733"
        },
        "item": {
          "id": "3179387c-4b4c-47f0-b8ab-b3017b0347ea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "32829c43-2947-43ff-9156-245187e6148c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a0ec6f-aa49-4c81-82bd-3e98d819a514",
        "cursor": {
          "ref": "a4718cf9-16cd-48bb-a442-d939c6377eef",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7ad43d1f-8156-4628-9ebd-104a303d382e"
        },
        "item": {
          "id": "f9a0ec6f-aa49-4c81-82bd-3e98d819a514",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "242d8995-5c79-482f-a275-9cfef6f4952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccef416-94c3-4ec6-82d9-43d3bd80b285",
        "cursor": {
          "ref": "79e711f7-1beb-4e21-94a0-97fc9286e2e0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bab47ccf-b97f-4307-b355-22f0368effd9"
        },
        "item": {
          "id": "4ccef416-94c3-4ec6-82d9-43d3bd80b285",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "39ba8b72-126e-461e-ae90-aff63d8fe56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26ede65-7d10-42f9-97dc-f22127391de4",
        "cursor": {
          "ref": "13ce2b71-3b19-448e-9f7c-0159563afd55",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6f597fc8-b27f-47be-95a7-d07b880a6340"
        },
        "item": {
          "id": "f26ede65-7d10-42f9-97dc-f22127391de4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "92623070-5fca-4cbb-b902-050d30f70a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a1c335-a046-493f-b313-4b043c0989b0",
        "cursor": {
          "ref": "b9dd8eb4-ffa2-4dcf-98b6-cc9fb4bfb0d8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "615b0f50-567c-4426-a369-d50114b34e8e"
        },
        "item": {
          "id": "b6a1c335-a046-493f-b313-4b043c0989b0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9012cace-80ff-4baf-90b1-ab0f0f5ceeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ceb996-9635-459f-9b7d-d9aaf6a94315",
        "cursor": {
          "ref": "d9d68642-f31a-45ae-82cb-f9a2bdd81b2a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "454ed381-6b3e-4992-b399-fb3e6daa4702"
        },
        "item": {
          "id": "18ceb996-9635-459f-9b7d-d9aaf6a94315",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "05ce9d96-810a-4997-964f-00536a63ce9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72509c73-0b6a-4f52-b353-f2606b74617c",
        "cursor": {
          "ref": "79d29dcc-3cc0-41ea-b4f0-684401d548f4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c197a0ec-4c6f-40c5-b39b-e85bc787f929"
        },
        "item": {
          "id": "72509c73-0b6a-4f52-b353-f2606b74617c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f8c886c1-4f50-4613-b0a0-991c978376f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297f086b-483d-47f2-a8bb-784f64f882e2",
        "cursor": {
          "ref": "13db3728-0b5d-4f3e-8f85-97876fc4ff40",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "88fb3a03-9538-4ed1-838a-9ab275786f19"
        },
        "item": {
          "id": "297f086b-483d-47f2-a8bb-784f64f882e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "51be0075-8608-4fb8-bb30-b9927bfca8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e38a6ff-51db-4c43-87f3-4159cc7bfd2d",
        "cursor": {
          "ref": "84b41a66-8521-45f4-8cde-94c7a0da2490",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0ff7166c-5230-456c-9d30-e112ef0b8dc9"
        },
        "item": {
          "id": "4e38a6ff-51db-4c43-87f3-4159cc7bfd2d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "03c8487f-b6a0-4210-8caf-96b26aa8c605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968bca09-ca25-49bd-81dc-553c3e81bba4",
        "cursor": {
          "ref": "d9ab6c79-e6f9-4f47-884f-17b81bad8b57",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "933122e1-3822-40e9-b40e-f1125e2fdec3"
        },
        "item": {
          "id": "968bca09-ca25-49bd-81dc-553c3e81bba4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1fc4dfb8-00ab-48db-9671-6e332fba791c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605cdb99-ddb5-4b25-9cc9-39706b8ff98e",
        "cursor": {
          "ref": "c54f99c0-e859-4bc2-b79d-e8960b0a7fed",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cd2b39d8-ad18-4b48-aeac-1d9ebe27d8d9"
        },
        "item": {
          "id": "605cdb99-ddb5-4b25-9cc9-39706b8ff98e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c7529a8b-81e5-4066-b6e3-3742f3632f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85439931-f7b2-4438-a75d-43d7474b8f0e",
        "cursor": {
          "ref": "1345f65b-67fb-4f1f-9985-30753455d767",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d704b45d-9d91-4540-bae4-a8e7a5315e86"
        },
        "item": {
          "id": "85439931-f7b2-4438-a75d-43d7474b8f0e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5a1f312b-3121-478f-81b5-64f76e5b7a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136e264e-fead-4767-a8ac-10e2c6455629",
        "cursor": {
          "ref": "5709e533-5b97-48d9-8eff-dee92188ae65",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "76a92397-2af1-43b5-a165-f1f4c2e29cc1"
        },
        "item": {
          "id": "136e264e-fead-4767-a8ac-10e2c6455629",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "96b12086-5b97-402f-ac11-1e6e4f5d3e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968dd0a8-f2a5-45ed-888b-a0c9ad0bb493",
        "cursor": {
          "ref": "f257805d-5a92-4ecb-abc2-0de4837d7f2d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d5436f02-6812-42da-95eb-b88426d21f7b"
        },
        "item": {
          "id": "968dd0a8-f2a5-45ed-888b-a0c9ad0bb493",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1a11ce9e-6e72-4cbc-9e3d-c4561f7b8b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12adac81-7d7e-43bf-8b5d-c0ac1cd77f8d",
        "cursor": {
          "ref": "1918b3da-4bc2-4b57-96be-9168ab49d1ba",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6a68015c-a1cd-4f23-87b5-cc0b3ad090ff"
        },
        "item": {
          "id": "12adac81-7d7e-43bf-8b5d-c0ac1cd77f8d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "85911f4c-48ae-4195-b788-a9f1498ac324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc66693-4116-4a62-9691-eca382481f77",
        "cursor": {
          "ref": "f7b475ed-b1ff-45d0-9757-20c39fd44e2a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "becd90f5-1732-416b-9a6f-d62ad514c727"
        },
        "item": {
          "id": "6bc66693-4116-4a62-9691-eca382481f77",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "acaf935b-c979-4266-a762-3a496f7479cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cddf5a6-0b64-43c8-83b7-0db00b17c268",
        "cursor": {
          "ref": "620bf93b-2422-4820-8721-d5d8e4d1da99",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4f00bc1a-9a54-45b7-845e-9b16d70cbe76"
        },
        "item": {
          "id": "9cddf5a6-0b64-43c8-83b7-0db00b17c268",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c026a025-1e7c-41d1-b13f-fef56b9956d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889fdceb-78b4-488a-980a-a73e7b6966cb",
        "cursor": {
          "ref": "c892e564-5262-4aae-902f-6971acf21262",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3c493210-1886-4bb4-b5e8-66a630a9fc23"
        },
        "item": {
          "id": "889fdceb-78b4-488a-980a-a73e7b6966cb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d42c29e0-5146-46e1-bd5c-8eed8afe59d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1fa474-362c-4d0b-8417-51428869ff37",
        "cursor": {
          "ref": "5892efc8-29fd-4eb8-8a9f-a6fadd9bd7df",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2c4d0463-4d3a-4197-aa62-d497a6836741"
        },
        "item": {
          "id": "aa1fa474-362c-4d0b-8417-51428869ff37",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3cfd0594-a343-43c4-8bd2-c2df667bc4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bf7cd8-b277-43ae-83a5-80df32cacd8a",
        "cursor": {
          "ref": "8eeb2fe8-6500-41e8-a3db-e56973cb1fe0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8a2b7b43-03c8-4260-adb9-0d7ef8558b68"
        },
        "item": {
          "id": "89bf7cd8-b277-43ae-83a5-80df32cacd8a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "122d5aad-84f3-4532-9989-4c4c88d1a45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ef508e-9d99-4a9f-a3a0-3e7568e38ee2",
        "cursor": {
          "ref": "a1f4c53b-1826-4ad8-87a3-18f2fcc0c17c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a6b74596-d9eb-470b-ae3f-019a44184dff"
        },
        "item": {
          "id": "f8ef508e-9d99-4a9f-a3a0-3e7568e38ee2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d0dfaef8-9a3d-4d49-9af4-281b225c2a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebae27ad-8166-40f2-b2f7-3e1c9e4dcd06",
        "cursor": {
          "ref": "06f8dc35-92f6-411e-ab38-9f37ee03473c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "88de7dbb-5571-4199-93e2-b4905f663e4d"
        },
        "item": {
          "id": "ebae27ad-8166-40f2-b2f7-3e1c9e4dcd06",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "038c244a-7da6-49d1-8676-c045dc7565ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0924b8c1-c807-4d24-869b-a4747c1ead34",
        "cursor": {
          "ref": "e75c2fde-5c92-4b0e-b9cc-c56747ad3117",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "15332f34-cee2-43c6-bed3-041bdc26901d"
        },
        "item": {
          "id": "0924b8c1-c807-4d24-869b-a4747c1ead34",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e4eafe13-e554-4d86-8c98-125f54b535cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3951c3e7-6255-40af-9121-3a2d7ee21b83",
        "cursor": {
          "ref": "73ab1061-82ba-4507-84cf-0443a60f893e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e92babe6-a535-493e-a600-1267d4a08b0f"
        },
        "item": {
          "id": "3951c3e7-6255-40af-9121-3a2d7ee21b83",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "74cb35c3-45b5-44bd-87b8-2b92a0fa57f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef514fe4-6e3f-485f-b832-a24ea4860ed7",
        "cursor": {
          "ref": "280360e2-cc4a-4c8e-a78d-b9d96e938134",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7d2fcc11-ae7e-41c6-9652-6216e7e98fd8"
        },
        "item": {
          "id": "ef514fe4-6e3f-485f-b832-a24ea4860ed7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7a970096-4747-4ad2-b12e-c5834ef0e7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a03403-6510-4e47-b4f2-1112ecb23c9b",
        "cursor": {
          "ref": "475a0874-c6d0-44f0-8f75-1133f8a9b0f6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7ef1a195-fcdb-48e6-8044-e8868a64b837"
        },
        "item": {
          "id": "44a03403-6510-4e47-b4f2-1112ecb23c9b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c87ebf78-318a-41f9-ae58-8111c46cbb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115a6e8e-db8a-44e1-91c9-ce34cf38c621",
        "cursor": {
          "ref": "ab617ac0-b190-4f95-b63e-45ab6c76b64d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9aa1047c-9d36-4a04-9fd9-dbd2a762f1c5"
        },
        "item": {
          "id": "115a6e8e-db8a-44e1-91c9-ce34cf38c621",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "35187047-c96a-40c7-9d7b-b75b98c34e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06202a7-fe73-4bd9-9bb4-5193131a550b",
        "cursor": {
          "ref": "2cf8c4d2-a317-4637-8468-2ef344e34aa8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e8f591db-895b-47b4-a7ac-dab7bb6bcdb4"
        },
        "item": {
          "id": "c06202a7-fe73-4bd9-9bb4-5193131a550b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fc0d674d-8a45-40fa-ae1e-e81733cf42d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdde5ad-f7d4-4d5e-81b8-72049c499d13",
        "cursor": {
          "ref": "8f5d8a21-147c-4486-842d-46d86e1162d7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e46dfdb2-195e-4f85-9754-47099741a455"
        },
        "item": {
          "id": "fcdde5ad-f7d4-4d5e-81b8-72049c499d13",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "05119209-f417-4525-b5c8-adc162bc1cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aa711f-a56a-4851-bed8-20432590cff9",
        "cursor": {
          "ref": "f39410b2-6950-4b23-b1b0-31247d1f5137",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "33a77730-55d5-4ed8-b163-ddb94a07394e"
        },
        "item": {
          "id": "d3aa711f-a56a-4851-bed8-20432590cff9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d2ee01bc-a402-4cc6-924c-fae36eb4c471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa4686f-35b0-449c-ab3a-f86a66a51582",
        "cursor": {
          "ref": "8b5930f0-de92-4a31-a75c-33ddac868c17",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4bd3adb6-87c3-4998-92a0-1eac72627da7"
        },
        "item": {
          "id": "8aa4686f-35b0-449c-ab3a-f86a66a51582",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0a879325-c17e-4cc0-bdc4-057e1a41baf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8249fe3-fd67-4a34-8818-06f8a1055ef4",
        "cursor": {
          "ref": "892ea502-f1af-4c3d-87b3-c9a956116277",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7c3f60ac-5b82-43fe-8b05-67484e6d3986"
        },
        "item": {
          "id": "d8249fe3-fd67-4a34-8818-06f8a1055ef4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "45093570-c6a9-4754-a06a-e501fccb1b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aca4c63-0bfc-4c5b-826b-fa321bfb51ed",
        "cursor": {
          "ref": "e1292585-420f-46be-8fdd-af9790976efd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "586f88a0-fd1b-48ff-b143-9d6d75a0a26c"
        },
        "item": {
          "id": "4aca4c63-0bfc-4c5b-826b-fa321bfb51ed",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fe83b4b0-fc52-4e38-8149-be3f3525e623",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ccc26e-0631-4c87-aad2-480ed29db927",
        "cursor": {
          "ref": "9a3e0c31-244b-4247-91bb-3788ab0edaad",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3cce9206-9c38-4544-a115-f7eb5e0aa6ee"
        },
        "item": {
          "id": "94ccc26e-0631-4c87-aad2-480ed29db927",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0c0fe121-2dfd-42ff-ad2e-a1debfa29894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8987c01-5f4c-4c26-a474-9860ec3f716e",
        "cursor": {
          "ref": "1714c1ed-77b5-4af5-be8f-32468b65afd5",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9e530a73-4648-4f4c-bb48-2e2ca7c6c4c2"
        },
        "item": {
          "id": "a8987c01-5f4c-4c26-a474-9860ec3f716e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1c7be44e-47f9-49b2-be88-90e7849ca8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae66a81-a66a-47a3-be35-521c380959be",
        "cursor": {
          "ref": "4c0cc2e5-5358-48be-a3e5-3ca934ba1491",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f610bacc-d003-4b85-b07a-00d43eb16232"
        },
        "item": {
          "id": "4ae66a81-a66a-47a3-be35-521c380959be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "80faec9f-19d2-4e67-bd17-159ebf853067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2822d30c-7b77-4ea8-b4bf-a9eb43c12b38",
        "cursor": {
          "ref": "79354b43-78a8-4ff8-a1c7-b954e4e63095",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1ef9e02d-e4cb-417d-bb1b-c58dbd6e9bfc"
        },
        "item": {
          "id": "2822d30c-7b77-4ea8-b4bf-a9eb43c12b38",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f18022d5-d929-46c5-9186-bb9a79c38781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233e3950-3494-4835-bcc4-2e9a70aef4fa",
        "cursor": {
          "ref": "6175ee34-23f4-42fd-a37c-f2e5213bb891",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0c42565c-256d-47ea-8124-225c102d6959"
        },
        "item": {
          "id": "233e3950-3494-4835-bcc4-2e9a70aef4fa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3dc03c12-4b60-49a6-bf53-ddb84c7d456b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f528b48-560a-4e79-ad09-1ad5b39f54a9",
        "cursor": {
          "ref": "8c103bf9-4a06-4270-bc3c-17e5d41ea308",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "319beb05-b27e-467f-842f-fa2489097785"
        },
        "item": {
          "id": "9f528b48-560a-4e79-ad09-1ad5b39f54a9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7969c65f-a65d-474a-b36d-fd7b764ab451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29781307-938c-4d2c-bfd3-cebbb77f144e",
        "cursor": {
          "ref": "b2efa30a-dd9b-4b6e-a8a4-6732e0965c74",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "063539ed-491b-46a9-ae17-c769b74e1411"
        },
        "item": {
          "id": "29781307-938c-4d2c-bfd3-cebbb77f144e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fe797455-e49a-4706-87c6-dddc60b83c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168290cf-b854-4356-9ce8-249cbf32c1e0",
        "cursor": {
          "ref": "00cc7f48-91cc-4f2b-8bb0-69c3cd4fe5b1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b4d3cd0d-5087-4d99-9b8f-afd2d39d53f4"
        },
        "item": {
          "id": "168290cf-b854-4356-9ce8-249cbf32c1e0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ca8a2ba0-1b80-4de0-ba34-5ff14468da6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29b8c33-d55a-44db-8e0a-a0bc5ea291b8",
        "cursor": {
          "ref": "f1a15262-3e16-4201-999b-0bf9c0923ba5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "70163216-dbca-4562-9800-5f606f6a0d79"
        },
        "item": {
          "id": "a29b8c33-d55a-44db-8e0a-a0bc5ea291b8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d7150534-ea75-412b-8559-18d598d50b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22928f51-675b-485d-8e59-f572ae211107",
        "cursor": {
          "ref": "afd08a95-dd68-4b82-aad9-dd7dc21a6a88",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "29d9d7a3-55cc-411e-8ef2-f2fab690c32c"
        },
        "item": {
          "id": "22928f51-675b-485d-8e59-f572ae211107",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "45da2aaa-5455-41a1-a157-8e739e94bd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3455b4f-9337-439c-afa0-26dd8a62d29a",
        "cursor": {
          "ref": "bd0b6020-7ec2-430c-871d-391401bc0877",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "04115c4d-45e2-4ce1-b6af-c979c7b558ab"
        },
        "item": {
          "id": "b3455b4f-9337-439c-afa0-26dd8a62d29a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "45266edd-33c2-4a19-9b9f-715494fa0bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcf2fe7-1543-4000-b0ed-9526156bda33",
        "cursor": {
          "ref": "8e0ff5cf-dc99-445c-98fd-e77f08dc0dd0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4020eb4d-a871-4e84-a167-a20d305a360a"
        },
        "item": {
          "id": "adcf2fe7-1543-4000-b0ed-9526156bda33",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "77078e21-8b08-40ea-b1da-e2e6fbe5ef92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7f09c-9621-4985-91fc-545bad7b38e5",
        "cursor": {
          "ref": "8e66944e-2b36-4d6a-87e6-dbfdf284e8c3",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ff9b22d9-043a-45b6-ba62-f56ad96c302b"
        },
        "item": {
          "id": "17e7f09c-9621-4985-91fc-545bad7b38e5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c7b33515-872b-49d7-b337-348de25e1fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7304796-64bd-4ce2-a403-4b5e53f43edb",
        "cursor": {
          "ref": "f64f2d5d-bf3f-4ec4-95d0-9a709a3cf55f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c7646443-b41d-4d26-9be3-9a7e1f6513f7"
        },
        "item": {
          "id": "a7304796-64bd-4ce2-a403-4b5e53f43edb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "15880760-fa7a-48de-abc7-bae079c173ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7519a1b3-6741-43f5-8471-525271d9a525",
        "cursor": {
          "ref": "11ee0e71-e7d3-4182-97d5-dbf232dd8f02",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8e3f0c9e-4109-4fd9-a8b8-e12cb70c624f"
        },
        "item": {
          "id": "7519a1b3-6741-43f5-8471-525271d9a525",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0ad032db-e176-42c0-bc0a-7f91cb623ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d965fa06-c4e2-4160-97af-9f7faaafde24",
        "cursor": {
          "ref": "553783b6-5b82-4a84-b8df-ffc22ba93e2c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ac028330-6f82-4aa6-ae23-f10d6763bd55"
        },
        "item": {
          "id": "d965fa06-c4e2-4160-97af-9f7faaafde24",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c5cce7b0-19f8-481d-8e27-e1a5675f8eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dcacdb-7078-4844-99ba-ceece6aa886e",
        "cursor": {
          "ref": "17faf848-8d76-4c5b-83e5-41104cf05c2f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "36cec1c4-9e29-4654-a49d-c0ee9535cba6"
        },
        "item": {
          "id": "b2dcacdb-7078-4844-99ba-ceece6aa886e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "497361c8-7d85-4a32-a07d-db1df23345d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab302ce-4b7e-45d5-948f-49b05fef742a",
        "cursor": {
          "ref": "1d2e78a6-be5d-4b9f-8513-19686c4419a3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d2b34f8f-0963-47fe-ac12-01ea5b08f398"
        },
        "item": {
          "id": "2ab302ce-4b7e-45d5-948f-49b05fef742a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6234f210-6df3-41d2-8fe8-e3676298b8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d1676f-5513-4cff-aa04-36c61e849202",
        "cursor": {
          "ref": "42d515ff-f2fb-4632-860d-0bbad76b2c8e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0af6e3ac-3641-4735-8b1c-1656974467ca"
        },
        "item": {
          "id": "f7d1676f-5513-4cff-aa04-36c61e849202",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "03c3e8f2-9eaf-4ae6-afce-8ab4c8958efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059f0b4e-c37c-4f5c-a1fc-b23677868b62",
        "cursor": {
          "ref": "1ef3b7b2-fd89-4fd2-a96f-9ceccd918f18",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9da3feca-dd8c-4c72-a010-3eae35049c2c"
        },
        "item": {
          "id": "059f0b4e-c37c-4f5c-a1fc-b23677868b62",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "94b3d123-c683-4523-8618-46dfb3538717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d8c718-20ab-440d-8254-1f5b86c20ed6",
        "cursor": {
          "ref": "6e5cde11-eb98-4bcc-9a22-f68e2b6ec9b0",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3993b1b8-c0f4-466c-bb87-cf802f4972e9"
        },
        "item": {
          "id": "47d8c718-20ab-440d-8254-1f5b86c20ed6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "77f48ca4-1ed9-45d3-84a8-7c80de003970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53629e35-ef38-4618-a89e-ee65bfd313f7",
        "cursor": {
          "ref": "6ab87e66-7438-4a7c-a997-18b06c9e9fa7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "38fae36d-de97-42b8-8c70-92ed71940e8d"
        },
        "item": {
          "id": "53629e35-ef38-4618-a89e-ee65bfd313f7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "04747672-f89a-4f09-bbd4-c519e02f21d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a9d5c7-9631-4e9b-afa1-d9c2ff7e97ec",
        "cursor": {
          "ref": "a138c968-bbda-40fd-9bb8-7d3b3e2bc045",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "55b001ff-d3bf-4931-8871-514c0cd5ddc8"
        },
        "item": {
          "id": "43a9d5c7-9631-4e9b-afa1-d9c2ff7e97ec",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a681e4cc-82cb-408e-98c2-53eceef41690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5541ae0a-add4-460c-8e43-f97b537d0189",
        "cursor": {
          "ref": "9ca1aaee-7370-4708-ac51-fef579bfb8f7",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b4aa0756-0829-47f9-9bc1-3b4d1d0c188c"
        },
        "item": {
          "id": "5541ae0a-add4-460c-8e43-f97b537d0189",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bf9d475b-b2bf-4b9c-83a4-b50366e128cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36df4091-b124-44fa-8e5f-78f09b265e86",
        "cursor": {
          "ref": "6fff0b93-9d13-4010-be30-d2be12875fe5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c31a175f-2ad8-47bc-a785-33752232d0d2"
        },
        "item": {
          "id": "36df4091-b124-44fa-8e5f-78f09b265e86",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e211d6df-a555-480f-a711-6aaac1b6b401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee1d2af-22e5-486c-8aa9-3381be4870b4",
        "cursor": {
          "ref": "1e765575-70b8-4c88-8788-16148dab4565",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1a4ee212-0f3b-4587-b4be-e8d63708ccf3"
        },
        "item": {
          "id": "4ee1d2af-22e5-486c-8aa9-3381be4870b4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5a1aa303-dbc1-4bad-b2d0-1f2519ac3951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbc5318-7c49-441e-81ff-704eeeade049",
        "cursor": {
          "ref": "c05c1ed0-0540-4095-a7d8-e57cc5e15de1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9a359c2c-cd92-4f39-b986-7da535334784"
        },
        "item": {
          "id": "ffbc5318-7c49-441e-81ff-704eeeade049",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a5154873-b564-4a99-b39c-cd19def9b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0c6976-1058-4e2e-83ae-222cdcdd07cf",
        "cursor": {
          "ref": "57c6f302-8aca-4d76-909d-de7f55ebc5ba",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "26337326-bd0d-458a-9d2d-c6d557e3b95c"
        },
        "item": {
          "id": "bd0c6976-1058-4e2e-83ae-222cdcdd07cf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9aa13339-8136-48fb-8984-5e7f286f2b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3daa4c6-6dba-427f-82a7-06f3b421e13b",
        "cursor": {
          "ref": "92b0c832-5e82-493f-8fee-177efd9a4cde",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3a19e14c-4417-4938-ab97-dc9b459c3002"
        },
        "item": {
          "id": "f3daa4c6-6dba-427f-82a7-06f3b421e13b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "393dbe28-22f6-476f-b8b6-8500aaec233b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf80017-e960-418c-9bc8-0bcf8a79e919",
        "cursor": {
          "ref": "5e08c4ec-6087-446c-86d1-166c3868f7ce",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "357c5aa2-99ac-4795-900b-c6a00887a26c"
        },
        "item": {
          "id": "fbf80017-e960-418c-9bc8-0bcf8a79e919",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "06e9870e-1d48-4317-80d9-1a92cf3e7f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34a884b-0d57-4239-91af-a8dd8421adce",
        "cursor": {
          "ref": "bb30908c-20ca-40da-98f3-9c1700e86428",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8b6df62a-0a49-4ba7-a6f0-b34e5ccfa3a9"
        },
        "item": {
          "id": "b34a884b-0d57-4239-91af-a8dd8421adce",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1fe87949-8135-4661-b471-a1a40e35d6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efacc737-aa91-49aa-ae81-de6329bb8228",
        "cursor": {
          "ref": "8ffa6123-8409-4ec4-aa57-ca653080b9a7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "14190fa2-a4aa-4b5b-98b9-de51f8bfe237"
        },
        "item": {
          "id": "efacc737-aa91-49aa-ae81-de6329bb8228",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8a4952a1-2512-479f-a53b-179709ec4a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2673bf4e-4e9e-4476-969e-d9f53576925f",
        "cursor": {
          "ref": "9201ac58-2479-4077-a168-a4b244c644bf",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5fa62c20-fbc0-46a2-bcea-7c62f0cdfb52"
        },
        "item": {
          "id": "2673bf4e-4e9e-4476-969e-d9f53576925f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "03aac895-a5e0-4b2e-8a61-7fe8ca4c3707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7c4a94-db7a-4eba-bb2c-5fa603259766",
        "cursor": {
          "ref": "890a3c0f-ca20-4408-8d3b-e5d0dfc2d9b6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1d066abf-abdb-4a49-9c8a-60e46cabd5f4"
        },
        "item": {
          "id": "fa7c4a94-db7a-4eba-bb2c-5fa603259766",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8d61f7e1-4b86-4adf-aa9e-45c6bff39747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b57e4d9-4c71-4357-b696-3cf3a2815fda",
        "cursor": {
          "ref": "63f8fc0e-9a74-4442-9a43-cadb3c7e484b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ec71be85-254c-4aa4-9426-2cb67fe5934e"
        },
        "item": {
          "id": "7b57e4d9-4c71-4357-b696-3cf3a2815fda",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e9f1ef97-30cf-4a26-b5e1-e0a351ea8c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d77195-dc4d-4303-af30-b682392a8a67",
        "cursor": {
          "ref": "7aff9ac7-6385-409a-ab31-de269e06c7e2",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a688671c-c417-4c19-87c8-1291df7f59bf"
        },
        "item": {
          "id": "c2d77195-dc4d-4303-af30-b682392a8a67",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "224c16cd-f03f-438b-8dac-6a14ddcfff38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2287d6-0ce3-4fcf-b8ff-b51c0f3baea0",
        "cursor": {
          "ref": "94829da5-8ea2-4a43-8944-a5cc8dfd4fe6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9d4ed206-3f31-487d-9d3d-ade2920a59f9"
        },
        "item": {
          "id": "3e2287d6-0ce3-4fcf-b8ff-b51c0f3baea0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "78776255-8125-46df-86e2-3acb3dadafe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5302ac7-4e15-40e4-a4f2-3422469f1738",
        "cursor": {
          "ref": "aa005343-3420-4af8-8fca-4cdb21de48da",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e3c6f767-32b2-4405-81b3-8ab701d5e789"
        },
        "item": {
          "id": "b5302ac7-4e15-40e4-a4f2-3422469f1738",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a80c60f4-f77b-43c7-b455-6fd116ef7ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f450443-449d-4d1b-9330-b0f4f876ad6e",
        "cursor": {
          "ref": "ad6dadf8-63da-4046-b061-0dd03f6dcdfa",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c4726eba-18d2-4c90-962b-d143994fd7ae"
        },
        "item": {
          "id": "6f450443-449d-4d1b-9330-b0f4f876ad6e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b6803e2c-00c2-4f9a-b732-57cc9aefb7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fa4c58-89b0-44d3-886e-32bb19184cd9",
        "cursor": {
          "ref": "c53709c7-2869-47c4-a6ad-1d0727abafc7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e7f87bc7-f387-4120-8352-c32e63dbe802"
        },
        "item": {
          "id": "12fa4c58-89b0-44d3-886e-32bb19184cd9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "22f07732-b507-44a0-883f-059a9348a0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72277ff-8dcd-4a91-98de-8f27b5512a22",
        "cursor": {
          "ref": "e15fbd72-8872-4308-aa7a-9db365caa53f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c0ccee64-a6c7-4758-a6f1-34308e8a9511"
        },
        "item": {
          "id": "f72277ff-8dcd-4a91-98de-8f27b5512a22",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2e14e4a3-73b4-4fad-b1ad-822ee5a2a755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b354e49-ad83-46f7-b39f-b74bc2e654eb",
        "cursor": {
          "ref": "94af6f10-0868-4f6d-8b36-4a4ea0e40845",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4560c185-efe6-49a9-a369-f628fb421eb8"
        },
        "item": {
          "id": "4b354e49-ad83-46f7-b39f-b74bc2e654eb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ea6e7325-b430-46c5-b00d-73dafe419c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a87a5a7-ce67-4c59-80dc-12f0be687beb",
        "cursor": {
          "ref": "7cb1fc39-ee0f-44dc-8e6d-aa4db6b702f2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "32aad73f-3732-4a40-8626-796335666de0"
        },
        "item": {
          "id": "0a87a5a7-ce67-4c59-80dc-12f0be687beb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6ccaf118-36e0-4004-a143-cca0808693bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5a822c-bbee-4f68-a973-300072829b70",
        "cursor": {
          "ref": "ce3150d2-eec9-4048-9cc6-a86462ed171e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b3ba94f6-05c1-4d1d-8eba-d82d2c83a14d"
        },
        "item": {
          "id": "ce5a822c-bbee-4f68-a973-300072829b70",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5f17bd06-f0af-465a-a360-be650e2e70c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f635d49-6389-4ee6-bac1-9b6cdf72de36",
        "cursor": {
          "ref": "c11ee876-242f-4ac3-9a9b-e48ffd4b3cfd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c4f539b4-24fd-4b64-95fc-9061ef7bd5ae"
        },
        "item": {
          "id": "6f635d49-6389-4ee6-bac1-9b6cdf72de36",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "63054974-a415-4af6-8b2a-abd10af4261a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fe9b04-169c-494f-834a-b66ebd141559",
        "cursor": {
          "ref": "3896de97-5396-4b6d-b6da-c495b5fe500a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "93ed08f0-0c9b-4787-be00-8f933657e7d3"
        },
        "item": {
          "id": "f7fe9b04-169c-494f-834a-b66ebd141559",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "846c70a7-ba20-41ee-9c5c-9d0b411b6e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371517c4-9b77-4310-aa3c-7a39063d558b",
        "cursor": {
          "ref": "994ec8ef-1934-49b7-8c32-515f6da7afac",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "63cf9062-1cec-4b72-8316-80b62f0fa8ff"
        },
        "item": {
          "id": "371517c4-9b77-4310-aa3c-7a39063d558b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b031ac4f-e43e-4d9a-9adb-06d49d0327c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a28369e-25af-4fed-bf26-5d9aadabd0d7",
        "cursor": {
          "ref": "5cfe4996-f583-41c4-8ee2-99f049d29972",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "06afe664-5189-4aab-afb5-a9d938a679b5"
        },
        "item": {
          "id": "2a28369e-25af-4fed-bf26-5d9aadabd0d7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "961bae8a-5dc0-4136-8ccb-5952bcb5fda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea51353-f4a5-4b49-b075-733618373293",
        "cursor": {
          "ref": "dfa36905-1796-4248-bad6-dfb235aa7db7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ef7dfd36-8c4f-4029-8de1-2c6845ad8e0f"
        },
        "item": {
          "id": "7ea51353-f4a5-4b49-b075-733618373293",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "656be955-3556-43b9-8678-3d15b08912db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0865ba55-4791-48cf-809f-80ce27f13c14",
        "cursor": {
          "ref": "cec44bf3-593b-4424-a5b2-6396dd085204",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e3b3d939-c8bf-46eb-b037-c91b54b3b95b"
        },
        "item": {
          "id": "0865ba55-4791-48cf-809f-80ce27f13c14",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5f24a0df-98a7-4a47-a0a8-03cfb1a988da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb1e4a5-2d66-4637-b180-eaef05fe6723",
        "cursor": {
          "ref": "723e510b-1da1-40fc-bd08-848680d1ceb8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5d2c49d2-2ef3-4e1f-9ae6-f69f4e577ffd"
        },
        "item": {
          "id": "1fb1e4a5-2d66-4637-b180-eaef05fe6723",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "14670976-2c82-4f3d-8e36-8c76df77d85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24895786-f64e-4afe-ab13-ead6912ea0f4",
        "cursor": {
          "ref": "8253ca43-7a4e-43c7-aef3-cddc5e08e36d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0f71ee05-050e-4aae-8992-43388271ffbb"
        },
        "item": {
          "id": "24895786-f64e-4afe-ab13-ead6912ea0f4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1e26d62f-0c31-4831-a0fa-b18e31abaf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e276457f-b545-4c9c-89be-403a82c4674f",
        "cursor": {
          "ref": "8ed6ecdb-fed0-418c-ba7f-71fce16c2a60",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "39c0c811-47b9-48de-a31b-f34b925d6e26"
        },
        "item": {
          "id": "e276457f-b545-4c9c-89be-403a82c4674f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5cf04b86-f2f0-4148-9506-cd73c784f6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391dd45b-8c6e-4d2d-8145-9ea7552901b1",
        "cursor": {
          "ref": "e2c921da-b608-4a01-a35c-b237e01501ed",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7471678b-c785-4522-8664-acad1b331710"
        },
        "item": {
          "id": "391dd45b-8c6e-4d2d-8145-9ea7552901b1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "47ece244-671b-4c86-a425-ea21e75c6389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62902d0f-51e6-45d4-a4c5-1407b10f2e44",
        "cursor": {
          "ref": "7664232a-bb64-4ac7-a722-5ef84aa89dba",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "deee52cf-ccf3-44bb-8e87-2f6295650035"
        },
        "item": {
          "id": "62902d0f-51e6-45d4-a4c5-1407b10f2e44",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b1346c6a-ed50-4624-83fc-d7a365918fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb15a25c-6a80-4a00-b28c-224cafb209cd",
        "cursor": {
          "ref": "e6fa91ec-06ab-4402-8914-bc15fc204418",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c6d5dfbd-afff-4a21-a3d0-c240bd47a9ed"
        },
        "item": {
          "id": "cb15a25c-6a80-4a00-b28c-224cafb209cd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "441a9bd4-94a5-46c9-ac57-0d2102db29b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2469ceb1-45cc-483d-9d3e-0ab3f96945c4",
        "cursor": {
          "ref": "58451373-2b12-4540-8e25-c8623762a2a9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c14b4bf9-84ce-41c5-a394-112307ee8523"
        },
        "item": {
          "id": "2469ceb1-45cc-483d-9d3e-0ab3f96945c4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a105ac4d-92c5-4550-8c02-940246cc88ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c350b52-3679-4fed-a46e-4caad90f0ca2",
        "cursor": {
          "ref": "b8c36552-532f-4c3d-badd-533f3380bd95",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d958674c-4df3-4310-8537-132e5a88c5b7"
        },
        "item": {
          "id": "5c350b52-3679-4fed-a46e-4caad90f0ca2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "35ce87a8-2b4c-4552-a812-a175b6863a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc93e135-9753-4bd9-9673-8c59606deb68",
        "cursor": {
          "ref": "21247915-a82e-4ed5-accc-98e4cc99e8ea",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "12fd5590-c012-4780-9e7f-3392ae7518ba"
        },
        "item": {
          "id": "dc93e135-9753-4bd9-9673-8c59606deb68",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "146e017e-d55d-431b-a28e-d8db4fd09cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ebd345-821b-48a2-bc9f-b0338d9cacdc",
        "cursor": {
          "ref": "22691fe8-f5ae-45fe-87de-806a7dd4458f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "89c75a07-a77b-4ee5-853d-3b9d59a8c550"
        },
        "item": {
          "id": "85ebd345-821b-48a2-bc9f-b0338d9cacdc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "00306fac-5b27-4414-a25a-cb84428b3243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da95db22-eddd-481b-9284-55b061263e5e",
        "cursor": {
          "ref": "a206ba1d-8d58-49c7-8aac-9f97a8d3b4a4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fe7288b1-f480-4db5-a91f-93c17c0d1757"
        },
        "item": {
          "id": "da95db22-eddd-481b-9284-55b061263e5e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9722d7d1-3340-4061-899e-1ea25b8b40a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb22777-aff6-4b16-84f5-364b7c866f32",
        "cursor": {
          "ref": "ac3d0110-8896-4ef4-9d61-a27d391b3b43",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1d582ef3-a16c-47cb-b329-3d82eb4b198e"
        },
        "item": {
          "id": "3eb22777-aff6-4b16-84f5-364b7c866f32",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9543357f-ecba-4451-ae45-508463cccaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f93c16f-d7de-49da-b0ab-451f2bcc9bfc",
        "cursor": {
          "ref": "599df5c2-7f24-44e7-bd63-c81b2aa91705",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "764c0d98-45d0-4ea2-a2ed-342d6aa1986c"
        },
        "item": {
          "id": "1f93c16f-d7de-49da-b0ab-451f2bcc9bfc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "712da1e3-c60b-4e32-aa5e-1be225869489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3230b26-ea8f-4a14-b886-25c7f6fd18e2",
        "cursor": {
          "ref": "ec5cef85-df93-4cf1-b7d8-209628cf98e9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ba80a90c-c89e-408a-b0e8-105da7a9b258"
        },
        "item": {
          "id": "d3230b26-ea8f-4a14-b886-25c7f6fd18e2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c3ae3eab-5cf8-444c-8fbc-01f6d9064b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5709a92-f150-4e38-9691-966f5641261e",
        "cursor": {
          "ref": "97e72975-1057-4413-9f16-41a59da24427",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bfe70d9c-48eb-4b99-a07b-27e0b115665c"
        },
        "item": {
          "id": "a5709a92-f150-4e38-9691-966f5641261e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "08e0f791-e6ba-4e53-87d5-6da703a4641f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b85707-3685-4d65-99ce-f2c3173103ba",
        "cursor": {
          "ref": "646cf698-e796-462d-b358-e0bd6ebd08aa",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0dab600d-7505-43bd-9e4f-386c030fc16a"
        },
        "item": {
          "id": "f7b85707-3685-4d65-99ce-f2c3173103ba",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2654f5b6-cb75-4aae-b290-c3253444a704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac01cde2-eda8-41ca-970d-41b8a1ddb542",
        "cursor": {
          "ref": "0f2c2d5d-1d48-4ecc-b9d6-85963b32ec04",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "07eb33a4-b926-4bba-ab55-e2e1d623db4d"
        },
        "item": {
          "id": "ac01cde2-eda8-41ca-970d-41b8a1ddb542",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fd93e0b9-9f03-4671-a0e8-ac7dca90a588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d66808-0705-4371-8962-8e254658c8e8",
        "cursor": {
          "ref": "87ca3104-b7a9-4673-aab9-034cb77618b4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa01002e-5120-49d5-9e47-16c77102a694"
        },
        "item": {
          "id": "53d66808-0705-4371-8962-8e254658c8e8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a360f6f6-246d-4a12-be3e-b831a772bc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a404cd-8ca4-43c6-bd36-73c769962bf2",
        "cursor": {
          "ref": "6ea9daaf-9434-40ea-9d87-04c5933d6735",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4e918e2c-87ab-4407-bd3b-a6ce331089d7"
        },
        "item": {
          "id": "14a404cd-8ca4-43c6-bd36-73c769962bf2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eb6ee09d-b289-4ead-9d47-d72649e63abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90750de0-c067-4ea9-a3c6-1b630fdc9544",
        "cursor": {
          "ref": "430f9b43-26c0-40a8-8f38-30842155d04f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b0cf60ea-8429-4be8-b1bd-e1e69217dff1"
        },
        "item": {
          "id": "90750de0-c067-4ea9-a3c6-1b630fdc9544",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ba703252-d80c-4e9b-b4fc-5be46719c9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778f773d-2f38-4a3b-8106-9a227e010f77",
        "cursor": {
          "ref": "f49a6ddf-e79e-4740-8b09-d3312875f69b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "313c43ae-f9e8-4e44-a026-e7868f9b06d4"
        },
        "item": {
          "id": "778f773d-2f38-4a3b-8106-9a227e010f77",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d211c9d0-8ce5-46c7-a0a2-223501a06f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262cfc50-a90d-4bd0-9575-badf40593a76",
        "cursor": {
          "ref": "83f6a1aa-3a5c-4061-beef-2744d664483b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5910451f-424d-4c1f-9760-cabf288f9fbb"
        },
        "item": {
          "id": "262cfc50-a90d-4bd0-9575-badf40593a76",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "15d1c0fd-8f7a-4325-a650-0ae19299753f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b511344-3b4c-49b6-9f40-48c0a804f3a0",
        "cursor": {
          "ref": "6cfb91b5-6f18-45ab-99c3-51a2f17ef374",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2ab7a14e-f643-4209-85f1-384b103bb5cb"
        },
        "item": {
          "id": "4b511344-3b4c-49b6-9f40-48c0a804f3a0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "996a2f26-2dce-4dc4-82fb-a1a9bed831a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88c0e33-b9d6-45d4-b73c-8579db355e47",
        "cursor": {
          "ref": "f69fb93a-f71d-4a94-b5c3-fc969756ca07",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5324a9db-0111-446f-bdaf-79f980059e01"
        },
        "item": {
          "id": "e88c0e33-b9d6-45d4-b73c-8579db355e47",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "68d1794a-971c-4f4d-84ec-cdb250f2b747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607ce509-46c0-4e30-afb9-feaa6913168b",
        "cursor": {
          "ref": "90a15e60-de36-4a3d-8498-bf24931efb4d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fd563ffd-6289-43b3-95d5-b63adde715a0"
        },
        "item": {
          "id": "607ce509-46c0-4e30-afb9-feaa6913168b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "420536c5-a40a-4739-9d5d-a8a2b54a6fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d42e6b-158e-4579-be45-cc4b7081566b",
        "cursor": {
          "ref": "1c5c6f0a-e8a5-45db-b121-ceb6fee9c768",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bdabe429-862b-47b8-9304-440edfde8b83"
        },
        "item": {
          "id": "d6d42e6b-158e-4579-be45-cc4b7081566b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "614f6d1f-e3b0-4a8a-88ac-6858b03af2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f07c34-15a0-4f11-a4d1-19cd87f70f7a",
        "cursor": {
          "ref": "4caf15db-cbb7-4023-b30e-11ee719ae154",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9a2b4afb-9e53-40bf-a79b-36601ab51f10"
        },
        "item": {
          "id": "b1f07c34-15a0-4f11-a4d1-19cd87f70f7a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a620498f-cc48-4923-870d-f0662cf2a688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441ee9a2-0f0f-4c47-a6b4-baf0992b9647",
        "cursor": {
          "ref": "3f7d5f99-9545-49a7-a046-16aadeedf63b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fd5abfe7-7297-44c5-b6a2-97f3d3cec41f"
        },
        "item": {
          "id": "441ee9a2-0f0f-4c47-a6b4-baf0992b9647",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "03ed69b7-4334-4507-a2ad-573c7355e3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc733fa-1be7-461b-b5e2-6376c7695556",
        "cursor": {
          "ref": "ea0d742d-26a1-4517-a21c-f78ff0738832",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "efe3259c-68b5-493a-b523-8b377c7faad2"
        },
        "item": {
          "id": "acc733fa-1be7-461b-b5e2-6376c7695556",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "37949666-53a2-457b-b973-11f47b448c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96559009-2b19-4de1-b1ad-d99644320fe8",
        "cursor": {
          "ref": "123ecfce-956d-4920-bf34-414ca24a273a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "41ebf5df-450a-4d18-9d22-f6d0b08ac84e"
        },
        "item": {
          "id": "96559009-2b19-4de1-b1ad-d99644320fe8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8ff35e99-5cef-4d65-85fd-2a6b29dd0550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ffbc36-da9f-4f1f-9144-e0e5113f0bbd",
        "cursor": {
          "ref": "fda5b5cd-3b1a-45b2-a781-ff210dffc07a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "44db37a7-b147-43eb-8450-ce4dce824202"
        },
        "item": {
          "id": "f9ffbc36-da9f-4f1f-9144-e0e5113f0bbd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "efe8e781-c130-4b4f-abc7-c2b1efc3c345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affa7dfe-152d-4a22-ba53-27973a7c9227",
        "cursor": {
          "ref": "286e1151-0ef3-4706-be85-f847139c2fb3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9c8e7292-228b-4498-a571-949863056b8a"
        },
        "item": {
          "id": "affa7dfe-152d-4a22-ba53-27973a7c9227",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "249029c8-bb8b-49d9-888a-9e153d3bbd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c79e1e-a1aa-4513-a993-3cf6e17df78d",
        "cursor": {
          "ref": "3cea7e91-83f0-4752-b10c-a204d6796dc5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "04f09ea9-5662-4091-ab28-4dc479562f24"
        },
        "item": {
          "id": "26c79e1e-a1aa-4513-a993-3cf6e17df78d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "303efe2a-9880-4169-92f8-5e36f21d3aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b38a4fe-7092-4123-bdc1-2ed0243973a0",
        "cursor": {
          "ref": "6d5ff658-2912-4a16-95ee-82607c9bdc14",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cfc99627-10c3-44a0-82a8-7f072fe33c10"
        },
        "item": {
          "id": "2b38a4fe-7092-4123-bdc1-2ed0243973a0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "04248b0c-177c-4942-b8ad-fd945534bcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4764f66-bc31-41db-b903-1d5aa9f38613",
        "cursor": {
          "ref": "20fee02a-70c0-4f36-aab4-da6d8c0f4511",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a7e35cfa-c5a2-4204-8f0f-0b996b50c04d"
        },
        "item": {
          "id": "f4764f66-bc31-41db-b903-1d5aa9f38613",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f2cb785c-9702-43b7-b634-20cc469f6923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe199411-c80f-457f-be49-b9b083b463fc",
        "cursor": {
          "ref": "2dfe1fec-59ec-440f-804b-898fd0a5b668",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2e59d6a1-f839-4e58-9a75-32b267d9ba66"
        },
        "item": {
          "id": "fe199411-c80f-457f-be49-b9b083b463fc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "25e054b5-921e-4c10-a4d7-a1c89e494f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb602a4-beda-4e00-af88-c6d87c5c89f8",
        "cursor": {
          "ref": "e77f738c-d9c2-4895-95fe-7f97ef9c2ac9",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6fb6a5a4-4565-4048-ae4f-48ec8395defa"
        },
        "item": {
          "id": "4fb602a4-beda-4e00-af88-c6d87c5c89f8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1ca68b37-f526-40be-974c-e80772c2d219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b38ead3-477e-4908-a44e-eeabb0f8c89f",
        "cursor": {
          "ref": "c7d9279f-20c7-4e5e-9d00-e418846d20a1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c1e1df5d-a0e8-49fb-9232-fe12e2bf454b"
        },
        "item": {
          "id": "5b38ead3-477e-4908-a44e-eeabb0f8c89f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "367b462c-3086-49f9-8db6-9def0bb874e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac5636d-4a1b-41ac-a060-d17836c8e8bb",
        "cursor": {
          "ref": "24e7c6bd-0317-4625-a95c-f67349c05602",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "726c68ea-6184-4797-a900-046c82a95ae1"
        },
        "item": {
          "id": "cac5636d-4a1b-41ac-a060-d17836c8e8bb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e92d67e9-43e1-44f6-afbc-45d8486b0cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290256e4-be20-4ab7-8556-e6fd4d7d2334",
        "cursor": {
          "ref": "7b32c729-93c4-483d-926b-9d21dc52d76e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2a398d5f-22aa-40db-bda4-146ffb848be9"
        },
        "item": {
          "id": "290256e4-be20-4ab7-8556-e6fd4d7d2334",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d0a79167-705c-42d8-94eb-e12622f08f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa6feb6-93f3-4f1d-8cf4-119271bd5fae",
        "cursor": {
          "ref": "29106964-03f9-4b06-bbb3-1c6ec1faaa96",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1ecf79a7-6088-4225-bd70-4f88613044a3"
        },
        "item": {
          "id": "6aa6feb6-93f3-4f1d-8cf4-119271bd5fae",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b25e6aa5-23f5-49e5-b7f2-6b2f0166d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3169e653-6c71-44f5-b70f-af1d45e58563",
        "cursor": {
          "ref": "47eaf6b1-9bbc-42d7-9dc5-183e5a80d3f0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1a9db631-dadb-475f-814c-5fa23663afc3"
        },
        "item": {
          "id": "3169e653-6c71-44f5-b70f-af1d45e58563",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f2969d57-aa92-47ee-8846-58447bb004d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d560f3c-4644-44bf-98db-fd535382e1cc",
        "cursor": {
          "ref": "4b3eb92e-46cb-47ec-ae1c-9192a82d6436",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7755ee66-b704-4152-a5b9-bd9cf6d7ae93"
        },
        "item": {
          "id": "5d560f3c-4644-44bf-98db-fd535382e1cc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "07bd6659-43f0-4003-8a33-b01cc9591c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2abcba-4be5-47d8-bfa4-eddc316da0a1",
        "cursor": {
          "ref": "7200f015-838a-4100-93ad-ee6bdba3e089",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "12196510-d842-4ea4-91d7-8a05e4e11512"
        },
        "item": {
          "id": "de2abcba-4be5-47d8-bfa4-eddc316da0a1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "63c64218-4a1d-4378-bce8-2cc834eddb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92898a8-958c-472c-b881-8ca0d3a9637d",
        "cursor": {
          "ref": "1dae40ab-75a2-4175-ad41-e95512237e09",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bb743a09-968e-46ea-a94d-1a9169198d39"
        },
        "item": {
          "id": "b92898a8-958c-472c-b881-8ca0d3a9637d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a067a22-26ea-4aa0-babf-bb2db9f4d88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2797ac-91e8-4b48-8117-8d9011f9d57c",
        "cursor": {
          "ref": "fb6fe09e-c927-4bea-9d7f-67dcacc3dfc2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8ec5af17-066c-4770-abed-f0a02b8dc615"
        },
        "item": {
          "id": "fb2797ac-91e8-4b48-8117-8d9011f9d57c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "885880e3-e11b-492c-ada9-5457d6f04c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960e9e2f-fc6b-4505-a226-f0e05b9e6650",
        "cursor": {
          "ref": "72560901-4fd2-404a-9389-651e354b27bc",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5a6de028-1d6b-475e-99b3-b2910449e4f8"
        },
        "item": {
          "id": "960e9e2f-fc6b-4505-a226-f0e05b9e6650",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "877d9148-f96f-4282-a9c5-c0aa507677ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e9375e-4d31-49c0-8d31-30fd499c4ea4",
        "cursor": {
          "ref": "4498a023-4cad-4efe-95b7-47dbe6de3599",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "eb164a40-774b-4b7f-b3c1-b54bf6009744"
        },
        "item": {
          "id": "a2e9375e-4d31-49c0-8d31-30fd499c4ea4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0eb2e437-7e52-466b-af1e-e882e5a0407c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821cf797-36bd-4f8a-88c3-197d4e724a03",
        "cursor": {
          "ref": "3f8d0da7-5fc6-4637-9307-2deb550fd68e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c1e06877-be08-4f67-827f-7171124a1999"
        },
        "item": {
          "id": "821cf797-36bd-4f8a-88c3-197d4e724a03",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d174fd3c-6d6f-4190-95ff-c2b56d0c1ad3",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "daab3b3b-441e-4fb9-8b6b-237ffaa840de",
        "cursor": {
          "ref": "96a412d4-0a36-412e-bd40-875111384981",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2b863185-fc42-4464-b303-1f10dec5f54a"
        },
        "item": {
          "id": "daab3b3b-441e-4fb9-8b6b-237ffaa840de",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6d016e3f-edd4-4cb9-9d86-de1f2806e64d",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff14f3e6-4f3e-4d41-b1c6-b10f4c6a1450",
        "cursor": {
          "ref": "c2d7e22d-28a8-47ff-bb49-230d162b1cc1",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0469e67b-03c3-4fae-b584-1a3155c0176c"
        },
        "item": {
          "id": "ff14f3e6-4f3e-4d41-b1c6-b10f4c6a1450",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "62786250-1a8c-4b17-8799-591a7734a99a",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e038f392-21c9-43ac-8532-d2fd59305e06",
        "cursor": {
          "ref": "02d49f7b-25bb-42f4-a602-a4bf230cb547",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c5674ec8-d686-4a00-9c8a-5cdd4112c7cd"
        },
        "item": {
          "id": "e038f392-21c9-43ac-8532-d2fd59305e06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b89ac38c-6b33-4480-9bcf-7e03d1abb277",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e038f392-21c9-43ac-8532-d2fd59305e06",
        "cursor": {
          "ref": "02d49f7b-25bb-42f4-a602-a4bf230cb547",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c5674ec8-d686-4a00-9c8a-5cdd4112c7cd"
        },
        "item": {
          "id": "e038f392-21c9-43ac-8532-d2fd59305e06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b89ac38c-6b33-4480-9bcf-7e03d1abb277",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f4d64c-0010-49ef-a68d-d0afb82bb719",
        "cursor": {
          "ref": "930bca6f-b5ea-458a-bcb2-bfee91af3fad",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bcb0af06-9f1b-4805-911b-19a3cca4a149"
        },
        "item": {
          "id": "f2f4d64c-0010-49ef-a68d-d0afb82bb719",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c281ec9d-dc09-4e13-b2b8-e31f06cda783",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c9efd8-82c6-4db2-aefa-2a98d82606da",
        "cursor": {
          "ref": "a05717fe-298c-4c56-b3c0-50f6b4fce83a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "bc0b9279-d051-4340-9991-ee25a7739972"
        },
        "item": {
          "id": "a2c9efd8-82c6-4db2-aefa-2a98d82606da",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "948fb61f-c10f-44e7-b46d-28a530efafc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}