{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4433f7ce-dcb8-44fd-b584-bdf90711546d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ade0b49c-35d0-4a50-ace0-9939232fafaf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69131494-f43a-4698-bb55-288e4a892128",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bd73c7e0-1e92-4507-85e7-a7dcf3ebe0c6"
                }
              }
            ]
          },
          {
            "id": "9f368d24-98f5-4d7d-898d-cbeb6a0dd459",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "310833d1-6677-43c7-8476-7b1cd61b4c9e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1852271c-0ee7-44a2-8be2-ec1f1b4f984c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ec99de35-56ab-4898-97df-4cc536a2abe1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "30e4f18e-f2bd-47aa-a231-7233bce8485a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a76163ef-67c3-43a0-8f67-addd4ba50ce3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdec1ea5-59fd-4773-a8e7-17a641eef207",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0829ceb-1696-4eb2-a600-20b256d7ba42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "943d4efa-bd32-4dfe-8e03-eccc18ed5a9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec978692-fab9-4af0-acfb-bb5218f3eea0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ffd09b53-1399-4895-9d50-32287eedf8a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9bcc94f-9b85-485d-9dee-1079915997fe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "944df038-e31d-4d2b-be11-b9593561eda4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "76ed648d-54f2-4855-b57c-a3a81e4ebf96"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f0db30f-0d26-46b2-bd62-366d1b7f4988",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33a04b07-2f60-4a12-8bd3-d1213e946a1f"
            }
          }
        ]
      },
      {
        "id": "20875d1e-4416-4e6a-a34b-828a10fd9f71",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "195b3a53-6c39-4795-a9de-b67452ddfa28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5b3df63-f86f-46ae-bdac-29a3dd8117b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b11c6d99-165c-4412-be5b-679c6510dcbc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eefcd19-a4a0-4aa4-b7da-9cf9939d0c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6d254b1-769b-4e80-aca7-bf22dbd4fa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d10d3d7-e939-4fc0-bbc5-f70c89442ffe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fb3cba-0171-4593-9cb3-80e18eab0926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4aeafb7b-024b-48d6-b824-567f276f5c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e75830a-dcd3-43e8-a03a-5f85c1e79fdd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14220ad9-1c45-4a65-bade-bc018104a360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45fe1086-16a3-494a-b86e-62d010cb404a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0ac2fd53-b61b-4638-a081-33c11e01c791",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "226be573-90e5-46ae-9970-a48fdccfddd5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015d97fb-3ced-4709-8551-2dd0f404b6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "767adc3d-b846-4413-8547-07051106b952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37797c4a-087a-4061-9c29-f411693cd1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c120c33d-9de2-48e7-a030-1bcd7713ffde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "df8e11b0-25c9-449d-86f8-773647b6e21e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "178f848d-d89f-47cb-8ec7-64266045b2ed",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c61dd33-9afb-4101-95a0-7ce7fb6ba930",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "16e3809e-5f42-4f0c-8525-0aeb1a35290c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce6d0391-86f8-472b-9e3d-5f95bf38fedf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f8c82a60-d09c-4560-a181-7a90f3e36a1a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5c0f166-151f-4d33-b4f7-03465b686d6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3600e055-dc0c-4631-ae38-ba437a7d45bd"
            }
          }
        ]
      },
      {
        "id": "3fe5cd34-c544-4855-8f03-cd7c7f77bb51",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "16b61c0b-9ed1-4ae3-83fa-e0359c7d571c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "231fa4e3-3472-45c4-afb6-686060f1eec0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ff37e24e-50d5-42f0-a27d-989d6b04697e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c801047c-fc93-4041-a081-3ac36ddac850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11d556e-cb35-4fe4-b115-7edc38560af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0f041d-b9a3-4282-8dad-b5d6f3dce69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eefd5dd9-f58e-4b8b-87b2-07c3fc73cce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26704d1c-f8a1-4e15-abaf-64f685a838a7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6fe8bc-94ff-4a5b-8e4f-9c68b1699281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4939d68-7451-4e92-9291-c6339858aaa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514c7086-ca77-4ef3-80f1-c154675b7844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c0a4d9a-b1ee-4c61-a1d1-6eb4a34e1a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f5a407-8446-4dae-8157-4b7c28ec6ddb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427466de-f2f1-4294-b216-8733783597f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd2a302-87c1-4d98-b8f5-8c934135855c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02d51da-4e83-4ca3-a138-5cc6da0703bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3622bb01-d34b-4d1e-84ff-68e25e875199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a15c588-2675-42d1-8e5b-3865fa9c5684",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96acb3ff-9cd1-482a-aff9-a7d2c3f3143f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656a3848-ceea-444d-9ab6-2fa0ad7261a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5549de44-517a-4dd2-bc94-2bf5d3031906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c81a1eb-af1a-48db-8c57-c645922891f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d3b1e8-30dc-4e8c-9816-e320a86503e0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0896f82-4c4e-4888-a81c-5be854c477ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f764993a-01f9-418a-a3f5-c85f4ca02951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1006d3bd-972c-4f79-9a83-c386ab7fc821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71a643c6-ffa9-47ca-a19c-f6e752244bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4823c8-9f38-419e-b49c-4e6667b18f9e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b87032c-d132-4986-93e2-9418ac4ba9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2d6484-fcc1-4498-a344-cfd9d7815633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dc14a1-9f30-4892-ab19-e34472e9e0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60088c74-3986-423d-924c-2daa741a4082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7676c2b-55e2-48f1-bb8c-d0e83d89a04e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e1f16d-1fa1-47aa-ab3b-2560125870ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73710e4a-b6b1-473f-8879-7c570197ab7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668b8a3b-cfc0-44d6-b328-61812c72db67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c27ae65-1979-4085-a991-06e6d6803cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dfad91-8f1f-4e88-aa66-8ec8df606500",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c51083b-351c-4a4d-b8d1-6d8f79df5b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcee2b14-20d3-43dd-85ba-df71f59173ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b31c3c-74fb-4fa0-9376-4ab05d5e2e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "220ce46f-546b-4530-9be6-a4df99d81286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8fdb97-7f0a-4778-b8d7-927add9744d8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313c1c80-1d10-47a5-89fd-15a953ad96d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d868a6-6013-493f-8317-7edb38eabd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a37ed3-110e-4203-9b62-e837458e8822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94fd9fb9-5f05-4d7f-8bf6-6e976ec9e2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64a5569-3ae4-4302-837f-a76e1c57f8d3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f703e9-6e9d-475c-a673-0d99694d8206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e42216-8a05-49e9-bbe1-a17050fc4a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4436c111-177f-4ae2-a62e-f0ef95765e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38d89553-0974-4b90-b52b-8cf6c726989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c36125-de46-44c2-857c-2421066dd3f0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff277d63-bff2-4f82-bdf7-d491b525f492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2680cfe-176c-4b59-ace9-14f6f23c54cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f6118d-b264-48db-98f1-e486037bd1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "418cf3f4-d330-4c7c-9d14-b5b1dd8d69fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134d797c-6d41-4c4b-839a-de509c38cd1d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f745951-da85-40b0-ae71-ae4ae9449fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a635e7a-4952-4627-9db9-c49388fd857c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37464abd-10eb-45c9-84ae-4912a89c8939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6de428f6-2cc6-4ac7-912c-3dfce064e6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14817fa9-afa3-4f04-9f98-d9bd533fbf0d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6549fffe-9f40-48a3-819f-04e7b2d1f1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f775a7a-fa1c-4b41-9838-424fde21ce40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3297e507-d1d2-410b-a605-4cd835542845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c51f798-a56f-447c-aa26-681079e1d16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b6316f-ff6e-46a6-abbe-0dd65b71fdc9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8312cb-2618-40f1-b3f3-7e97691bccf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38afaaf-6005-4423-b60e-019c88453fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a2f9e0-19b6-40f5-b6a4-103ab5f43d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44727f12-2faf-4cd2-8110-3fc994837eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34009dc8-29d3-4d46-a280-64544a6242fc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465cba04-e7e3-4bbd-bb6b-ec34215b6830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30628fda-5ecd-444a-8e6a-ae17cc18b8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e872f19c-c26a-4831-8b07-01147860e91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e771225e-6478-4e23-9c59-fe94751f8c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1004c1da-0d17-4361-b520-5a689bf1e7b5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb58e88b-207c-4ff5-afe6-76808043bdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542a9ccd-27b9-43e4-baf5-0ea7cbc0b6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a27fb6b-6baf-4d35-9b33-8398f314ffa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ce26bcd-c6e3-4535-9c59-41a6e8d6bef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2b0f88-566f-4661-91b6-30df592c8b8c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cad8639-625b-41a8-9280-ceeb9f479f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869bbc30-141f-4b4c-bbef-0d1935535ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32b5bd8-8879-4f30-a861-9f0950ea22bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a222de36-90ef-453a-88ea-84eac69a984c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eedc9ea-88a9-43ae-9df8-d8deed8d7864",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32aa19c-37d7-4561-a512-6f36d5082525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff0c791-82cc-4fe3-8f78-0481eaf16b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec72275-c9ac-4c6f-9770-577a9d3de76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3755a80-7e5d-449c-82e3-d6bec56f5d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00a85fd-13e2-4159-84e3-b6c49e8baa7b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99740f74-a032-42b3-bf4a-33306b70ab84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39f96f1-eec0-4474-800d-378bfea654c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b5f389-61a0-49d5-9e8f-b7a2689d0904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e83d1698-c566-40f2-90cf-5426d5e4b03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9dd9ea-f942-4274-a955-4c8ffb2da102",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ddf628-4ff3-447e-9df5-364a794af73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e385bf44-c49f-42f9-95e0-bd1a08f0b415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c618f492-566c-43b2-bcc2-cee8d0ee4f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f01bd90e-cddb-491e-9aff-3bd4f8381f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad882fb-6810-4a96-b985-8a59956d7a43",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8132fb7c-179b-4c1e-9798-7de957085b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2000633-3141-4f11-91c4-22d1b5453562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e397986e-6161-47b4-804d-38426e3579c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8f6a3b-eac5-402e-b03b-dd1bcfb3754a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7698cf2-ef4b-489a-bc3b-4a310874545b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b7cda6-d1f4-43ea-ac43-4630e845c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452de3fc-2940-4604-8c2d-4294315d014d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c74ed6-787a-425a-ab9c-02382bfc6dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09725709-fd07-4d15-91e6-cf14f8aa11db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e76893-ec36-4361-b2ff-3a0c4bb110b9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b71270-fc5e-4509-b3c2-7a9db9bf6e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72122820-31a2-4ba1-97ff-2a4792c60f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71d914d-daa7-4316-9b67-c566b3582737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d66b474-5d91-4be8-a294-0606e0913bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01c10dd-c557-4750-ac62-755fe4cde030",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31d958b-9754-47c9-835a-f891c5dbe3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8956fbe-5782-4c50-b7b1-196f48f4b7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5287d55e-e019-4b25-b340-764198b29785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0025887-e9a8-44cb-9c51-c6c8cde9feff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3013b929-77ab-4ad5-9d12-fc2a6649369d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b3af9d-e1aa-44d9-83f8-9c861dad559f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8339663-a41c-4bb4-afd2-dbb7c08a1815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99339fea-9d24-4e4f-a436-c0901648d00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5659d6-c6a3-4b73-b80f-933aed4455dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66c03fc-d10e-4443-b454-244c5dfd9bf7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a742f62-b2b1-42e5-b086-7917b6d897de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72dd421-1c2e-489d-9aa2-58289ea7ea0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d90ec4-d1f6-4b44-b9d9-6d0c9e142e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0661fba5-640c-4844-9bf4-e82a1c5218a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacd25aa-dd81-46c7-81d0-be93d1f06c6b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4def6a-4b16-485f-9a2b-f4e3c5c369ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007c59d0-59b6-4f5b-9b94-89af84d93d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f5663c-1a9f-402c-8260-d5648d7e9d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89459ed2-7a3f-43c3-91e4-e91450adad9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164218d6-420d-4038-8864-cf617f695b09",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b17fe3b-0c43-49c1-af4d-28e2a17e99f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778fc788-f615-44a5-9e87-26552e2ade93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8341095a-e57a-4a13-8bfa-7c7f3714c2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6f8084-36c4-4ebe-a9e7-915c1d703ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4861e6-c3af-4fa9-938f-c8d797a8bb24",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ae8419-9d50-475b-bdcf-820b4452c9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78716a24-6186-40da-9ebb-ff34557a8c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32564694-bc70-44b2-80a9-c9584140b5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df6aadf6-a41b-46b4-a4a3-ea07b1c0b6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dd9cea-7904-45f4-8def-fe8424776b37",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b2d8ea-9409-4f45-897b-3a9957d58082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35af7b83-ed67-4076-b3a6-c3a90af4384c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24780da-41ff-4b4c-bbb8-879f2af440f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b178ed0d-30ca-40e7-81b7-1db9fca721a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8777ad3-e9bc-47a0-8af4-55b33a2eda22",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ff1608-49e6-4e06-81de-f7a9b90fe387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3146b49-5321-4140-beda-d48c001b4a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d650d16-a0ab-4b0c-914c-774d22374581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b84a16-e427-4a0f-8aaf-2443ec9e25b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bd8653-2fe8-4e80-b240-2334b67accd4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92316280-d5c7-4254-a148-fe478cc414ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3376545-f6bb-4c20-a464-80babea01d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682a5820-9a97-478c-9d06-bccaef57ea49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffc10e8-e976-42f9-8879-75a1800d5586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5b57fe-b857-4a61-86db-9a29c09f210a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63508b5a-a68b-41ec-a77d-7671792c536b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c006842-bfbf-40fe-a41d-bd0c44e8fdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c04ec0-f14d-40e7-9cc1-b4c0d84c2a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e7917f-c47e-4dfe-9ab2-93f75920e463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2136a51d-4374-4d9e-9bf4-a8695f479455",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac97327-7aae-4470-a5f1-2b1d42f3ed8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1da6bbc-de3b-48ad-8dbd-ce789bc34548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635dce1b-978e-422b-8678-3db7dd77701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a37e2b8e-9304-4515-89df-c1bd8b049ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dab9e1f-adb7-4f24-b470-f85297991c85",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6369c208-5ecd-44d2-b76f-a5699717e1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c276c14e-353d-4240-a76c-e29f6493f890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f7b8c6-436e-46c5-9a3c-f8121044abe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9384f8-966e-42b7-a87c-0e738268bb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48871c25-e610-4a21-9dba-1c03b9640582",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504860d5-e3ef-4cd8-96ed-172b4f55c22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81f66374-29c1-431e-a293-9c61af57df21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba07116f-50d2-4a53-b0ca-54f4f5265188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b701e84a-b9b1-4a08-8175-5427c1a8fa5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235c7ce2-8dc5-4663-93a5-36bb9b65ca40",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6daf27-c33a-48d3-a9c4-201f6f48a53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a637a24f-f518-4a94-8a62-38b36f0716b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91ac526-01cc-4e3f-928a-aef2a78c4cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff43da8-b539-4913-b284-49184bd2e594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5866a8-d6a8-4a27-a3ad-e650220009bd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c2b6c8-19c8-491e-9dae-b40df0df6a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d866a1a-ef67-46fe-8237-79f66582e79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809f498a-7f2c-41e0-80ab-4c6522e3c67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b72b0689-43a3-4911-9284-ea34586cbd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14296ef2-a010-4796-99fc-4d6e29e428e3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a07e6c-e5fb-4457-a1a6-a673c21f4e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea00efb0-1a44-4a15-a0f3-a92b1d77edc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb748a25-f8ef-4a2d-962e-eab448441351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdc193b-4823-4341-86ee-86bf6e0892bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876c005b-17b7-47f0-a1e9-67ef0d67e54a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0696bda8-e6e6-45ee-bd4d-5e7710cff7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f08182-2116-45f7-8c82-1c46179aa9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63da5bcb-6c8f-4d05-a04e-c48519033e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "84d27455-fcaa-488b-9aa3-f89c709c0ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0298ace1-1808-4122-a96b-7d8102fd58d2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abc39e7-a5a3-4879-8708-88a81960af09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca39f53-be3e-43bc-8d24-97a63beaf26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50050099-0941-4644-94b5-af22f42e0c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc33d6f-bdd8-45a2-a7df-1bc4129eb798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad52d1e-e5a0-41e2-b08a-a984dbb4ae6b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e35659-5a95-4bf5-96bc-f809d57c0aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38923798-ec07-4414-a114-8fdbd5a0c923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5445a261-3996-47a2-b3ca-ad79de6a01d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8e069e88-6146-4f25-bb2f-6de7d28ae39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4e173b-f2ff-4617-bda9-11e8bae27974",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc0294f-536b-44f3-871d-9e1858f85680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0208c712-2b4c-425d-8209-17d0193c0133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188e8d1b-eb4b-435a-827c-e16897a5e248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f85cb9f3-d1c0-47b3-af4d-1415e3ebfad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b39038d-d462-43a6-a762-2d7bf0118556",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac29c2d-807b-4aa6-91de-fff8c235dc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366e0b15-b269-4116-a2d9-38f2679e5a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bd7883-d412-4ed8-8d83-8e903d7fa447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c69810a3-47d5-42bc-9b74-363feecfe63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4781cf22-f535-4040-a9e0-2befdcb68e76",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62097b8-b696-42b3-8554-d7cb725dea73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6265fb93-4e2e-4ca9-91d3-881e502bbd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8aefd6-9d5e-49f2-8703-5d9e3fb29b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bc0081-c211-4442-a5ab-36afe189716d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf8dd85-a0c4-43c6-b577-1d459c0a2279",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f65e73-67c4-46c4-8817-c8eb04e98f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44435df-09df-47b5-9053-1ec042a80a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c28626-293f-4fbb-bb4b-1126fa32e4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d46a17-9557-4fc4-86f4-fc16cc7f206d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca37efb-951d-48f1-a3d6-bde722b075c5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3402ff-713f-4074-98ad-16db85aafd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc80d34b-e1b4-4156-96d0-b04f2015fd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0e8c87-f3dc-4d03-9c90-cbdd381fb000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "378c1f8a-4c59-4995-bb84-4c55d515a1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f37ffdb-8ad9-4b65-b569-9f53c8879afc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3886d359-a7ab-4c2b-818d-5d394317e9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f956946c-e0ab-46e8-9fa6-8e7f53a2925a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7225ed68-190b-4a6d-ae4e-1bf94bddaf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1874c8-9a31-40c6-a942-6d6931f32859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5fbd0e-ccf4-4a7a-9d4d-7e547199370b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cf7c86-73ea-4cd4-af7a-28541850bb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce825b5-816e-49bf-bf6e-977053c0d573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3b4cf7-44c3-4ed6-91d0-02364130b8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "737c81b5-666d-4dae-925b-31c233a7a035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caac1b0d-2ace-40f4-a544-f21df475a0ab",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b04fcf-4c79-4892-94a6-4139de56631a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609b41d5-7efd-47a1-a832-9cab18ec90df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fc176c-31cd-4745-943a-dfb20e3808b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbf9cb8-d185-4ed6-85b1-7621c0686e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec65b28d-f907-4929-b038-80f1cbd60556",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f70b14f-bc41-45bc-aa95-279edf536cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4218ac72-65ff-420d-9dbc-a243bd2156f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d07ae24-ca9f-4a62-b3e5-d10aa5dfb457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e28f4ca6-6f1b-4d06-b626-6e5bc3845470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46369e61-32a5-4774-a9cc-8682bfa2c7fa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1673a9eb-4274-42b5-aff1-3732657e101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a60895f-71e2-4793-98ee-f6aa4b0d1ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d95751b-67b3-492a-91b8-563e50d99143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95092273-ed1a-4ed8-81d6-d08c6bf83f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f98cb2-da06-4d3b-a116-125f3c4dfccf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d402535-1463-46b2-897f-322105233ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc751d4f-9391-4972-909b-8887399fa182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb156b06-4817-49ea-b530-47b0562ddd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98328cc-7837-4a2b-aa84-b0643b3b783b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad22056e-9e06-4b59-a80f-fd550673cd1f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41fbf97-1a23-42fb-809c-be3d8319c55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252b047e-8e9a-4125-9ff1-b5bb5daa0624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4ab6a6-3544-49a5-98a5-aadace285f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "794168b8-7649-4ef6-91bd-1198b9a0eb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb53a39-ef25-4ffa-afca-7edc3684f4be",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83793db-a6d2-4992-914e-158473fe7a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78e590c-7ed3-45d8-9890-f54be8bef4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de75c38-7388-4dda-bc87-5be4c173841a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1374ac-532f-4296-a38b-25e170ac324b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5806f12c-4ea0-41e5-bba8-412e6ae17dfc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c3c097-807c-46b0-910d-274445086bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a957abfd-f346-4613-8717-f5bfe097d58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e478d0e-d71a-40f0-856c-f50a3d538990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "31702359-77a8-44ec-af0f-18266a4a67ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ef4803-652e-430f-bfee-8487b450a268",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2899d884-0958-41df-a562-f202d56eafa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34537d10-33ef-43fa-804d-1fc7e8741fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf534c3f-4a2c-41fc-904a-17cae0304a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e25c7947-951a-47c2-b94e-4aa417661c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0054649b-dfc2-4b5f-aedc-110901e12bf9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9739b16e-fe4c-40fe-96ec-ca1d3984ae39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0d054b-6245-4103-9b48-ff26d077fa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f816cf1f-2593-4348-b8b8-8bfedc91c8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ea43c4-b6cd-4f72-949e-ef74d08bbd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413fa107-8bf5-4021-9898-6ad0222597fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8f9204-961d-4042-a320-8db62f3d9053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd43e0bc-366a-4b59-b5fd-6d7b790c9e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f2dd03-8a69-4b42-8500-889bf643ce74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a453c768-a871-43b6-b518-7e57e32acf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac197ac3-f5d4-417f-8b2b-afd5f2f7eafa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b86bff-be93-49be-acd8-112f356b386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5978dae9-868b-479b-bba9-de6b6446ba5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c341a0-63b9-4db1-94a9-7dde10ad317d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b09ea4b7-e0d7-4d35-84ef-72a52185ccc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d8db43-aae9-497d-b3c7-a28adbeb8cc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bd1d62-9b5d-44f4-bf93-0b4f0ffea7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c235104c-3f5d-4550-ad74-27a22e16f1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6f81f8-c571-4179-9f32-2782cfb84468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf0a242-1013-4d93-a8a9-e874ecf4db0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d69d1e-ebaa-45e7-8ae1-212d3d2aad50",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c1f26a-5896-4f73-8a63-9301762c3bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e1ace9-88a3-401e-83e7-821da090d9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9788c3c1-3370-462c-b461-4c2c3c6c2a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd5a78c-4b5c-4b47-ac11-202a63ea6858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099359e1-aab5-473b-a5bb-a70216ce89f1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5395ebd5-e274-420c-ba07-9e1e344a5069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b7f5f4-e7e5-4675-bb54-c94c850df0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6012c128-f571-4534-b867-b2f0e73efefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "321b9d79-2a66-489f-bd05-da75201fdd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f24e9e-7ebb-4224-bef6-1a0912602a40",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7fd6ef-f817-463e-ac1a-b2dd5d900489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4dd2fe-ee8c-41ec-ac6c-ee6c226d3889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2362adbb-b221-44bd-8bfd-5891f92a852e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33cd3c09-6210-4dfa-8d35-f1852d2e6cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedc6048-51fb-442b-9ce4-4cb562230068",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bab646e-2004-4814-b9db-064837ea7d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff9ed80-b3a0-4232-aa76-d0bb600cfc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4cdb6b-6f56-4998-9be7-8401fba31eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2d9afc-75e3-4b83-a9d8-8ddbb31f3fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5130d99-1fed-4ea6-97a5-32d71930a96e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70282dad-52a2-49d7-9c4c-ee2e90fc735e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c1a1cd-7ab1-4d47-a89c-1ebd69304a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c68695-2dc3-4ca3-8731-bf4ea41f20a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46ccb0e9-5a6f-40ec-9b78-8e68b9f41654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bc9819-f9ab-4473-96a4-1cf752438744",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eb50c6-4fa3-4ea7-8c48-43f046e2e5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a81156-f3e5-4e6b-89fe-82ece1179bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b098d5eb-997f-499b-909c-b95293955095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d31a2945-f83d-405c-a28f-1048afd99a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684d8cf0-cc28-484a-943e-04ab4bcac95f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ca16cf-42a4-4154-a5b5-af5da66b3db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c50e4e0-368e-4246-ad9e-8483e1022bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dd43d5-d4f7-4b68-9199-b3ae8e4554b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "453c8f7a-1a5c-4fbc-a50c-42e43821136d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00686104-d09f-402b-93da-86fa4041e5ba",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58b4529-2a47-4c42-a403-04059f3b4357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784da8b2-e8f5-4e09-aacf-96139c50dcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b47a2ef-0f59-4da0-98ce-ca9a2eab20ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3abdbfc3-f512-4f43-8630-a3d1d3e702ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0fec89-2ef0-4258-85c2-e2591fea99d0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7720e24-1bb2-4d65-87e7-c59df74de561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a674be-09a7-40e8-921a-bec546cb1fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de17d894-b7b8-4b41-80e8-bda01d57d9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a23117-4343-439d-a08d-87173e919010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb75bb58-3d87-4bfe-8c7a-f98122a4482f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30ad723-8297-4277-b26d-5b000e95cd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a9dd84-5c5d-43d7-ad1f-0511ca04bd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187946bf-649f-4117-a539-26dab343e601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a313b7a-4453-47cf-9c48-9b85d4390cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b714b3-5f49-4ee6-aaa8-66a785ccbcc7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d8d3f7-700b-41d8-b055-1e49d459fc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5003642f-07aa-4e78-ba8c-afb318ab5614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c27a84-48ba-419c-b5c5-34f57d9650f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2415131-36de-4b05-8098-857af14bdc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d2d262-516b-4b47-8a0e-a813643928ce",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c539465-2376-4f97-a1c8-25dc184d4858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a0b807-684f-42ae-9d35-46d3c682fef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b527686a-3722-43a9-8b6e-8d9315d75294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "300ebdd4-5171-468e-8d40-6199d3ca7e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a68c12-7a95-47b4-a1d2-46632bb76a86",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db19527a-68fe-4062-923f-b20c0e94a09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ac0b93-b701-4f71-9030-1df72d1246ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5498363b-a273-412a-a36e-d56132cb8fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3c1682-48bb-4369-9703-b87b823c0618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101276a3-ff82-4f8c-a4b3-ff32cb51fa26",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ded0463-5a90-4f8e-80ac-cad235cb7776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60480b37-96db-441b-b8ee-d7a33d8c823c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f0d6f0-ae4b-422e-92ad-cd7a7f7862b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91aae31f-77de-49b6-abb2-041e483ab081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ae4337-2612-4f3e-9a02-f92cbad2ec66",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35505829-fce2-4b0e-9d2d-0277f46802c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520c0b96-e6f5-4a33-b03a-e9206308190c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f1618e-574e-4812-b58b-04477f845eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee81914c-d407-49fa-bca0-68215e989a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562a9b95-89fe-4360-9b9c-b3e2c397a295",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c79fbb0-919b-4e6a-abec-4758790eafe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f903d25-bf57-4db1-a49b-97812b1753f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708407ad-d3b8-4307-acdd-470c0fd78c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6931bab8-b875-43d7-9f80-622269675ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5e9099-0ef8-45ce-85a2-792de8e93248",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df5a7c7-9578-477f-93ff-40f773225b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157d1193-8695-404e-af2b-101d390feeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565477ea-beae-40ab-978b-cee039af4c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e894b8c-7e17-4630-848e-f1bba1141243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a19271-f268-464f-a7c9-fd231bc705bc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ddc592-4326-49a9-af27-12a85fc6ec0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbbd099-493d-48df-ab6d-c0a99e9c4f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668f874c-b317-4d52-adf2-d130b9e3b217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "203c1373-cf3d-4aff-8065-f9009a8964f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282ba638-13c1-4b72-ba03-c738412ac76f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199c9f8e-48e5-473a-9af0-2fb3b5270f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073f9b26-9f1f-42ef-a3b8-200f80e1e0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9441c9a2-c355-4245-9da1-3aab37c55479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33f34af3-9460-4be0-9675-5390b126d1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400783d5-7829-46b9-be16-d022daf23734",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd801a1-e807-4bbd-80ff-ac1efca09979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b0640c-8a4b-4eea-8533-151ddeec6366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbb0365-30d7-4dc0-ba4e-bda1f24faf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68665133-3e97-4489-ac90-da5ddf3c2faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3157bf6-acfe-43a1-ad12-b7476ec479b9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d5794d-a6d5-40fb-8438-c4c41a86ea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45e5e69-5663-417c-8d80-89cf228c131e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07000c05-20cf-4e00-9984-0d1c8e284ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a118eab-696e-44da-b74f-d9acd818609e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a189d42-28ce-495a-b418-5c3629a97fad",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c099a635-2382-4d88-8d3b-09f28d7300f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5580de7-7b5b-4b64-ba39-e8896bf4389a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3431a6f-5a11-454f-aad3-ee8cad507689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a47331d-3553-4777-8fb2-4e6abdcc18dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571632bd-ade6-4b71-91ff-d36619c5e7da",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fef760-4b93-4476-bcca-06b5616c04cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795912d8-2635-4948-9644-c4e8218846a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c734646-b46e-4fe1-817e-5dfd637f60f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2411e7-6f80-4790-a6e3-cc0f5ee279d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242fa5fb-99ef-4de6-aac0-ed19f817e5fc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7294b06-24a1-4d8a-884a-8879e468e6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0562f14-7ff5-4fff-8dc9-10fca1d38ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea51043-daf8-4c41-b057-5d6849682877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "867f9c7f-e88d-4c69-812c-21328ccb6c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5e2e4d-74ab-4a23-85eb-ef3eee147230",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c690691-d4c4-48b8-b87a-b63568324b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c902122-d013-4119-8a82-2752bc46a575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c0347b-5c24-4cde-aa71-7f015748e194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bddcc3-591c-4505-817c-c963e6a8e2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196ef98e-5bc7-4013-bd8e-4908a560686b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb64547-49b3-44cc-b60b-e1f31c0192dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12d2313-8d5d-45d7-bfaa-a01c8bcb92bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b29609e-77ec-4d42-b538-29cbf6d47f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a395802d-f94a-4364-a491-391d9e8d780a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272fcf19-c8a2-4aef-bb10-c0cc3d7738c0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ae179f-604c-4e35-a2bf-5c33a6225fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6671677e-3692-4c4a-b8bf-ed5ff02ea8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc66c2e0-87e4-4917-9773-f300b3275fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07343245-b72b-4837-b730-14fa44c0dcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0808d0-e2e6-4e22-9691-c0a8cb8f2b6c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3468d66-c183-42a2-a3c8-5ecbeccc2c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f8c2b2-43e4-4eb6-8c2f-527630269faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4d0417-170c-46e8-a4a7-8ca25c52d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cadd59f9-a10d-4296-828d-2b133d74e242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c44159-348c-4224-82cc-b61bcef26692",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a45a572-04ed-455f-9607-1def236afab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f369f2be-acea-4a40-8917-bdc6306385b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cb6216-f3c0-4475-9092-4c28eab6c8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "336973cc-af4a-40f2-ad6c-08c87f4ae387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641cbd8a-d678-4846-8b98-35aa74afc249",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98dbf06-0d44-4263-b225-958dc3401057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7ab231-c43a-489f-b54d-e5c42c7e47dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e3094d-9f3b-4209-8106-bb92f7760bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3689e9-0d61-41c3-8ca0-f076e89539d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b6b376-3fb0-4f00-b542-94bcba1ed0a8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908a51ac-27df-450e-b802-644febed2407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aa882379-b78a-4b60-aa45-453dacb9a866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac312ed9-e152-42e5-9cf5-3921d816260e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf23f9c-12c3-4052-a2a1-9d6a704bfa7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b1cfcb2-fa19-47e4-8449-f7a5abe769cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e1d1218-9e8d-4534-bdd2-2bb7844c47a4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a707d691-88ed-4f77-ab92-38dddb4de2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a4cc3f9-bc22-4ee3-a1ed-47b473453b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c530c7bf-6110-4875-8b11-a6e5e3251a5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99eb06b0-5325-4ffb-bba6-d499225da65d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1106bccc-4d64-4615-8d55-358fbc80e1d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3700123-cfb8-418c-baca-d413a33c03e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0ac8fbc-41fb-4724-b8ae-c416c6905bfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08d74f83-20c4-45aa-bd12-9c362353b622"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46c57938-8898-489e-a383-4be46dfd4799",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57869e82-377a-4488-8a29-d5c5e3560728"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "88e62358-5c17-4619-956a-c54da7b2f86b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6b9b881-08e1-48c0-9076-8ba2e7b5f823"
                }
              }
            ]
          },
          {
            "id": "c1e23284-1d1e-44e3-87df-3d53c87c1dbc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc99953c-96f2-41ac-923a-68115a427184",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "78f9e84e-4f7e-4b78-beb9-6080adc8fb9f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169052cb-f8dc-4806-8729-ad1052d47511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6820fffe-a2cd-4b97-bdf6-deaf7bfa4893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74319871-5d9e-420c-bceb-4a03d2e67ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5267a9-0361-46c9-a6a9-43b419810592"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0aaf46c-8e61-4b6b-965d-bdfbf5a4d91a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84afd4f8-12dd-48f0-b15b-70058f87d0c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06cf04bc-caf7-456b-9f42-f0a2ecc3fe10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c599f3f-6de6-4723-8530-43f9dea4ab21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8cdda0e7-965b-4c6f-8a92-402ceac29b74"
                    }
                  }
                ]
              },
              {
                "id": "1b0bfc84-93ad-4026-b961-66dea73d733c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80b13921-b412-41b5-995e-28670fedf70d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df5fd686-aad5-44d4-ba67-8795aed47670"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "759394e0-609a-4c7f-85d8-2e2d0da8135d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c17e1566-0919-4e40-abac-5113b60e89c0"
                    }
                  }
                ]
              },
              {
                "id": "2fd7eaee-7c4e-4927-91fb-0cd7ab477d1b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22e09f27-2b3d-4b71-9fa2-28d2aeb65cde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a5ba2b9-2643-4032-8905-61afddb87aad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "000dd385-c701-46a9-87c6-956638079cf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87307521-716e-4ea9-8a11-581fd039d7d4"
                    }
                  }
                ]
              },
              {
                "id": "27d21e8e-99d0-47e9-a3fe-00b555d7a407",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "015f156e-e5f5-426a-a6e8-30c524e099d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c1ba387-1c35-4291-b2c8-1bc42a0921f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87bc6a02-4ca1-4b8b-b104-7d8fb41f89df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "71f4ac57-5e03-41dc-9af6-3fc2713eab1d"
                    }
                  }
                ]
              },
              {
                "id": "021b1586-d8af-4295-8d3c-c6198ee09dc5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b2a42f0-1aae-48fd-bcfd-87c6153f3595",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4022aef-2bb3-4379-b9e3-86e352efb077"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3143da9-18d2-4825-a87c-a470881ca77f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1afecffe-1845-4b31-99a1-878061af397f"
                    }
                  }
                ]
              },
              {
                "id": "0b6c77ea-009b-48fc-bf55-c78f9a4d89f0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1959bdcd-b84b-42f4-bdcd-7b8d5fe337f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0f0411c-1d77-46e5-9188-345672c52af5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "606170a2-ff8b-4294-b8bf-0721c86fb69a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "392acf48-d1d5-4f81-ab51-83740bbad233"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f73445c1-8b34-4359-aad6-4330893b09e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d0cde3f-1897-4c8f-92fb-76df6d121488"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0e86ea1-b919-409a-b055-8d7ed5854e91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a584e51-3c2d-40dc-bbf7-fad35d394aca"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb344c6f-4d6b-47a1-b0aa-43473f086246",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "45f4faf9-bc5a-4c3e-939e-76a71b51eab3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42ca6602-53eb-49f4-9e26-789afd2b14e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61f1b61c-d047-4a86-b93d-03a0176dd37c"
            }
          }
        ]
      },
      {
        "id": "db2bc2e1-37fb-4509-83ff-26067fafea69",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e7c44a62-0bc2-4330-8efc-3bb026347d70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71df137d-6e79-448d-a137-d004acadcd49",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd3529dc-b220-4be1-86cc-eaf4034cff75",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0150ae77-e569-4e5a-be98-218d89e759dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8234f711-17ed-4e01-8caf-d9b26f78c518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26a7ebc-c1d0-49a3-bb79-1fa4f1dde14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "312e8db0-1568-40cb-a47d-0f5829661285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9044a168-79c0-4042-b88a-6d48ee1c7cba",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1d706c-9239-4cdd-aae5-a0cfcf7ae220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f26e59d-2ae2-4602-814f-430d5def5b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ced9d9-3880-4b02-9256-516ed01fb7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59cd7664-60dc-4512-a3d0-82cc6e0265a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ec921a-e736-4eb5-ab5a-9be501a62e07",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f999b4-db95-4a8e-a985-d2cc4477e70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707c0675-33bc-4a64-b854-a61bfe0c5dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7e5fc9-5dc9-4a72-8097-6bacd4c01826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7fa77d-721c-4b9d-bd50-91f52fd9bae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a38139-d850-4d73-819d-1c4a7bfb0dbe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d83486-5781-480c-a044-b73a94b31611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff9325b-74c3-4146-ae21-571ecf1dc696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7771f14d-d5ee-4049-a789-992db3550ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16e55127-9251-4e79-9567-88878f7d3865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12d84e2-c5da-4065-829f-b3806fc2fac1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3486c0-a08f-4c19-9faf-442281f16bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468c7fa3-0e62-4f59-9b6e-0055fa4237b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f89ef7-5619-499f-bdae-9ff74b907b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60fea59a-213a-4f28-b697-f183e3c47533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a53f98f-8333-43f7-abcd-45a34369b4fa",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf8f83c-7ed7-4f03-929d-2ba812de3afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c781c9b-0dc2-4e8a-b4bc-f13bc66d068c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85ff82c-e979-4d38-ad9f-363bef352b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf48c4f-5a13-4e98-a50f-10463ac11504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3753661a-e595-4c00-8d6b-07e125807437",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442e70d6-a031-48bb-bc7c-dcfff3bc642c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33db7b77-7856-4989-aac8-17a1c50c3988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5a9f0a-2b59-43f4-ba5e-89400d2da581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a14b444f-ae39-4331-a533-22b4e561ddef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed571320-9cc7-41a9-8030-3475def521f6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0c42e1-479b-4f0e-86f9-e6cbb2e8f534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f4cde6-7ffc-4bef-acae-cdb913f32fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0c6217-296c-43b4-a8b9-56bb33e71940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11edde24-20b8-475d-a1cf-1a828f6f52e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fe750d-0fab-4d30-b927-d0e3e279e0cf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bf4ecd-2f83-4b0f-acd8-3dab00caaefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698b851a-bd29-48f9-a7ad-633e1f84d449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c951e1b-2b77-42de-8e7c-9f8a7a62679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d47a119-dc52-47de-90fc-89c309022d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9cbe9c-d309-4f94-bad6-1b9050fefbeb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cace5ae-50dd-40d3-ba2c-5bced666484e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c8bb2a-431a-4328-8923-181c4f5e0cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098b790e-7163-4044-a7e6-633b1856e800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1843ed-d12a-47b7-b73f-8a762f87cf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c84ba7-6fde-4eec-a189-75a3dc4ceb3c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ff738d-8d2f-4b82-adc2-ae12d4b474a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52afff7-7680-45d2-82b3-d30a7f3f9529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3519d8-7d28-4954-aa73-5d5a15340796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5af1e9e6-63e8-4139-9a59-ec8eb0625269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590ef320-4711-4b5b-a50a-8884a6f64db1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90584cdd-7345-481a-bf92-3fe0cd88bd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa18df6-d645-4c34-85c8-749217f4f68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c595d3-15a5-406b-9433-cbaceb6e18b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "478d5f90-cf24-44b3-a58d-ab35fba332c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d80d16e-18ab-43e2-8970-07536b8394a7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26611a7e-01a6-49a1-baaa-84389b645dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ea8321-dd2e-428f-a45b-17bf7ed714a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a03eb4-1b80-4873-8e9b-78bbc5c86df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6329ba-bd66-4b4f-adb2-deafe6068b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b18a9a-9dc9-4ad4-82ad-43bafc748d85",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2da7cb8-0de4-46e6-9d46-4cfabd44a1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4001e54-9564-4e8b-9f90-c2ec6e7ba378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7184561b-d140-419e-a690-5e6f67d243c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb23cf39-36c5-40b4-acab-495c38506102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbadac3-adec-40fa-ae04-78859581e089",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4782483-cf2f-4f30-8b86-c6724d7def4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8335b11b-f781-45d4-ae3b-0199d0da54f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93af68a5-f336-4a93-bf8d-66f1a697a5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e561ccfe-b6d9-409d-aea4-dd86a8e05956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a43607c-e8e9-41f4-9d4e-8da5991fb39f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c348373-983d-4c2d-a1c7-995a43748ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88efcc3-1927-4a92-8e1a-3213c014219c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dedc6f-01ba-4d05-82e9-ff1deb29426b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "68481394-45c9-4920-b42d-ab5b847988ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc23f089-d51c-4f22-8994-a116f113ae24",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8c703e-e6a7-45d1-bb33-d8a3fb454440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c87434-d855-43c3-965e-487b3084e26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94491b94-4be2-40bd-98fd-c6b8132d3512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "53a1d587-42af-4a85-a9e4-5d8cc3fd5f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ab8f76-c5f7-42cf-adc9-602a636813ea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd19cba-265d-491c-94e7-fd9f891c7a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d0853c-adc3-47a4-90b0-4fb0df56d6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2ded3e-d621-45a9-90f5-0a7643d1b031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6699f4ee-9446-4380-95b6-ae09e776a15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69436576-087d-4b1f-8c33-6f8bd750cce2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b181c27a-376d-4520-ac81-f8a3a0cb8dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42e4770-9e29-4b03-9bb5-8aa4152fc946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3ee818-e3b6-4898-8553-8fa7f07ea83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7e4cb4-4ffb-497e-b9fc-22e524b9c01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeb07e8-1fec-402d-8ac1-62961a762462",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4a2911-7fb2-41c3-986d-753fc2174c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43e28d9-3b69-48ac-ac5b-21b976b2a4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf44292-8838-4309-8a77-0a31e671f3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f43b6f75-97cd-479b-8d67-22d3289e1b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db3851f-06df-4bb6-b72b-1133cd7e07a9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49ad879-f02f-4605-bd76-451aa583cad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b771ae92-30c4-47a1-9c5f-749bc080c928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fb9716-d1a6-4be5-9317-84b276857449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a91ab5c2-256c-45d0-8eb2-64e43e763e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a776b2-715a-4f4f-bbca-09ad0fa5857d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a82547e-ba04-4770-8282-b7ab160d6388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dadcef8e-b374-4d0f-b461-3046a4c6a32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776b3a0a-9e28-4718-b895-97e004ae99c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "320987d1-8420-4c53-aff2-635555b69207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605a2b62-7e14-4153-86f6-0d73254625a9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7620f709-d4e8-463a-b5fd-99d20cf6c43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242ee2e8-4aaa-4ff8-9a93-56679e73149c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e623ee-58e1-4d35-9bec-836eb93a7ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "926bfe81-b91c-4040-a530-e1f4207abb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cb6278-c437-4953-87f3-761fc2913139",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7c85da-18bf-40eb-93f2-cfa7d5ba6a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b752ab-1d11-4fad-bb37-cb092273492e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c03e42-1f76-491f-b3da-e46ce6fdaa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6be736-7dc3-4950-a174-89ff2a518391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90bd8bf-18f5-4e3f-9445-07a8bdbe8cde",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e26c99b-b72e-4fe1-a5df-0b6e3d9b0ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb1f33d-9b37-4fb6-9169-0ade4849f099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f946e9a-669c-4629-9035-d959696495d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4993cbe1-ffda-47ae-9b16-8f05f22241e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71b3c18-fcc0-47a6-af75-2964aeb21a37",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6987e4-c9d6-4dc6-a4a5-e2e3e5dc7bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54a118e-a6e7-49bb-8464-36b571ed6d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb89e00-3c8c-493f-a83d-573d44a796e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67285d4-7289-47d8-9183-3f8b8c5ec78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae417832-e512-492c-acb7-a6ea0aad6800",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff4a772-ad92-4c20-9b0f-cae6d2be80e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0bdb04-7df1-43ed-ac1e-94d2d67154b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af5ef5c-d7ef-4ece-97fa-51f07e59abf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "020cf44b-99d6-4f82-bcf5-662094290552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c719a0b-467a-40c4-be79-85da8230850f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f47920e-3ccc-4c35-9c2d-9aa57082dbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89590409-8076-41cf-9e5a-1f9e58e33b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216f3946-c85e-45f7-98d7-ec9e2565d20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6684e7-1873-47c1-b82d-e3d308640bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9454c5-315f-403f-833b-dd422fcd08af",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53faa640-65fa-47bd-acd9-a1e2a9f6284c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927fdde7-db95-4226-adcc-a82845de483e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad95c0d2-d953-428b-a333-5a63e442d16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02ecb6b8-0964-4ce1-a518-dc56c12549e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c18fa7-b2d2-4e2e-82af-c8596ca9c297",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a556105-e5b0-4da1-afeb-f8177bdf62b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388f4e40-5860-4589-a313-f0566f9b3584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeec7d93-9b13-4117-bbf8-8689c8bee249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10defa18-5531-443a-b197-c0d4991ef52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0c20e6-44f1-4eba-b948-0a57761d2481",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b50dede-f0ad-4522-bd81-3121da562cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1539450-5ce1-449a-a864-a7400755af8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1189aadc-9e5d-4311-b546-9fafc0f5489e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7675e84f-a276-42e9-8070-e648ecc45efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5f0617-44c3-4bcf-ba67-901630778d6f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3b9c94-76f7-4167-898d-d4e1dedc6af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd32cf81-db9a-440c-b674-831b20efda87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65caa0f-3656-47e6-947a-d273867fcd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2570ae0b-225f-4798-bc8f-6badc68232fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "899877cf-024d-40dd-a4f3-56ab9ba281cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28950a8a-512f-4beb-9e13-73972ae99515",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67e72dd-6186-4523-9543-559dde386c79",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "811b9966-c61c-48c3-9e4c-2216e4483600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a55c9ed-e43d-44da-80de-ac8ea4b1a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c930e84-dba2-4a39-87dd-b803cb8a2783"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffe892ee-7192-4c35-b7b6-48fa85989c54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01be9e7b-4e31-4cd2-b62b-efa9c658be5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e93b9de-c6c1-4db7-90f0-70534b2acb95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d25504b-5c3b-4ca0-9869-60db6b9a7549"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "038d5532-5aee-4034-a781-ff5c63e63a86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "529b02e1-0c61-4078-a544-7bc6d217be97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e40e9a08-0a2e-49e8-8a3d-788f30282a50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51bcf67d-6a2f-47c8-b448-ce38c68ec46b"
            }
          }
        ]
      },
      {
        "id": "2ca35aa7-ada3-4e31-91d6-5b7aacd1dc7c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b370ae17-4895-40a9-b451-35de32dee845",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fcfc7c5-c013-40cf-b47e-82c6ff772137",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1b865b40-4feb-46a9-b5ae-d74c76e11a26",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a240ce5-a223-48ff-8ade-7fbd96326cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f50b3a-e4d6-41b4-a821-9cacdd465df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a22b0f0-e802-4766-9900-d1a9d894a425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "48972960-e70f-4345-a923-dea7f2d50d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0853906-8527-4438-b747-b3df2825a6aa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3f7685-ba5c-4067-a55c-b0b1b7580e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f6b935-3dc2-4f68-b83e-ace6af1214d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023dacf3-c9ca-400c-9e5f-f3cd0c6d7f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36bc962-6fbb-4818-a04e-d748c08c7edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d1f368-8b24-4aa8-bcea-c2b2467766f2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02b78c6-49e0-4dbb-bfa5-b8c3341d6de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29925202-4a34-4cbb-9b98-1498bb441542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59be5451-8d8d-497a-a0bb-9100d8a03f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c154229c-f3a5-4356-9635-00360168ef53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b8d7a2-0563-4e2f-af0e-a61626bb1c5f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0e8b4d-a15c-4fac-adf0-b1b628a2eed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f740b55a-813a-4164-982d-c84612ea8d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0f27d5-4fc6-4ce9-963f-4baba87d15c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea02aa49-824e-4467-b575-838b67da1b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6238632-02a1-4d80-9e77-6ca3d1165772",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8709e6a0-a771-4802-94bf-d2b57b9c93cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f19d81-a077-4037-8e1c-572f0fca7b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abf6b58-0e95-426a-9f52-6d70091718dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a998c8-cfb0-4504-bd70-acaf1607da32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6f4a70-26bf-4527-bb81-3f61a0e3d348",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850b1c5c-344c-4139-a6c2-389bc0e6d2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a484ad-8608-45a1-a41b-4a5ed9c6252e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08cea06-25ec-40e8-9b3b-873e26b5e196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af3f4f41-69ed-47cf-adb9-024297c01706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54555d00-edb4-4497-b2bd-c5f948fa96f4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f351d8-ba7f-4449-962b-84014dd605a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203255e1-94f9-4fed-ac37-827d0efe2353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c43e406-8104-47a4-8968-0bdb12dc770e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f829431-39dc-4f81-a09b-714325adf301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63742805-139e-46ff-a12d-17612b2ed96a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a68f3f3-c9a2-4975-a754-f4e73bf4650a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf223660-aeff-439a-af8e-f4077434b79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6c7b05-a833-46df-a67e-b982f2db3fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1194c47e-da63-4193-bd16-fdbc5f9adddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3126527-dfe2-4d39-868e-6853c0f918a2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f3e41f-315e-4a52-afe1-c1e567624d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05ff772-c49c-4b5c-83cf-9c7ef94fe8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a86e0f-0c8b-44f0-9769-9e49f184fc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db6bdb61-50e2-4e3f-bdbf-efd89d2b4c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5b02b3-13a8-4510-89b8-68845bba5193",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e346a3b2-3c7f-427f-a656-41ec54dd887a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de7d515-4464-46e9-ac13-2cbdf15215e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaee1b8-b2db-469d-ad5d-63aa6bea4e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cef2c6da-0679-4def-99ac-5a5321e78c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6efe57-0005-4b27-b25f-7bcb5a42487e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c2ac46-ed66-46d7-82bc-5c6814aa6c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2d4944-0b84-485a-9c5d-405b88401ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab93e273-9176-48b1-bb36-a9de36e334e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9daff4f1-fac3-4efa-8947-87bcd7ee660d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c897b954-195a-4724-9ff4-6219754fac61",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9c0679-56d4-4e56-9849-9941eba0aa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf810e1-76c1-4281-938c-20b53c13a800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04226fdf-4a52-4df5-9878-2e8440d8a09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfad7846-abad-4975-9a9e-e347e485c546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9a1dcf-8044-47e3-97c9-f97a3417a21a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120a2cd7-a384-4b04-b539-d2a777e47414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d75291-5980-4e6b-9e65-b2d9b9be6a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287f2ec1-cd0f-444d-b672-41a2847b33ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e37fb9-c539-4234-b7d3-94c90240df4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6c8a6b-69ff-4783-9840-70f61937b960",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dc4bfb-7b92-44b0-8092-005aec3ca125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245d1e6f-60ec-4f4f-a558-435c1c3bfcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762edcbc-2718-40d9-a399-136d6360366c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d626d05-fe3c-4d92-9099-0c19cb229855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7380e365-dc73-4f50-8a88-9f58f969e9d8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31dbbf4-2dd1-410e-96fd-f9bee165af12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074b6568-584e-4c49-ab85-f3797de0521d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127e2299-1f0d-4e9c-a95e-33f09f859307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "11267430-194d-4e59-b2d6-7284f5dd5fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5da219d-e3bd-4599-9860-4be2a8f71bad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09c114c-2fdc-480c-b12a-f0343d1ff086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecc102e-7d47-4948-9fa2-fe3c9b1646f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32353a6-5e37-4694-8a95-d9f850a20a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d58dc06-c7fd-46bc-aab8-3b4bf2837884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafe4725-2125-4c4b-b24b-756d7d9c20e3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1fc367-b2de-4651-9555-6eec2095f475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd1bd81-793b-44ef-9f94-3e338e15a3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dc12ab-8c88-4057-b53f-47b223d14063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e8e519-d3a0-475e-a880-d43062244721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aec1f5-6cdc-4471-9f9b-d0f733605a49",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e42d6a7-e0f4-4f11-85c6-f4ae76cefd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda4a9e0-7bd8-4c4c-8c5c-0596d1fc6018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58be181-3504-4397-8bfd-5108dcd5fa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5570d0a-8eea-4371-930a-eb5194f5c52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe815fa1-aa5c-495d-be94-a1f36314a83a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b362e72a-b88e-4e20-8441-74c4b1508ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226ee0d4-bb33-4018-831d-db4c847116a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857fbf3e-07ea-4cda-9ddb-58738da80c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67bdacee-ed10-4a39-a44d-85749317e509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6113e877-b335-48f9-8fef-c9fa8f1b6924",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a38068-51bf-4c7a-927b-c3468a8b3d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a3b093-e77b-4af1-b3c6-09b2099a0f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d7e8ce-5a0b-45f2-9f32-2f19e49a550f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "653d5ffd-ae34-4a71-85b3-25f5ed846567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea35ab8c-4dec-4984-8a34-83dcf0daf3f0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8248d1-b6f7-4ed3-beeb-f9c6b4faea57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2610ac9-b4d5-495e-8d00-fa2d17ae0b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2f8fd2-c6cd-467e-a7cd-46dfea31e3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3968d0-0cce-4bd2-8af4-283a6f1af6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b79669-cb5c-4348-85e3-34df50fe4f6a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c081f88c-c0d7-41d3-8dac-e774d96335d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4ab9ef-a41b-48b0-a313-0a520a5b7d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc7d118-f6bc-47e2-9226-68bdaa20b87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caa0d2bd-12e4-45fc-939a-ef1d2eeb98d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aeb786-4b3e-4c1b-a3cd-a8f8438b0091",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a27a5f-5b40-481a-a573-d0ece57e0d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716542e9-6c22-40a1-a7a4-942ad1c12dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8070df13-7a69-4ea8-9643-86252ac146f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abac8f36-902f-464c-8f06-a8a18eb62647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3292a004-c72a-4265-bbac-845d308d324b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943b26d2-9bf0-4072-9e37-4c08401464b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11817bc8-f1eb-4ad2-99da-46f5e67ca783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5f5dfc-d334-4586-8efd-c5da17ffe193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80ce39d0-a06d-47fe-bca6-3e57dc0210ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b3818e-4ecd-4788-8521-e91c8170c6e7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135d36c0-fbb0-4cd0-ae50-51a48428e3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe371aa3-a39a-48c5-84af-a70262037432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e43d57-2830-4589-8d7b-0f24d39315d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13da5c6d-a3dd-4e80-8100-01a835a303db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fd2c8d-2ced-47b0-b07b-64fb53ae85c5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01270a6-91bb-405c-9d1c-7ccbb591a158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed037a2-ed0d-4012-b832-fd99eaca2843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335cb20d-d418-4bdf-9626-3da7642ddddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd27ac79-137f-4352-ae50-0d1bc14ef246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c7723e-18e7-4f76-b262-8de3f24e594b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36016864-1a75-4d60-9468-5dc2ad521e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffca823-55ab-48b1-8a44-20b08b182f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a53c0a7-79ac-47c2-bb76-4b62e0760aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff462769-4a7b-418d-951f-67ae8b334f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0499046-25f2-4b95-b910-ce0de9d2b560",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf14ebec-bd65-4d47-9c04-0e6a3888d627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab8f66f-1773-4994-b68f-844bc1b0f392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ff81c8-6e69-42f6-9cc5-47131e8d0348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62d4181f-fc8b-4283-8d71-ac1fbaa59954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af51b09-4376-4a81-baa5-e1e6da074cd3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c4d4c0-f36b-4ada-a552-b513190fc480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e0af36-1a82-4b88-9faf-8caa58678277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f809c6-3031-4437-a301-9a34b6afd66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83e5b321-2e5f-4f9a-bea3-48abc8e57cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4969cd-9660-43be-9a95-8bcdcf47982b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21655af9-3514-4715-8f61-25e13e0e563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae34c30-69c7-4cfe-87d8-091f0bc4cde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d5b552-3296-4baa-99d1-68a50d8a76dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9031c9-25a3-45df-b497-e39d097dbeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af3f9ef-e9a5-47f2-852f-5343619a7c9b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908c9f7b-b924-43ad-be8c-99b9af4cf499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0b0186-359e-4f3b-9c9e-fd0598f26d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f6dda0-d0cd-445e-833b-fb4467926c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f97f445-3f6d-488f-899c-905aa2930579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9807953f-6463-4a7b-a67b-86fe189edcdd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2733c5-a1f8-4af0-a82c-5f15cadc00dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f967c3c0-3ff6-409b-89e8-7af2d633b7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259e0014-497f-4b12-b44f-90c33aa11683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a04c32-866f-487f-aff3-61886f4acd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737ba1a3-2d5a-4039-b2f3-bd1c030c55e8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164dcaaf-9d08-47cd-9ff3-c8ab06a69ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa52f15-fdce-49fb-abbc-07943fdfefe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64744179-04ac-4a19-b8c3-dc507bbdc407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa12279a-e0b4-4ca8-9831-debf20dc1a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1b65d7-7a37-4733-b08c-eabd46247c54",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b01bdf-9ae7-4e7a-bb0e-b6e692542c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0197cff-4c03-4214-b54f-f067d69e90ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0e8477-c113-4d78-9a12-9436ae3d4fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "374b209e-bcc4-4317-a162-b49483462df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c76b9b-e3e6-40d0-aaad-61e13eb9ca54",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd040ed-4ec8-4116-a13d-a38674a1f8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f3be85-aac7-4d4a-8d8c-5f99990567ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14aa731-37fe-4324-9284-89fd0dc46db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6052e8ee-9b3a-43cd-9347-204cb542f11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a3d4a7-6c25-45d6-959f-95d339171865",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338a8193-8373-4e1a-a0d1-9b5dd0117afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af3e178-65a1-4385-a0b1-1d5dc5db1d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4cffe7-0256-412a-be99-e08f976f9db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c636ec92-26fe-439c-843b-26295b3a513c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecd4315-59fc-4c37-b689-c0dc2b96b5b5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da550be9-55c1-494d-8a6a-43b1c85ebfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5c85ab-fa0c-4367-b7b7-6815954ffd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ac3517-1507-4458-a3b1-3db5cffe5b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff5fd3d-3113-4235-b0c4-97a50c54bc36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfe3f17f-f11c-476f-ba98-485ce5e60dc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d10364b-50a4-4694-97e6-c5d438805545",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6136a771-959e-4691-9798-adc7fdf30d01",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f82b3b25-92d3-4faf-a46b-44bb3f74cffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2742e40d-368f-4d99-b5d4-8b8ce1a9a19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "780b9d11-a9be-4829-9e84-87ed5970808e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0dde445-0d82-4464-b20e-8b09770ec25b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b736d4e-7fa9-45c5-aa8e-4621f02a3328"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e32ac939-088f-485e-9fa4-2d1db91d6d32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9d74ca2-3538-48e9-9b44-daae2cc40331"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3329ad46-c2dc-4a07-a373-f67118dc6d69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "825566e0-7dff-4569-b856-781f178e723f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a664243c-d74b-494c-8c8f-1a982378ad2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "641a4dc0-16fd-418d-9ea9-0d9bbf25cb73"
            }
          }
        ]
      },
      {
        "id": "19e180df-0571-44b8-9d60-a4b023db4c31",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2d2c6117-4724-4e61-a1ef-cfe9c575b8ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2280c659-ac01-416e-866b-9af60d2de88f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d628eaa1-2a4c-4794-b84e-b4ff994e4f0c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7091b002-20b0-4094-81eb-f46d4f487870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848d4d34-21ae-4bcf-933a-f22d61244983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93de1c0d-50d6-4b2f-ae79-52356fdd85f7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c83162b-f9aa-43fb-a422-2a38f7f87a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70651187-35a2-4776-962a-909a715448de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467df555-cf56-440d-a243-1f24dd4607f2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c546b2-4643-4d09-8523-1a0d8c1bf8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da43d700-348d-477f-b5d1-c4175e186ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae95ec3-e469-4171-b143-7538a0b7fa3f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76056091-eb54-43bc-9499-58dc562341d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f39d486-6964-45e0-8b17-dba28ec710f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f6946a-fb04-4f50-b379-62d052252bcd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cefb407-4504-4d06-b93a-951ba084e547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1c9254-91c5-4d58-a2c1-b92d535f51f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d6f82c-bfb6-461f-be4f-e24e51da9319",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c4cdec-8ae2-4fd0-9445-d8417aec687e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88feee56-15f8-4c73-9225-3d4e9444893d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f05c9e4-45dd-4c03-b437-ae42f06604b8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f209d646-32ff-4efb-8a49-7ba4997e50ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783362c3-7f8c-446c-ad95-e863c3d01c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cfc95e-13cf-4ea7-a873-a411245d0a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a60264-33cb-460e-9cb7-9168e1f09402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d11dadf-0c73-41a6-b3fd-6c15fea886df",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14766ddd-094e-4110-a8a2-b5eeaaf24ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f479942-1565-4883-b574-32cba87064f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ac22ee-3182-413c-9eff-37d3ffd61ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27df9b32-05de-49c6-becd-0c496408c2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63082142-cdfe-4d7f-9117-84bdf2696ace",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f72a6b4-f05f-4c90-988a-f18a65b238d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cdb808d-377b-4cf2-8310-6ff4c30f02ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb22a2c-2c5f-4f03-b270-e99a2b1f0d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fab00e0-22b7-4586-82c8-19453b8774ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291f71d8-d72f-4ecd-9c80-aa097338a011",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a27f788-7876-418b-bef8-0ca0e1fc03d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3be3e81-e124-4733-82b3-d426370e07f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877d6f02-e6ca-42d9-8c93-b6b4853a0d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3b99a7-1b33-4bba-83a8-c989886ccab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8298753c-ad70-40f1-83df-742d16c94429",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a1f13c-a18e-465f-b6c5-2528a4b8808c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb9b776-fe64-4ad0-8866-21f195eb0156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56453403-07ea-4f70-824b-eba1e94efc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2160680e-3acb-4722-84c4-1a8d4d879cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dc2bb3-7378-4bbe-9015-3d39e1d1be15",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda5b1e6-9c3e-4ba6-ac2d-cd33c795f0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d78c19c-8db5-4e90-a765-99ea0a5ba805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34cf57b-ec7e-4dd9-bf02-4c31428e3d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03fe904-e7bd-4175-affe-acac324d2610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5df4c7-37c6-4766-9bb3-95a960120e92",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca80908-845d-456c-a56d-fcf1dce3d76c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01def3d2-ce64-45c5-8510-db1a9f355436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd9eb2c-17fb-436f-8e33-6505d884f2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d7f85e-e282-4eaf-b925-fe62ff8023db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d794ef5-8345-4c21-adad-822bdc5a966b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fffb75f-bfd7-4eb3-86d0-3f4740776447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac564ac-a6b0-410f-b162-eace75150315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdc783c-f45e-462e-8b1f-058920ce386f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bd462d-772d-4dc6-9713-274aee57c93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364247aa-6a6a-4c2c-837d-b01756f4f026",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091a5386-94e9-4872-92df-b6f9fbb952de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98284c37-91e5-4ded-9125-72d5e680136d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a25c50-87bf-4faa-9904-975dcf10817d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a0fc61-cf1a-42b5-a4f0-c5a38da6300b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6799ed8f-0963-4275-8dc1-cf1827b7bcfe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf24ad72-0c80-40c7-9f7e-0928df43d82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b87bb5fb-9acb-4155-9336-8ed2e00aefd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe449f2-80cd-48e6-81cf-f375dc620bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cd74c3-3047-4194-8983-9f892e32ac40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08360141-fb65-41df-b13a-9673dcefe415",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee89d9bf-bc92-49ec-92e9-ab5ee440105d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f90511-7608-4f7b-98ae-69ebf0ec79d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02be1be7-db92-4502-af83-1244cb5e8590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ec47cf-1803-4bad-8217-ca5ed17a0d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840d9ebc-a975-4c53-a361-4fd70a7efe47",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba02a5d6-fdb2-4718-ab1f-86a01106ad96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10570f7b-3304-4598-a33a-a098915833a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb96d522-abe7-4b05-b3d2-98a92d172460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943d8843-f870-423e-8ed1-4c883a8c97d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2005f1a3-3583-4fc3-bed0-0e8a97772dfd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83797817-a5ea-43ff-893a-974e3ff76aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005aac8a-fb6c-496a-beb5-697c5ede86cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7594ff-5c3b-475c-9903-95083594eedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e29fa69-aab9-4eb9-89a1-9be6d31ddb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a1359b-a167-4496-8513-0905ad550cdd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a726022-b72d-451e-8be8-bfd2459e209a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24491275-8520-4f97-8c7b-6942809dfd58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4817301-3950-42d1-9d6b-77077181c091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5531371a-8ea8-4b5e-9cec-3e1fa594c43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c909ff4-58ad-4c7f-99f1-88b726fb252c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a390bb-18ac-4f95-bdcd-eb474251a4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec944b54-715b-4153-adfa-ba57bce59dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdc95c5-3f79-4bd6-96a9-58b0b3a20ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c624710-508a-4986-a275-5dc91a3bac25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd796070-e4a3-4736-9dc0-9ea335830390",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f25c9f-7f71-4e44-8d09-17ab3c576a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c71b1c7-59f1-4275-9287-214e4e61356f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930bb823-c09d-4211-a2e3-652131a43537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da0ad0c-9b67-453d-af86-ed5e210b0e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bb959d-9139-421f-bb59-c73f8f54d330",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d76d5b5-8ea2-4a5c-a45d-4ab6e68d2dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6464258-622d-4c88-9e2a-7c6aa110aec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e42f3c-6297-4e33-9d05-bfaf82297277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e92055-0b69-4bc3-9940-03a3f71b9174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6265510f-73d1-45ba-bea3-4a9e547dd9a6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e011afb9-dcf6-49c0-b59a-0a9fa8c8a763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c435336-b671-4d07-88e8-3a88fac7c25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9ccd14-e014-4ee6-a945-365a8d73c88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9b0006-0c70-463e-90c5-84248688da5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80169068-f787-4432-b865-daa09fec610f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18942152-33fb-4059-bbf5-a3ad5378e9f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9970c06-c1cd-4a6d-bbfb-2f3faf136bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829497f6-e23d-41b0-b5eb-cbed11b1c6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854f4bcc-44b9-4b32-a769-32b75b5ca1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b40b1-a62b-4811-a7d2-a33ff9f414e6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3440c921-24df-4c2d-abb0-5778c333f8a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce70988-728a-4db9-9366-7e412ceee0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec47f2a0-f57d-42fb-b5fd-49fefe78f43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdbefe9-707c-40d7-b738-9b22dcc4b800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8efb88c-b5ca-4d06-b933-e806210fac17",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da65a8ba-16dd-4f2b-9be0-d6ae6875a944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be86864-53b1-4076-9baa-4eab9c36d44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ef4306-9206-47fe-9556-3ba9dbebe214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d35c59-21bd-4929-b780-e251f025fa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78255ef-286f-4951-9b36-4f717c8c0f85",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cd713d-1d35-4b98-904f-92ca003900eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6d415d-8b39-4aad-8ae2-94d8a06cd91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1159a2a6-2f30-45eb-9653-076c82ab57eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b13a64c-4eba-4666-bbf2-a5d2c632fd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cc0bd8-db1f-4b8b-a497-2a204c667b20",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8138137e-5cd3-42ee-8f22-c490394dc78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be60ab3-fdce-4a6f-a6eb-f8d9f19e3b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ac3794-bdc6-4187-b3ed-5e26d7104851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a84149-5388-4314-af95-cfd6999d2329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f700ff37-6b77-4ee8-a077-36190ba6cfd7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e450242-10af-496e-8057-18adc2ad5132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0cfc17d-02f6-4257-892d-824a440819d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcbfeba-8727-4df2-9f86-e7d2eb7524f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756d1f66-b79d-4535-97f9-52ef93838103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf22c2b-f51f-49d0-9433-8221676cc70e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb023cf2-7787-404a-96c3-b24d7dbc73ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9325ee5-5770-483a-a4e2-1e42112b4500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e057034-e3ce-43d9-9a04-0d5d84e5b0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fac9c3-e9f6-41e8-9bd3-d9411138dfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc03f2b2-6613-47cf-9f58-4f8b946f3589",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a0bbac-1b21-41ba-81de-1dcf334d78de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff49d6fb-6a65-426a-9e28-e2f1f01558bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2cdf81-ff01-47ca-b270-11f58fc8eaf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7371115-b1fc-45eb-b171-43fc8e7f3f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55b67e5-3c12-4ddb-9811-19640e4cb934",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87115c8-39c2-4a9d-8e38-e3ab2ea5cbdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "544eb332-0ce8-49cb-a8f8-0a12c59bec4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2809eb25-a5be-4ba4-9597-f556808ae04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d9ec64-d952-4c29-9bee-77d9a8ecbc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf66dca-5ce3-4db4-8485-fef5301b09c4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9428007f-68e6-40e9-9ea6-34c1f7d4f9e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7765a2c9-8e33-42c9-9e97-98b15551a4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6b72b5-eb47-4a86-bcec-a39bc9e50ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539af562-18fe-4cb4-85ba-ba58742138c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c9e68f-dc30-4550-b77e-195b9d9a91e4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e902981a-e28d-419c-a396-5733cce6e001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045d08c3-e805-4139-a804-9d7086d95bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4039a82-f653-4eeb-856f-d939a18dafcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957dc096-f07a-4506-918a-131da543e0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f4a08a-088c-4c0f-bac3-368f046fa755",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78738a2d-44a7-489c-9de7-bbeef60e55d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282f890a-c2c8-4c93-bbc4-0d99f1452ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7972d629-21c1-4368-8879-1f036c2632cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0add0f90-cfe1-4ee5-9242-10b48076bcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9deab14-9135-4b17-b819-5e77dde538fb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7b42b0-b2d8-4f2b-8501-316db89cdd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769a20db-c6a7-4445-b6bd-303b52e65abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42887b11-1fd2-4d6a-b87b-cdf2e23da7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ef9332-0b8b-4567-9b9f-7dc691d0e736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0482f0bd-d6d4-4ebd-8d87-cb8756b9b457",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5180597-ca8b-466e-a77b-23e59c8f06e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ad7b95-33be-4532-b036-7089bdc41158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8257da02-0cb3-4bdd-9f28-ef126826ed0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfda1c42-3534-485d-917f-ea4858cd1a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553dc1aa-4ee0-420c-a60b-17618e7f7b0c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253cb2b2-0e16-4ea1-bf8e-3c129188f310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595d9aac-069e-4e49-ba76-bf1c5815b2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04762398-5f6d-44d2-b3ad-a463877685ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571e9b4b-9a69-4862-a8cc-557efdb880ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eb68dc-b481-4aa1-a5ac-ff4c6ad95e32",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad40fa0-2889-4fe0-b356-dc6710af6bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906a0d34-a42b-4a37-867f-5f7036068bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235b0ac0-afd6-488c-b198-34f2351b6a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f45e2c-3c59-4654-90cc-4ed02eb2a4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a5ce8f-c38b-43a8-9eab-46d4841ca335",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14532c0d-58d4-4322-a231-b0de3d00ce63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3fcec4-6e5d-4157-b36a-9260a53b011f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4400531f-b36f-4253-a73d-04996e38dc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f36787-a7ca-42b6-bae1-4e6f221fe736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f414925c-3c06-4e58-a635-3e0f3f9aca90",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546e4072-2724-49d4-b599-f42afed792fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ef1bd9-0e04-4540-9620-feefbe96c038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac17e1db-e148-475d-8175-b47dda846f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1c8e1c-633e-46d5-b501-a47034c1ddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2a1369-ef7e-4337-90df-13093b229744",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82da9d0-1a3e-44fa-b8e8-4d40ee1671ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c584ecf3-bd3e-456e-be51-e62d2b958788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c1384c-ef37-442c-b46c-7a71083810ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347ee9e7-7424-456f-9985-6acffb65d35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd4376e-fdff-46f3-95bb-eb60dda4e2ed",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c393cb-3704-4bb3-8aab-70d548bb10ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d318ac1b-c0fa-4092-a511-a49237e8c7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d7e2e7-6730-445e-8434-e9dc3c04054b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd684ba-3cad-448d-8916-50a67a42c00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c38f448-4a54-4d24-b3a5-da6c61ec9bdc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef07d89-ebc6-4b54-859b-ee2f6a7cc362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bff1688-c883-43f9-be19-83ef7095ef8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eab111-0ca3-420d-8cc6-b0b2fd676890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24fa74c-a5fc-4872-b5b3-1590f5c422ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49971bb-322b-4ead-805a-0d7abd0e02d7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f582e250-b0df-4379-8429-e6f2f18542f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad50b7b-baf6-4575-8e75-3936e85af7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f541e9e-659a-4d72-96c1-aa28f6e8a6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0893f08-0b59-474c-a8cd-2a81c50a2b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2b16da-96b4-4210-a34b-4fba9f873874",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd45d7b-2695-4914-bbae-65b3e3a9cfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d02e42a-994c-406c-8561-f2d2ffe0efea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5c0eec-6acb-4b0a-91ba-23471f0e23e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dd6c72-690e-4538-b06a-40be573df4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8369ec2b-bdc0-4a8e-a93f-74538d021bd3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d28786-0fbe-47c6-85d7-b2cf3447e28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96ddeed-b772-44ba-88f5-6959f91818a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa998b3c-c91e-4e88-89ff-313f7436f637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836ccd1d-a1db-4f8f-a77c-c78a3cb64e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac4732f-d05d-4c68-ab7e-30a6ce9da931",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7e8379-8e31-4d42-824e-806a23f709ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cd76e4-6749-47f5-992b-8551e3721270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a643a7-bc25-47f7-ac48-ae2cba79b829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fae037-9ce2-4a29-b91c-d87633d9ed4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb2b867-44dc-4d19-85e4-facab0678a93",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77bd40a-a13e-4685-a4c0-83c97e6925c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10eeb4d4-39be-4704-b7fa-e7e22ec774ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc40e1b1-da6d-4a26-a267-96349a6939d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8a5272-ddd8-4f73-81c2-566ce95c82d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6c19a9-1763-48ed-a4a9-c9722838fcbd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f55e02-5d76-4280-93eb-8910b2e6afdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d906e11-e2a2-4fe8-8c66-0d85f11a75c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034d13a5-c4a7-45d4-8a75-fee99853d2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1875883a-3c11-477a-845d-1392ef5d8909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f8e527-4621-4b9b-9465-d8ab3c667811",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb78abf3-eba3-4b26-8eaf-a8e9c5421941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df727f53-c804-4151-af6c-db3e9a6b5fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf4b0c1-7b85-4d5e-909d-848e4558493d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252c83f2-6fd2-4c9c-b06a-6bf981a5d5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd0230a-9796-4df2-b0b8-ccebfb64815c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce460af2-13e8-4880-a336-ee497a1df32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac14d7a-279a-4c9b-9f52-775f9074bec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ec3ae4-bd05-45d6-bd5d-e356f56e8e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8863b28-8a0a-4f20-b75f-a3331b3cd33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f21894f-275e-4e74-a60c-6faa3f8a2ff6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab1e649-de0a-4521-bff1-a4bc161a4652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee28e7d7-0713-449d-900a-ea03dfab3e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c422f12d-422a-417f-a508-f8faf241704a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fd9e01-1549-48ba-b612-4995c6ab8d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fe8b78-51b9-45e4-9209-3070401931cd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b20a99-afcf-4a03-b574-7672ccaa89a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664c1bea-b5c8-4f3f-8883-026cf5799ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc01289c-081e-47e3-9cdc-f67af999eb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4e209e-433d-4141-ae12-7bbd26055879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbea1b9-9cf0-423e-bc13-f24b5d8aa53b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4a55a3-2174-4d88-b8ea-62d04df41e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41185c89-accc-4e44-a876-3b2b62e6fdc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e404bb-27c8-40f9-a537-232e3bccbeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5796fe-eb78-4096-b967-8a8b90e4f409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaab45f2-5c36-48fa-9942-5ddbf4d2965c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3993ac-4930-4aff-9d47-c2abd2858288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64ae71d-edb8-4e93-830a-954100597b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa14b20-32ab-4005-b458-93c2d72e37ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f1b51b-9cc1-477c-adc9-4542ea63f67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a1b285-a094-4b4d-b6a7-55e79a02df99",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4479fc9f-bd8a-4773-a03c-1ecc6488f320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36888d0b-c4c8-4ea5-936d-4ee263c0bba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f35d2eb-5b24-4316-823f-863c1fb38525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af31a7b-0bd1-4cc6-a758-88840a72e184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd2d0b5-bf7f-474f-866e-2c8abddf7ba2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c8a1a9-12e6-4395-b22b-59c2c04b3ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dba59e6-a471-498b-8fad-3c14eea0b954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99396f6-2e10-4bf8-a643-b0b3f9325ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b3f326-9301-4e4c-8dcb-c78ff0a928ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c312d2eb-8a9d-4c41-abdd-555061008cd0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b385c48-c263-4fcf-becf-8251b134d41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766f298d-3dc8-4f26-8641-535b766a5fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a75de8-a4b8-4e57-a648-f6b3fb1c4ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20ee0f8-b253-4f19-946c-d4472e783496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0daabd9-7ade-4c2c-9e36-70cdbb279b89",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b293b55b-1214-4e80-89e6-3631bbc769f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c252f7-99b2-4712-9c8d-226b9db5b6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1161691d-d4fd-4aa8-af3a-94a8493ee170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a970c2f-cde1-4925-945b-7044e9719d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce76f48-6486-4ecd-b4fe-f550e15e2078",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ef09f2-e182-454d-8e21-cdff3d170d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbadd4c-6988-4c9d-899b-53791a269d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb82e79-d340-4afb-b588-ecd5dc2e20cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305fb174-8268-49b7-be58-7cf652d756eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d624a8-173f-4ded-b8bb-4e0575bfc04b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8db138-27d8-4cbc-808f-abf137eb6abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b218d061-4453-47b1-8808-27afb76e5b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe76596-e86c-458a-9c1d-a99a4955c98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da5f211-d520-4a83-90cb-2b12f6501dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419e9a34-9e78-42bb-a8cb-0f33a7c689f0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c747f43a-f5cb-42b1-8fb2-19bc2422d782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c182728e-e72c-4a5f-be13-40c8486c50ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947acf71-c9b3-429c-903a-49b196546878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ed25d9-4697-41bf-b8e1-9d3c459b4a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c493e329-f11c-4155-88f4-e906b8994d71",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23490f05-db0b-4cd6-95ae-49685dc76ac4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89666440-bfc5-4165-b176-179364628b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be95784-924d-46a4-8d9a-08bd6ff7531a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12507850-74c1-4fa6-b9d1-067380fee6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671c80eb-0b01-4b73-928d-49edde706869",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb1b510-afe8-497a-b2ec-5196662f321f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6e650a-db85-4b40-a3e5-19a04e691a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97850cb-ace2-4055-9d7b-299ecff7c7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b30095b-cf15-449b-b590-be64e4113e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5294ea-672b-4315-9b03-554e9a015c3f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b08eedc-9ab1-4e53-9bd1-fa4d2a3333b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad6f5b0-9394-48bd-875f-5b997bd198d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616401e0-c269-42ba-83c4-52e4514d4849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c7736c-0890-4a89-b08e-a2b0f3149f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270f77d3-59e5-4ef0-bc95-6ec5e30f263a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123a2320-a10f-4746-94fb-c37f900e5c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba9acaa-d21d-4459-8d2b-b3080ad215a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02543e8a-a0d9-4dd1-9008-dafdee2a18d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326b8fcf-1607-429f-a293-8d0fe2c39a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63912fa0-2548-4dfd-9f0a-058d248facab",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cef380e-a6de-4ba5-ad06-8c8338d5f14d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8eb3987-6655-4836-a196-00cb4e892542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2899a7cf-bd4f-4db6-a525-f3118834bc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad532a1-c3d1-4b53-9a4b-b2745b32f7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242f97b0-399d-4e3b-bcf1-8b0c84d89fb5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80108542-0872-4078-8134-9f5d1ef3fd85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8850be9e-57ba-4c74-a7a1-df3d25be66a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac7e323-ed1a-4ff0-b413-d4f090424bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6b4473-23a7-44b1-9028-aaf0e90e01f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9049b5-3e85-4d44-b87d-f771edbc95a2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2c12e4-23c4-4a64-9ffd-1b691a02ae36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee0e542-7f53-4b48-babc-b46303f587b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11952f5a-6cc5-4943-99bf-d66f1691e514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34efe99-d059-490d-bad5-83cbad504deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c16be3-f7b1-448c-bd00-9577b25bb686",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec30ef0-d7bb-4399-8ddb-465fe26c091e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f85b39c-4cd4-4c60-9398-2c5edd15f45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590570f5-18d9-4d5f-86dd-a3216ff0228a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e940425-ab66-4c91-adab-b423891b50cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57000718-e749-47bd-b72f-78b1b35b05d0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc591be-e125-4142-b53b-7a49d4d9c065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a5274b6-bbef-4af2-a371-bec883ec36e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b293f1-f3d0-46e3-bb5b-93d564757ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125ad48d-0f95-43e3-b891-42505dce8683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b74acd8-cda3-4bd5-8357-2eaedbca3938",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94059e70-889d-4092-a8a6-603d7a2ca026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723d024b-dc64-4793-9d34-98552f5f834c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9263cb-efb3-402d-8057-836b2bfe81a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6582fe-0b23-4108-bef5-1c2d2700c781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9ef390-777f-45d6-8852-28ac1e22b459",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16d1899-4aad-43b2-9d36-226e4c1d2c59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1047b3f-692f-4edf-849e-0f30ca2f243e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b38638-7a0c-4625-ac2c-79d9b917700e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4682a28f-d0db-482c-af9d-292fa270c64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e0d11b-089f-4c79-9777-2877f2b139b5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dca463-2690-4a56-bcac-c1871244f4c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68efa9b-7032-49cf-92d6-235129df8625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a90aae-356f-4610-82dc-33943c05a768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e28721a-7376-40a4-b6c3-696e7ef13762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e5beaa-7b25-44d7-a9ed-f9354632d39a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d07c0bd-58d8-45ff-9095-f6795dd3f282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2418727-6efc-4fff-9c05-42a33da5f22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48b6048-4d57-4691-8385-e406819956c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2dd6f0-d7bc-4eec-9bac-1307e2493894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86166512-0fc8-4bd5-bf62-ee855f408378",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73caee6-218f-4ae9-9299-b5fad46b78a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "358ca255-0c88-4ca8-8d48-b266d2ab0a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0a4e03-7842-495a-970e-98a7f453a0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb2603f-d4d0-4d69-ba5b-6a1725f5dbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79d3e33-7693-4652-a9c1-31ecdef4db76",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499cba4b-f260-4707-bb46-b36882385017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc6987a-8eb3-47ec-8f53-4aafac55771a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72191e83-999e-4840-89c8-03be6933cfc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b406ef67-815f-48be-9474-53fa84628e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb35a6c-efea-4eb1-b57c-4cb4304db7ca",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2acab3f-b798-464b-9ca7-5dad057134b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f76c1399-b85d-40aa-a89a-d81180a5f21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e303507-7cf1-4ece-a59d-4e872294d54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3622a058-4b26-49dd-a711-d059b13f0d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0393bffd-775c-453b-9566-7079acf05194",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940ff993-967e-477c-bff4-34e3b35a196d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f9281f-e22d-476c-9a82-0752f215acfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1335e60a-9c9e-42e5-9ff8-a0141283ed18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fdac9e-a483-4b3a-ae21-990556552e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8f7546-05b7-4ce3-bcfc-95f465eb5fbe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d1a2cf-c7f2-4d4f-85a0-d758d751bc10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "567ce277-9a23-401b-b4c7-6c5cf8e574b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827993a5-68f0-48a8-b27e-774806b71d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29213c66-dd2d-4c51-a685-0a824285f56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f6dbd1-08dc-4a99-9687-05ee1569c126",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff5eb27-bead-41da-8a8d-7614bed54df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de36841d-f101-4f35-bca8-406204d048ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3d7f30-6074-4377-bacc-d9671858c57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dda7ad7-e66d-48bf-b912-2e8558955491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4328ddd1-c2f3-49f6-806d-14e802d7e18a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3924f612-a040-4b88-9490-8ff4f111438e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6256e138-0ea7-4a7e-926d-c7f106dfa98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a9c287-b801-471b-a27d-577b38e2bb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4784c135-1a42-4e21-8f72-40b51811c857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53312c3d-256f-4921-bc7a-f9e4aad9b7cd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663cc7c4-edc7-45fc-8001-6c5952f95906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf478649-5fd6-4d39-bb01-8e91acac108e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcad542b-dd41-4ff7-9a6c-9142be813172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d06eed2-8e52-47a1-b70f-e26be8c63c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d084e4f6-5c57-4de4-8c46-b8b7762f7c96",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720f1544-772b-4690-8c4d-817026b4b657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0660a73-c611-496d-801e-50851a0e22f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8440c897-f340-4355-b862-cf5b02db5c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a339f654-7a22-480e-9527-6ddf5559dae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f009529c-4d66-4373-ba3c-42afcc0a4531",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9687449f-6ff7-4abb-b2c8-3e92d2fdb040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa923df7-f9d6-411a-a829-e20ba6d9cebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0263b5-0d5c-4672-9475-07c73a96acc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86ffdfc-e4b3-4705-842a-4306f299eb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30092cc3-9944-4fbb-89e4-32385cb6a0c0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca22d5e-7e21-403c-bf88-25491b59e76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3648c6eb-f6af-47da-a5e3-16e88218e27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afebaab-bf39-468e-af6f-5c44cef84f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278433eb-9cab-43de-a9c5-24e1aab769ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b94579-7aa7-42f6-927b-4f0f225c8310",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f419b7-863d-43b0-bda9-affdfff6f7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b51fea7-cf75-4198-9d58-87b94bba145c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e908066-90f7-4ac8-89a1-5d4b05468c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdcd457-8a05-4369-8398-7e59a7231663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b52fb8-8890-40f8-9653-33b0d16f9a48",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806421f7-fe6e-4813-81ea-6334f4abc640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076e1642-c55b-488d-8e1d-1d54f1eecf67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7dc94b-d237-44df-ba4e-a5fa95553ac4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0376c5-3620-48f2-934e-8c67c749e87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92036ca-7e3e-41e4-868a-1412e07d77b8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d77d51e-6cec-4f9b-8f72-55fc148a588d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ac50c4-9cf3-4bfd-b95d-bbfcc9125b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a6d54e-82f3-4307-8106-5c65c32cdcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce40c08-9070-459d-af31-41fab2068e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d100c1ee-0d48-4f7e-8dec-9eb6ae0c0554",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1856cbcd-d099-4628-9418-fa06476a12e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb6705c6-f7d2-4273-b049-2f7001cdbf78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0b1335-faa2-406c-85e8-ca9fad52f1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ee88a3-dd6b-4601-87bc-1669255d69ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e71730-ac1d-4fbc-a61e-eb4e752e282a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3b0390-cf16-4240-a6c6-da3ee8225c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7794c9-3ecf-41f6-8f58-b322d439195a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed9b1a5-2579-4b82-a73b-91a752d675a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc5f5f0-11f4-487e-9d2a-abdb9a87764a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e0fb39-a006-496b-8ada-eea11cdfd901",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee801bc-6023-40f5-93a8-f6c59634f61c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07fdb67-8246-4183-be5e-b204d0f5ab84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0714f28d-b2d7-4ee5-8a4a-ff84205613b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92199a3-4d8c-48d9-b451-0d906c3afa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ff439c-5dd7-4d03-962c-c14113077904",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f244d18c-321c-4ef3-9b31-e82e7c13f40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f313f229-7a82-401e-aceb-faba0df5c240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15db9248-36ff-493f-8cab-7b7be0364dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2828ded-37be-4ba8-a873-abe56c388390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d889d312-5ee9-4a4c-9a85-3b0dfd851bb6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353921a2-a68d-4999-94bf-c1762f3a3524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50be4aa1-3ce9-457f-8604-96a5dea73e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a67e22-d7d3-4bca-8e6a-9fc416500146",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee0c873-ecf6-4d8d-ae5c-64f720be27af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563238bf-32d5-4ab9-baec-f0e94a42808a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f77268b-9aa5-44df-aeff-4ac34aae8239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a2b9c7-87b5-4833-8718-b6d9b17bb5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef060ab3-6d3a-40ed-874e-db6ed3d66d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12da7ce1-c1ae-47e2-902d-3646b45e4fa3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96be2962-d7fb-4b39-9764-508496ec2f90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83ddff09-c2eb-451b-8133-60184241d745"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8efee395-66e0-4921-9030-b427a454b427",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d77309d-db49-455e-998f-5551643ed3c4"
                    }
                  }
                ]
              },
              {
                "id": "aa5fbb63-f038-44a4-b793-2041fe225985",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fde7804-81cd-425b-bf24-834a2731680a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f5f280-d8c9-4d8f-b65e-1b258ef845fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eb31fc07-112b-48d2-acb1-fe4adb0a47d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b05e656-2294-4173-9682-5cfda37cbd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2cc645b-939e-4eb0-8832-8b4d984c0932"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a506465-fba5-4210-bd34-de1d059ffd46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "661b5249-0e75-4217-879e-8b6af7fa44c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e840290e-b24f-4a18-8649-544f5d3db7ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4940f49-4ea2-4bde-8600-45fc6897c399"
                    }
                  }
                ]
              },
              {
                "id": "1cdd12de-38b2-4705-a711-e1b998717d97",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cbf7d7be-a50b-4974-a5e1-db959a57105d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc0affb-9dc7-42a9-a9f3-5b62aae2fea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6e0bad81-1716-43e1-8f46-e6e1b5fadde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082ebf06-0f0b-42f7-a9f9-f2c62cfb30ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3996249-fbe1-4ada-9953-77951abebe84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "45e45b94-4aea-4c3d-a0c0-da872a849cc3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa8ca607-b50d-4f9d-8baf-8d1629643d4e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6975be4a-b1ab-40ca-a83f-62ccc0c022eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "430852bd-49c9-490b-b885-66df86f52d78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe12fb65-4294-4ca9-ab2c-3d48c99b0333",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d778559-1ebc-4892-b3de-54d5adff344c"
                    }
                  }
                ]
              },
              {
                "id": "561c866d-104c-4b64-bee6-a3608c9ccddc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed717feb-37a0-4009-bb39-053e8687dd14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a87b81a-3fe6-4438-9afb-c91a265ac383"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eefd19e5-56de-4546-85aa-63c6df89d773",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a79510-e744-409e-97a1-531a42f0d348"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbcbed4d-e491-442e-8b3f-d05291182d88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9094b84a-a2bc-4c4f-89b5-dffb1692a148"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7cb8686-6bdf-46fc-b0f9-2b6a75e869ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5bef45d-ef18-46e8-a1c4-7638cd24b93b"
            }
          }
        ]
      },
      {
        "id": "35fc4396-5298-472a-943b-b1854410c901",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1112339c-a0d6-46f0-9f04-7a88e4bf4c2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af872715-109c-41a3-833f-a2ede6fcc553",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d85d7a6-6eb3-4b96-9201-40437338a547",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9660ca8e-4620-49c9-9d8b-41afab18389f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58836bdd-e2a4-42a1-a1d2-7e6e150d7b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4cd8e9-1bf7-4aad-904b-0ac2e0720bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3446c16d-91c6-4426-8f11-c8dc84b76aef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9b62299-35ae-43c4-a549-ae83317bfb96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19cbd6ab-a539-4da9-8f3a-7394a7178801"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b146ea1-65d8-4dc3-8d29-70286bbd58c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df15ae72-926e-48c8-84ca-ae3aabbf9d77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b900e792-d83b-489e-acec-39d438af02f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "95eb83de-08d2-4152-8719-22f4bfc73e54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32b23367-a8e7-44a9-bc89-518b27bbee27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07884316-9d5c-4bbd-b3d4-2ea0f7492875"
            }
          }
        ]
      },
      {
        "id": "2ee9c8da-676d-4091-8208-48cae8d580e5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bc57c07a-e9db-4817-a10c-82dc73123196",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be117ab8-dbfd-4e96-97fd-6be851e85e77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71ce80bb-6a5f-4b21-82c1-710e791a8aaf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf499ead-06d4-47ef-b9d9-31424c2d5b83",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f458864-d3c9-4ba0-b6df-7f90de7c5481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c08b9a6-6b0c-49c7-a1c2-f9bcd301dbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a34e5bab-8bd4-4035-9c36-bf40d94e0123"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3db6ad61-f306-4e8b-8d7b-b00deba2e3f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "654c86ba-bc4f-451d-93d4-aea667682475"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d89a45d3-a111-43de-b03b-ca78da4018a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1478cd4c-1cef-482a-b430-43881572dc6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48ccd2ec-3e74-4c3e-ad5b-fd3bca121381",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21a247e5-ccb0-4f9f-b0d7-d0653b710f89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72934350-d168-4db4-98fb-8df5e94eb9b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa85373a-aa54-4313-8ba1-792887f4ad1a"
            }
          }
        ]
      },
      {
        "id": "03ebbb04-8303-4dbe-8d38-c34ca5982ee9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5f355ecd-339a-4042-a70f-4880545dfe0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "203fbe15-3b2f-42e4-a339-d50ab9a76f13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a61ed3a-cda5-4d57-bcab-34dded6545e9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970d1d11-d04e-4efe-bb96-2cd35f215505",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50ade3da-de1c-484d-b8a5-e578dcf75f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c332a7-93aa-432d-9032-fb7c5db95837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "887b298c-dde1-43a3-ab56-e934ac900a66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c241452e-18f0-4a29-9bc7-bd550a3a8a76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e981255-93c1-4adb-a800-2eaa954a1f06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aba492ec-d262-40de-a930-8241d3af4b17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f5373c3-f99b-48a8-bcf3-216d2da712ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e480df70-442f-414a-ae59-b84124af67f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "37e09590-b37d-421f-b475-15ccdb84c35c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5dffe4e9-a2b6-4d9d-be7c-04f25a7c5008",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab80b324-4432-4f20-b128-c708436e8d46"
            }
          }
        ]
      },
      {
        "id": "fdd159c0-3c40-4f69-8964-a3594e4de8ee",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "387d7e75-7fa3-4170-b4e6-b3c723ae74ba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ea2e89b-735c-4e3e-8f3f-25f760d90439",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b9c331a3-d805-4c51-a60a-e2f957ae82e4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc05e6fb-f4c2-4617-a60b-1a1ddffd2100",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "938a0e90-d1a1-49d3-a998-201bce05cc55",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 97.19298245614036,
      "responseMin": 9,
      "responseMax": 5195,
      "responseSd": 414.41140837258666,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701477277399,
      "completed": 1701477314238
    },
    "executions": [
      {
        "id": "ade0b49c-35d0-4a50-ace0-9939232fafaf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d31de1b-2518-493a-a496-5a4b7f8b6aae",
          "httpRequestId": "599b365d-277c-47c3-9e09-4dd0051ac9e9"
        },
        "item": {
          "id": "ade0b49c-35d0-4a50-ace0-9939232fafaf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5f2f24cd-e050-43b0-8472-243957d9df92",
          "status": "OK",
          "code": 200,
          "responseTime": 130,
          "responseSize": 0
        }
      },
      {
        "id": "9f368d24-98f5-4d7d-898d-cbeb6a0dd459",
        "cursor": {
          "ref": "d341d4b0-713c-4fa7-815f-5018d0a87bfc",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b782076d-03da-44c4-85fc-b95fe2231c47"
        },
        "item": {
          "id": "9f368d24-98f5-4d7d-898d-cbeb6a0dd459",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c3670f2c-5bb9-47be-bc5f-989fbf20eb4d",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "a76163ef-67c3-43a0-8f67-addd4ba50ce3",
        "cursor": {
          "ref": "01815811-0e35-452e-a3ff-2bae96ce4e5c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d179e650-ce92-48c9-991d-c119fcbc7063"
        },
        "item": {
          "id": "a76163ef-67c3-43a0-8f67-addd4ba50ce3",
          "name": "did_json"
        },
        "response": {
          "id": "81f21041-b8aa-4e7d-b032-5948136de17b",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11c6d99-165c-4412-be5b-679c6510dcbc",
        "cursor": {
          "ref": "ed35a245-5b2e-4b7c-927f-4254b4699295",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de541c54-5f62-4bcf-9874-ef98cb5c73ab"
        },
        "item": {
          "id": "b11c6d99-165c-4412-be5b-679c6510dcbc",
          "name": "did:invalid"
        },
        "response": {
          "id": "c1c1ace1-fe8e-4d8c-bae0-62251537c1eb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1066,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11c6d99-165c-4412-be5b-679c6510dcbc",
        "cursor": {
          "ref": "ed35a245-5b2e-4b7c-927f-4254b4699295",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de541c54-5f62-4bcf-9874-ef98cb5c73ab"
        },
        "item": {
          "id": "b11c6d99-165c-4412-be5b-679c6510dcbc",
          "name": "did:invalid"
        },
        "response": {
          "id": "c1c1ace1-fe8e-4d8c-bae0-62251537c1eb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1066,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d10d3d7-e939-4fc0-bbc5-f70c89442ffe",
        "cursor": {
          "ref": "586c6e4f-52e4-44a9-9928-9b4899c322eb",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "39da1d71-f4a2-436a-ab23-8189a3020819"
        },
        "item": {
          "id": "4d10d3d7-e939-4fc0-bbc5-f70c89442ffe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b2362911-938d-496c-bcaa-a402e4234be5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e75830a-dcd3-43e8-a03a-5f85c1e79fdd",
        "cursor": {
          "ref": "0f43147a-0ef0-4178-892c-160e61aeb640",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "622e642c-360e-401c-8c4a-46800b212981"
        },
        "item": {
          "id": "1e75830a-dcd3-43e8-a03a-5f85c1e79fdd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4c2f611c-cf92-4e43-b6e9-40dabb241b9f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226be573-90e5-46ae-9970-a48fdccfddd5",
        "cursor": {
          "ref": "59a429ac-7bc0-4f33-8ddd-92108411e412",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "11333da8-6337-4346-9f3b-5276e03b70a5"
        },
        "item": {
          "id": "226be573-90e5-46ae-9970-a48fdccfddd5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "714d635a-0f9d-43ae-85b3-02c1e7d78dbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 114,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178f848d-d89f-47cb-8ec7-64266045b2ed",
        "cursor": {
          "ref": "e8973d11-7b69-47da-9f44-f097e87da79d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d9ed160f-c23a-4851-8310-f84975252b58"
        },
        "item": {
          "id": "178f848d-d89f-47cb-8ec7-64266045b2ed",
          "name": "identifiers"
        },
        "response": {
          "id": "7d2c5489-2811-4b7f-96a8-b3979b7bba1b",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff37e24e-50d5-42f0-a27d-989d6b04697e",
        "cursor": {
          "ref": "e53e6c6b-d301-450c-8eaa-c0c33a366b37",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2c14394b-6ceb-4eeb-a4a2-a37bf5d7318b"
        },
        "item": {
          "id": "ff37e24e-50d5-42f0-a27d-989d6b04697e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ddaa47d3-2743-4f81-a715-94ea4d1abbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26704d1c-f8a1-4e15-abaf-64f685a838a7",
        "cursor": {
          "ref": "7d9dd562-955c-441a-a1c2-ce9dd078a183",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f4c27e32-1457-4e42-84b9-8a713af5f5db"
        },
        "item": {
          "id": "26704d1c-f8a1-4e15-abaf-64f685a838a7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aa074efc-2fe4-44a3-b65b-eb0de083f8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f5a407-8446-4dae-8157-4b7c28ec6ddb",
        "cursor": {
          "ref": "b6bcd91d-232f-4691-81d3-ece94c903f06",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d3bf45f0-1e33-4065-91a0-95b65324a690"
        },
        "item": {
          "id": "b1f5a407-8446-4dae-8157-4b7c28ec6ddb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c17aa95e-4d51-4136-bace-4d1e132a8dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a15c588-2675-42d1-8e5b-3865fa9c5684",
        "cursor": {
          "ref": "229662f1-8084-4aa1-89e2-59512a8e22ce",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "13a2cc2e-2edb-4acf-bac7-2e8b95a81cbc"
        },
        "item": {
          "id": "1a15c588-2675-42d1-8e5b-3865fa9c5684",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "469005f0-e324-484d-9768-cb5390294513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d3b1e8-30dc-4e8c-9816-e320a86503e0",
        "cursor": {
          "ref": "676e8736-2a97-42b0-9159-b1bbb0e2898f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c3348aab-f6dc-4ec1-8948-c5d93d41b078"
        },
        "item": {
          "id": "b9d3b1e8-30dc-4e8c-9816-e320a86503e0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e45ec7b6-f752-4946-bfac-57ac25bcadb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4823c8-9f38-419e-b49c-4e6667b18f9e",
        "cursor": {
          "ref": "65a67713-dfe6-41e0-ac12-fd9f93971e90",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cf4dc912-1fce-474f-a877-0a5f2a033cff"
        },
        "item": {
          "id": "5e4823c8-9f38-419e-b49c-4e6667b18f9e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6974ac38-704f-42cc-8cb6-6910405dde23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7676c2b-55e2-48f1-bb8c-d0e83d89a04e",
        "cursor": {
          "ref": "b70965d3-33ee-422a-a059-1671dffe5a0d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "81a44af3-df34-4ccc-bd30-2ba3135de21a"
        },
        "item": {
          "id": "c7676c2b-55e2-48f1-bb8c-d0e83d89a04e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "03b90249-c215-430a-aafd-caa17659e0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dfad91-8f1f-4e88-aa66-8ec8df606500",
        "cursor": {
          "ref": "7c0917e2-c697-4f1c-9f89-3e1711bc4e2e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cde523ed-7d93-4b0b-94e6-2a25940197d4"
        },
        "item": {
          "id": "c7dfad91-8f1f-4e88-aa66-8ec8df606500",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dc6c4210-07f6-4284-8dd1-74d73852ae54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8fdb97-7f0a-4778-b8d7-927add9744d8",
        "cursor": {
          "ref": "b5d76dd0-c72e-4cc8-8ea0-94d2ed2a0a45",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "01e6cf54-8aea-4245-be5d-dbaed5b10150"
        },
        "item": {
          "id": "7e8fdb97-7f0a-4778-b8d7-927add9744d8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fd70ac9e-8e0d-4067-8ae3-b72975f24aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64a5569-3ae4-4302-837f-a76e1c57f8d3",
        "cursor": {
          "ref": "c11fa006-35b5-4558-b1f7-9aa67fda9b51",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cba2f5af-3f8a-442e-b7da-99ca41f6c9af"
        },
        "item": {
          "id": "d64a5569-3ae4-4302-837f-a76e1c57f8d3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7f47de67-dfe1-4111-8d17-ab0921501109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c36125-de46-44c2-857c-2421066dd3f0",
        "cursor": {
          "ref": "677421a8-2da1-4659-818d-81cffb7639b3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3ca40ce5-5a6b-4aa4-9414-50a18cec6cf5"
        },
        "item": {
          "id": "a6c36125-de46-44c2-857c-2421066dd3f0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "649ee936-47c0-46e0-b0f3-bc5d40963b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134d797c-6d41-4c4b-839a-de509c38cd1d",
        "cursor": {
          "ref": "ffa57b9d-56f2-4025-8044-2a3ba2fea450",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "57ff49ea-64fa-4340-822c-be7f7e71e977"
        },
        "item": {
          "id": "134d797c-6d41-4c4b-839a-de509c38cd1d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f6be0edb-464f-4900-8eae-32fb94b6a52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14817fa9-afa3-4f04-9f98-d9bd533fbf0d",
        "cursor": {
          "ref": "f12c9241-2d4f-42a5-9858-98a2752af2b4",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "02dc317c-a355-44b6-8317-c673c46ed08a"
        },
        "item": {
          "id": "14817fa9-afa3-4f04-9f98-d9bd533fbf0d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e4105949-5bf9-48ba-b29e-9d8623005910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b6316f-ff6e-46a6-abbe-0dd65b71fdc9",
        "cursor": {
          "ref": "b62b59eb-712f-4003-87f1-59452703f9ea",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "546a3bc2-142d-4326-953b-dedebba11344"
        },
        "item": {
          "id": "f7b6316f-ff6e-46a6-abbe-0dd65b71fdc9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f8a31c0f-314a-49d1-99f6-208ae3ded8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34009dc8-29d3-4d46-a280-64544a6242fc",
        "cursor": {
          "ref": "1a437eb5-6807-4368-9677-5612dd83c569",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "04089a32-92bc-4dd2-8255-5af56cd7346a"
        },
        "item": {
          "id": "34009dc8-29d3-4d46-a280-64544a6242fc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "30f35e8c-e9c4-41a6-bb2a-16966c257cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1004c1da-0d17-4361-b520-5a689bf1e7b5",
        "cursor": {
          "ref": "e153cfd3-d69d-4fd1-a676-be43f53423f0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ae808177-f5eb-4a52-b220-1388e23000f2"
        },
        "item": {
          "id": "1004c1da-0d17-4361-b520-5a689bf1e7b5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8424b632-1bf7-4c8b-be9c-b845255c6c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2b0f88-566f-4661-91b6-30df592c8b8c",
        "cursor": {
          "ref": "92394b46-0551-4375-8d21-0075ce513393",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ec9e03a7-0e2a-4785-b8ef-9a2bdd39cb19"
        },
        "item": {
          "id": "3b2b0f88-566f-4661-91b6-30df592c8b8c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2ce38ff2-2b16-4574-914d-df99dcf3d26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eedc9ea-88a9-43ae-9df8-d8deed8d7864",
        "cursor": {
          "ref": "81b1d112-683d-4bda-b9c2-dd5dd6d4cf4e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9a01d3c5-cb6c-4f58-8c99-b544e968ed68"
        },
        "item": {
          "id": "4eedc9ea-88a9-43ae-9df8-d8deed8d7864",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "120806ad-9866-4864-b26d-c02f7916d07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00a85fd-13e2-4159-84e3-b6c49e8baa7b",
        "cursor": {
          "ref": "c06a3a5a-b0f9-49be-99b2-3755dea33fbc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a506aabc-11e6-4916-abb5-4e9d2fe36d61"
        },
        "item": {
          "id": "d00a85fd-13e2-4159-84e3-b6c49e8baa7b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "49c5e469-8aba-4ac3-8489-f40dd2d82670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9dd9ea-f942-4274-a955-4c8ffb2da102",
        "cursor": {
          "ref": "be3aa8fa-2202-4c46-8621-91b1856573e8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ddbb6d15-b31e-45e8-822e-bf019a6c8b30"
        },
        "item": {
          "id": "ce9dd9ea-f942-4274-a955-4c8ffb2da102",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "772f3da9-f4ce-41e7-b23a-fd92defc9c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad882fb-6810-4a96-b985-8a59956d7a43",
        "cursor": {
          "ref": "56555846-2eda-44b0-9f6f-668b07464745",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bb2b271b-c684-4334-abee-e62908fd4f73"
        },
        "item": {
          "id": "5ad882fb-6810-4a96-b985-8a59956d7a43",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "410e2439-92b4-4de3-b062-e10c354bc118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7698cf2-ef4b-489a-bc3b-4a310874545b",
        "cursor": {
          "ref": "018c5826-94e6-4eb2-94a8-459c4577fa11",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e2622d8d-6cda-42dc-b16d-59fc0c0f5e9c"
        },
        "item": {
          "id": "c7698cf2-ef4b-489a-bc3b-4a310874545b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d9ea01a7-c130-4613-8795-8aed1dbb0783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e76893-ec36-4361-b2ff-3a0c4bb110b9",
        "cursor": {
          "ref": "99908f5b-b77d-4343-b1ff-8ae313be9fc3",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5677839a-d48e-4d95-86dc-c864ab71f149"
        },
        "item": {
          "id": "b6e76893-ec36-4361-b2ff-3a0c4bb110b9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9d4d4605-1e0a-48a1-b7b5-614f4f63374c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01c10dd-c557-4750-ac62-755fe4cde030",
        "cursor": {
          "ref": "11af4779-ca07-41ee-b7a2-02a83a19c4d0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4a81d759-c5d3-452f-bed3-fe66fb8234de"
        },
        "item": {
          "id": "f01c10dd-c557-4750-ac62-755fe4cde030",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "db97836f-14dd-4397-9701-551b323cdd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3013b929-77ab-4ad5-9d12-fc2a6649369d",
        "cursor": {
          "ref": "5489d793-5dd5-409c-882b-2c37fb01e789",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d007dc3f-c0a8-4dec-a877-45c8d2253a45"
        },
        "item": {
          "id": "3013b929-77ab-4ad5-9d12-fc2a6649369d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9b841288-4003-4ecb-b1b5-13a09b5f5893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66c03fc-d10e-4443-b454-244c5dfd9bf7",
        "cursor": {
          "ref": "21d4a149-98a0-4ed2-8cfa-2d4464b0264d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f5e313e2-f43c-4b90-81e2-5bc15d8701cc"
        },
        "item": {
          "id": "f66c03fc-d10e-4443-b454-244c5dfd9bf7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e0285809-b7ea-43f6-a9de-c1054ab5613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacd25aa-dd81-46c7-81d0-be93d1f06c6b",
        "cursor": {
          "ref": "e29d6463-d348-47d9-8371-46efdd36906b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9d194a85-18e8-40af-9605-f0542d0918a1"
        },
        "item": {
          "id": "dacd25aa-dd81-46c7-81d0-be93d1f06c6b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fd0f2d06-2253-40c5-889c-24da772d3412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164218d6-420d-4038-8864-cf617f695b09",
        "cursor": {
          "ref": "1f499725-320b-4c78-8b64-992445ac88ba",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "615c8a8c-c015-40f1-ba35-c27112b70f9a"
        },
        "item": {
          "id": "164218d6-420d-4038-8864-cf617f695b09",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8265801d-f1cd-4ab4-a294-0db42ff96511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4861e6-c3af-4fa9-938f-c8d797a8bb24",
        "cursor": {
          "ref": "d02f2a81-de1d-426c-8e7c-27db7cc4d75d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8afa92e2-69a1-495b-a490-c6a64d87ed91"
        },
        "item": {
          "id": "3b4861e6-c3af-4fa9-938f-c8d797a8bb24",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "16b21756-8f06-49fb-b15a-10bedd07b52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dd9cea-7904-45f4-8def-fe8424776b37",
        "cursor": {
          "ref": "ec501e1b-b248-4a27-9403-6341cfbb5e1d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7768908f-f996-44a3-a5b3-4c2783734535"
        },
        "item": {
          "id": "99dd9cea-7904-45f4-8def-fe8424776b37",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f4c52bec-e167-410f-b7b3-6e665babea24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8777ad3-e9bc-47a0-8af4-55b33a2eda22",
        "cursor": {
          "ref": "5931c9b7-a85d-443e-9e9f-8c3d78c58a4f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "635fe087-01fe-46ea-a32f-7bde915b8dbb"
        },
        "item": {
          "id": "f8777ad3-e9bc-47a0-8af4-55b33a2eda22",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "24c8014f-c8b3-4045-ac0a-18c209b09c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bd8653-2fe8-4e80-b240-2334b67accd4",
        "cursor": {
          "ref": "f3079650-2f78-4b32-8af5-8c7451b08e6b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5a582d67-8f66-4952-abe0-36f395c314bd"
        },
        "item": {
          "id": "93bd8653-2fe8-4e80-b240-2334b67accd4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "76690980-1a1c-4dfa-913f-b98ce4195077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5b57fe-b857-4a61-86db-9a29c09f210a",
        "cursor": {
          "ref": "936a4dec-aa32-4481-ac20-e9f718f419d0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8cc66f77-6c2a-4c17-b488-1037b473d0da"
        },
        "item": {
          "id": "5b5b57fe-b857-4a61-86db-9a29c09f210a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a476d96d-6781-4b46-8eac-41157dabc64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2136a51d-4374-4d9e-9bf4-a8695f479455",
        "cursor": {
          "ref": "5cf03585-102e-4e9a-8879-6458bd8c4b68",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c0036b20-aa05-44fd-9a55-ace0a06cd243"
        },
        "item": {
          "id": "2136a51d-4374-4d9e-9bf4-a8695f479455",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9bbe86bd-6f73-491a-8d1d-1b7e1cc149cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dab9e1f-adb7-4f24-b470-f85297991c85",
        "cursor": {
          "ref": "28936c1b-f5c5-4dc3-b550-b409bf792a7b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ea5ffaf1-2e5c-4761-bc9c-eb57846aa6f4"
        },
        "item": {
          "id": "1dab9e1f-adb7-4f24-b470-f85297991c85",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4f5de80f-d8e0-4ac0-8af3-b68919b74aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48871c25-e610-4a21-9dba-1c03b9640582",
        "cursor": {
          "ref": "1130be9e-1cfc-4e74-8328-8c348ae721d7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "10d49d89-47a5-4d82-8ad0-14f24ad74bab"
        },
        "item": {
          "id": "48871c25-e610-4a21-9dba-1c03b9640582",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d8f01741-d221-4390-a884-24c8f1d65fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235c7ce2-8dc5-4663-93a5-36bb9b65ca40",
        "cursor": {
          "ref": "29659fa5-9d77-4d56-9333-5826576d95d9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a340b07f-9408-4c4c-a35f-60a7bae5dcff"
        },
        "item": {
          "id": "235c7ce2-8dc5-4663-93a5-36bb9b65ca40",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "eaa37a8a-893d-414a-8227-466b7f3d7463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5866a8-d6a8-4a27-a3ad-e650220009bd",
        "cursor": {
          "ref": "b439d4e6-1194-494d-acb5-b68e609179f9",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "86728b7d-cc78-494e-a13b-288275dfd758"
        },
        "item": {
          "id": "bf5866a8-d6a8-4a27-a3ad-e650220009bd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1452a750-f5d0-4775-bef2-79d51608d8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14296ef2-a010-4796-99fc-4d6e29e428e3",
        "cursor": {
          "ref": "efcc48bc-207b-4cad-8a4b-7a05fcab7423",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b03acfd2-25f2-40f2-9381-6b512ef56777"
        },
        "item": {
          "id": "14296ef2-a010-4796-99fc-4d6e29e428e3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a02ca6e8-2e50-4ce1-91c0-891718c63034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876c005b-17b7-47f0-a1e9-67ef0d67e54a",
        "cursor": {
          "ref": "93a55060-3f55-44b8-9b08-a8a87b5d99fd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "abc1fd8b-029e-4ffb-aa2a-4079e6432411"
        },
        "item": {
          "id": "876c005b-17b7-47f0-a1e9-67ef0d67e54a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c29ef07c-7ab7-459d-8cea-1d16b7d1638b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0298ace1-1808-4122-a96b-7d8102fd58d2",
        "cursor": {
          "ref": "4e437d7b-63fe-4f10-b235-39459841f272",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a6b216ea-340e-4aea-94fe-864151d2b176"
        },
        "item": {
          "id": "0298ace1-1808-4122-a96b-7d8102fd58d2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0abdef38-f80a-4635-9a9a-8c01ec29cbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad52d1e-e5a0-41e2-b08a-a984dbb4ae6b",
        "cursor": {
          "ref": "af941bdb-6ff7-478a-94be-49a3f04c85a4",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0043ff1f-98b9-4127-9e1c-520dd339f8a9"
        },
        "item": {
          "id": "9ad52d1e-e5a0-41e2-b08a-a984dbb4ae6b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aa9721da-aae8-4ccb-b251-b3c2b1609a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4e173b-f2ff-4617-bda9-11e8bae27974",
        "cursor": {
          "ref": "4ef07379-6868-4762-a77c-4228fd1171f0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0a1f108b-a980-4716-ba5f-fbd518bcd2d2"
        },
        "item": {
          "id": "eb4e173b-f2ff-4617-bda9-11e8bae27974",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a1774089-797b-4ad2-897a-3b92d99f259d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b39038d-d462-43a6-a762-2d7bf0118556",
        "cursor": {
          "ref": "50ef824d-42b0-42a7-82b2-702f3e011e5d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a323434f-1e14-4ecd-a267-5b15e71b1380"
        },
        "item": {
          "id": "6b39038d-d462-43a6-a762-2d7bf0118556",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "da5672cc-fb30-4244-83d7-9564ed59edde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4781cf22-f535-4040-a9e0-2befdcb68e76",
        "cursor": {
          "ref": "4099b676-6b47-4a0c-8bb3-bb6e89978fd5",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "20356f09-21ae-4f8a-adaa-e7839e2279e8"
        },
        "item": {
          "id": "4781cf22-f535-4040-a9e0-2befdcb68e76",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f605729d-7602-4ccf-b0fc-38d7425060f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf8dd85-a0c4-43c6-b577-1d459c0a2279",
        "cursor": {
          "ref": "9b330fc5-b6f4-4fcf-be28-c46f39b2b646",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "838b73e6-f657-4fdd-82ce-0469f50dbc1f"
        },
        "item": {
          "id": "0cf8dd85-a0c4-43c6-b577-1d459c0a2279",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "51d29c42-2d4d-411a-920f-d4cec67a382c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca37efb-951d-48f1-a3d6-bde722b075c5",
        "cursor": {
          "ref": "d99fb53d-f576-462b-84c9-aae12d2cbf0b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "15c6e24b-9dc9-44c5-b31e-92ca8e512b91"
        },
        "item": {
          "id": "6ca37efb-951d-48f1-a3d6-bde722b075c5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "db4762d5-822a-4c18-8849-f3ec0c9766d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f37ffdb-8ad9-4b65-b569-9f53c8879afc",
        "cursor": {
          "ref": "0a17034a-6ceb-487b-8774-e64a69af3187",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2c47d09b-a7c2-4da0-b44d-1fcdb03291b1"
        },
        "item": {
          "id": "1f37ffdb-8ad9-4b65-b569-9f53c8879afc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6b996c31-8dc6-4bbb-833c-65ba4b9d7883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5fbd0e-ccf4-4a7a-9d4d-7e547199370b",
        "cursor": {
          "ref": "acf8ae82-be38-4d6b-a3c2-1857c2e2039c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3320cbbc-6206-4a77-85ee-486d0895b114"
        },
        "item": {
          "id": "4b5fbd0e-ccf4-4a7a-9d4d-7e547199370b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b8cbaebd-4f6e-4038-986b-b880bcc02bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caac1b0d-2ace-40f4-a544-f21df475a0ab",
        "cursor": {
          "ref": "07ab4bd7-9d09-44e7-9f97-8443aa1c0ad4",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fe58ea53-e32e-43a9-a7cd-21f10d89f763"
        },
        "item": {
          "id": "caac1b0d-2ace-40f4-a544-f21df475a0ab",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "44a4f117-a1a9-4d7b-9617-24eeeba3a44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec65b28d-f907-4929-b038-80f1cbd60556",
        "cursor": {
          "ref": "ad1a3f47-4c07-437c-9d9f-f91f2b98b93b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "932fa9c9-eec9-40a7-bd37-1f149fd1addc"
        },
        "item": {
          "id": "ec65b28d-f907-4929-b038-80f1cbd60556",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c05b9aaa-f561-4ea9-b00e-c51e23de80ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46369e61-32a5-4774-a9cc-8682bfa2c7fa",
        "cursor": {
          "ref": "ea4af175-81c6-44c2-9cb5-0f0ff37b7789",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a87ef68a-c883-46d9-bac0-0862bf582abb"
        },
        "item": {
          "id": "46369e61-32a5-4774-a9cc-8682bfa2c7fa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8b46028e-6f11-4fe0-8814-c2cfa964e7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f98cb2-da06-4d3b-a116-125f3c4dfccf",
        "cursor": {
          "ref": "6cc10b01-3ea9-4b2c-960b-f36e3f464d26",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aea3383f-b99c-4072-bec2-e56c3b55d68a"
        },
        "item": {
          "id": "a7f98cb2-da06-4d3b-a116-125f3c4dfccf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e975f7d3-0369-4f46-8121-0ffaeb049f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad22056e-9e06-4b59-a80f-fd550673cd1f",
        "cursor": {
          "ref": "9ec49f70-cd34-45fb-b3ea-6cba30f181e4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dea81c03-72d1-4f1b-ab3b-e8bbfec27ba8"
        },
        "item": {
          "id": "ad22056e-9e06-4b59-a80f-fd550673cd1f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fe513476-5f38-4ab5-80e1-4df6167ba676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb53a39-ef25-4ffa-afca-7edc3684f4be",
        "cursor": {
          "ref": "c0e714e7-ff99-4d83-80c5-5eeb14697880",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fbd5e924-6e59-4533-aaa0-8d4e903d92ea"
        },
        "item": {
          "id": "5eb53a39-ef25-4ffa-afca-7edc3684f4be",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2e5617e6-0689-44dd-9a10-507b8c63e9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5806f12c-4ea0-41e5-bba8-412e6ae17dfc",
        "cursor": {
          "ref": "d6095156-6033-4aaa-b030-67feee31daa1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5d0d2bcd-fec8-4b08-a454-c6e7e3b81034"
        },
        "item": {
          "id": "5806f12c-4ea0-41e5-bba8-412e6ae17dfc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "597bc8ef-79f5-4129-a3bf-f16d1c9de926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ef4803-652e-430f-bfee-8487b450a268",
        "cursor": {
          "ref": "a88e34cd-3280-42f5-a3c8-96ebd9073fe8",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5b79f38f-462a-4f35-a389-25ca5ce4837d"
        },
        "item": {
          "id": "e7ef4803-652e-430f-bfee-8487b450a268",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cdfaa3f1-6f25-4b51-9d45-b0d814b28f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0054649b-dfc2-4b5f-aedc-110901e12bf9",
        "cursor": {
          "ref": "d04a84e2-a321-4cab-a535-6a1a611fbe33",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "93b10f2c-420f-4b3c-973f-618ecb60e545"
        },
        "item": {
          "id": "0054649b-dfc2-4b5f-aedc-110901e12bf9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3cfd49bd-570a-4c0d-9aec-267f463fdf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413fa107-8bf5-4021-9898-6ad0222597fe",
        "cursor": {
          "ref": "97145fb6-46ba-48db-922e-b33205e5045c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6f4fefdf-cece-4799-91ba-a2b2d5feaf36"
        },
        "item": {
          "id": "413fa107-8bf5-4021-9898-6ad0222597fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "255e477e-eedd-49dd-889a-80f5407d8c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac197ac3-f5d4-417f-8b2b-afd5f2f7eafa",
        "cursor": {
          "ref": "07764f1c-d1c4-4bec-b7a7-6a9290f1135c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f845cb0e-4ed9-46a3-9220-9d68ec4d5214"
        },
        "item": {
          "id": "ac197ac3-f5d4-417f-8b2b-afd5f2f7eafa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "831ed9eb-ffce-470b-a11c-b46dd2da80aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d8db43-aae9-497d-b3c7-a28adbeb8cc3",
        "cursor": {
          "ref": "6a4c0592-d398-4e47-b924-e2376c3c073a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "90290af6-d590-4813-94f0-2218c9e722bc"
        },
        "item": {
          "id": "c0d8db43-aae9-497d-b3c7-a28adbeb8cc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "62374777-e6e0-4717-bbb3-ce17340ecf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d69d1e-ebaa-45e7-8ae1-212d3d2aad50",
        "cursor": {
          "ref": "efb570bc-e9e7-4dea-a508-31b2536b9632",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d537eeaa-fa9a-4a0f-9d67-020d073fd664"
        },
        "item": {
          "id": "46d69d1e-ebaa-45e7-8ae1-212d3d2aad50",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e9e5d70a-9238-4387-9c20-42d42d7d23e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099359e1-aab5-473b-a5bb-a70216ce89f1",
        "cursor": {
          "ref": "4d44dbca-3bdd-403b-9388-61a03892dc36",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e0aaa818-857f-40a5-a845-98ace53a7ab5"
        },
        "item": {
          "id": "099359e1-aab5-473b-a5bb-a70216ce89f1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7b8d9288-7383-4007-a156-df20f619acaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f24e9e-7ebb-4224-bef6-1a0912602a40",
        "cursor": {
          "ref": "ed812882-8bf1-40a0-bbf0-f21caf81dcdc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0a2a19fb-6293-40cf-ab03-b8c5523df7cc"
        },
        "item": {
          "id": "43f24e9e-7ebb-4224-bef6-1a0912602a40",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "40e90954-9a2f-4bdf-bdad-e26bf76f95ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedc6048-51fb-442b-9ce4-4cb562230068",
        "cursor": {
          "ref": "db391f07-df72-4d23-bc3c-d905961692e5",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e5f078c2-d192-4b71-9509-460337cd1ca2"
        },
        "item": {
          "id": "bedc6048-51fb-442b-9ce4-4cb562230068",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "49da05e6-4b47-4f37-b778-0d37434a9acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5130d99-1fed-4ea6-97a5-32d71930a96e",
        "cursor": {
          "ref": "1a7567a3-1894-4ed4-a208-4c30cdda34d4",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0fb98d7c-613f-4ccb-8ba8-190325482e23"
        },
        "item": {
          "id": "a5130d99-1fed-4ea6-97a5-32d71930a96e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1dffe11d-4c34-4935-a040-5d6ae699f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bc9819-f9ab-4473-96a4-1cf752438744",
        "cursor": {
          "ref": "5d6328f7-ef6c-489f-abcb-f2520bb6840b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6e6cd2c9-7ef4-4898-8908-f535b86bee7b"
        },
        "item": {
          "id": "c4bc9819-f9ab-4473-96a4-1cf752438744",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "94593a0d-ba10-43ad-87fd-700dbf83d132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684d8cf0-cc28-484a-943e-04ab4bcac95f",
        "cursor": {
          "ref": "c4727c5d-0c50-49d7-ae34-d80eb22db2e4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6ef124f7-1dcb-4d4a-8ac2-df0b2bbba2dc"
        },
        "item": {
          "id": "684d8cf0-cc28-484a-943e-04ab4bcac95f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7557736b-e064-4048-92e1-d8e93e7369ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00686104-d09f-402b-93da-86fa4041e5ba",
        "cursor": {
          "ref": "1d130d5a-43d4-4b4f-b61b-332683a6705d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e01d2f83-96d4-44fe-90a5-3329a016e195"
        },
        "item": {
          "id": "00686104-d09f-402b-93da-86fa4041e5ba",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "38b5dbcb-ac1d-4e56-8515-88ae4b7ac197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0fec89-2ef0-4258-85c2-e2591fea99d0",
        "cursor": {
          "ref": "31b30d79-e8b8-4a2b-bf77-c3fb922f23f3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0afd73d8-a6fe-42f2-b7e2-a347a1f5be3a"
        },
        "item": {
          "id": "4b0fec89-2ef0-4258-85c2-e2591fea99d0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7fc4f398-dff0-4056-a503-dc5c7dfa259f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb75bb58-3d87-4bfe-8c7a-f98122a4482f",
        "cursor": {
          "ref": "13b98013-5e5d-4f8b-89b9-58402d409e53",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "11a9a5af-6539-4020-be9e-7234b2b36606"
        },
        "item": {
          "id": "eb75bb58-3d87-4bfe-8c7a-f98122a4482f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "59f13ef1-759a-4c5d-89e4-2173a21e43a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b714b3-5f49-4ee6-aaa8-66a785ccbcc7",
        "cursor": {
          "ref": "bd1f7725-c354-49c2-ba9d-a24a0efadb11",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9cc7bdd4-4264-49fc-bf7a-80dea5c05121"
        },
        "item": {
          "id": "27b714b3-5f49-4ee6-aaa8-66a785ccbcc7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0ebde1d6-9a0b-49bb-b39a-642e359cb4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d2d262-516b-4b47-8a0e-a813643928ce",
        "cursor": {
          "ref": "69b4511c-eb16-4b53-b757-b2b2fc6759b8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cf0001a1-a15e-4bf9-9750-e6e52befe210"
        },
        "item": {
          "id": "b1d2d262-516b-4b47-8a0e-a813643928ce",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "da8b5535-d054-4bda-92d0-49e342ad14f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a68c12-7a95-47b4-a1d2-46632bb76a86",
        "cursor": {
          "ref": "5e9b54c7-23e2-435c-93f2-798027b3be35",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9ea0b86f-955a-4a5f-a6bf-0afbc25ff4a0"
        },
        "item": {
          "id": "28a68c12-7a95-47b4-a1d2-46632bb76a86",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5a1a4e51-cf7c-43d1-8036-8f3c1c83f5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101276a3-ff82-4f8c-a4b3-ff32cb51fa26",
        "cursor": {
          "ref": "4fd8a9f6-a3ae-4c54-968c-929d68788469",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "85dfaf9a-0f10-4117-9aff-7ec90f599df2"
        },
        "item": {
          "id": "101276a3-ff82-4f8c-a4b3-ff32cb51fa26",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9e4ab0dd-e44c-44f0-91a5-d3c6263c7adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ae4337-2612-4f3e-9a02-f92cbad2ec66",
        "cursor": {
          "ref": "e0eca2c3-c200-46e7-a049-1340a2e01b95",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8e03e2fc-b622-4f8b-bc3d-46666be6c33c"
        },
        "item": {
          "id": "86ae4337-2612-4f3e-9a02-f92cbad2ec66",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e1651baf-8419-4c33-801e-6fd7049700b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562a9b95-89fe-4360-9b9c-b3e2c397a295",
        "cursor": {
          "ref": "dd899635-b681-4eef-9333-51b73c44afd0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "038e0055-f926-414e-a305-aa7a9c3f69b4"
        },
        "item": {
          "id": "562a9b95-89fe-4360-9b9c-b3e2c397a295",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1e7cdd89-2d83-429f-a87b-94f41e4f6a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5e9099-0ef8-45ce-85a2-792de8e93248",
        "cursor": {
          "ref": "192cbd57-ab8a-4c81-ab13-b26689041da2",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a126d4f3-6663-45ce-ba6d-1b5e776081c0"
        },
        "item": {
          "id": "5e5e9099-0ef8-45ce-85a2-792de8e93248",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8cf25fb6-b6ee-401a-b45b-ad06eaf1be63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a19271-f268-464f-a7c9-fd231bc705bc",
        "cursor": {
          "ref": "1f7e69c3-86a5-4df1-8bf6-1a4d6771f0bb",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "90e2f066-279b-41b2-8096-dde5b151f8ae"
        },
        "item": {
          "id": "d5a19271-f268-464f-a7c9-fd231bc705bc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "30b7e237-4ba0-457f-abbf-ca8a99eae109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282ba638-13c1-4b72-ba03-c738412ac76f",
        "cursor": {
          "ref": "9c22243e-3ec2-48cf-9a39-f6f483dec3b6",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c8abf04a-266c-4002-981b-a72e54b14372"
        },
        "item": {
          "id": "282ba638-13c1-4b72-ba03-c738412ac76f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d5db743f-1afc-4f6b-8246-b76fc69f23a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400783d5-7829-46b9-be16-d022daf23734",
        "cursor": {
          "ref": "631b3808-45f3-4991-a4ba-0706df34ca29",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1db31968-68cc-47b8-a285-a1e943f763a7"
        },
        "item": {
          "id": "400783d5-7829-46b9-be16-d022daf23734",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c4ae865b-007e-4ca8-92aa-ffa2f71e2b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3157bf6-acfe-43a1-ad12-b7476ec479b9",
        "cursor": {
          "ref": "1400ce0b-7a5b-4246-9d8a-a789c6d4009f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a75f3d02-890f-4390-88a0-4ca8f5fbc487"
        },
        "item": {
          "id": "c3157bf6-acfe-43a1-ad12-b7476ec479b9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6be8a45d-7a39-4515-bead-7cde1fe71969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a189d42-28ce-495a-b418-5c3629a97fad",
        "cursor": {
          "ref": "45eb065b-ac7b-4ed2-8336-6b07a753bb1a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "89d45e88-2db6-4dac-897a-11ba15770c80"
        },
        "item": {
          "id": "6a189d42-28ce-495a-b418-5c3629a97fad",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "51d81b9d-3255-4c33-8f32-afac74360166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571632bd-ade6-4b71-91ff-d36619c5e7da",
        "cursor": {
          "ref": "3f6a157e-b145-4b5b-8d31-7f3e0edf6295",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e32c57f9-9ad0-4456-9dcb-2e86a436e2fe"
        },
        "item": {
          "id": "571632bd-ade6-4b71-91ff-d36619c5e7da",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fc6e5c17-ea4e-47a4-9c5c-70fcc87b2c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242fa5fb-99ef-4de6-aac0-ed19f817e5fc",
        "cursor": {
          "ref": "9cdd9fe3-346d-42c9-a518-ad7483c5d60d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "554cd968-c27c-40c4-9304-d38463ae4709"
        },
        "item": {
          "id": "242fa5fb-99ef-4de6-aac0-ed19f817e5fc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e62c0fca-da51-43f1-95ce-667693ee0e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5e2e4d-74ab-4a23-85eb-ef3eee147230",
        "cursor": {
          "ref": "db3a821c-387d-4dfa-8a15-abd862903426",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "839c81b8-ee97-4e93-9711-7bf45423b5ee"
        },
        "item": {
          "id": "de5e2e4d-74ab-4a23-85eb-ef3eee147230",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c27e68a6-5683-4e96-afac-b9021a08824e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196ef98e-5bc7-4013-bd8e-4908a560686b",
        "cursor": {
          "ref": "520e0bf8-e114-480a-969a-ccbe2eb1989f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cd3c5c83-6818-4d16-a44b-db79ff7c1db2"
        },
        "item": {
          "id": "196ef98e-5bc7-4013-bd8e-4908a560686b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "27d5c2aa-5f91-40fa-bce2-b596ac4245dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272fcf19-c8a2-4aef-bb10-c0cc3d7738c0",
        "cursor": {
          "ref": "bc24114d-7a1a-4da1-9955-804bbd5a1963",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "11113299-0d93-4152-bfa9-361ce6729e3f"
        },
        "item": {
          "id": "272fcf19-c8a2-4aef-bb10-c0cc3d7738c0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8c8d9913-64df-415f-823c-6451fc9018bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0808d0-e2e6-4e22-9691-c0a8cb8f2b6c",
        "cursor": {
          "ref": "b75a1fdb-7dc6-4c46-a262-1cf571ce54fb",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e903950-4c3c-4be7-a401-8500d2fc6709"
        },
        "item": {
          "id": "4e0808d0-e2e6-4e22-9691-c0a8cb8f2b6c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6b10d87d-346d-4163-8237-ca752bd96b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c44159-348c-4224-82cc-b61bcef26692",
        "cursor": {
          "ref": "b58e5590-ef2d-47fa-9d01-e30a2b46b0cd",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7a93c437-4d5f-48fb-aad9-a4a49992611e"
        },
        "item": {
          "id": "44c44159-348c-4224-82cc-b61bcef26692",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f67c7bcc-4a03-4b84-a1b2-073565203128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641cbd8a-d678-4846-8b98-35aa74afc249",
        "cursor": {
          "ref": "7e4e5772-b24d-4cfe-8838-fca077044796",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ac0d73a7-88d3-4763-8bd2-905548260086"
        },
        "item": {
          "id": "641cbd8a-d678-4846-8b98-35aa74afc249",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1d46bbb4-1785-4dad-b44a-77af05796510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b6b376-3fb0-4f00-b542-94bcba1ed0a8",
        "cursor": {
          "ref": "be07c41c-cbdb-4f3b-8b10-845a5a2c2973",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c4fbc5e5-3f10-42ed-9a29-62d8d47dff72"
        },
        "item": {
          "id": "c9b6b376-3fb0-4f00-b542-94bcba1ed0a8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cda09cc3-8e1e-4d47-b644-846e136c5e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1d1218-9e8d-4534-bdd2-2bb7844c47a4",
        "cursor": {
          "ref": "a18a39e4-2cc4-40a1-9c45-373ebcfc1473",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "36f813e9-853f-4a4a-b824-2dff8607949e"
        },
        "item": {
          "id": "9e1d1218-9e8d-4534-bdd2-2bb7844c47a4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "97b8cef9-849e-4004-a779-7110a4d8f755",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f9e84e-4f7e-4b78-beb9-6080adc8fb9f",
        "cursor": {
          "ref": "40b3c868-3844-49ea-adda-07d906c2cd09",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6d2106ef-f937-48aa-8d83-35d2f523993a"
        },
        "item": {
          "id": "78f9e84e-4f7e-4b78-beb9-6080adc8fb9f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e2fad19b-a7ac-41f2-ba9a-52dbc4aab089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a0aaf46c-8e61-4b6b-965d-bdfbf5a4d91a",
        "cursor": {
          "ref": "bf784bbc-7f43-4153-a8f2-fe89d2f41fe0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "61299dd9-af17-4ab3-a6fd-093cda6b4d19"
        },
        "item": {
          "id": "a0aaf46c-8e61-4b6b-965d-bdfbf5a4d91a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a65640e3-a2a4-4d55-9805-4f24b100ebb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1b0bfc84-93ad-4026-b961-66dea73d733c",
        "cursor": {
          "ref": "07063bbc-136b-4a62-abb8-36bf17e4ab60",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f1c2af78-358d-49ab-99c4-c3aef8033404"
        },
        "item": {
          "id": "1b0bfc84-93ad-4026-b961-66dea73d733c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e95ccd50-de67-473f-95f8-bd176593af01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2fd7eaee-7c4e-4927-91fb-0cd7ab477d1b",
        "cursor": {
          "ref": "9841d1e4-39d6-40e0-a1fb-79d4ab153e67",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "254cb4ba-6076-4bd3-9aa2-37a1de9d4fcc"
        },
        "item": {
          "id": "2fd7eaee-7c4e-4927-91fb-0cd7ab477d1b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "76d210f6-ea90-4b62-b450-600ad52df3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "27d21e8e-99d0-47e9-a3fe-00b555d7a407",
        "cursor": {
          "ref": "d4170a38-4992-4dd9-b636-0fe607d7e1ba",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "15e0f6ab-4b4f-4c63-9e56-5c994d9c1c68"
        },
        "item": {
          "id": "27d21e8e-99d0-47e9-a3fe-00b555d7a407",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c04f51f5-354c-440f-baee-d23544ac3231",
          "status": "Created",
          "code": 201,
          "responseTime": 5195,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "021b1586-d8af-4295-8d3c-c6198ee09dc5",
        "cursor": {
          "ref": "a8f44af3-13c3-45e2-a270-92bda6125cc4",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "71e3abee-e5af-43d1-90aa-22cdcfd1bbc6"
        },
        "item": {
          "id": "021b1586-d8af-4295-8d3c-c6198ee09dc5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5ba4c6e3-0f38-4cb2-9aa9-0afe886c9923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0b6c77ea-009b-48fc-bf55-c78f9a4d89f0",
        "cursor": {
          "ref": "6f290211-8d48-4f77-a054-05bdfb2b5147",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5e595b13-6482-48d1-9006-aff7b9e09748"
        },
        "item": {
          "id": "0b6c77ea-009b-48fc-bf55-c78f9a4d89f0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "28d466ec-c9ec-41ca-8257-a331618b3b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "fd3529dc-b220-4be1-86cc-eaf4034cff75",
        "cursor": {
          "ref": "b4f823e7-be4d-4267-8273-24f00b3ce606",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "57b7b712-9aba-46c3-bef4-4e8c8285dec1"
        },
        "item": {
          "id": "fd3529dc-b220-4be1-86cc-eaf4034cff75",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "672e508d-49df-4923-ac10-c7b3bdecc00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9044a168-79c0-4042-b88a-6d48ee1c7cba",
        "cursor": {
          "ref": "3ecbb08d-3ec1-4f39-917f-a462957b5b2f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "415c217f-ab3c-4807-8d2a-71fcdf209f6f"
        },
        "item": {
          "id": "9044a168-79c0-4042-b88a-6d48ee1c7cba",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0d50405e-429e-4b39-9f04-c9e76cc19880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ec921a-e736-4eb5-ab5a-9be501a62e07",
        "cursor": {
          "ref": "6c1e1886-9d73-4b47-8f63-7d55edbdfca4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "12f36942-bab9-4eae-95cd-dfe935bd82e9"
        },
        "item": {
          "id": "31ec921a-e736-4eb5-ab5a-9be501a62e07",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "19a9d602-a5d9-4017-8a15-4a1876e1c89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a38139-d850-4d73-819d-1c4a7bfb0dbe",
        "cursor": {
          "ref": "c9c61d6b-bae5-4d6d-9fbc-b79370dd57f8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "18a4dab1-8e62-4654-b0b1-4ce61bf3b4cb"
        },
        "item": {
          "id": "21a38139-d850-4d73-819d-1c4a7bfb0dbe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ea9d89cc-f30a-4790-a651-dfa5e2cec6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12d84e2-c5da-4065-829f-b3806fc2fac1",
        "cursor": {
          "ref": "c86a11ff-f973-4a5f-9149-adce8ecf71e4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4d66a64e-ea68-4fe0-bd56-694cd430a301"
        },
        "item": {
          "id": "d12d84e2-c5da-4065-829f-b3806fc2fac1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6792d30c-7f55-4aa6-bf6f-1a98496e3b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a53f98f-8333-43f7-abcd-45a34369b4fa",
        "cursor": {
          "ref": "89dbb7c5-0663-4899-afcf-1bc9c4b7b251",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dff0cc61-78d0-40d6-97e2-8023089b3f69"
        },
        "item": {
          "id": "4a53f98f-8333-43f7-abcd-45a34369b4fa",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0225f1cf-9eb9-4b1d-8e3f-c204a3958b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3753661a-e595-4c00-8d6b-07e125807437",
        "cursor": {
          "ref": "f69bf1dd-ff44-4d81-97d9-92d3a728c3ee",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "56e4420e-e8ef-4bb1-b05e-5aa75184a6f0"
        },
        "item": {
          "id": "3753661a-e595-4c00-8d6b-07e125807437",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e0866f65-41b2-46e7-847d-179949fc658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed571320-9cc7-41a9-8030-3475def521f6",
        "cursor": {
          "ref": "30c25289-b7e2-45ab-a0b4-bd8c06a74616",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bf9cf537-bb9b-4c0f-a754-35bd9303dc14"
        },
        "item": {
          "id": "ed571320-9cc7-41a9-8030-3475def521f6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6da0b13d-db2c-479e-bbd3-63efae8df65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fe750d-0fab-4d30-b927-d0e3e279e0cf",
        "cursor": {
          "ref": "19653a08-5747-4bc1-876f-5b84b7d1b773",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "94f51359-6e8b-4efb-a881-76794f190f79"
        },
        "item": {
          "id": "c2fe750d-0fab-4d30-b927-d0e3e279e0cf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "83dcda9c-d7ae-4d5a-a677-55328223a389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9cbe9c-d309-4f94-bad6-1b9050fefbeb",
        "cursor": {
          "ref": "9c91334c-16d2-4cd2-abc1-e7a23ad82d50",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7994fe2c-e89b-4e6d-ad13-85f9ae284798"
        },
        "item": {
          "id": "9e9cbe9c-d309-4f94-bad6-1b9050fefbeb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "07875660-d8f4-4d4a-8409-2922f62131c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c84ba7-6fde-4eec-a189-75a3dc4ceb3c",
        "cursor": {
          "ref": "df259e7e-88c8-49f3-94bb-548a50d9a54a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d0dea948-a2be-4019-ae45-9b56008c0405"
        },
        "item": {
          "id": "06c84ba7-6fde-4eec-a189-75a3dc4ceb3c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3ce0cfa2-8129-465f-9a19-98a34301b958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590ef320-4711-4b5b-a50a-8884a6f64db1",
        "cursor": {
          "ref": "d8058f2a-0a95-48fc-9210-8189def7fc1f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5dd7c601-dc9a-44e9-9610-fc0a60680390"
        },
        "item": {
          "id": "590ef320-4711-4b5b-a50a-8884a6f64db1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bdafacfe-560d-414a-a8f3-f0269b01268b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d80d16e-18ab-43e2-8970-07536b8394a7",
        "cursor": {
          "ref": "53752032-8584-463d-a788-2777f05e6cc9",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7eb53820-90eb-4495-85ff-27a39819bbe3"
        },
        "item": {
          "id": "8d80d16e-18ab-43e2-8970-07536b8394a7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "09d5b1ec-fc8a-4287-ba33-25e256fa0070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b18a9a-9dc9-4ad4-82ad-43bafc748d85",
        "cursor": {
          "ref": "fb470f32-9924-4ae9-a9e5-4925a8a1911e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1fea7b57-0a3e-4276-a66d-2805cac230be"
        },
        "item": {
          "id": "f7b18a9a-9dc9-4ad4-82ad-43bafc748d85",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "256265c0-c9fa-4f13-bb07-9f5a19b70ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbadac3-adec-40fa-ae04-78859581e089",
        "cursor": {
          "ref": "5c4ce78d-234c-4965-b2c1-ac59388c116c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0762b139-2c06-465c-8643-4b466f9ec8b9"
        },
        "item": {
          "id": "7bbadac3-adec-40fa-ae04-78859581e089",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ef530cd7-068f-45a7-87ca-a4aed88b432f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a43607c-e8e9-41f4-9d4e-8da5991fb39f",
        "cursor": {
          "ref": "87c09330-de13-4be7-9314-d10b634a9766",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8ee6bac5-0eab-43d9-9a4a-c07797654f8d"
        },
        "item": {
          "id": "7a43607c-e8e9-41f4-9d4e-8da5991fb39f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "97c7790e-c9d5-4a37-8372-7d4f9c80889d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc23f089-d51c-4f22-8994-a116f113ae24",
        "cursor": {
          "ref": "ddef2ac9-7885-4eb6-a113-e785daa0857a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3fde51d6-5b89-454f-a94b-0df7238cbf8d"
        },
        "item": {
          "id": "fc23f089-d51c-4f22-8994-a116f113ae24",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "93014911-c8f0-41ad-abd7-a549fb458992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ab8f76-c5f7-42cf-adc9-602a636813ea",
        "cursor": {
          "ref": "ba77eb04-fa34-41af-bd70-24c95384a31a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f5d9ce37-700b-42b6-89a2-efe39fade48b"
        },
        "item": {
          "id": "d8ab8f76-c5f7-42cf-adc9-602a636813ea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "05d7c5ef-c9c0-4db6-8fcd-c24706a28325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69436576-087d-4b1f-8c33-6f8bd750cce2",
        "cursor": {
          "ref": "733e590a-3cc7-4582-87d7-84eb244f4bf5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "04a34810-bb09-4320-b2f7-b56cf29c3924"
        },
        "item": {
          "id": "69436576-087d-4b1f-8c33-6f8bd750cce2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "75806ce7-b7f8-4c17-894a-f106f3f3ad32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeb07e8-1fec-402d-8ac1-62961a762462",
        "cursor": {
          "ref": "2de2829a-cdf2-4128-911b-69bfb4eef035",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "658694d8-9cda-437a-9a40-ed27128e3e53"
        },
        "item": {
          "id": "7aeb07e8-1fec-402d-8ac1-62961a762462",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d7a91313-c33c-4bf4-8780-9eb0d0508e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db3851f-06df-4bb6-b72b-1133cd7e07a9",
        "cursor": {
          "ref": "dfd31a1b-8b9d-4954-8556-eca663d2692f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "15ef04f6-13e9-435c-989e-2a143804436a"
        },
        "item": {
          "id": "1db3851f-06df-4bb6-b72b-1133cd7e07a9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "41f4016d-95fc-48e8-a2c0-84810c5c8076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a776b2-715a-4f4f-bbca-09ad0fa5857d",
        "cursor": {
          "ref": "872c7715-00c9-4321-9cb9-7419a79f695b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7a3b7547-6244-4e27-a8b8-fce62d4ab823"
        },
        "item": {
          "id": "33a776b2-715a-4f4f-bbca-09ad0fa5857d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1490f611-1f23-4771-b6c7-de2edd7f7dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605a2b62-7e14-4153-86f6-0d73254625a9",
        "cursor": {
          "ref": "47e7a64e-a5c4-4b82-8f0f-ad6564e4631b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2eb1b126-ee54-46a9-9828-2e5af13a047f"
        },
        "item": {
          "id": "605a2b62-7e14-4153-86f6-0d73254625a9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a8fe5f33-8a00-4fc5-9dac-79c0c56e0c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cb6278-c437-4953-87f3-761fc2913139",
        "cursor": {
          "ref": "cb545e4f-d9e4-4c55-9423-1d06c22cf1d9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8eeeefbd-05c9-4101-9b89-127aa980797e"
        },
        "item": {
          "id": "53cb6278-c437-4953-87f3-761fc2913139",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a64dd42-e342-475a-a303-65b75df44ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90bd8bf-18f5-4e3f-9445-07a8bdbe8cde",
        "cursor": {
          "ref": "3c842296-30a9-45db-a7e7-f9cdc9f55f34",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a792d431-11ae-42ab-91b6-d48f96f1d6cb"
        },
        "item": {
          "id": "b90bd8bf-18f5-4e3f-9445-07a8bdbe8cde",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "338f3262-1d9b-4eca-8856-e5c688358f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71b3c18-fcc0-47a6-af75-2964aeb21a37",
        "cursor": {
          "ref": "f2a9ba5f-54a3-45d1-8fbf-a4db85856218",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a6d2f31d-b24d-4a0e-8e90-58cb72e7b622"
        },
        "item": {
          "id": "e71b3c18-fcc0-47a6-af75-2964aeb21a37",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f83d91c0-8a31-4ff8-b086-b2221c5a504c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae417832-e512-492c-acb7-a6ea0aad6800",
        "cursor": {
          "ref": "0b7df371-be5b-42dc-9278-5bb7924d5f33",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3925331e-858a-44c1-bbfd-b05304086610"
        },
        "item": {
          "id": "ae417832-e512-492c-acb7-a6ea0aad6800",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "27502a26-1988-4073-af77-ce2028a6afdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c719a0b-467a-40c4-be79-85da8230850f",
        "cursor": {
          "ref": "74f55644-896b-4301-97d6-5a43c2ea89ed",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1b6884c9-e4ae-4e6a-a4c6-fc59a6d4742c"
        },
        "item": {
          "id": "7c719a0b-467a-40c4-be79-85da8230850f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cfc2c445-5ebe-4d34-9b2e-711f0bbda573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9454c5-315f-403f-833b-dd422fcd08af",
        "cursor": {
          "ref": "f2be400c-4d58-4310-8d11-8450960241b4",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "edbb20a7-0c3a-4021-8a8d-4ecb1f0c7f00"
        },
        "item": {
          "id": "1b9454c5-315f-403f-833b-dd422fcd08af",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "29732b56-4fa1-4f67-8a0c-2458ccadf6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c18fa7-b2d2-4e2e-82af-c8596ca9c297",
        "cursor": {
          "ref": "813a4d25-1339-4618-aadd-3c498cd8b98b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ec14792f-2368-436f-a101-a04f6a12af22"
        },
        "item": {
          "id": "b9c18fa7-b2d2-4e2e-82af-c8596ca9c297",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cefada44-ff60-42ca-8e05-cdd048636c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0c20e6-44f1-4eba-b948-0a57761d2481",
        "cursor": {
          "ref": "edd40b4b-7417-441e-869a-f4de98624eb8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "95b2f59a-4151-4da3-b618-0aa73b9352f2"
        },
        "item": {
          "id": "2b0c20e6-44f1-4eba-b948-0a57761d2481",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8f2cd8b3-4476-4811-8ce6-972713492d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5f0617-44c3-4bcf-ba67-901630778d6f",
        "cursor": {
          "ref": "13fe6366-c828-4ec0-bed7-2e32a523c033",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "72041f0f-641a-4664-ae94-10fe2284a973"
        },
        "item": {
          "id": "1c5f0617-44c3-4bcf-ba67-901630778d6f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "102d2761-b916-4b09-bcba-ff99c24c539d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28950a8a-512f-4beb-9e13-73972ae99515",
        "cursor": {
          "ref": "7b5990b0-3e6f-404e-b2e6-3e0ffcd14309",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cff303bd-969a-4a79-92ea-d04e733b2036"
        },
        "item": {
          "id": "28950a8a-512f-4beb-9e13-73972ae99515",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "59f2ec02-0f22-4c9f-a91d-749233ea96c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b865b40-4feb-46a9-b5ae-d74c76e11a26",
        "cursor": {
          "ref": "372461b6-ac96-4b55-a8a5-a082b4d3fd93",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bff064f0-344c-43f9-9ec1-18bc756d6bb7"
        },
        "item": {
          "id": "1b865b40-4feb-46a9-b5ae-d74c76e11a26",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3175056e-0360-4cb1-ad64-48dd4b2f9fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0853906-8527-4438-b747-b3df2825a6aa",
        "cursor": {
          "ref": "bdf5fbda-5dca-48e0-b241-aef519b209d8",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "eb83c9a6-ef27-4487-82c2-6e621a2a73a6"
        },
        "item": {
          "id": "c0853906-8527-4438-b747-b3df2825a6aa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8f788be8-ab6a-4af9-af60-c376a991516e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d1f368-8b24-4aa8-bcea-c2b2467766f2",
        "cursor": {
          "ref": "d3255d75-c670-4175-b589-35b9ea1ec19c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "927c8131-fc94-4ffc-a4db-d2b65feb8449"
        },
        "item": {
          "id": "03d1f368-8b24-4aa8-bcea-c2b2467766f2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9e58edc9-3db6-43dd-9908-cba5c3159f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b8d7a2-0563-4e2f-af0e-a61626bb1c5f",
        "cursor": {
          "ref": "b7b45e9d-ed06-42f8-ab46-acc6071fe22a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "37521a68-7dbb-4344-976b-6611544ef3ff"
        },
        "item": {
          "id": "34b8d7a2-0563-4e2f-af0e-a61626bb1c5f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e2a483f2-0703-4f7b-86e1-7783ffe9901d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6238632-02a1-4d80-9e77-6ca3d1165772",
        "cursor": {
          "ref": "3ab35680-d828-46bd-9e0c-ff10516c591c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ba41c73f-9e40-4c57-bf57-514b99b39433"
        },
        "item": {
          "id": "e6238632-02a1-4d80-9e77-6ca3d1165772",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "86a4652c-2ab6-4de5-87b2-81af13d6ab44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6f4a70-26bf-4527-bb81-3f61a0e3d348",
        "cursor": {
          "ref": "1012b337-9a6a-4cf1-a1fc-2e84b41fcfc7",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "944f5b97-a6e3-4a7f-ba90-7106c0650ed2"
        },
        "item": {
          "id": "9d6f4a70-26bf-4527-bb81-3f61a0e3d348",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "467a986f-b8a2-4078-b97c-cd744db9ec83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54555d00-edb4-4497-b2bd-c5f948fa96f4",
        "cursor": {
          "ref": "635070b0-3fbe-4f13-a4f7-68688e480657",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3aaaae2d-418d-445c-bcc4-f20a9f03ec76"
        },
        "item": {
          "id": "54555d00-edb4-4497-b2bd-c5f948fa96f4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fc93e143-7d0f-4059-9b62-dd12201bb8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63742805-139e-46ff-a12d-17612b2ed96a",
        "cursor": {
          "ref": "8e623e1c-f38d-4d9b-8143-ce1f3dadc495",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5eae590b-4866-4e41-9e1a-242bdcf2f7ba"
        },
        "item": {
          "id": "63742805-139e-46ff-a12d-17612b2ed96a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1cb88086-2ec7-4924-b35b-8b6a3b7acd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3126527-dfe2-4d39-868e-6853c0f918a2",
        "cursor": {
          "ref": "c4a1174f-512c-474f-907b-6be6a588c03a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "50250f3c-afa3-45cf-a486-661597b58554"
        },
        "item": {
          "id": "f3126527-dfe2-4d39-868e-6853c0f918a2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "047cd108-ba3a-43b8-857d-9d84998967d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5b02b3-13a8-4510-89b8-68845bba5193",
        "cursor": {
          "ref": "fc054b14-a6c5-403f-a519-920a84c5c204",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "97fd8fb3-7214-4469-a4b6-84878c831e6d"
        },
        "item": {
          "id": "de5b02b3-13a8-4510-89b8-68845bba5193",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7a4e6330-3750-4711-84d1-cf5efda58442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6efe57-0005-4b27-b25f-7bcb5a42487e",
        "cursor": {
          "ref": "e9f66a61-4b8a-4d34-a738-a71309e9927a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "20c66862-5582-4960-a191-7eb50209d55e"
        },
        "item": {
          "id": "8a6efe57-0005-4b27-b25f-7bcb5a42487e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "34ccce60-420d-4981-bacb-5f3897b483c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c897b954-195a-4724-9ff4-6219754fac61",
        "cursor": {
          "ref": "46ce8be2-15fd-43d9-9b86-5ca5461084e9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "69685a55-6e2b-43c4-8968-135089f0b770"
        },
        "item": {
          "id": "c897b954-195a-4724-9ff4-6219754fac61",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ed1180ce-4e2b-4ff8-9fb1-e4d23b6a05ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9a1dcf-8044-47e3-97c9-f97a3417a21a",
        "cursor": {
          "ref": "84d43154-03d8-46ff-9e04-d2fe35766833",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cbf12b6e-41cc-4b74-9f7e-1a19f14ed052"
        },
        "item": {
          "id": "0b9a1dcf-8044-47e3-97c9-f97a3417a21a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ba6967b-c956-44c5-bf00-4cc17d33389c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6c8a6b-69ff-4783-9840-70f61937b960",
        "cursor": {
          "ref": "9d051ec4-ca9e-49a9-8126-262d610072d6",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5d4d1b96-fe35-44ab-9497-adf132ae44bf"
        },
        "item": {
          "id": "3c6c8a6b-69ff-4783-9840-70f61937b960",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aa9fd363-97e9-4768-bfaa-9191eb15da49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7380e365-dc73-4f50-8a88-9f58f969e9d8",
        "cursor": {
          "ref": "b9ee6088-63c7-4f3a-9dfc-28d280d46b98",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "54c7390f-6286-405e-888c-767526790268"
        },
        "item": {
          "id": "7380e365-dc73-4f50-8a88-9f58f969e9d8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fcb0c5f4-9f3d-4470-bafe-3d3c4adac639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5da219d-e3bd-4599-9860-4be2a8f71bad",
        "cursor": {
          "ref": "b4fd642d-7db8-419b-9fd5-79d8eaae00e4",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2a2bbff7-0205-417a-a940-8764255786d0"
        },
        "item": {
          "id": "b5da219d-e3bd-4599-9860-4be2a8f71bad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "492bde16-c014-4fe8-8d3c-9950af24ffd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafe4725-2125-4c4b-b24b-756d7d9c20e3",
        "cursor": {
          "ref": "bbb8fd3a-3240-4ef2-b7d3-f90a37d939c9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8d7f0aa3-b5f9-4b61-9226-536fcccd4466"
        },
        "item": {
          "id": "dafe4725-2125-4c4b-b24b-756d7d9c20e3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "29a941f4-6a42-4e55-ac5d-3a8cb835652d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aec1f5-6cdc-4471-9f9b-d0f733605a49",
        "cursor": {
          "ref": "56bb7791-0c21-4fff-86be-0775ab699e0d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f824dc5b-9c91-4e34-98e0-0b5faec9f0e5"
        },
        "item": {
          "id": "a9aec1f5-6cdc-4471-9f9b-d0f733605a49",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ee08f70a-d3a0-486a-8653-a9d9e7824314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe815fa1-aa5c-495d-be94-a1f36314a83a",
        "cursor": {
          "ref": "a2b2cf6a-9a33-41a7-809b-93ba5e713590",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e19f3206-1571-4b89-9c39-c72466036aff"
        },
        "item": {
          "id": "fe815fa1-aa5c-495d-be94-a1f36314a83a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e2ad549b-b64b-4d30-9d00-e5489d5ea7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6113e877-b335-48f9-8fef-c9fa8f1b6924",
        "cursor": {
          "ref": "2dc98c37-a627-4922-8991-cda055b930e7",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "41bcf206-4bfd-4e3d-9e2e-006427fef4ab"
        },
        "item": {
          "id": "6113e877-b335-48f9-8fef-c9fa8f1b6924",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b479056b-8ede-4d57-8697-bf1e092ac864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea35ab8c-4dec-4984-8a34-83dcf0daf3f0",
        "cursor": {
          "ref": "44421636-8d55-49db-b135-40401a8ab9a9",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dd4d32f9-a8dc-4460-9228-ee67e9f57019"
        },
        "item": {
          "id": "ea35ab8c-4dec-4984-8a34-83dcf0daf3f0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f110a0eb-525a-495d-a48e-c1dbe0e26cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b79669-cb5c-4348-85e3-34df50fe4f6a",
        "cursor": {
          "ref": "dd92a8d0-8545-4991-9839-b5097a51082c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "148dc25d-1eb8-4e7f-8945-bff0866a9109"
        },
        "item": {
          "id": "29b79669-cb5c-4348-85e3-34df50fe4f6a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5c074cc5-c09e-4aa1-9457-abdff1d04d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aeb786-4b3e-4c1b-a3cd-a8f8438b0091",
        "cursor": {
          "ref": "d03eeb7c-29f2-49b1-ad06-2a56954e219b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1a6607a3-6984-416c-97a7-23dbb43c9484"
        },
        "item": {
          "id": "40aeb786-4b3e-4c1b-a3cd-a8f8438b0091",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f629ac6f-59ca-4eca-b80b-c949a00037b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3292a004-c72a-4265-bbac-845d308d324b",
        "cursor": {
          "ref": "9228b033-19a0-4658-b601-2814c19df0db",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9662b3ae-7e65-4b86-90b5-91fbaff8dee4"
        },
        "item": {
          "id": "3292a004-c72a-4265-bbac-845d308d324b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8907ff68-e8bf-484e-ba59-5754e168a9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b3818e-4ecd-4788-8521-e91c8170c6e7",
        "cursor": {
          "ref": "ad73c60c-f0ed-4fd9-8874-4e149ccf0f6a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e4e51447-c0c0-44a9-965a-d6dc51610fdb"
        },
        "item": {
          "id": "26b3818e-4ecd-4788-8521-e91c8170c6e7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7bb04c9a-6051-4c35-99d6-354662bb71d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fd2c8d-2ced-47b0-b07b-64fb53ae85c5",
        "cursor": {
          "ref": "29a00164-c3d3-45b2-ad6d-c50cfb5e8021",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "725e6d05-01b0-48fc-953a-75a37edb7988"
        },
        "item": {
          "id": "84fd2c8d-2ced-47b0-b07b-64fb53ae85c5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d6329819-99f0-497b-afd9-13477d41ee88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c7723e-18e7-4f76-b262-8de3f24e594b",
        "cursor": {
          "ref": "815fef16-f54a-467c-9dd6-ed5693711c82",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5428ebf4-922f-43f7-9ee0-acc35cd8388f"
        },
        "item": {
          "id": "e9c7723e-18e7-4f76-b262-8de3f24e594b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8cc065f6-3c13-4e49-9995-4e8153ec2583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0499046-25f2-4b95-b910-ce0de9d2b560",
        "cursor": {
          "ref": "0d909f4b-2551-4972-8af4-59542d47331c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fb7ae757-7f5e-48ef-bab3-a828d9826e23"
        },
        "item": {
          "id": "a0499046-25f2-4b95-b910-ce0de9d2b560",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "57cbe77e-3c03-4059-b52d-a3dc1eb99c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af51b09-4376-4a81-baa5-e1e6da074cd3",
        "cursor": {
          "ref": "cb1bc54c-95b4-4447-9a31-fa4cbe55383b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a5126975-b8ea-4095-9fb1-7b9c4130dfb4"
        },
        "item": {
          "id": "8af51b09-4376-4a81-baa5-e1e6da074cd3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f84a958b-2696-4db0-ad20-4b2462d949ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4969cd-9660-43be-9a95-8bcdcf47982b",
        "cursor": {
          "ref": "eb430dc7-40aa-46c5-acf8-e5596b5766d0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1734fd82-afac-44e0-a02f-a4a9a2302c80"
        },
        "item": {
          "id": "6b4969cd-9660-43be-9a95-8bcdcf47982b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f548559e-d99d-4731-87a5-4c7542ab495a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af3f9ef-e9a5-47f2-852f-5343619a7c9b",
        "cursor": {
          "ref": "2d635876-d09f-4f9f-a70b-7f6c7f697a79",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "09414c6b-76f8-4843-b409-93d3745eb25e"
        },
        "item": {
          "id": "4af3f9ef-e9a5-47f2-852f-5343619a7c9b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3f3d3797-431f-478e-a1cb-ebd04985352d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9807953f-6463-4a7b-a67b-86fe189edcdd",
        "cursor": {
          "ref": "a6cdb9e9-c645-4920-8ae4-c6a6c97c0489",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dd0b2a58-3735-4283-b0fd-8eedfa53865e"
        },
        "item": {
          "id": "9807953f-6463-4a7b-a67b-86fe189edcdd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ed84d096-12f2-42c5-87ab-17b7ab9fe404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737ba1a3-2d5a-4039-b2f3-bd1c030c55e8",
        "cursor": {
          "ref": "e5e5728e-eaaf-43db-ac1e-71514d081c3e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f9614ed3-6256-450a-8602-2b46b4dbd1e7"
        },
        "item": {
          "id": "737ba1a3-2d5a-4039-b2f3-bd1c030c55e8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4943f940-b49c-412d-a062-3398ebd5f579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1b65d7-7a37-4733-b08c-eabd46247c54",
        "cursor": {
          "ref": "2edb050e-0312-4ca7-9d3b-3450a6c8ba9d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "617dd481-e96a-428c-96d0-744716fc1c63"
        },
        "item": {
          "id": "fa1b65d7-7a37-4733-b08c-eabd46247c54",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "97ed4535-6c90-414c-9d75-0439eb9da64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c76b9b-e3e6-40d0-aaad-61e13eb9ca54",
        "cursor": {
          "ref": "5efb4cff-b510-4bc5-ae3e-61918054e51d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cc2c52cb-d0b2-443c-a25c-29136e70fc40"
        },
        "item": {
          "id": "23c76b9b-e3e6-40d0-aaad-61e13eb9ca54",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "61619664-5ae3-4b3a-8f90-9929e28daffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a3d4a7-6c25-45d6-959f-95d339171865",
        "cursor": {
          "ref": "4df38f7d-1bf9-4152-ad50-e5ec5e20ad5c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "54338cbb-31ee-4575-9ccf-ee215faa25bc"
        },
        "item": {
          "id": "57a3d4a7-6c25-45d6-959f-95d339171865",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c3596439-941c-4d6f-aa39-174d1c0f0ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecd4315-59fc-4c37-b689-c0dc2b96b5b5",
        "cursor": {
          "ref": "ebfbc4ef-2995-4aae-81e6-2a353089e59d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1b207263-2e67-407e-8fb9-8deaf8d29794"
        },
        "item": {
          "id": "1ecd4315-59fc-4c37-b689-c0dc2b96b5b5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9146279a-e71f-46a9-abb7-ba4f132e9cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d10364b-50a4-4694-97e6-c5d438805545",
        "cursor": {
          "ref": "096cf0f7-a47d-4bee-9612-c7481eb0cac6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8dd884f0-1355-465e-95cb-dbcc21e88a30"
        },
        "item": {
          "id": "0d10364b-50a4-4694-97e6-c5d438805545",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "45b6778c-352f-4541-a6cf-97b2e230bf7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d628eaa1-2a4c-4794-b84e-b4ff994e4f0c",
        "cursor": {
          "ref": "9400e4d5-7dd9-46eb-bd55-c319477d6d5d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a56ee722-cec2-42bc-8557-adf7254889f6"
        },
        "item": {
          "id": "d628eaa1-2a4c-4794-b84e-b4ff994e4f0c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "356e96e3-a4e9-41c3-a212-878606a03ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93de1c0d-50d6-4b2f-ae79-52356fdd85f7",
        "cursor": {
          "ref": "b303a3d4-bc97-4d17-a528-472a921ae410",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "eeefc2da-e211-499b-849c-c1d9be5fed2e"
        },
        "item": {
          "id": "93de1c0d-50d6-4b2f-ae79-52356fdd85f7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1687516f-2756-429d-879b-198c54f6498d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467df555-cf56-440d-a243-1f24dd4607f2",
        "cursor": {
          "ref": "cb7ebed2-c6ec-4865-982d-40c18dbc5d99",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "53bab842-933a-432c-aae8-1ffaf73f4723"
        },
        "item": {
          "id": "467df555-cf56-440d-a243-1f24dd4607f2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "58483f51-40a2-4485-9ea0-e13a0bd3d327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae95ec3-e469-4171-b143-7538a0b7fa3f",
        "cursor": {
          "ref": "27d2f9b9-a26e-4ef7-912c-ef6861f5cdb5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d2e1de40-cbf2-498f-bb66-fb46eef57a74"
        },
        "item": {
          "id": "9ae95ec3-e469-4171-b143-7538a0b7fa3f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "67d9ae0c-31ab-4b43-b303-5d237003089e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f6946a-fb04-4f50-b379-62d052252bcd",
        "cursor": {
          "ref": "a962c0dc-e4a3-4546-8dab-36d81645cf7b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e46d2953-ef8f-4226-8a69-af4a19c9bc5d"
        },
        "item": {
          "id": "63f6946a-fb04-4f50-b379-62d052252bcd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e7a19fff-88d8-4a41-b2dd-fc950f836238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d6f82c-bfb6-461f-be4f-e24e51da9319",
        "cursor": {
          "ref": "9c7ac92e-69ed-487c-8cf6-ca0a7d83c0be",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "97d727a5-bc4a-4c63-b6a5-d21b4bd6a09a"
        },
        "item": {
          "id": "b2d6f82c-bfb6-461f-be4f-e24e51da9319",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ae00072b-ea2d-4f0c-bd85-080fbac2f48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f05c9e4-45dd-4c03-b437-ae42f06604b8",
        "cursor": {
          "ref": "17387f8b-5c44-4d49-8c69-cab225a87518",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "032f9e7a-07f0-4d83-8585-2bb1a5023173"
        },
        "item": {
          "id": "8f05c9e4-45dd-4c03-b437-ae42f06604b8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "31482abb-4606-406d-951c-f1be11603461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d11dadf-0c73-41a6-b3fd-6c15fea886df",
        "cursor": {
          "ref": "bf30f19d-4324-4c22-83d7-630dca59d200",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "913aa5b2-8146-4d0d-9eb1-48ac322e76f1"
        },
        "item": {
          "id": "2d11dadf-0c73-41a6-b3fd-6c15fea886df",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8afdda5f-32da-46ef-9541-7068490f937a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63082142-cdfe-4d7f-9117-84bdf2696ace",
        "cursor": {
          "ref": "8d9bf4ea-bb88-44e6-85e6-dfc77c8ceadc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7b860817-2afa-4cc7-be69-6d469dbf8ac1"
        },
        "item": {
          "id": "63082142-cdfe-4d7f-9117-84bdf2696ace",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ee01e747-3d88-4b4b-b546-62229332ec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291f71d8-d72f-4ecd-9c80-aa097338a011",
        "cursor": {
          "ref": "9d1870d4-39ab-4545-a747-3fec7e654ac5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c0b73096-d1ce-48f1-8178-ebd001896b2a"
        },
        "item": {
          "id": "291f71d8-d72f-4ecd-9c80-aa097338a011",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "30f710f4-0984-4bb0-bb57-ddf65356ee08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8298753c-ad70-40f1-83df-742d16c94429",
        "cursor": {
          "ref": "7fd6b959-4b20-4ef3-89eb-99a7a024d080",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7e9cf02e-5087-4d1f-9b95-91b32249628b"
        },
        "item": {
          "id": "8298753c-ad70-40f1-83df-742d16c94429",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f9331b43-3d30-41ec-a5d3-5a8ed1181c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dc2bb3-7378-4bbe-9015-3d39e1d1be15",
        "cursor": {
          "ref": "86bd702e-b3fb-4dd0-8512-5dfe57bf084e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3ebba175-5701-4b93-bd6e-f4f18e9bd539"
        },
        "item": {
          "id": "35dc2bb3-7378-4bbe-9015-3d39e1d1be15",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e0c49ddc-b78e-4770-b63c-16d31a5bfa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5df4c7-37c6-4766-9bb3-95a960120e92",
        "cursor": {
          "ref": "4205bb57-7c4d-4aaa-b796-387b5717ff9a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "749bf095-2647-43b0-ae01-6dfcd63cc4a3"
        },
        "item": {
          "id": "4c5df4c7-37c6-4766-9bb3-95a960120e92",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b63354fb-4fc7-4cfd-868f-88f99e51f00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d794ef5-8345-4c21-adad-822bdc5a966b",
        "cursor": {
          "ref": "d997ffe0-8c93-4bee-9793-0740ba055e94",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2beda171-9efa-4452-a453-df78141bc35d"
        },
        "item": {
          "id": "4d794ef5-8345-4c21-adad-822bdc5a966b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d79f2154-76f2-4225-b3ea-b06e5fe70d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364247aa-6a6a-4c2c-837d-b01756f4f026",
        "cursor": {
          "ref": "54d25c8c-1656-4fce-96b5-223f62e0145b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e298dacd-4376-451b-8a61-7d0b968aa664"
        },
        "item": {
          "id": "364247aa-6a6a-4c2c-837d-b01756f4f026",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "40ada1d5-3540-4273-8bee-11d0c7cd5a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6799ed8f-0963-4275-8dc1-cf1827b7bcfe",
        "cursor": {
          "ref": "8dae4b07-a086-4d1c-a9f8-66c0607f094d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0dd66f92-283d-4d37-8c8a-08ac19dad657"
        },
        "item": {
          "id": "6799ed8f-0963-4275-8dc1-cf1827b7bcfe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8a37be72-50a8-4087-b865-d67b6cc62963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08360141-fb65-41df-b13a-9673dcefe415",
        "cursor": {
          "ref": "77600a7c-670b-4bf8-8d15-4d06140e6ee7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "34fea716-998d-4f5a-afc6-abada1107c92"
        },
        "item": {
          "id": "08360141-fb65-41df-b13a-9673dcefe415",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "16c3af2d-63ee-40ce-ba24-0b6d78d8318e",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "840d9ebc-a975-4c53-a361-4fd70a7efe47",
        "cursor": {
          "ref": "bd737c7e-02d7-474a-a85c-372d068b7a07",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "32675980-42ad-46d6-9931-bc06318c5001"
        },
        "item": {
          "id": "840d9ebc-a975-4c53-a361-4fd70a7efe47",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "97caf62b-6a24-4502-93c5-c624c27ff6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2005f1a3-3583-4fc3-bed0-0e8a97772dfd",
        "cursor": {
          "ref": "07c134fd-971e-4133-992f-f31075d13ab0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d46256bc-6d66-4d4a-be94-5e3a6694f489"
        },
        "item": {
          "id": "2005f1a3-3583-4fc3-bed0-0e8a97772dfd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e4680789-1087-473e-b0e0-00b1facab088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a1359b-a167-4496-8513-0905ad550cdd",
        "cursor": {
          "ref": "43b3c59e-1f48-46d1-b411-fe008e806717",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6b0f9b59-2c0a-49c8-979f-88912cb8739a"
        },
        "item": {
          "id": "52a1359b-a167-4496-8513-0905ad550cdd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6712d678-79d9-4b51-9424-21900be23397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c909ff4-58ad-4c7f-99f1-88b726fb252c",
        "cursor": {
          "ref": "aca33857-3a5c-48d0-a270-802e73d21cc0",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6c8c4a14-11ba-476e-8191-b2cc5f062778"
        },
        "item": {
          "id": "3c909ff4-58ad-4c7f-99f1-88b726fb252c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "08910a4d-189e-4f7f-b07f-ea548575e857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd796070-e4a3-4736-9dc0-9ea335830390",
        "cursor": {
          "ref": "ebb4bcc0-452f-4630-af08-85d3dd82068a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "93920913-a911-4c6f-8080-604bd8c9ad91"
        },
        "item": {
          "id": "bd796070-e4a3-4736-9dc0-9ea335830390",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "96558744-6d66-4c2e-964e-41133dc3a308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bb959d-9139-421f-bb59-c73f8f54d330",
        "cursor": {
          "ref": "7a470cb0-403b-4760-861c-7117d8494566",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a8b9f65b-abce-4337-8664-7f3e71db2bee"
        },
        "item": {
          "id": "72bb959d-9139-421f-bb59-c73f8f54d330",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b7dfb932-9ae8-4c75-b644-ef25ddfba978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6265510f-73d1-45ba-bea3-4a9e547dd9a6",
        "cursor": {
          "ref": "2b6657ac-f2cf-42e3-9b6d-ee8b7d469b61",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b551c32e-31d5-4c29-93c1-860911b4fa06"
        },
        "item": {
          "id": "6265510f-73d1-45ba-bea3-4a9e547dd9a6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4bf8ef3f-84cf-4833-b231-6b38455aad99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80169068-f787-4432-b865-daa09fec610f",
        "cursor": {
          "ref": "c3f4182c-3583-4d3d-a58c-8444e6d72d34",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1b2db487-513b-41a4-bd01-3195dc0a6806"
        },
        "item": {
          "id": "80169068-f787-4432-b865-daa09fec610f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ffa5f31a-c74f-4ddf-ac74-79b97125bb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b40b1-a62b-4811-a7d2-a33ff9f414e6",
        "cursor": {
          "ref": "8d322936-0379-46a7-af8c-4fca62ca69a8",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "088c850e-c561-4475-9193-32f449a76922"
        },
        "item": {
          "id": "595b40b1-a62b-4811-a7d2-a33ff9f414e6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e5ad9be1-1fa8-41df-a7c7-1f76e6676972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8efb88c-b5ca-4d06-b933-e806210fac17",
        "cursor": {
          "ref": "91f5e105-cb86-4b77-9a70-d26592f487fd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "14d29b75-d132-4fe0-bf55-0dfa05768a86"
        },
        "item": {
          "id": "d8efb88c-b5ca-4d06-b933-e806210fac17",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "104e734e-1049-4b62-acfe-5613d0ed186a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78255ef-286f-4951-9b36-4f717c8c0f85",
        "cursor": {
          "ref": "3fd7ec23-d269-4879-b82e-677a13fdaf0f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "17237f8c-f17a-484d-9d6c-370a88824e18"
        },
        "item": {
          "id": "a78255ef-286f-4951-9b36-4f717c8c0f85",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6f51489d-711c-4b6f-b870-a359150cc1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cc0bd8-db1f-4b8b-a497-2a204c667b20",
        "cursor": {
          "ref": "f69625b6-d9d7-4f69-8148-a38e0ed01abd",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "053521ce-279b-4752-84f4-f92cd78c0860"
        },
        "item": {
          "id": "67cc0bd8-db1f-4b8b-a497-2a204c667b20",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "21d99e6b-81b1-4c81-a7f8-174792c49994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f700ff37-6b77-4ee8-a077-36190ba6cfd7",
        "cursor": {
          "ref": "f72a1025-5d09-4f1f-96cd-893e03834276",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9fa9c517-b770-4f24-8dbf-8c6159959a07"
        },
        "item": {
          "id": "f700ff37-6b77-4ee8-a077-36190ba6cfd7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "371d62f6-f32b-4462-b602-4ef403ef65cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf22c2b-f51f-49d0-9433-8221676cc70e",
        "cursor": {
          "ref": "684950ea-be97-4390-838b-0bdec55b7d07",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ad9da7a9-3636-4dd2-95bc-062fde460f5b"
        },
        "item": {
          "id": "8cf22c2b-f51f-49d0-9433-8221676cc70e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7c149f45-b264-43ae-aa65-918a6f8cc7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc03f2b2-6613-47cf-9f58-4f8b946f3589",
        "cursor": {
          "ref": "8b2d9952-5627-43b4-90a4-b95ca6341fc5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "970fbc73-9461-4f65-be82-d0cad06a2d79"
        },
        "item": {
          "id": "dc03f2b2-6613-47cf-9f58-4f8b946f3589",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0f52f47e-a9ba-46f4-b5ff-4d16034c89fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55b67e5-3c12-4ddb-9811-19640e4cb934",
        "cursor": {
          "ref": "f6d300bb-cb7f-47b2-8ef7-794e208a6b5f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "835ef855-0181-49a9-aa47-81bac0eb3c9c"
        },
        "item": {
          "id": "e55b67e5-3c12-4ddb-9811-19640e4cb934",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a9a0ad4f-4a30-409d-a4fb-4f8ff934e759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf66dca-5ce3-4db4-8485-fef5301b09c4",
        "cursor": {
          "ref": "f5d9e29a-b048-4294-a8bc-9ab64108fb7a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "43a92d02-695a-460a-a055-b834540bfcb1"
        },
        "item": {
          "id": "5bf66dca-5ce3-4db4-8485-fef5301b09c4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "16470fc0-fa40-43eb-9490-dc70d71959fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c9e68f-dc30-4550-b77e-195b9d9a91e4",
        "cursor": {
          "ref": "c337244f-cbb0-4539-9df3-1cbb38b3e899",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e9747345-d5fb-4047-85ec-8460661bb0f2"
        },
        "item": {
          "id": "19c9e68f-dc30-4550-b77e-195b9d9a91e4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b4bbc0b5-435c-40ef-b8ad-52980b8966a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f4a08a-088c-4c0f-bac3-368f046fa755",
        "cursor": {
          "ref": "68ed25e1-420e-4951-a262-799b04c4ab27",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "058c9494-88a1-4ff4-9a71-125f491c86d8"
        },
        "item": {
          "id": "67f4a08a-088c-4c0f-bac3-368f046fa755",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3b977761-6154-4670-942a-87db17a642d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9deab14-9135-4b17-b819-5e77dde538fb",
        "cursor": {
          "ref": "54182752-7576-442d-985e-b3300d871d9f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "abde3073-2800-4ced-8c45-48dc11f094f3"
        },
        "item": {
          "id": "d9deab14-9135-4b17-b819-5e77dde538fb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4470258d-32fd-467a-b1a7-1a1f270610f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0482f0bd-d6d4-4ebd-8d87-cb8756b9b457",
        "cursor": {
          "ref": "732f7de6-bcc0-4d56-9bc1-5092c96d3e20",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9cebca7d-9440-4ab2-a020-0fb4d284d915"
        },
        "item": {
          "id": "0482f0bd-d6d4-4ebd-8d87-cb8756b9b457",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b42ba757-c7b1-48ef-95f4-7320ac3fa5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553dc1aa-4ee0-420c-a60b-17618e7f7b0c",
        "cursor": {
          "ref": "7596229a-5dcc-4d45-b942-81c77d640fdb",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6f07dbe3-5c96-4cdd-98dd-842a5f884e8d"
        },
        "item": {
          "id": "553dc1aa-4ee0-420c-a60b-17618e7f7b0c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b7a43cef-7396-4182-8046-3be864203252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eb68dc-b481-4aa1-a5ac-ff4c6ad95e32",
        "cursor": {
          "ref": "a83a665f-ff1c-4ce7-9741-76173b2711e5",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "08dd95c9-42db-42b1-8e39-2cfc6e82337a"
        },
        "item": {
          "id": "67eb68dc-b481-4aa1-a5ac-ff4c6ad95e32",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0590e23d-56d5-40f4-8660-08136bf7fc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a5ce8f-c38b-43a8-9eab-46d4841ca335",
        "cursor": {
          "ref": "2cffff85-bae9-4aa0-8d0c-000eba4c7c97",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "597bbe4a-9477-4dd2-b23a-1dda973e9a0e"
        },
        "item": {
          "id": "a4a5ce8f-c38b-43a8-9eab-46d4841ca335",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7031fc2e-9763-4611-ba3f-64ae999283e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f414925c-3c06-4e58-a635-3e0f3f9aca90",
        "cursor": {
          "ref": "973cf462-f1b4-4b7c-b795-fd08558abf75",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "753c5fa4-658c-4b3b-90eb-d576e967479e"
        },
        "item": {
          "id": "f414925c-3c06-4e58-a635-3e0f3f9aca90",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cc1e221b-2a53-40ec-a751-e1cd5a45a027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2a1369-ef7e-4337-90df-13093b229744",
        "cursor": {
          "ref": "bced43ce-4a02-457d-ac53-4a0c4cbb40f1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d57e899b-3c10-4585-a6b8-9e239ca6883b"
        },
        "item": {
          "id": "4e2a1369-ef7e-4337-90df-13093b229744",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0ce58091-e0c7-4394-8378-7763f538cbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd4376e-fdff-46f3-95bb-eb60dda4e2ed",
        "cursor": {
          "ref": "90c33c1d-3c25-451f-b70c-44c9fdfecd59",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "392187a1-cc9e-4f7f-aa72-25905124dfc2"
        },
        "item": {
          "id": "8cd4376e-fdff-46f3-95bb-eb60dda4e2ed",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "691d8800-0706-46a4-bca1-24adb3974051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c38f448-4a54-4d24-b3a5-da6c61ec9bdc",
        "cursor": {
          "ref": "c640126a-8a1d-46f5-980b-2670d41a6e1f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9df6fb81-fab8-4fb0-b931-e1d7d6b8aba7"
        },
        "item": {
          "id": "0c38f448-4a54-4d24-b3a5-da6c61ec9bdc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5170c843-405b-4eb4-8269-ba1d39649fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49971bb-322b-4ead-805a-0d7abd0e02d7",
        "cursor": {
          "ref": "9ad0f18f-7287-470c-8d55-9f36d269fa50",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c2fa8e1b-0162-48ac-b786-56131b74abf8"
        },
        "item": {
          "id": "c49971bb-322b-4ead-805a-0d7abd0e02d7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c5d5b7f0-6c9f-4f27-b5cd-901a6df60a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2b16da-96b4-4210-a34b-4fba9f873874",
        "cursor": {
          "ref": "7f1c85d9-fc8b-4475-bedb-590048e5da09",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9eac4a57-c1c9-4cca-8b2e-67c9a7b29550"
        },
        "item": {
          "id": "ee2b16da-96b4-4210-a34b-4fba9f873874",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a728185a-0fdb-4945-ba56-c65b5d274dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8369ec2b-bdc0-4a8e-a93f-74538d021bd3",
        "cursor": {
          "ref": "20ca8060-85a9-40f2-b324-691e88f9af51",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "78d4c6a0-9862-4cc1-ba36-1870295aee0a"
        },
        "item": {
          "id": "8369ec2b-bdc0-4a8e-a93f-74538d021bd3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8ebb53a0-75c3-4973-806a-3d0ea2c183ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac4732f-d05d-4c68-ab7e-30a6ce9da931",
        "cursor": {
          "ref": "48da0913-7e7d-41b4-9c2b-11928b970768",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f94cc419-2a80-4183-b623-ac0abf0a9653"
        },
        "item": {
          "id": "bac4732f-d05d-4c68-ab7e-30a6ce9da931",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "208cc099-2103-4e88-ae82-162d017521e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb2b867-44dc-4d19-85e4-facab0678a93",
        "cursor": {
          "ref": "6fba842d-3a03-4de9-b49e-077d837437b1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ce8ea8e1-77d4-4a13-8031-85b183224e00"
        },
        "item": {
          "id": "deb2b867-44dc-4d19-85e4-facab0678a93",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fbeec4f7-2fa7-41f7-b167-4005ff489b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6c19a9-1763-48ed-a4a9-c9722838fcbd",
        "cursor": {
          "ref": "78ac1f58-d7ca-43d4-915f-f864b5e74b15",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5dc27abc-111f-4b2e-acd1-b0e910a4b5b7"
        },
        "item": {
          "id": "ca6c19a9-1763-48ed-a4a9-c9722838fcbd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "00142f59-76f8-4085-a3eb-75886756492b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f8e527-4621-4b9b-9465-d8ab3c667811",
        "cursor": {
          "ref": "df931423-dd70-47eb-b864-4a9d704a346b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2f5b3e74-bf62-4585-9f88-16d31b67b92d"
        },
        "item": {
          "id": "b5f8e527-4621-4b9b-9465-d8ab3c667811",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "28f9236b-5d62-44d2-a76f-8b66d84d31eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd0230a-9796-4df2-b0b8-ccebfb64815c",
        "cursor": {
          "ref": "78d2d2f2-e773-4fc2-bb30-add4a986f1c8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b3c24948-72f4-4ed4-86b0-52a922b59423"
        },
        "item": {
          "id": "3bd0230a-9796-4df2-b0b8-ccebfb64815c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0e2dfc57-20b2-46e3-8f64-758eee30c72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f21894f-275e-4e74-a60c-6faa3f8a2ff6",
        "cursor": {
          "ref": "612da7d8-0288-4120-8239-9c2456812eb8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2058d3dd-313b-484a-87f5-86db4d0c76b8"
        },
        "item": {
          "id": "0f21894f-275e-4e74-a60c-6faa3f8a2ff6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b80e0c09-c410-4f33-8123-5eb01f7475bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fe8b78-51b9-45e4-9209-3070401931cd",
        "cursor": {
          "ref": "b6906f53-68cb-4993-8919-1b5bf25539c1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7b01765a-c95c-45f1-b020-5e2e2f9c7d03"
        },
        "item": {
          "id": "b5fe8b78-51b9-45e4-9209-3070401931cd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1b735f0a-819e-44f2-9375-f9f6c3594931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbea1b9-9cf0-423e-bc13-f24b5d8aa53b",
        "cursor": {
          "ref": "e6035654-6540-4491-936a-1128296cbcad",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "64b251ae-a15d-40f6-992e-a1594f6820eb"
        },
        "item": {
          "id": "7cbea1b9-9cf0-423e-bc13-f24b5d8aa53b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e152a821-82c6-4d99-ad95-11e0a4db46ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaab45f2-5c36-48fa-9942-5ddbf4d2965c",
        "cursor": {
          "ref": "0a71e6df-94b5-4b7e-85a9-3d16e8a93c17",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "47aed0a5-f108-4654-bc88-0cf11c00535b"
        },
        "item": {
          "id": "eaab45f2-5c36-48fa-9942-5ddbf4d2965c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "28daac95-c5b4-4b5d-a7d0-5f7079607576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a1b285-a094-4b4d-b6a7-55e79a02df99",
        "cursor": {
          "ref": "1d485404-5edc-4317-bffa-295a7a89ef9c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cda47060-0a57-43ca-b325-e41d40834213"
        },
        "item": {
          "id": "78a1b285-a094-4b4d-b6a7-55e79a02df99",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "79bcf7e2-ce49-40dc-9e06-8633c7861fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd2d0b5-bf7f-474f-866e-2c8abddf7ba2",
        "cursor": {
          "ref": "82620d90-4cd3-49b4-bcb9-d2b8a9b908b1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ef045745-fc5b-42b0-95b5-6aea2c24269c"
        },
        "item": {
          "id": "efd2d0b5-bf7f-474f-866e-2c8abddf7ba2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "28dba6fb-a72c-45a9-8146-9eaf2a5957bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c312d2eb-8a9d-4c41-abdd-555061008cd0",
        "cursor": {
          "ref": "7ec733aa-e0c8-4f07-adf2-33222d3c4051",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "858e6649-0e8f-468a-acde-2aae38381376"
        },
        "item": {
          "id": "c312d2eb-8a9d-4c41-abdd-555061008cd0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7c142040-4eda-4bc2-9347-f69143b4516a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0daabd9-7ade-4c2c-9e36-70cdbb279b89",
        "cursor": {
          "ref": "40af95a3-ee24-4f03-bae6-9bed163e1acf",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f51672d7-3c6c-4d6e-8c25-edb24df81996"
        },
        "item": {
          "id": "d0daabd9-7ade-4c2c-9e36-70cdbb279b89",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e8f5c577-1e9d-4089-9166-1e9073fd3c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce76f48-6486-4ecd-b4fe-f550e15e2078",
        "cursor": {
          "ref": "247fdeb9-71a9-4524-8e19-df0ba9ea298f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2015eef5-06fc-42bb-b936-dc5c2ca3b054"
        },
        "item": {
          "id": "4ce76f48-6486-4ecd-b4fe-f550e15e2078",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7d67b91b-a502-4c82-9c0f-3a12c0c91b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d624a8-173f-4ded-b8bb-4e0575bfc04b",
        "cursor": {
          "ref": "59fb9c53-9816-42f3-9377-be4db55cba62",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3088abdc-d489-43cc-9de7-8777a320d0f6"
        },
        "item": {
          "id": "f1d624a8-173f-4ded-b8bb-4e0575bfc04b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f4d42468-3a6b-414c-a7bd-333e465d60d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419e9a34-9e78-42bb-a8cb-0f33a7c689f0",
        "cursor": {
          "ref": "eedc6ef3-b776-4d67-99fb-360ae1ac82e3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "83f93607-2cff-4194-ac89-f78ed6e76804"
        },
        "item": {
          "id": "419e9a34-9e78-42bb-a8cb-0f33a7c689f0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b45cb833-2824-4db2-88f9-d107fad905a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c493e329-f11c-4155-88f4-e906b8994d71",
        "cursor": {
          "ref": "144a44df-38d1-4e46-bb58-891e3a4bc79c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "24f68a5f-5ea1-45d3-86e0-8b5c897a600e"
        },
        "item": {
          "id": "c493e329-f11c-4155-88f4-e906b8994d71",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1d5a57ac-bf36-481b-8f10-b465aed3f308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671c80eb-0b01-4b73-928d-49edde706869",
        "cursor": {
          "ref": "fbf34643-f47f-47a0-963f-e14481b8453d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "53effba1-8827-49a4-8305-a19ceb1a2aa6"
        },
        "item": {
          "id": "671c80eb-0b01-4b73-928d-49edde706869",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6ffcc34d-ca77-4804-ab0c-2e302bf19f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5294ea-672b-4315-9b03-554e9a015c3f",
        "cursor": {
          "ref": "01c10a9a-8ebb-4ebb-b1e0-07c5bd28dd69",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "830d629d-fa1f-430a-9278-12a26c0f461d"
        },
        "item": {
          "id": "7b5294ea-672b-4315-9b03-554e9a015c3f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ca881194-fd68-4228-be7c-cca8f946e413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270f77d3-59e5-4ef0-bc95-6ec5e30f263a",
        "cursor": {
          "ref": "6a1b2bf8-8d65-4abe-ba1b-3a9e9317b3dd",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "64d69ffb-ee38-4f78-af64-efa52dbfde63"
        },
        "item": {
          "id": "270f77d3-59e5-4ef0-bc95-6ec5e30f263a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "91c82773-f6d6-47a9-9ad7-877f5bb32a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63912fa0-2548-4dfd-9f0a-058d248facab",
        "cursor": {
          "ref": "ef1b5091-a816-4ea6-8848-fcaf27c1ed21",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "250f0fdc-6dc2-46ff-9c98-f60a42200210"
        },
        "item": {
          "id": "63912fa0-2548-4dfd-9f0a-058d248facab",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "168f5e42-21ea-425c-8d43-d2fbeec07336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242f97b0-399d-4e3b-bcf1-8b0c84d89fb5",
        "cursor": {
          "ref": "f969704c-ab60-4798-9080-997deb20be2d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b8a6a2a5-fd26-4b56-9c4d-3d3aa9c5e2f5"
        },
        "item": {
          "id": "242f97b0-399d-4e3b-bcf1-8b0c84d89fb5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0f0fcc29-ea8c-4255-b8e5-1e868871a47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9049b5-3e85-4d44-b87d-f771edbc95a2",
        "cursor": {
          "ref": "c049c158-5e29-4d51-8737-93a1259c3c61",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "177c37cb-c93d-4bb7-bc7b-5e37fddc65f5"
        },
        "item": {
          "id": "be9049b5-3e85-4d44-b87d-f771edbc95a2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8fb18946-e680-4827-8be2-89c3f4342e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c16be3-f7b1-448c-bd00-9577b25bb686",
        "cursor": {
          "ref": "4e56c17c-904b-45c9-b1ee-8b15340e5dab",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "59bed053-41d4-4160-aa4d-0f5d87078a57"
        },
        "item": {
          "id": "72c16be3-f7b1-448c-bd00-9577b25bb686",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "01b5ec6d-cfab-4820-a06d-db53cc92a734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57000718-e749-47bd-b72f-78b1b35b05d0",
        "cursor": {
          "ref": "a2cdc386-cef8-4059-a88e-e9a668b526a7",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4c92f62d-acae-4ac0-b30d-c3ca8dba10f9"
        },
        "item": {
          "id": "57000718-e749-47bd-b72f-78b1b35b05d0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c8f48edb-8205-4acf-a6fa-a40dda3e09c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b74acd8-cda3-4bd5-8357-2eaedbca3938",
        "cursor": {
          "ref": "3646d4a2-0b92-4882-84d6-d03ed967340b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8c0c8ad3-0a00-48fc-aee5-36aa6e174029"
        },
        "item": {
          "id": "2b74acd8-cda3-4bd5-8357-2eaedbca3938",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "823987de-d039-418b-82ce-19f7abaf70ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9ef390-777f-45d6-8852-28ac1e22b459",
        "cursor": {
          "ref": "66e5630b-1edc-40a5-bf9e-ccd1795817fd",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a22f4dcc-133f-4831-bdba-78bc9bb119d0"
        },
        "item": {
          "id": "ab9ef390-777f-45d6-8852-28ac1e22b459",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ff6f4133-4967-4e45-9dce-aead40db263e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e0d11b-089f-4c79-9777-2877f2b139b5",
        "cursor": {
          "ref": "29a25491-5c6f-4da8-b7e8-cdd68e961164",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "860404b7-ae8e-42d3-9945-c7b6b1f776da"
        },
        "item": {
          "id": "d1e0d11b-089f-4c79-9777-2877f2b139b5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3253307b-8fec-4de0-893d-2e4ccbdcda46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e5beaa-7b25-44d7-a9ed-f9354632d39a",
        "cursor": {
          "ref": "c514583e-d820-46a9-aa74-0c418567042a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "90856db7-7912-4739-896e-8dc751eb6da8"
        },
        "item": {
          "id": "93e5beaa-7b25-44d7-a9ed-f9354632d39a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7823f1f7-4020-4897-9047-93bda4855a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86166512-0fc8-4bd5-bf62-ee855f408378",
        "cursor": {
          "ref": "261eda7e-9d7b-4f33-ac20-d093ef9aba3a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "606b31b0-6c6b-4100-b84a-d0ca96ff27bf"
        },
        "item": {
          "id": "86166512-0fc8-4bd5-bf62-ee855f408378",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "435cbb7e-967c-4a7f-8477-98c1d5872e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79d3e33-7693-4652-a9c1-31ecdef4db76",
        "cursor": {
          "ref": "11348c4a-0765-4498-983e-8971a0d5ce2c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6ff6d99d-71fa-42b7-b176-b88517ad562c"
        },
        "item": {
          "id": "c79d3e33-7693-4652-a9c1-31ecdef4db76",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "455ec55c-df7a-45f2-b903-5b1e905b6002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb35a6c-efea-4eb1-b57c-4cb4304db7ca",
        "cursor": {
          "ref": "58aceaa8-d7af-4fc8-b2d2-17186ae9b120",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0d7dfe1f-6896-44de-a559-7680a32cb541"
        },
        "item": {
          "id": "0bb35a6c-efea-4eb1-b57c-4cb4304db7ca",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "35420b6c-1da7-44da-a1b2-ba093edd7f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0393bffd-775c-453b-9566-7079acf05194",
        "cursor": {
          "ref": "a1466afa-41d2-4a93-b9df-f9f4a99b0755",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a4029cdf-256a-4046-959f-73b2e934314d"
        },
        "item": {
          "id": "0393bffd-775c-453b-9566-7079acf05194",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6d4855d2-9ff2-4de8-978f-196a7326bda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8f7546-05b7-4ce3-bcfc-95f465eb5fbe",
        "cursor": {
          "ref": "43e16e1e-71d2-40de-a8cb-2fdd361e9fd4",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "18e9a887-093d-45da-ad8b-8235dd353636"
        },
        "item": {
          "id": "5e8f7546-05b7-4ce3-bcfc-95f465eb5fbe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c9a29c52-bb98-40f1-9f8e-a124aa2d8af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f6dbd1-08dc-4a99-9687-05ee1569c126",
        "cursor": {
          "ref": "8f4c1b00-9072-42f7-8549-d97806ba236b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "74570363-3e27-485a-93f4-21ad880a11a8"
        },
        "item": {
          "id": "a6f6dbd1-08dc-4a99-9687-05ee1569c126",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9d6c7964-b553-4aeb-8453-c5435bd400d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4328ddd1-c2f3-49f6-806d-14e802d7e18a",
        "cursor": {
          "ref": "8c74ecdd-9b8f-4ad6-a3ac-8d3d6666d0dd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f81b365b-a6fd-4d24-bfb6-d37886b6907a"
        },
        "item": {
          "id": "4328ddd1-c2f3-49f6-806d-14e802d7e18a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cac9af46-b25f-441c-938d-1fa2ffe82a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53312c3d-256f-4921-bc7a-f9e4aad9b7cd",
        "cursor": {
          "ref": "44d5ae9a-1854-467b-9823-0151baaca95c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "32486959-545d-4459-9c8d-221c1c9acc6e"
        },
        "item": {
          "id": "53312c3d-256f-4921-bc7a-f9e4aad9b7cd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "70de8e27-3110-4fdd-b482-13c76005d442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d084e4f6-5c57-4de4-8c46-b8b7762f7c96",
        "cursor": {
          "ref": "a2378c54-535b-4b77-8723-08055a0f216d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "16403f60-361f-43a8-bb54-ceaea32d02b3"
        },
        "item": {
          "id": "d084e4f6-5c57-4de4-8c46-b8b7762f7c96",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "81aae3ab-03ef-48a2-94c7-a9347f46f096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f009529c-4d66-4373-ba3c-42afcc0a4531",
        "cursor": {
          "ref": "6b74b102-24f4-43c8-b07a-8751f41d7026",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1564bbba-1228-4061-a884-7dda62340e16"
        },
        "item": {
          "id": "f009529c-4d66-4373-ba3c-42afcc0a4531",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "46439c73-d349-4d27-8565-dd66f9a12f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30092cc3-9944-4fbb-89e4-32385cb6a0c0",
        "cursor": {
          "ref": "831a27b8-2c5e-4808-9531-9fcb9086d769",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "87ed2cd0-d749-43aa-bff7-52b3c2884503"
        },
        "item": {
          "id": "30092cc3-9944-4fbb-89e4-32385cb6a0c0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "236a6590-4d47-46d2-89cd-ec8a2c5e64bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b94579-7aa7-42f6-927b-4f0f225c8310",
        "cursor": {
          "ref": "2d5b3c33-b32a-4577-ad86-178a9340dfc6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5d36a3fa-8f60-4318-9791-2c1e4822550c"
        },
        "item": {
          "id": "e2b94579-7aa7-42f6-927b-4f0f225c8310",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3764467f-b98c-49c8-b6de-341789e5d4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b52fb8-8890-40f8-9653-33b0d16f9a48",
        "cursor": {
          "ref": "43c33ec0-0f4c-4fb3-92ca-02a6a77052bc",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "874d8fa7-8a4c-4bbe-bf81-8976043a3652"
        },
        "item": {
          "id": "80b52fb8-8890-40f8-9653-33b0d16f9a48",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8c796f0e-a890-4af4-94fd-546624c2911a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92036ca-7e3e-41e4-868a-1412e07d77b8",
        "cursor": {
          "ref": "ef1b1706-b4ab-4433-8e1e-07c50378afef",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0cb77e30-385d-4135-9cd2-717e63384bd1"
        },
        "item": {
          "id": "e92036ca-7e3e-41e4-868a-1412e07d77b8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "77b50176-209c-4be1-9be3-a0d0c4502316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d100c1ee-0d48-4f7e-8dec-9eb6ae0c0554",
        "cursor": {
          "ref": "6492afb3-4f1c-447f-aaae-24611584f774",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9ccd1afc-ab60-4144-a79f-7bbcd1486af9"
        },
        "item": {
          "id": "d100c1ee-0d48-4f7e-8dec-9eb6ae0c0554",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fbd20632-3a11-4fb0-a99c-70a50e845bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e71730-ac1d-4fbc-a61e-eb4e752e282a",
        "cursor": {
          "ref": "81c76957-295d-4c7f-b029-4501b1cec02d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9244b05a-b8a9-4f9c-a635-81e040f4d115"
        },
        "item": {
          "id": "07e71730-ac1d-4fbc-a61e-eb4e752e282a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9a1e3237-e7a3-4de2-827e-f93c5f5bf52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e0fb39-a006-496b-8ada-eea11cdfd901",
        "cursor": {
          "ref": "e970b402-73bf-41e0-a89e-2634a971ec2c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d8cb1af2-057e-4a9c-911d-09078532be66"
        },
        "item": {
          "id": "76e0fb39-a006-496b-8ada-eea11cdfd901",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bb68bd56-ed07-4bfe-ae00-3a57951eecd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ff439c-5dd7-4d03-962c-c14113077904",
        "cursor": {
          "ref": "33712b6d-e565-4c3c-8574-e85a2e52945c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b6564d7b-3371-4e85-a085-433e36329927"
        },
        "item": {
          "id": "c7ff439c-5dd7-4d03-962c-c14113077904",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e3eddc7b-6acf-4493-9b62-b753e6e360e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d889d312-5ee9-4a4c-9a85-3b0dfd851bb6",
        "cursor": {
          "ref": "4364c97e-3cb5-428e-a8b6-44af419f729f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "105889af-4e50-4898-b189-c14cb4aae6d9"
        },
        "item": {
          "id": "d889d312-5ee9-4a4c-9a85-3b0dfd851bb6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9a05a6c9-25f4-4491-b574-19e06fe32bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563238bf-32d5-4ab9-baec-f0e94a42808a",
        "cursor": {
          "ref": "387864ca-f1e9-4db2-ac03-b57c654df6d1",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6712d910-847b-4ce4-adb3-a5c01f55fad7"
        },
        "item": {
          "id": "563238bf-32d5-4ab9-baec-f0e94a42808a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8ca8d048-54bc-4c90-b3f2-018957e419a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fde7804-81cd-425b-bf24-834a2731680a",
        "cursor": {
          "ref": "c9d8abfa-c269-4882-b8f9-c9c50897e7b3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "abe90d99-913e-43a0-a989-548b6c2fcbe9"
        },
        "item": {
          "id": "6fde7804-81cd-425b-bf24-834a2731680a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0c0ab2d0-b66d-4562-80d2-38d71d5d3001",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf7d7be-a50b-4974-a5e1-db959a57105d",
        "cursor": {
          "ref": "6201d1a8-0b27-4b1a-9921-7d3e274c610d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "12261c72-53ee-47dc-b1dc-91f7126b3a14"
        },
        "item": {
          "id": "cbf7d7be-a50b-4974-a5e1-db959a57105d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "746cf40d-e6f1-4e15-8311-d804b99e0e73",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8ca607-b50d-4f9d-8baf-8d1629643d4e",
        "cursor": {
          "ref": "310a3eca-aa73-4c4f-b34f-f8bda7c3a7c3",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "15bbafb4-113a-4244-98f9-e45cfe1c5d95"
        },
        "item": {
          "id": "fa8ca607-b50d-4f9d-8baf-8d1629643d4e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4f874216-a969-4cb0-b042-d92685836fcf",
          "status": "OK",
          "code": 200,
          "responseTime": 2391,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "561c866d-104c-4b64-bee6-a3608c9ccddc",
        "cursor": {
          "ref": "ed9bc8d5-44f4-49b2-b786-baf9bba20215",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9a18d879-a642-4a9b-bd73-76028aab9cfe"
        },
        "item": {
          "id": "561c866d-104c-4b64-bee6-a3608c9ccddc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f6a420e9-a50d-4401-80bf-aa9b899c260d",
          "status": "OK",
          "code": 200,
          "responseTime": 3353,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d85d7a6-6eb3-4b96-9201-40437338a547",
        "cursor": {
          "ref": "b60e88fc-4af8-4db7-83a8-546468cce887",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "992d3290-0145-4bb8-bb63-3c87372f1a9b"
        },
        "item": {
          "id": "5d85d7a6-6eb3-4b96-9201-40437338a547",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "215aa5e5-a461-4688-962b-6a8c3df4a0e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d85d7a6-6eb3-4b96-9201-40437338a547",
        "cursor": {
          "ref": "b60e88fc-4af8-4db7-83a8-546468cce887",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "992d3290-0145-4bb8-bb63-3c87372f1a9b"
        },
        "item": {
          "id": "5d85d7a6-6eb3-4b96-9201-40437338a547",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "215aa5e5-a461-4688-962b-6a8c3df4a0e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ce80bb-6a5f-4b21-82c1-710e791a8aaf",
        "cursor": {
          "ref": "9720205b-8800-4f42-9c4d-0f0ab4c6be82",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "29818ac8-1061-440e-a49c-290a8214d42e"
        },
        "item": {
          "id": "71ce80bb-6a5f-4b21-82c1-710e791a8aaf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ad9d1bdd-f2ad-4b19-a99f-73dae8173941",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a61ed3a-cda5-4d57-bcab-34dded6545e9",
        "cursor": {
          "ref": "13334f01-911e-4f2d-92db-30cf7fc786db",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b8c31775-da55-4d05-abcc-daf6996b9665"
        },
        "item": {
          "id": "3a61ed3a-cda5-4d57-bcab-34dded6545e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c7d52311-0ab1-42e2-b22b-4d79a28a16be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}