{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cb6be740-5735-4dbb-8ea3-92ab5ca73658",
        "name": "Clear Cache",
        "item": [
          {
            "id": "18506048-fc68-4996-8848-47534e0971cb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2504bc65-fca1-463f-bdd3-23bc4e1ea341",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4137c1fa-535b-4605-a6e4-8fd3b9aae8bd"
                }
              }
            ]
          },
          {
            "id": "574ccf02-d716-471f-8d00-27eb73a1d8b7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ba3fe57-b8a3-4177-a174-ff987dfc7494",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75f31234-53d8-4c6e-8ddb-1c2946e0845a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3bbd038c-6844-459b-a172-e19cbbfd2c2d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dcd4dfcd-bb09-44e2-8626-cd4bad6a0e1e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e97e1eeb-4c06-4731-b2fe-653bfc20057e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3d07a34-751a-4f99-89f4-7dbe0bc7cb0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11ba0471-7d6f-4891-8a0c-85b26895c2b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5db2cb83-775a-4ea6-aa98-5fcca2f9bc32",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a25f1bd-235b-4b83-b87a-65fd29738e6c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b6a2e34b-83d3-493a-acff-104420a80320",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08a94765-fc81-42eb-bda8-5f4ccde2c1d8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f49398ae-7fa3-484a-bb3e-d5d1e9af2db6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4e9e6a2c-0068-49a2-bd42-01c84f8e2c6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "563fd239-ba18-4d47-acf0-22cbff1bef9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5224e3c9-7d36-4fec-a8c4-79b46767ade0"
            }
          }
        ]
      },
      {
        "id": "5ac6e441-42bf-4233-b7a7-4e71f6c843dd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4ed582be-6544-4857-bb4f-4cdab1b74ec2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5dfe25a-879e-4ded-b44b-b08ac01b4e54",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "703926b3-f30d-4cc9-8289-19ad92053957",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49496d74-da26-4bef-ba13-262c8712a159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4e03731-afb3-41c9-b5b8-517c402accf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba971d36-18cd-4096-8b37-f84f5f463957",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490c8d25-dd1a-4c5b-b5bb-3a31a6ef657c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ce5439b-5f70-4c48-9a02-ee959138d984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6665610f-ce26-4c40-ad2d-5426cc41c02f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6da40d6-57e3-4d68-8fe4-aa06d690052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c39091b-0adf-4b3f-9777-d3f980ca9472"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e69a96b7-6943-4b8c-9b4f-8db3931e265e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f22301e7-5bb2-4dc8-bc65-d819941e9c23",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a034117-6d22-4a27-a774-06b0d42d5775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbb90323-eace-4a13-9240-22dc1ad75809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676cbc98-8b92-489f-9ac2-5bce9b918db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cb91e8-6237-4894-ab8a-551330a8a119"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0f177d5f-2c79-4ab4-b987-611f22677534",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93b167d6-0d96-4b1c-a47e-4f811118394c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "508fbd35-768e-48ae-89d0-c8df92bb9d20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "58dc6924-0330-4256-bc87-9458b24f866c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56cd8fe5-224d-435a-a805-fed54120e5e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1ff237e8-8864-4e42-949e-5dba0a7e6c46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9418e517-9d22-4d34-be21-4c19fa101eb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8cb1e34-d002-4616-8e1c-433bcdf15f0f"
            }
          }
        ]
      },
      {
        "id": "1623813e-e2f3-4427-b0a4-5b6894ca1740",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4166721b-3c8c-46f6-9a05-bed2976190b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e567bc0b-15e7-49a8-8929-83ae1e938253",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e34fea23-941b-40f5-a9db-414fa7374422",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ea5996-14e5-4f6d-972c-006044c7acd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f68cea9-e5a5-4f16-9e06-f144b3f3e604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec753001-82a0-45e5-b7b1-68861ff8850d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e22e503d-400f-402b-b872-8c2c0dd551bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b9d195-0453-44da-bd8b-2d1adbe7e252",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f90f279-a05a-4bdd-a904-1aec2037a944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b726d9d-76d6-4ff2-ad91-81518155cc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c394df05-a257-456f-a213-11b3c16a5fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72a6be7d-8645-4a78-a97c-19be0b065ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10857c5f-71d7-4e23-afe4-eb9f9d662f3c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac25b8a-1c96-45b5-a58a-c6f7c3596a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354a576d-ff79-49b6-bad6-8c551647421d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eb50b6-edb6-4c19-a57f-f1b0900a9c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0683f686-8fdc-4b0b-9456-b3d483867dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a434ee-7e7e-4cd8-9c29-1059f7a023f2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11915595-8382-4e88-ae78-91988ec86720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fc6795-4cf0-404a-a425-8e68cb0d9ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa9ce25-d954-45b6-83cd-d66d2c9a5d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b598c227-3be1-4eb4-b8c8-7db5cb8d3e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94375bc8-ad4a-48ef-a4a1-1a5ff583cd5c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f1038d-60ce-4756-9528-af768ee6397d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f93dde-7f1b-4e81-b7f0-3237dc321b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bab1001-d4cb-4b03-be1e-1d9f99120781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d5b0e7b-c07e-4390-9f32-1b6f6c4c2014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fa894e-bc3b-478b-9a35-ff662349aa42",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ad1414-781d-4098-8b93-a422dd69dada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5a901c-9b0c-460e-a8ac-363db141ee74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfafb8d-ba4f-40a9-a9bb-e3f06033c5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59126731-b32b-4237-8848-656cc59bd75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f55d63-90c4-4d5b-96ce-9bac4ff2237f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e2b36a-48fb-4eee-9527-9e803c46661e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdbe2cc-fc98-433f-9df3-83451a58ad2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dada65-ba57-4b60-bf56-b96424702427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e3743bf-b8a9-4dd9-bc72-639d0df581ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90aa8ac-e2be-4bc8-bf37-e50380049431",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fa3197-ff0c-4c80-9b10-c42f5fb8903a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b51d5a-d9db-4746-9e99-31a2cf291d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488dd534-9fae-4b7c-a117-37e3ee83eaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10554322-cdb1-4cb1-aff9-15deead0cbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fff848-a362-4217-8bdf-06cc3e7d7903",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b09e3-df68-4ecd-a37d-8ba2484d9c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d9a435-b43d-4a58-b927-f4ee3e30875b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b4a4a2-3094-4081-8e04-07b03356f570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dba2214c-7a8f-413a-a43b-18ce63e35dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cd6507-25f0-4b5c-bb8b-0bb38ad00ef0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba275a4-a828-4fc4-822e-19497cc7ff88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34a4b2a-aab2-4249-ac92-854cc4bc1b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee07a730-9be3-47ae-8ae7-a79f2e732123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4276f1e-b491-4602-93f1-70181408efa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164f443f-911d-4ae3-9f81-edd9339aa75d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c690f8-0af5-4edb-8aa6-fb4cc123b406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ecba1d-2742-48e2-9c51-1404afe1d233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f30375-9472-494b-8337-eda4c9c02fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38faf974-ecb4-4326-b623-ead021581b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a4a18d-f3e5-41c2-a3b0-d9e72fe40351",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a68906d-2ebe-48fd-95b7-622d8fb8f282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93c7c59-16ee-4d1b-9ea3-50641448bf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386cae1e-5a57-4bde-9d14-b7e2e6565f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "976c94c7-5459-48b3-93a1-b5cd513a0367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43135dd4-ee9e-4b9f-b77d-1bd681e5e5e6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee33dba-1746-47c3-be5a-4d78c979a06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7091ba1f-cb05-4ad1-adc3-25b0872f75e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc8d6a1-30d3-4194-9aea-08e08b839bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62c8a456-8389-47de-8c4a-018bb75c961d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159752a9-8ad9-4792-9958-a5fe11263586",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b04a2a-f23b-45b7-8f21-7d2273ccab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a535d9bb-c806-48d1-b828-d71219abaadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4f678b-73e3-4d05-8fec-8edea1b21f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "264f7796-6135-4530-8034-4ea00ed2243b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302931f8-2353-4647-9f6d-15662763f3ef",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2114b4c2-5248-4621-b154-1c983cede410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7e9dea-aac4-4e78-a42b-50c5165d3956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bcd91d-d6cb-44c9-8f24-ef92cc2ee636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0788acc6-40c9-45fe-aa67-1fc17717e2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4686501-03a8-4fac-b76b-9211ea6b690a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3558ab-bcc2-4e87-81cc-5d7790fa8d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2bc167-b09b-4911-8b2d-2f7884f8c0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b407b7-9c65-46e0-8664-c6de74498962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b337fba-5d24-4a30-bd9e-9dc9dfe85c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d0770f-ec5f-41ae-8a75-df8c8ab13b21",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dd5ede-0da8-4ca3-bcb2-d53b54721c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390217bd-a028-45bc-bc5a-f4edded65bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baec518-ebab-4958-8184-22d0bb778006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f433c7e-fec1-481f-a188-fe5b33ec894c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae1df27-1705-4b0d-9a76-97c33a17e1da",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a144954-9410-4707-9587-12957d6363a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319cf99c-4d8e-4cf5-a48b-db2797b8fa52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77924570-5389-4a32-9dd1-f3b8d8edc282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbcdcc7-3044-4d61-a8a5-782b2cfb7a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e55615-b9a8-435f-82fe-50ae6d43e50b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157d13a5-62dd-44aa-b174-7f6d8c7c8b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff02e10-414d-4ae3-b4aa-eaab6ec68a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa894dd-c042-45be-87a3-4cb7bf7fe692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c529c7-7168-491b-92d6-5617087d4164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b8cca7-8d93-4ed6-84c3-001f21acdd4b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237c6c36-648a-42c8-8c1c-ed4b4ed526af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9652958a-e889-406c-bfa1-b0ba32808caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1c4c73-722b-4a94-ba40-0514c9972e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4540378-3845-481b-aaf5-99dcf03e13ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91303889-fef0-4362-8351-a9d5e61f5191",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8101c1b3-1e08-4ab8-b0c4-55b4dc876d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84266b1-8625-45ce-b1c2-5bef7e30d4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841ef1aa-03c1-4951-a305-6e5569aa6c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4999d963-5334-42e7-91f7-3747b653b1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0553e04f-4ad3-4dd7-a933-b360c420f721",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eea9d8-419d-4da0-bda7-a804c0697d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f149a959-3e81-4f97-b8a4-1e424dae0884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13565fe8-7700-47cf-bba8-f6b4a4197b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea23355-da87-4a33-b59c-f910e5dccade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce70b2c-0fb3-47db-9768-70f533778e04",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87e8543-8a9f-4015-9a6b-004e0bfa21b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b568b7b-033f-487b-bcce-c50c6a437756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789e7ab7-f1b9-42d2-82cb-bb1adaf018f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4b82f4-32f7-4de7-b5cc-70d371f4d5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cecec9-15eb-482d-8b13-b5f3239a40aa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06744759-9e08-4c75-aca0-be5ea03ffa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f3d338-ae6a-470c-a44b-2f24933e9ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5a28cd-cae2-46e8-8152-4c4ded531d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "def2fb98-cc82-428f-b419-8b97736ff37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9700c0c2-56dc-4b64-af15-d108990d19ef",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b08cf23-fb3a-40f4-a983-2915bf1382b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a17dd18-5833-4920-8930-a20bd5825310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76f0aff-a578-48a7-b6bc-3e9059dbe79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09656f38-e7b6-483b-a013-3c19c3092cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f24c10-28c3-4297-b33e-d9719c8ca64f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296914e0-4c8a-4388-812a-bdea1f3b63b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76007a33-a9ab-42b9-a6e1-19ee3225b3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e94b70-8173-492c-bbe5-c10d4639fd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d42f5824-9b22-4e3f-b00c-0ad041f94b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8539f2-e6ec-41dd-8b42-d38d76022ee1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b004ff2-6ec6-4369-a66f-edfa93814f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e413b9ab-3a80-4328-85e3-268453f0f08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c99902-a02f-4309-ad91-ec8668afbcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6145cb-f15f-4a0e-988d-11a22c0159ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b0afaa-c509-4df6-8663-d237b745d53f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79a7faf-717a-4938-84df-b47e9bc5f02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8b5021-78cc-487b-8be0-e83449c28f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f99c884-a577-4a6f-baec-f43838b11064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c088d3-c394-4c6c-b029-cdfcb69d4681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c490af1-16ff-42de-b12e-1953e7e349dc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92efd2b7-cadf-426a-aa4b-8d2af0bd241c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ba7b2e-e848-435d-bc77-7998a2e90dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e638533-2c8f-43bf-9ae7-55639338a31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a86097-c596-4b04-adcc-9d36d508e356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61fb900-c98f-4732-8f26-031e3d50715a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f18bb01-cd39-4732-ae65-27130230522a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac93db3b-b3a2-4040-9952-a34ba8ef519b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874ec71e-39ad-403b-9f17-06d56a143bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "92880aa1-7cf6-4bf3-b584-3e0fbfa668f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea04eb2-20a1-4caa-a232-41000d8180e4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7843c05-4c58-4f5a-a96f-7ea71d172033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b97bdd7-2aab-4249-837f-a1b6c87a88fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c016c236-7869-4cb7-8337-104cb91f9f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84c0a9d4-affb-4c7f-974f-e2edb8a6a744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e23b333-ed69-4e7c-9f37-d8c152a52f88",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261c2799-6f14-43f3-aec2-f1b8ab08dc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6423a370-0afa-41c6-a024-2eac5243d4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1ae87e-4ea6-47c3-ac4b-77f98fcaad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6760ccf-1782-4a73-b598-9feb14401295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56347bc9-3402-4440-b0f7-80299f324c16",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b6a808-5cdd-40ff-8515-fa67633e322e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab559d72-7e80-4f2d-b97d-14f4172cea43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9104a8dd-390d-476b-9121-45b41135b054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "874da25e-3d49-496d-abea-e06154e98b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18dc6e7-7841-4f97-aba8-2da051a0a116",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b306a302-fc33-4d94-896d-8411f9d0e7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5135964-d3ff-4f45-9276-c1ad85c02b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd7c275-c8ff-4746-b0b3-c2a28a81be30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "201f918e-f664-464c-9a2f-e9654f1cc563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecf4759-0eda-47ea-b56c-5a733be12d63",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755a4b8e-36fb-4f26-ba93-c5aa0d148e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66774ba-a679-493f-ba30-bec695e6b6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b8b1ac-52ac-41bc-a973-b1135f700205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "28259b22-1852-4c69-b8a8-c9c0c03f94c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c7692e-2fa6-4948-9308-643a814a4276",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3e18b1-0cb4-46d3-975b-2d48e1e42c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38794702-80fd-4edc-afe5-1335a405ae07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94842b5a-6bff-4816-b7d2-94d62987e83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a11c086c-90c1-4037-94a7-4ad530001b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceadf09f-5d2a-4551-b082-97052f9125ab",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6ae833-4ced-4332-95f4-af7899367c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3e7224-bc89-4a96-9221-8c8e26dad309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e952d683-4044-4df4-9a9e-eb22963f88cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53d28152-b917-4691-aeaf-5a71fb51cbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e265590d-ca55-42b4-980a-f968589b25b5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10847f2-955d-46b9-bb65-cd56bad019ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de83d461-fb5e-4150-8dad-03707634d33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed2d2d7-68da-49f1-883c-88988678a876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e3214b-ac78-40a9-918d-e35b458b8548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1412c44-1d9b-42a5-9b1b-cad0d3c34f43",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b287ef1-1976-41ee-9ae2-2e1745652d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c9758c-8ac5-4fa3-bfac-3b48c3827dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3755216-c3be-4deb-8ea9-33371da2f008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8866dde-a94f-4157-bbf0-8b7b8abf6391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9888e0e0-d67e-4eae-ba71-fe164df36702",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c550ad-7761-4d62-a9c9-7607e6c9cb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84756a43-3938-40e9-8b36-b8db24df8e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735faa54-a360-4a2b-81ac-2fef248008a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03e57406-b410-474a-8ed6-2602597aaeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef61e2c-702b-4ff5-8fb3-5f1472234468",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c07a89-7e6f-4535-af52-7c6e4f514afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b7a3cc-d65f-4063-b9c9-951599580897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e854e8f-5ea0-42c5-88a5-cd614406a6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83454be5-0b14-42c4-ab90-1300ecc189a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5c26d6-c1b1-4701-99d5-207ebb8219a6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaac3501-2a1b-45af-9c26-3063fef4e409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2141237-e8b4-4d44-a9bc-735d0f6dcaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26975aea-f927-46fb-ad63-5ec24624169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d76b4ef5-fe3c-4a24-8b79-e254df2ebbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad238bf-7e5d-4974-a0a9-c0cdfeee25dc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449f1207-d473-4240-b830-cedd0f99ccf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b200e8-1fdb-4ea0-9001-f6142f21b406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fc9fdc-770f-4a93-a49a-9040c2d993c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3935f0ea-2df1-49d1-9653-8b633d66bd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08688524-2adc-451d-a78a-1baf86e41557",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c886d8-f511-4ba8-a5e6-23bd32ba7b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3f702b-ce5a-48b4-9954-7a30461f9d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1668af6-7c17-4204-a6ea-f24fdc37a4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "87de00fb-c01b-4ec5-bbc9-8ebeaf4a2806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332812f0-577f-4723-93dc-7045d93565ea",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc25d08-b7e3-4c92-b0c1-ad3ff8dbb121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ed0423-ab38-45ba-a04f-270db573dcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5957d764-2258-4948-bb15-4c5ef56934b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6efd33ca-42a1-43ac-b423-c6611d80fcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa73b60-9925-4981-8d85-5b9f2b9d8154",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f33a726-2067-47bd-9265-47be97130bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534db577-d006-4866-afda-07fd982a6a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e4d79f-012c-4405-8de2-e56990fe9e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3494e5b7-63b4-42f5-8bca-97c276505397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaa241b-fde2-4e40-bbe7-1d1a9a156167",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fa1be3-c54b-4614-a28f-f783455feb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e862c87-a6a1-4009-948c-14ea1133a85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0ac027-c9b5-4767-a2e5-830defc3579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec1bbe7-1b87-48ff-956b-e4c3254ef355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccf7b83-a421-4b19-b06c-dd0a41bad387",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19250e96-e328-4237-b89a-a6f3c9f1ad9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cafa8e-65e4-48d4-976a-fb77c97c1476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac43ad1-d1c9-4535-9e19-dbc6f6952007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d934b5e-0e0d-4664-a06f-8f59c433dd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da504db0-8fa3-49a6-892a-995d9cf488dc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d9e4d5-b755-484e-a90b-422025408bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec702afd-bc37-41f1-a459-aee5d5781994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2497ce-d3bd-46d9-9355-57cf8b644112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a3c1a9-e139-4701-9f6c-b30b3ef72b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e570e22-a2e9-4981-9c39-489d3715043f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7affc4b2-d045-44f3-a4fc-b1042b0157dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa50f8ba-61c3-4b6b-8fa6-6124fde4001e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98993099-967a-4137-94f1-838a64d11157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f98a90f6-22c4-41cf-9741-78341748aff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4977b77f-3a7b-4b98-ae89-66698a2042d2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9261292-16eb-4388-85af-8bcac21a5eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f1d532-d60c-4cc3-b3aa-2209e6333f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb103c1-c85d-4d54-b269-8cd7ad323413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b66a2e-1edc-4ad1-b283-3982ab008c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69874108-8da8-403f-9459-257ac946bfa7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2050e173-2dfa-42aa-b310-3ae91b76ac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370c449a-227f-4ba0-918d-c56a955f0f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08acffc-3d1b-4472-ae5f-bcac57951e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bbcf66-1e1d-4374-8059-355b2aecef59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79973a0-b6ce-444d-902f-2d37265ac5dd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822d60aa-6d9a-481f-844a-33c018983ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8631586-61c9-49db-b19d-afecb276255c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849f50f3-95a4-4c57-95f6-b7043135634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afbbf128-d288-4125-b5c9-868c7a58ea04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54436927-3bae-4ccb-9bd4-c58325a7d032",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7781fcff-b9eb-4002-b4e2-3d0bcc21a2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36abce60-4e2f-4be1-823e-5e8d30c0cc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bf493c-ee06-4640-8b22-7f98ec21f3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "049e7bc3-7e73-49dc-9356-0cc147cddd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733114bd-89ee-4970-83c6-547e658a27b5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468a7d71-003d-4227-b7ca-d2f07439ea4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab1ca29-4c0d-4acb-a528-b3712cecee97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb52cf6-c9b1-47f8-a055-797fc19225c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "376d1374-e650-4f32-973a-1af8382c320d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf9e53b-6eb6-4895-b3ca-36a63161aabb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07e79ed-bf32-4eff-abae-e1f432c4134e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fb7134-8d44-494b-98a9-5f39b35b1cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03f59e2-47b4-4de6-9965-85de7a81b745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "91db8c85-bf94-49ee-aa35-f686ea3007de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e47dd94-3a7f-4b17-8033-ff657faa4e76",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541f836f-478b-4657-bc88-e5a9becb4e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3a3a30-5a6c-419b-bfe9-7782d2244603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda9cd07-c28d-4251-a16f-fa3887d3cef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b34b48dc-d993-4fa1-a09b-2274af8cdfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e947c299-37ba-48d5-865b-d9e9e356a9fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60da6195-1455-4a1a-80e0-809ed488b9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62794da3-db37-40b8-b07e-fcf995348f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3394b4e7-6dcc-465e-8ab4-2a82dab29086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9971c7-d0a0-46a3-a8c6-2504130bc5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f92ef65-561a-4005-815a-7cf3c93def8b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82af2fa-0774-420c-9292-853c28f5394e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a4650d-5749-4f03-b078-be9ed4a1bfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d5310d-819d-496c-988d-82ba8f7a5994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ff8303-cb49-4302-9fe6-a23183a465c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de192a9-d909-4802-9f63-fb62d19c620e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b195d64-5ca7-4413-927a-90cec43a36e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74fa7fc-3242-459e-a187-3ffc2be5ce66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e407b9cb-ff76-4140-a59d-d6f139c5a377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e05b79a3-5219-4585-bb02-437c7e384333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f603de-dd66-479b-b212-da1c1959f168",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5732dcf6-0ad7-4ebb-8496-9d52b2bb60a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f2002f-2635-418f-9814-7882d5d10a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56c5f06-961e-4279-a90b-2ae4ced3af7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7516db-3017-4790-881a-8c76893f0457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83135a8-a207-4e21-a1ae-85e0a8189054",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e3b4d8-a0be-46d5-831b-0a1461efa038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da970950-29e8-4d4f-940d-b0354d0b269e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab2c9c7-6f3e-4f1c-b8bb-2ba0f0d1680b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c54c9f8-56b3-4f08-8bde-c97c9903da1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a38c918-117a-49fe-bd1c-ce66ce50a9e8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36407e7d-3609-4c11-b2ab-c443e4839866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c662032f-8fc4-4584-99ff-5654e2de36d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a416916d-212c-4d0f-9f23-5d3e467d5659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce156af8-31b4-45f8-8fc4-742133e1e4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932a9696-0907-47d2-b034-6b534e3b1a15",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13e46b0-2bd8-41fc-a37f-b97ba0659e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f0e5f6-2f5d-4a50-abc6-3aed8dece400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf339f1-4b4d-4aa2-a3b3-8ed3b3c8dac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fd835a-628d-459d-a2a0-fa8c1cf3bf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960c4366-49cf-4360-bd68-a23ec0de3929",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01342397-6679-4920-be27-3160a637ac06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7792b5b0-445c-4808-937d-486dbee826ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226147b9-e136-444d-8fd5-fb23469ce150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "502fea3a-52d5-49f2-9155-8c25b1e40991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08b4948-771b-4141-8da0-04c299667429",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbf0131-f0f7-4d55-96c8-80b4d7c7e31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e32793-3c63-49bb-9383-7d76d7b2c3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bfde0c-b2df-4ca7-a4c6-e9cde5de5e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e98ffb4-ea7c-4381-90cc-81b96dde70a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b7fe2a-bbd7-4ef8-bba8-ef4e9fdb1ea5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3713d8-0573-44bc-9f07-d8fd047e6f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2ac2b6-3550-454e-81f3-bcbce1724e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881e471d-4271-4c5b-b98e-670ae7a88ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8413c9-6aff-4d7a-848d-109224ccd65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50af3764-14d2-4ae3-a23c-d0e0aa4f697a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dacb5af-0865-4484-a6df-b31b0ef6e330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998a8124-c56d-4e74-8125-904c1f493057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e0273f-e2c2-4383-b06b-8415a8f1726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "872ed312-9572-4b9a-b162-05253b6fb6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8c5e5d-3a7f-407d-9e09-ceb1683316f1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbdbacd-1141-49eb-9056-9aa9e38fe2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120c5cc7-602f-4df0-998f-b927134b2515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0aab65-1805-4d13-bacb-278d66397b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd41fe83-879f-4f78-b676-89df9ebc9554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb00421-f1a6-4319-b59c-eb235af54e30",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc4490e-1355-4c74-9ce1-52796baa5094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77022f5a-61de-4c74-92ed-06ea4fdec9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724a2a71-d1f1-4258-af96-a642115add6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5f5d7d-c594-4edb-993b-afd65afe82a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32935157-9383-4a0f-a7f4-b915c71f511a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c64139c-462c-4461-9068-e7a7fb5d3791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa7e097-2dee-44a3-8a62-400f15a08a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f850348-6064-4da2-947d-e4a02f78aff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e588bdaa-ca5b-439a-a791-114d22bb6634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06759f0f-ae47-4198-aa52-864247611983",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3740b532-e05f-4acd-9a4b-cdf11576cc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed962b1-86c8-424b-a665-d2302a30859c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650d2307-bcdf-4ca6-93c0-c73717ef9363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "441f7184-7e1e-4db1-b967-c081d7ecc786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347352c4-c40f-488e-b116-1be154c4421a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e96614-5a3d-4727-b4d0-7785679fd7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c28346-1726-491d-80b5-4c5ad25509d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11dbe30e-ea09-4e31-9981-24030d824e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "827da7ef-8811-4871-bd44-95dcc1defc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70340893-7068-4e9b-ad6c-6e0f3c0b13d8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d2bdd4-efe5-4159-8b33-5d529f80b474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2395547-3a7c-4da0-9f21-6993bbb59d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19773789-9edf-4e08-a4bf-f8bf17039a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1277cd8-4388-4377-84bc-ed9357c599f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c751374e-c632-4c10-a1bc-b1a958a5a52c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8980a547-ef24-48f3-b07e-75d36d39a27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc344087-a578-46e8-8812-7a6302cf078e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc77e266-910e-4d82-bdfb-0ce4dbed838f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6b7897-fb37-4095-b23d-a4bf7e0fc771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bd186b-9643-407b-9a0d-6fc348588089",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9d534b-9d59-416c-8d1a-407679aca041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db6767f-5753-48d4-b3f0-a2cb1eabc7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00254a3-f48a-4d81-810c-2cacedd2374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ccbbc7-b299-4d46-9673-c6cc85d324e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe709ed8-d010-4be6-8445-6df5342d44f0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4c5821-7b0b-4792-9a63-f7bba6ea7716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6f5b66-c88a-4f2d-a5c4-5dd5c7bd7244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b6df3b-dcc9-4e9b-b235-658ec55e53f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99dda19e-6c25-4004-9d2c-7a04348d4922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd108f1-d275-413e-b898-0e3ef7ead242",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59504a66-dd95-4886-bdae-7b478c89c798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba712559-294d-4b10-a8d2-4f2eab56e1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df95017f-74b3-4ec9-bc01-28c67bbbe5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa198924-e474-4a78-8c86-9409352a32c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f680ddd-ca12-4845-b75c-d4e0daa344c5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb738c7-6628-44b6-a8b9-1b9fd40dfd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba610a48-d16d-4429-ba09-30cd3599a125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41933d35-a731-4880-bdb6-a8875344fbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75d6958-700c-49e8-8b18-10edf0e050d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cb10a1-a520-415c-a4eb-3484f97ad3a9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78525484-a3e4-4717-ada7-2c4458465213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57d64ba-679b-4d54-88cf-f967cc5ccaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268f3d2f-266a-487f-87fc-05b98c1d1569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8d494e-d8b2-45dd-97c6-74e67fff6ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336a0e59-2483-44ca-ab40-fd93546edef3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f39ceb-5e20-4df8-a438-7e15321112a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78b2dc6-633d-4595-b83d-e352f253769c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9199bd8b-ca61-4819-8657-7e1ab68e687d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ac9b32-05eb-460f-aeac-47c9c0838ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3519db-11f4-4721-a97f-d610d03dc857",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d04acc-7a3d-46e5-87d8-2aac46af14ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868de40a-2241-4291-982f-3b4bd2d02415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72ec1db-1a62-435a-8f1f-8d0e65910b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01d847e7-8175-4bb3-a76f-79d5297d0349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8547144c-627e-481a-bba3-2b97ae2b8a18",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdee6f56-6660-4ebc-8f83-456de30abc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02f9958-76a8-42b0-ae65-f89a77c42b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a986fa33-7740-4486-b41a-99d5d2eb9e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cc35f4-cf61-4ce1-8ca8-cabd4ad6ebc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370ef7ee-b128-42a0-9a46-29dc9a649ab6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8910b0e-ef41-41ab-9fae-8de3cfffe27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f86e691-b9a6-4f2c-9bcf-6d8cddd8e708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201cd415-7148-4dda-a3bd-9d142dc632ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33363328-e259-411e-8ebe-79caf23d5a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8484c3fd-9de7-42e7-a726-971ca5bb989e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3710f279-dff5-4d0d-9f73-e1cb74dda323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af6c432-274a-420f-81b7-bf486301ee1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19674e45-1999-4dc5-b5c5-11be244ec589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07b817c6-4ae9-47dc-a24b-f1879f40fcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3335a733-dfc7-4285-95bf-dcc5671070aa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81379fd0-af07-4173-bb05-811955639be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb507ae-9a39-4b65-9251-6838de144e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d035ee-f4c5-4e43-87cb-86bc0f49dbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a959eec9-4213-4a2b-b4c5-9b745c1e05cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5705fe24-e689-49ba-8068-ada076279a6c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddbfe4d-3d4b-4230-bd97-6ed13c713867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d04975-6b34-4e46-a582-6d502a924d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6346ff7-1f8e-426e-8797-0f2a95768b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68575b70-cc50-4c18-a34c-72ec0bf390fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f863f3-ea39-4c4a-9db8-be151eb9edf7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1631b3-8719-4dfc-b2ad-ed37156994d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bc3199-4447-4188-a79d-9b9b78869f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ee2b89-bd32-4c7b-97fa-33d3ddd399dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "08387dfa-4f81-4124-a1b7-fe93fe930b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd15ab3-56c8-4b94-bb90-07ec2a24be2d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1424644-65a9-4c1b-981a-47366535ba6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0778096-e19d-4e69-a880-d0e462ca9b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddc5046-11d3-4b2e-8e66-33f56f1743e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2197521-1f72-4cee-88f1-950e1f6b76a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef1f009-fe5b-407a-a883-62fc4b4a1af2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9dcdd1-9063-4fb1-b201-ab61de9246e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1062fca5-d742-4c59-a52c-2ce8f5443dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a8d5d2-6805-42ea-8a00-e5ca5cdbb0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7eab8bf-5aca-40d8-a06c-0a006faa1840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6048f0b7-9653-48c7-a6f6-d8bbe5f80caf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04c2c11-eb90-465c-b655-70317fd90b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16636d5a-a50c-46ba-9755-9097ac904a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e99413-9d2b-4a75-a07c-2dec5747aa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "86c2eb3a-b0a4-4306-a08e-85a003b6d123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012ce83f-d8b3-44b3-9a16-da66cb5af30d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fac011d-ab44-47f5-8ee6-ce9f9d3840ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "78cbfdd9-9bff-4462-a417-b1e01d938217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806d7745-9ebc-4db1-b7b3-56395cb2ac64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "00219a8c-fe22-4485-9c47-5247b7794691"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ab29218-dabd-4cc6-b1c3-022e7acc5633",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3fd1811-0d29-479e-9826-2c6432b57aab",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea05739-49f9-43b5-9ae1-703fc572a580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d71a300-e7e0-44ad-b3f4-3eee07827d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9335669a-735c-469b-ac44-d634a94a0f39",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85c54e45-5a4d-4e20-b137-80782921dd5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57d7d38d-0e41-454c-8c9e-ba1793d0be67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4195b83-c07f-447f-9feb-1bb1dd4a1297"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d5706a3-aa28-4eea-9f2c-5e606fb0477c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba31d0a6-dc1b-4313-9c32-046984beb64d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "465d44f4-3c52-4153-aceb-6cae3bdb5279",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1a1c56b-ffa3-4299-b76d-88e69f066182"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd5650fe-bc2b-487e-b84d-918c4df03198",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ea5a807-7c8f-4b4f-a9e0-715a47346df1"
                }
              }
            ]
          },
          {
            "id": "5281c244-29af-4bac-aa19-b4ef02a18808",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a8bec87-1839-42ee-a8de-6649fb066f2f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0bd3ab7-68af-4dfa-8f59-802e833f2c01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91bacd8e-7307-436d-930d-927415ad51b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc744ca1-5829-41f4-9852-2d9d4b45786e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1006d716-404a-4186-adf1-0e5cb7d370c0"
                    }
                  }
                ]
              },
              {
                "id": "2e2b5f42-07a0-4d5f-870e-feafe3a5cf71",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97b9f756-ceb0-47a9-a53c-a975b3f01809",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce3302ef-8539-44c8-9917-0b70f8a89620"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ea43bfc-edba-468b-9245-8ff66971166a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1990891a-0204-4a12-bab4-984a4c9f82d0"
                    }
                  }
                ]
              },
              {
                "id": "3891032b-eeaf-4534-873a-f94552eecf95",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56d61b90-9b28-4880-b618-2c4ecab96396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af404c4d-8055-4e11-bf38-abcec7905c19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18560006-d692-4554-954b-13162cbc8d9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e17cbe9-cb5d-45d1-b580-bc1219f6f00c"
                    }
                  }
                ]
              },
              {
                "id": "ff9fabc8-73d1-46c1-bbbb-631eb38b524f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96943024-cc8e-4eff-8a96-ad04a5e49efb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "371e9b67-30b5-486b-ae49-092367586295"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "862150eb-698e-4b54-8a1f-67d2876f2932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fe8d1a62-e2c5-4b84-9c4b-8c3656b84bf0"
                    }
                  }
                ]
              },
              {
                "id": "a3879903-7bbb-4824-8380-9e7bf3fdf911",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99263290-4a87-4899-b16d-62d2682539d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97566d31-473d-44c0-9fec-9a1b6f95028a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e952303-639c-4df3-8ef1-d5fd3b982cb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d22d4c23-7f21-4ee4-80dc-bf75649a3924"
                    }
                  }
                ]
              },
              {
                "id": "fcce3a03-da87-43b3-b6f0-ba2e26c000a3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f6ae267-f5df-4cfc-ad19-fc4db9ca1db5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5435d3c1-3106-4f27-845b-1eb72e30d0e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bda0f87-1849-41b5-93d7-89fb138e924b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09d226c4-3f1e-452e-b0f4-d0ee1f5fb40f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6324aa61-bfd7-4195-8b34-1c1a9451e3e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1031505f-2ec0-417a-bbb1-b1f9e4bad140"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7337fcc6-dcc4-4a69-aa94-b529fa0e3f3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7a67c84-3f75-4206-a7a5-d329efdca8a5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc79fe5b-e8a7-4de7-b7c4-5ecb19d7eae6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "12e73482-edf6-4cf3-81d2-b2c137e022cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdeffb84-a090-43ab-b7a7-10237e787416",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f6b609f-fabd-4a1d-8b8e-a56dcf414500"
            }
          }
        ]
      },
      {
        "id": "6489abde-c9fd-44bd-9e8a-130848d6f2d5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "24df1c2f-e964-41ae-9059-8f03a6a19af0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0264066b-2659-4fd2-9f7e-665f054e43e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ae6cd25-51af-4005-8866-463d8c67c76c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bee3746-2922-449c-914c-a2536c0064e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bdf7af-d7a6-41b0-b0d8-9780f4c8abd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48317a9d-4cb7-419f-884d-4b9b769a94b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "690fc78a-d67b-48cf-aeee-32fb0b1ac5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5988286-d3a1-4c6a-8be3-cddf7aa43143",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc79fe82-0847-4765-8fc4-26e43207cf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dafe15a-80dc-4c99-9fb5-2bfcde08f670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e3aff4-c106-45f2-a247-ab26e6f8e0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0797537-67e0-4748-9750-dd6e36b86804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b91f60-c636-40cb-b926-94f6ac5e2d80",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af23924-15ff-4715-9d48-7444a7488b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35a714a-c464-4d4f-b872-3c59c5a2ced0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37f1659-aabc-4de1-9fde-a0b7edb82615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b59be1-ce8f-44bf-8d36-36f563cb864b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adb05d9-ca42-4546-ba82-100f14c0cf79",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9570c776-290d-4148-b97a-167dfaaa4a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cf530c-a815-4fd9-b12e-273320db2cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94967ffc-018a-430f-a697-071fbf1d1d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad318b02-428a-4e89-84be-1708b22d45b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979196fa-2507-4711-a6b3-8844217e0ded",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ce63d7-84c0-4dcb-aead-a9d96c04cffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e7dab6-ca40-417b-920a-d8744e50944a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f15bd26-5e82-4107-b957-8c3373347efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48561730-530f-4a3f-a606-88b3a089c25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bcf035-330d-4f19-aefc-427760ad3bd5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de04e0d-7ff8-4682-ae29-e7864a5e9b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff78804-c109-440c-8405-f2a7b57790af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee32a44-4f2f-417b-82e0-2713c6b3206b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22f9245e-e6ff-40d5-9398-02069fdcd39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6ad589-b9ae-4ded-89b2-824c62755854",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3844b79-f858-4802-ad8d-f9c0621e3ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fa959f-cdeb-4f1a-8dfe-3fcf87b7f673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e5624b-8f18-4cdd-b7ea-3fa469f3e3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5184542b-c174-4948-abb5-b21729045fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29370daf-7abf-41d4-a6ca-2bf0e8892951",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979070e3-d487-4c10-b562-c1a3360c14f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb89c82c-f3bb-4112-b468-1b3cfb19a65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c533840f-0512-4140-af9d-955bee8631de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50266020-f5e9-49ec-b4f3-2f10648f71a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e09ea41-aa84-49fb-b2f3-9679d321cae0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d121fc-1dea-4e86-ad00-a4e6f4721653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1a0ea2-6c7a-4c3b-a788-7c78e3ab2d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed98f342-4be8-4981-a61a-ec6156d2b72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6e4857-6386-4e45-b7a9-849b0d0cf2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa9f7c3-95e4-4bfd-bd9b-f21efdb06843",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafc983a-51b9-43d8-b1f5-4260ac95c2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3159fc8d-d1e2-48ad-801b-662bfd64019f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54d6aa9-5168-4fbc-80b4-52802ee5172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33d13355-4cb0-4c04-89e0-14f656652d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790122d8-893d-4c6d-8c76-ce6aeb6c6629",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a81b70-31f4-44e5-b06b-15b5b808d449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bec03c-10d2-48cf-9c1f-f6a661c8a906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684e0793-3afa-463f-8d26-120d37e858e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "57c6f5cb-d19c-4755-b646-f4d648b4b604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0e8a40-b26e-4933-a01f-debded87df8f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de01d36d-b972-46e3-8856-e9dcdd1447c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25ade71-7cf8-4f48-9d63-ed3883ba2e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95259494-0ccb-4015-baa5-4d7eef47af77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "115aad2e-fe16-44ae-bed0-6bf206eb90d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bab1dd2-52fd-467c-aa4b-275b2880e8d5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5f9888-a9c6-435d-b431-cfcaa23df8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f7031c-5b8b-4cc6-9afe-4200cdd8ecd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4170ff-b1f0-4ec6-b32e-bbb9023b992c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc59923-d51c-4eca-95ea-577c3208077d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa2a802-b972-42b9-8e65-988c65f3be3c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c51859b-d940-47b4-94c8-36d092027d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21472112-8130-4b9c-8c46-4c8312acaa8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3fc99a-9414-4f3d-8ff6-f506b2acca9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df849b2-03a8-45ba-a727-5444bc24bebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99d9d5b-30db-4e25-b623-4aa1a3d62b0a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65ac870-af0d-42c3-9b5a-9670c285f6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a594e36d-20a4-40f4-b610-3c9f10bd6f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206dd96a-ef6f-4dc4-a6ed-232e44184a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1643719-07c1-4112-8102-fd091651fec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683411a2-fbf3-489d-a312-6aed7883e737",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800e1fd7-7344-4a93-8d50-108b3fcbf37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9203c5-9fd0-467c-89ae-dc56a8809061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3da371-eebb-4eea-9913-2370b0f38d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8eda8c-ad2e-44df-b219-b743d0e5b9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096fa07b-5cf9-42bc-8c9f-7c6f55556409",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e2a774-7370-49be-a80f-f2e7cac91f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e768160c-35c8-4f55-8f14-943ec64e8773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b753a4f-8224-4e76-bc4a-a034129703c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab0ffbf-a0f9-468a-84ce-7c8f323afce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edd67ca-ec73-448e-8410-b5834fa2de10",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a592dc2-26d6-4894-8fc7-18011310c474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05676132-aff2-482e-b1e6-2cb60b2dcb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f0ddbb-83e9-4949-bedc-911c210fc980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25697532-dcd3-4baa-a615-7c135726e1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acddb6ab-95fb-4872-858c-dcb79aa3e7a3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f49b14-a60b-4e0a-aa67-d03a36223807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516ad5f0-9948-440f-be13-bcf67818dcaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0e9676-143d-4fbc-9505-0e51332057cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61417a55-41bf-4fad-8c81-369b853f4210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8961ca6b-31d6-49b1-8a65-a67624d226d7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dfbaad-d0c5-4358-b7bf-5558dda97c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43bf52e-dc07-4864-83a4-746e39a6a1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962dcc9b-0695-4486-bd8d-b6d948b3c2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "585d7a16-e5d2-4c4d-84de-9478e246095f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8939b84-23fe-42a6-8c02-6ffcb43a3612",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bf5cdd-2d63-476a-9427-24d7d3978eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07e2f5d-bd09-43ed-96f6-1b6bbe7ced7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84504d3e-d648-4f53-91f9-e56e90fff06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "346347e0-52f0-4649-ad70-72f4fb73433b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2392a24-8fef-4305-bdd2-28c2187d8d29",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435a1e15-5c0f-4980-b1ac-044bbda79d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9246fe-a419-4f8a-8443-e67cc61052a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068337ff-6c3d-4e17-ac29-64f4ba85f3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "655f40fb-2d2d-4ebc-83e4-80881f6925be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f954dc34-578a-4100-b7d1-f514de8122e0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6361544-0985-419d-896b-42e3381d78c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be9ac9f-3e39-421a-ae15-f046876c203c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9206ff-4369-4582-b4f4-7f688f364069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40253baf-7297-4216-a999-7765f990b7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6feb7eca-da26-4ac7-b081-ff221aeec314",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dbcefc-dcde-47e2-98b9-27ea85ee9d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d72f3f-05d5-4298-bee9-9c08a56ef559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41e5571-39c9-4d16-8a7a-925a1a031caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd19257a-37d8-4cec-bf97-53c629419b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06726fd8-ee7a-4b94-848e-ae501f983fc1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6324fb-55af-471e-b0b3-733e95bb5b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fd9e64-58bb-4eda-a2b7-05d61a213050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd808f3-9c91-4d5e-9a89-87a38eeba4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a660fd-7a7e-4ab8-8742-62862254d692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18158cc-640e-487c-8f38-5bd3d4f951ba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54257bf-cc66-4d8e-ab37-1afb1aed2d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472a44ba-2cbf-420e-a810-8f9043271ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737de026-ea61-4210-9604-59f43d5875d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "215e92da-599d-443c-b88b-17e126f417d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd05b312-7ff5-4aee-8cba-75eb3480cc1b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7be1ea-563f-41e6-b741-dacd596c2b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6788f1c-261a-420f-bffb-57338b8bdcfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca9dfcb-8ff6-40de-8737-80d34dc0abfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "781a7100-2f2a-43de-b118-2e20e6074030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d7b2e0-4cfb-49d4-be48-dfc9e3fcad15",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e91a17-ae00-4a3f-94d1-d7b73c292409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c383cb40-08d6-42c7-b6bb-9fffbc217b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af08177a-9d9e-496d-a863-2eda38f95ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25788a17-8620-4c49-b055-5d0a333388a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24186d4-bd69-4782-a4bc-6cafc15028de",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db09f570-751e-452b-89c6-f77f036eee27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8a8118-4007-4e3b-b790-69c8d52e10df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395164c3-5182-4a2f-9b91-15f64f07989f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "575b72fc-3835-474a-afe7-3deccfbcfd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7ea18a-1879-43c6-927c-87c5f0b14f35",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a12455-388a-4c5e-a9cb-13451a40e345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0972bb5a-62d5-40af-bc28-d9c8be6e0254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d19351e-b113-4287-9a75-e32ce9c513ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59439b1b-f967-4831-9511-a10e8c28476b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5929507-9b63-4213-bafc-4df9f2b63f6b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bf50a2-51da-42b8-81da-e4cf4d33b5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf023e7-380e-430c-83a7-c08d10aed698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0859bdb-6e48-4b8d-bce0-7df61ce1a493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ecd6a7-c760-4b17-ac44-1d644971e7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a04b7-dc4f-473b-81a0-b476a7648efc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45ffa12-3e66-494e-ace1-0a6ca847601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f506df7-6328-4ff7-8272-9eefe8d559a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca3b814-9e4e-4bde-ac1c-f3db560640fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "112e6cd7-d02e-4f2a-9eb1-f23e91855cd7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37122abe-e15a-4db3-9ec3-2faef9bf484a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8c69281-323e-4e91-86f5-0d3ca1df69a6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe28e093-9022-4450-9dbb-f9d6b25dbbc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cda90643-b69e-4f0a-a413-56f21358e074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375ddff1-3e44-48dd-a4b7-96b705f06787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "350c71fc-ea09-4ce5-b2ef-4c6059da05fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d21e2913-40e0-4152-b8d4-3fdaec5e14c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbc18678-75e5-43ac-99e3-b01eb05862c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e6b1de4-dba7-4aae-a7c5-5d95e1ec7ed4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2511d37c-7d0a-4eef-8f75-2c8de2b9d228"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a859b64-805d-4978-b2cb-0e7922043fbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2a799bd3-c3c6-48c4-879f-4ee21f6cc541"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c4477c8-26ec-4a50-b4c7-b105426cb0ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32967f09-f011-4756-8c5c-3dcda4445f9b"
            }
          }
        ]
      },
      {
        "id": "f94c50a9-9905-41a9-813a-560b52a51dba",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7590e66c-cae2-439e-bb1a-bbae2c16b001",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eba64161-4617-4f9c-8d1b-0856ccb186c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "952d8727-3542-46c1-85e2-894c2b0c7e45",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7ec03e-0bb1-4488-83f7-37f6402072b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf1de1c-d55d-40ea-842a-ffd90301ca36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee3badf-3b79-44b9-96e2-b39766318c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba73951b-2e22-4c47-b049-20a0fc6596c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a603a83-c4fa-4069-ba5b-46a48a27f8c1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c1a3f5-dd39-4455-813d-4c43d4055fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd5f096-739a-47b5-b47b-2adaafa13650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb381583-f8fc-4ddd-a603-5de594571f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "293cfd55-4731-45f7-a27b-6254943e82ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551e785f-83eb-4d50-b5b6-dce7fc643598",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3e664e-f2ac-4edd-aee1-d9987af276d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd91cc1-dc57-47fc-8f3f-3aca19afbc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a1b8fb-8adb-4c21-85ad-ed5cefe4375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b790fafa-007f-4f6a-a4e6-45808dbf217e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd9eae0-293c-45c8-ab6a-57a28537fab7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84b80c8-9c39-4cc4-a836-621cbc19ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6aeccd-0b01-4098-8c7d-f133442e85b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c126c9fc-da0f-490f-aa00-b452707418af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "959ba1c9-9c46-43ef-a421-c88c24145c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e99330a-d6d5-4b27-aa45-bb69b56d9fa4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81fb386-be14-443d-826a-f752e93af2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a13172-f4b8-4885-bc26-2a45eb6e845e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e3a5a2-31cf-4796-9225-60fcbccf582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "108fec88-fd8e-48c2-b9ec-02c1227cbb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70e9d13-b8c7-45bc-950f-00c3a9845e65",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de901d0-2bfa-4cf0-97a5-9012569399c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4980694-395b-46aa-a4a5-6ec6f32c63b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0912195f-6822-415a-92d1-0bb986c5a059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1783898-82a1-4206-a65e-23349e19bd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6353537-9d32-4178-9ffc-e5de118f875b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207410e2-231b-43ef-93f5-71daf67fda39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934a79dd-2d25-4f01-8295-db4340733d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ac99c1-8afd-49f7-bf39-72dc084ebd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "77853a75-a416-46e1-a3b1-6a17053e0ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7221d1-365a-4a46-a4b3-321984b3998b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e94476-b079-4674-ae36-0c4d9340dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a7062f-3153-4c6d-b9bd-b17b33a58e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d110666-0d30-42b9-9d2e-e3dc24710ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f108e98-2e78-4007-8c2f-e8c6a047ddb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253e3d56-8c37-4660-9652-c4c6e8b6f0bf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b553912-8088-4649-bcb1-32ba3f91ed85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafdb751-2d53-4833-9d77-bc7f3c252835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbee9e1-b132-44a4-812f-54c7a373b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43535ecd-09e0-4f44-890a-6a5f3fc2133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35581ce8-d65a-4609-8654-a01b881c7d15",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d9a00d-c46c-4cd6-bcd3-e42a7ba0703b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f47e1c1-c4c9-4c0b-8b71-be23290d98d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428f0a3e-100d-4b75-b9c4-ef928d5ef5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2196827-1d25-4c32-947b-de18801b517c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8de4150-c56e-46ff-8e3b-20317b542382",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1caa4c-c5de-4ec7-86e6-f20f7b45f04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927476f2-29cc-4c5b-82e8-f36516d704a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8ce612-6591-4005-ad21-241373d9162e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f823e25a-8720-4cc3-93e3-daf6c8e41b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bc3417-06a6-4d7d-8a33-cabf560e86b6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0980531c-4a68-46cf-875c-52de490e58aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2bc161-da48-49de-b2a2-6083a39c3c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8830cb55-25af-4d9a-9399-5201a21b7351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48c209ab-0c9d-48ca-b96e-89068824c0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03036bf-b907-4e48-bf49-d76578cb988b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0221cdf-f979-4d04-b6fb-d75e0387f507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab95457-b09c-4428-8d52-c8d4dedd0d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b4035f-9926-416f-b4f4-c7c7e91db0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfac3d89-5d9e-41c1-a5f5-74d177240614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33e6559-0d17-4b96-ad39-f8f1b583e8ac",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeef2496-6912-42f1-9a21-f439424aaa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a86f405-faaa-4d46-9cb2-61ec4ba09c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036e734e-e80e-431d-9e00-e166a1047cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bd4e14-696e-4d27-9480-d7e98ca4f989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f355e5-8dc5-4b64-8316-5a8461ad112a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dfa504-9aea-41f3-a7da-743bc1956d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7880adae-63c3-4ccf-bbad-88e99e083d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011cc20f-8352-4586-8889-e1f6ac97ba31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f418f3-e37c-4e15-9050-7581a21444ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9c30b8-5d19-4fb6-9b49-41b79a1b417c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0a9814-f3a7-4819-b12a-d44a8af2c658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25286bfa-a21a-49ab-b2a8-b7cb06ff21cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6b64f8-15f9-4614-bec5-110aedaf7b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2c39dd-25d7-422f-918c-6c3eb2560285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daada27-1738-4094-ae4d-e269923d8a10",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b1cf4b-f70c-4117-bdd4-0b6d2d4df358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095af2b9-c3c5-44f9-a6e5-80bcd7bd41c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459c4a69-e3b0-4193-a044-f69b8eca3fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4934c59b-dfd3-43d5-a4bb-73e61c46fc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7a7522-9f4e-42ec-91b5-3666d8f633eb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9bad40-fdf7-45e5-a1e8-b959ba6aeb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844a3edd-324f-48e0-9b26-ab23687250ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5da374b-0b92-4985-8306-0feddb9c89cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed48ec1-1474-4646-b05d-9fbc3e1611fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36453b06-32b4-4285-b112-c554fce4e5af",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4439bc-48be-4c13-b33a-0e13d80ab711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6a81bd-00f4-468a-bfaf-964036df567d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf9854b-a17a-4d6f-aae6-2142b626994d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b98746-f4b1-4173-834e-c60ec573b6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41034b70-3920-4ebc-9396-d7fc8736315a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cae6530-53f1-442f-bec6-129aaa39c586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be1ab0a-2bf8-4402-88c9-ba374a16f0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54d3664-0083-41db-b515-8e090fceebb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da46b9ea-009e-4582-a86e-11969f1fd2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79aecc65-5665-4a87-888d-4cf48a685923",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2d5c44-8066-49a0-947b-97c186e0b227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e589ff7a-011f-40e0-98f7-dc7225cc8222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b05340-2f8e-4574-9454-9ce781dbccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "338ad1a3-d7d1-4232-9418-2e075d2b9d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2887dbf4-d2f0-464d-a612-a729c0a19bb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9403bb6-51f2-4b8c-85c0-929889509b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f13cb15-c716-4e5e-ad2b-6b895059ecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e74e41-0266-4946-a1a0-ecd041966b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b91b01-7ba7-4528-8b12-472505261aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c660e5a8-0b4d-4153-9f48-e2b70b085c7e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a95919-7350-4c4c-9c35-73bb9691e25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628aee48-fd24-49bd-92df-165a41520536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67e0b9f-c0a9-4d97-9458-3915b8591ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f326733c-ae44-44b5-b597-ee48f32c4e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e3dc1b-5e3e-44e9-8511-6768bba49c9c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc996273-59df-49b0-994a-fb43fe502ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedd8525-59be-4a33-8b60-e68e09f95504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9781836d-bba6-4906-9bc6-4e20749abb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35adebbd-4cbf-4357-af01-4c6237f386b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950c3890-c656-42f7-89d7-f1f3ce9b8bde",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03487482-ea86-4044-8e7f-460b47f8758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d4aa1f-c03e-4f8e-a66d-9b015231567b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a98d70-0382-4aea-b305-1319791ca7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6635c732-4963-4d6e-a386-6b73ff611d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ab470f-819a-4956-80b5-c965b635b4f9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247f3a9e-f23a-4c83-9051-7761f927da1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59528d62-18dc-4402-b91c-89ae4f82e2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2436a427-f94b-48b9-a3ef-76f67815cf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29caab7b-48dc-4ca0-b867-6165b39101ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1c1e6c-b952-428b-b097-8c21935a53e9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0d1efc-28cb-4a8f-9569-1ae1687675af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcf6a07-dbc0-44ec-b2a4-fbf03d290699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaa1628-ca73-4e10-a54e-d246da4a8b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05172f39-8d98-45e4-953d-74ef754cfd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3327ee49-109b-438c-9281-f150cc96ebb2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49be5b5-1f40-42f9-b6c5-05260ca1d121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff2e8ab-be44-4999-b452-7b8a77e39fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfe5bf1-6179-4cf7-bd66-7e9572159008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d19e47-1439-4894-859e-f206f1ca2546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d13741c-6a63-455f-930c-8830414ceb0e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4df1d7d-2236-415a-9f99-924a6345d2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c1affd-35cf-4347-8c1d-6e563a42d59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab18d426-b979-49a6-80c3-ef7b7e739292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b8d393-6e1f-4047-9fc9-22646eae8ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99212c1-8634-4ba4-b1af-1ce3b7045a46",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc48634-a48f-4b7d-a8d5-66213db8d878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01749898-f9d6-43ac-a24d-9dc936bae969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59f9624-ae63-4f40-8952-ab50021d8455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07452ca2-0ff5-4411-951f-68c3c947df45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b81a93b-f051-4ab0-aefc-9f02ada47bf7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02476ca-61f5-47ae-b491-1be92548a723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a4a330-1819-4ee0-87cd-0de464cf9ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d9e914-3562-49a3-9cb5-2a900cbad971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c8f12b-64b0-4fc7-9ab0-9e23133cb533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d0d898-8613-439d-a338-c56bfc443e3d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc2c8a9-7b53-4eab-ae1c-15a69060f837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8c0b65-a9f2-41ab-910a-28f709c8a6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a297c0-7137-46be-89a9-fe06e19b8a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a476b4a-95f7-4fba-ab86-9d51c083f2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060b6286-470f-4bb9-9154-a75185961f94",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bae33d-5a9d-4e21-9e3b-e80592cf618e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c49239-6d47-4031-b723-65a844685bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58449270-9292-4b61-856d-960d65e7a5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5050d309-fd10-455e-b066-9276ec6f5e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29750932-e3f2-466c-9647-cf3093444a6d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daf0985-625d-4629-a3b0-19d5fffacfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f6c78a-eda2-4ba5-9e86-ddbd9b99bad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eebc63-7e32-497a-ae6f-e7b5965bca27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab65ab6-e38b-4aea-8fba-475eac35ef29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cc2995-7f59-48a7-b66a-5c90ee6693db",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c301a9-3e94-4e3a-a82d-dcabf16e95a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16da68f1-63a5-46cc-91ea-05de8c6be165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7185e7-4006-4bea-ada8-70d383eb86cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b684e6f4-af5b-43b7-a73a-aff7cc1497de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5fc07c-bd5f-40cc-9963-2c2e3a9cec0e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42b6ab1-6bf8-4d2b-8f73-2603485e3b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b535fc39-b678-49da-b5c7-9ade098dcf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd923b69-e5e8-4a8a-abb7-a1411b159fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e1abfd-8bec-4922-af42-9db05ddc51df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eeb1a7-1bc3-450d-880f-76a32f4cb5a3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c14073-ba74-45ea-821c-cbf0d0623c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5151d96f-c214-4135-838d-f8b94358cc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe908a7-e0b1-4cff-acc9-10ea6da385b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc691ea-79a3-44c5-8c1b-3a434a2e595e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "132d021d-e9e6-4b60-b793-db3326910b1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87fae9bc-cb73-40b2-9746-27fb977c8eeb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebe3abd-24b5-4275-af5b-2b2d61f25969",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0685c599-00d9-478a-a4cc-59337e4f50e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7635d87-354b-4ff5-80c6-fb9829d6dd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ef15088-93f7-4c37-9117-ec544c445a0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef4703f1-3566-467b-b81b-185fba5317ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d7de6b4-0c4a-469f-9853-7909a53f261f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eba2e41-feb9-4814-b572-f59d6e1a07af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fe2c9f4-3db8-47ff-acee-505dd10b1f89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39059412-ae49-48f6-ba44-472fbc34eecf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "800619d7-22fd-4042-8c3c-4b36f9fdf4b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ee4fbbb-8e28-49ec-bb30-8390492d5782",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31fb396d-d523-40c5-bf97-28d031746348"
            }
          }
        ]
      },
      {
        "id": "3aae6cfe-be2f-4087-91aa-2c111d886aa3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "104e2818-69e5-4a43-8a05-b0c2129eb5d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3104c9c5-71a6-4fb1-a7ca-187cf806caf9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6a04200-1882-4f29-b97b-3bb1ebf864e8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08c4068-9327-4d8a-8370-d01958a3a5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf967da-65c7-4b51-87e4-8439f51985c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb566683-6f21-40d0-af4b-794e61e4e082",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5416d5-b639-4740-91cc-c6df74a4ec70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2b38b1-8f31-4c58-9182-1148e83032aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e8d8c0-161e-4769-820c-f9ef6672be84",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784ef78a-5c01-4401-9fbe-a3ad2a665a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13578777-ed25-4b3b-a5ce-f01e2cbdcd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af2a8ad-3b2d-47a5-a7a0-786e51a51a13",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73894255-6f4d-405c-8caa-357d3c698b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883f349b-e60f-4d8f-9d90-b61fd7b901e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8111525a-225c-484f-a91a-7254bd0dc67a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265fe832-6fb2-4837-8cbe-441f17f1dcd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d733f0d-591b-4edd-8955-93d745687b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa5980b-6e3a-4a2c-95b5-117c939efc26",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361e4d0b-8b2b-4adc-a135-242cdd5203e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b95dab1-1d10-4f49-a93d-aa6d8fde8eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dad3ea2-6fbb-4a84-a25c-e056d31c6b0d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64c65f9-3c76-4601-aab1-4354aa7e7ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f6287c-b132-43a2-90c6-e879a1dc9e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5a460e-0e96-46a3-84d0-c9de5036dfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ae042f-373f-4665-b983-f5e9cada0bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712d1edb-6d8f-4f27-b1ef-2c4d1a1f2632",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9408f09e-40b3-491b-9189-72f44160c9df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cf3853-3305-486a-b094-4273fd45b5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5d6646-e7ae-4db1-9b2e-41593a89ecd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e08e6c-047e-4cd9-9d35-211d302c0c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e633933-e954-4372-8221-a1131863b125",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c968a531-7ad2-418d-92e5-e5f05e654ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3c52de-4af3-444b-a8a5-0a79ea35311b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14faeec4-40ef-4a82-b276-c135c68e9a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3562f84b-2766-4b86-b405-8c4d1814f13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58419fd-37bf-40bb-8fba-38d301916290",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da7cc7a-583d-458d-8808-4a3985b5c4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad5a555-b6fd-466f-a878-b56f214ff63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67d8e01-7e31-445e-bd1a-1498caa5f1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daedaee8-5df0-4109-8cea-aa3aa7e97f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7a6bdf-5bdd-4788-ae14-b7fa052697bb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923d55a1-3448-446d-bd76-b4a1db22962a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c02fff-d359-4650-ae5b-4e7ae8867e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2120a460-6752-4bb6-ac71-c66ca64dc4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40838c2f-85be-4091-8709-eabd3856dfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d31656-4559-473b-ba54-9e1bc3ed74ee",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d05639d-20b5-46a9-912b-d4eb295be888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1092808-3c92-4804-a6f0-f07ae9ed6548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2e26b2-cb60-489e-b24f-268696880d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c8c93d-aca2-4d21-afc9-9df19faeefdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87df6ab-506f-4675-89ab-57ce5e7e0980",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21a1aec-ac68-4977-b7d5-246459160ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ff13dd-da51-4827-a825-466d3f449e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2b6ac0-d9ad-41e0-9565-da0acdbe6538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f49311a-d2ee-4864-baee-0d1c46531dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7027187-519a-4dae-826e-b7481f1b3e85",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16afed47-0593-43b3-835a-4433640e23a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa69bc7-585a-498c-a48f-c3917eab279c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86b7778-ff7a-452a-9b29-51ba921a7194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe3391b-fd44-4627-871a-95f17129a661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ee5e18-e626-4c8e-b245-82077c4ab1c0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7179e21-bf82-4f56-b559-1728969d6ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "063e9d8c-fe7f-4753-b1b7-41c3261ff989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8ba79a-3496-425b-aa4a-c9a8dc880f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8ceceb-3660-47ef-8c36-499beb0645e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb5426e-26c3-47dc-8271-092fb1c31862",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1943f73d-6fea-45ac-b205-b544c73f6b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e99f85-ac61-4a4e-92f4-d1b22d581034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce45d67c-9b54-480d-b645-abc60ea0543c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44a94fb-f1de-4c57-b705-ef4f47cffb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca939f9-fcf1-4b3f-ae07-2a220155b44c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a08a1bd-9d1f-424e-8e47-c11aea7e8568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58cae04-5995-4121-ada9-d3d773895dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271441f7-47c4-4d52-8f91-94122ff04292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a2d5a2-63c3-45a1-a59d-86a3a83b33c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae52ace-9de9-4d22-8d57-66ed13b73292",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d4ad89-2f8b-4de4-9588-25ea104b9c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db82958-12fe-497a-a371-ad1073f083bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18263df0-6b61-4b73-8b0d-33fab27c7aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346d10f2-43c2-498d-8f23-57f8972b4e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b90d0ff-522d-4b50-ac35-4fa0622da853",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f4ab0d-23e9-4bc4-8162-603dadf4c396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1be43a7-2030-4b47-a694-3631447913be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3c0002-dd12-428a-a781-b6510bff6fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56e8315-8936-4290-b292-a7c5fea2a48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbfc9f3-e933-4f08-8be3-9a9fc0010b31",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8618fa-b239-4887-ab4b-7c0358ccd719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f05f1d-a667-4e8a-8aa2-f8faae0a8fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb47a7c-93cf-43c5-b3ad-00dd6907e8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c6ddec-1e4e-46a2-8bb5-597695aa5d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f5371f-2c88-48b7-b665-9dcdabae910c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4170a1a6-ee1b-495d-a582-f93c51e5a774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce23b61-c51f-4011-adfb-20e67b18b318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922843a0-3e5c-461d-bfa0-c86db82baf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30f3bd9-ea1d-4c51-a30f-56b2fece9102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e917028-f3f7-441c-96e3-ae4690e4367c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc0bdb9-fd8e-463e-a7bc-7e84a7080f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d6ebb8-7c84-4284-90fc-05032cc8a031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b2b73a-1a48-4800-bd0f-115645c17fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2465a094-286f-4aad-9d21-7504b441892b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6857697-2c20-4071-8a65-750cabb755e3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3e6553-af7d-4412-8985-035215b96dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa74114-62a2-4778-a30f-49b8a366aaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63548174-9059-4c11-b9ec-15f05823bc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8db3155-0726-41c3-8cf6-2a0c1d2af1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea36c962-fc24-4a3d-b655-d42b4c8dcb95",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f47d00-4d75-4a24-9056-b35fe96a20af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eeeb9d5-a6ae-4120-90bc-0a26e1936e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fc4beb-9e43-43a9-9f5f-542f20e0bed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3afd6b-4386-4109-a767-f55d3d5be669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ce8836-0988-40e9-b8ef-05e9c7cfb6ba",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68da6dc-785e-4b1a-a5dc-5deaa0c8981e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2424ad75-8373-4f1a-b3a5-98c27edf5739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ce2b5d-490a-4c48-a524-0112969a2158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e3c214-5234-4405-b61e-e5d4f65809fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c546c4-3154-4bc0-87e5-fba554cdf67e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68edd469-204f-4ffe-9d82-35c795ad4ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037979c3-13fe-4812-9374-f06a1ab9d83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3831b30-b4d3-430a-8b2f-6632ea4f7e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274198d0-10fe-410e-bb67-f4e7de3234d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be573c5a-3922-48a6-8628-eeaa46094b73",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a59e5f3-b3c6-4b30-8324-4f8acd01f252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3473bfa6-ace4-4a9a-ad94-44810bd5b366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5138fbb-afd7-4537-b2b7-bd97060cdd5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987af77b-1180-45d1-af1a-234c5863d597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37617330-e352-42ba-bd4d-59b43ecb2ebe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1350b1ee-523a-4c82-a23d-1126b3bb2eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afad9c8d-8cb8-43a7-a138-80aee700ea6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd5b398-63cb-4b94-9394-c7f6de6a7cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54e89e9-66af-464b-934f-d5217b2363e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b018fd3f-4052-410d-aa90-eb5fe0cf07ff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6ebbce-1700-4738-b23f-64b4d6fbac42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e58973-38e5-42d8-998a-2598cb2a3f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c523b6c3-2ccc-4d65-95af-50678d79dc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edaf7f7-8081-42a8-a3d9-5d757d8f945c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900fdd75-cee5-4bc9-8b20-b49a119e900b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67c9542-5a90-418a-9faf-142e18668442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32eb32bd-3e4f-4190-966e-aa8cee51682b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c3af2b-16ad-462e-bf35-0f363f73f16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cc573e-3dde-4cb0-b430-4b8804c3bc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4470fe-5342-4b6d-aa52-36e3157fd627",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d57679b-14f5-402a-99bb-71eceb8f77ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0fdd04a-854e-4391-a2d1-2070f6fbf21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b0a439-5d25-40d0-be9b-c12f57387cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eba96a3-3455-481a-b58d-cf83d87d1bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d529816-06a2-425f-8865-8b7d8e51fe53",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319d374f-faed-4b6d-94ff-e4271f516855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ed6fb3-91e8-440e-959a-183820647f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1d0d6f-8c78-4377-85bf-ad65daa85e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d32295a-812d-4011-b4b1-1723021ed879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0cfe4d-fdea-4b6c-8eb9-c0fcbaf20068",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36466808-b22b-4ac6-86e7-6b3df6e8d172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dadb07c3-2b2a-4364-a403-821ed42fc1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccc6af9-f682-490b-99fe-778d5750b4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53171fae-e4a0-4d04-a075-09cea36ab61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabc6f1f-6778-417d-8cad-b06b603c2782",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01daa248-2341-4402-b846-e19262e0e0cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d3ef8bb-98ee-43a5-adc5-390827502b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b4d8e9-bb48-4afa-a7bf-d4ea17d4bbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee61a0e-c713-4d6a-98e5-e395ea4eb6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc534d0-1064-4ee8-a80b-38a2833433d8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e5e41d-9651-4c33-81bb-294ac5888c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b629afc-99c8-41c0-9730-85f4fd03b1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c459551-989a-4b4e-9bab-fc8963572850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af9a1b6-f6e3-4608-a643-0e0e9dbdd263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bb3269-5d65-45f2-bb84-128d8deda9d6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd0fc41-cc31-452f-a1f3-570c63e7c93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e83ff5-7368-417e-914b-88e4ff9a23ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d10d6a-1715-4c2a-8fd9-855200ddfffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612ae68e-f482-46f7-8cc4-4893b67b3218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec9b427-5567-4fa7-953c-fbaccfd30a2c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4b7934-413d-4cff-8e35-33aa1b67de6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2526e37-9029-4c2e-a23a-bac23f51ede8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d92e147-fb7f-4aba-ad47-5c2af31c9bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb637ab1-f509-4e99-a8c2-63d8c720b87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a7dcf4-b4f5-4621-9a9f-2dd933714e65",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99805f4d-a0ed-484e-bb94-935d69dd3d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ac4e0e-8e9e-4ade-a79f-059b00f5cef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b9b793-cee3-4b4c-b71d-e86bc5db4620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4d5ac1-089b-417a-bc1f-24e7d7862f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ac2262-4e2c-4c41-9a25-18b72c1990a9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f08fe5-f14f-41d0-aae2-2caad4329dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdbdd4e-7732-4021-be81-45bb0a59f8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56465bce-15aa-4272-b8e0-95a3d1dff740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b773655-d99a-4d10-b39a-ee949a542dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516b8494-9b33-43a3-8b00-0e0455b91681",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b79712-7205-4c12-b9a3-cbdc16f2fe5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1d2d3e-76c9-4dbd-bc6a-afa1751b8ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c265808-7c86-449d-953e-12f7685edf02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a3a75b-1e05-484e-ad3c-6a2c2b64ba89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a24549-bc79-4051-a32e-0bbeecb4188b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0877f81f-0943-4ef4-9d09-9c82516f4d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674ae0b7-0bb1-454f-8c28-cb3bfd4c0584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3632ec-3e1f-4509-a44f-5e32241e742d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b013898-4494-4819-92e9-c7f299d243fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6e06f2-c272-4af1-85e2-39d52c1271af",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a853ae0b-2023-4af2-aa5a-428ac42ab5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ed6400-387f-4559-8b30-8805c631709b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466009ea-a18d-45ae-bf23-8bac8d9289be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e38199-bcc2-4b13-b67c-f3a0709d22cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61feb4fb-fc84-4d7c-9df6-116af5561575",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce699b2-4274-4547-a004-a8f5a1a60fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ff7dcb-6602-4f39-98bb-3ef0c7aa0152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41392d42-1471-4b20-9a86-6996c28c63ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5526789c-1787-4d82-8d09-f156ab59fd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb6480b-228b-4609-b955-859c3371ffbe",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e0fcce-b5c3-45e2-abf8-93128990bb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e00243-1d14-4f9c-98b9-ab1bcb812090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0630f294-5ac6-44dc-a810-7563ddd8c637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d1425e-5640-4872-8035-971c2a07d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2746996b-bd83-4c31-9e5f-aff46fde95dd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eed549d-5227-4900-ba3c-b6b3184d4673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dc9520-7429-4cb7-8d54-99be9c3d1940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d74f6a-288e-469f-b3fe-2a3174fec474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5a4731-59d7-4027-9da8-6f3861beb274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34100cb2-0204-4d48-bb97-3b07fb3bbcd1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f3fc7b-2d56-4e8e-aba3-af94cd1392ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6e444e-21a6-4414-9e93-1fd8c3ba998f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbdf521-9d0d-42a5-911c-e7dee4b22350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d18507-c286-445d-887d-19216b8d6045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a03625-54df-402d-8ebd-549ef6a4314e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4c80a8-9231-4912-9bce-cbc145bd4f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffba6be-77f1-44af-a6cd-ebbbafc0bc0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06272b68-4ad5-4469-bd03-b843a34ef19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6288d31a-f114-4b1c-8860-7d255fa0f736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba52ec0-e16c-44ce-a58e-c0cf23bc9874",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de748e5-5152-4a78-95d1-79eb16be6f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2831d2-7176-4fee-91a1-1d7fcd408aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06172241-440e-48b8-9d8c-f021a515e5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845c9354-1859-42be-af7d-ae73f911cb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5962b18b-fbd5-460e-ab63-00f2e1f45ac2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75ba152-3846-466e-aec1-28e7eb5a96f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fcc77a-c855-4180-86d9-924853691f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dea405-699f-4c1d-869a-b6e4f3cd82af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5339fc-94ab-494b-b30a-245243f80045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea336af-0ab0-4f13-9456-91cfd7728c38",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4ae6f3-cc0b-49df-8fa4-8007012a2d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a9fd7f-ab52-4cd8-8a94-2c4bcaa18c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922f6637-f7df-43fb-9603-d4deea117ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c4aef6-0db2-4421-b175-e4b93ad70fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f429c49-c8b8-4427-abb0-b29e3e573781",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334a64fd-0654-482d-ace2-1d64f4fa8110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bda3d0-630b-4034-83d9-78e4d1453e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b48e8b2-1886-4b77-8c0c-3448319bcd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbb7c29-bdfc-46c9-8497-4a20fa784692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d68e020-8e6d-45d0-bb9c-778a79234581",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca75cf12-300f-4ceb-8277-9731647f2adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131a3245-c968-4cee-a637-792299583d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707f8eae-c2c1-4f4c-87d1-59677dd27c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a5cced-fd1c-4175-9e7a-47cb4ebea2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe135e7-fee5-4fab-94c4-9250ba60ec5f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaf79a7-268a-4ae4-b2ec-6f47160768d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec3030d-99de-4907-9583-17ca6bcb3b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f642dc0e-cc2e-4012-b917-c9760bb29cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc25da1-9b55-447b-bb79-b0331932e154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45b6c55-83c8-49fe-be04-5380046dff0f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dcf879-72e3-4448-a211-6bebbf9c8850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fafa3d-74ee-4cdb-91bc-b59081b31d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac0e331-6c23-4040-a29f-800b73401e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9abf92d-dcb4-446f-a032-f2869f0a0a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38c0316-3e8e-4177-aa65-cdf2d1b2f76c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24f2752-f94c-4785-942f-f968c4abfb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eda8033-3e6c-4c8a-a7a1-dd659f594273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175a5b8e-c5f4-4132-91d9-eb96fedc6a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e91568b-0cc5-4e3e-982b-be973fcfc776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29d254a-32bd-4e68-abcd-91d26ab56777",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b579df82-745a-4810-9928-8aeee4179383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe18922-366b-4adf-9520-d84fd1169bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0622a4-dc2a-4175-bc85-6b70f4caec88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82a665e-e934-415a-9fa2-be3ad19ff366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af8a775-d457-4a12-aced-229d31a82479",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20480b67-5977-4197-bb5d-642e0d0024e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb1e99a-d669-449e-8bae-ea69318d5090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f0fa9b-8d0b-4ca6-ad14-db554830b8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac513c8b-3c07-4024-aa55-3ed5a2dc7d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4c25e9-7f03-4a3a-a528-a63e3372d06d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989dc26e-8c84-4748-8298-c8104475e9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbe1f10-aa2b-46e1-ba1b-5907caa590fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d16692-173a-4bd4-a1ad-bff89f3219c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71a9aa0-6a60-49f3-8411-e158f80c444e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ef30c8-c350-4809-a611-59ddf4fdc335",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88da191a-b48a-4d1c-8290-4669cf1899ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afac2b8b-c2ea-4691-8e5c-9b379b6b1e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2fe76e-ad5f-4ba4-b1de-6f0be1c9b4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36eb091-502c-410c-8853-259f328274ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef27cf2-1356-46f6-93e3-69e3bcfb3542",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2761fa2-5c1f-40f4-a428-e2b3b2bd86a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2f2405-bcb8-4a71-83ab-807837b811c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc4faad-b692-4c32-8654-1f1833587d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7429a02f-336b-4018-ad75-74d772ccc686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26debc38-4046-45e0-b50e-73c9e49b9d24",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6280443c-d5c8-4554-a9ff-3da75126ef3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de18e546-9509-4ddd-a7d2-a75030d1add5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d440ba-d5c1-4494-8bb6-cdd518f3a3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f597b10-76f7-4c00-8be0-5989cee502a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbd1015-da18-4b4f-9a53-c4c4922352c8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e60d099-30d8-4182-9027-53068ebe2ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ec8de3-ff60-46d2-9ad1-38ec58552420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23380fd-a24b-4911-a82f-9c3b5fa1557e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8275b65-b359-4e70-9d84-e6154eb89c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe40188-7a61-4b58-af37-750c37456ddc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330192be-f6ea-4900-ad4a-60714b150d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b962964-df03-49c1-a24b-eecd5ea0cf61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514b4117-e9ba-4001-afb0-b3c58e3b13e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d525fe89-8c22-446f-aa35-6fabbae16ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5980e23-60a0-4a4b-8550-6b98f5d5dadc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70235c4-113a-4d1c-8b7a-f2b1e3da326a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e4ff1b-f4f0-495c-ba8a-9f7162cbf3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4baf014-01ad-4ac8-999b-37b11ffb4fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a98b49a-5eb5-4bd2-87b1-ee5269f66fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11c6809-a96a-4883-84da-37b87bbbcffb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961e171b-e1bd-412b-91c3-fcd3e124ee29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f4ddcd-1e81-4f77-b671-a4cc36399ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f89249-307c-4eb1-8cd8-f88efeeb1911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13e755b-5bf3-4464-9d44-25c4f3af07c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f0640e-eb47-4e01-bcfa-bc085b1299f9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df148b93-92cc-4634-9452-48466091bea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287d89ee-fe32-4aea-bb9a-b965595c40b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2521b72-cd09-4281-837e-4692abd66f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ba4f0e-cbd4-42d2-8767-6546116793a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1bce16-b9f2-4731-bdd0-053b0eb4e475",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad468971-3657-4375-b8cc-caf7e97dff63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "848fd35c-37e3-4a05-a336-bceea9c0f4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7533bfdc-36fb-44d2-bef4-580a7f547911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f48b86-49df-47fc-9297-f457cedf8002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0059a2-b642-47d1-8703-16c39952d1c7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a167f0-1c46-4902-991f-3123aae2e95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dddb866-a883-4bcf-99fa-4a981e9f76cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61325878-6641-4531-8f23-2bb3903c88ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f59ecf6-b1f1-4610-8913-0ebdd6094afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9061b7f-49e5-416a-9237-b73a38ea746b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0b530f-e5ab-4f80-8496-c4c6f0e8fadc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4949e8b2-199c-4af9-b99d-83024a4e1458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f2ef48-2a05-4da5-98e2-7e401a258dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ac5597-3942-4ae2-bc02-4092bd05834d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a4d980-17b3-4da8-b404-db6bda427ad4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e43838e-42b6-4d57-b9a2-68790b8cff47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f74675c-8ad1-4dbd-aa3d-1b9c5b396f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb61de-afcb-4da8-afec-1c5b3024814d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8067446b-d6f6-4ac5-b29f-8493235e0eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23df8479-9e02-4858-a8a6-b754ebf6b7e9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5234def-c256-4ebf-a0eb-edaea76ad2c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d37582-de1b-4ce2-9210-68b7b818333c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d98259f-a3f8-4792-9457-e25f0eb06fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b6ddda-9085-45fd-b3de-f12a8e865f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faaf106-4f6b-44a4-a49b-95340dea22c3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69bb832-5f58-4e60-8586-8f63e5a9837b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a151e13-a17d-470a-b26d-8a8701b2901d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fac4d13-f953-4978-a755-fbb9e810a4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd39c8f7-f8ac-4881-9983-29fe6c1fd6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc4225a-9d04-400b-939b-c0eb2c3874d6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a031f7-6b87-4b6f-b429-bcefe695e7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77293b7-4f73-44d5-8b01-5a07d7015e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba71096b-d028-4617-931f-92b9c8d165e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46603a5f-7ed4-4096-947f-46a685ce6651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661ae8ad-0811-499e-b392-240e444b678c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e01589d-17b3-46df-9899-8a2bfabf7506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba987598-8ea3-4760-aeb0-db8867f09029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff988702-8525-4b5c-b86c-eead3a33886c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f11c668-5a1d-4755-b0c9-56f8bf453894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dfef5b-274b-45b8-a61f-1008630d8289",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4efde17-fa2e-48cc-96ca-e244953cd85b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d76342-ae18-4206-aa02-3de03d315868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b57549a-b7df-47ee-8a21-b9415b8218a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860be0f5-72f2-482e-b9e7-c9d9aefeeb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209815d4-768f-4d98-bb83-1cde81dd9a05",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8371d6-6d8a-4f9f-b4d7-8fabe03fecec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c0a0dc0-1903-42b5-97a7-6ed8d852b1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77abf13-93d9-4a6d-a3d7-ad2d984f0226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7c898f-b5a5-48b2-99fa-37c520e0a477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a7b5c7-5105-45b5-a19a-677b1a58ced5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a8507c-5bb5-4059-8018-8cdea1f51dd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410084e0-dc09-446b-8398-b72f1c9663bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d93676-f10e-4d17-a1b0-64985ccfb9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffc7b27-a19e-4556-88a0-3d9194083070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe48c74e-81a1-4d01-b290-14ab62452259",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a8796d-434e-45bc-85ad-2c2c56dde664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d9ffe7-abce-4b67-8b03-309aa99d8c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f9d91e-8947-4438-88d9-c210a6d85d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc830d26-89ef-47fe-b1b4-aba9048a3557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54ee43d-abb6-4236-b587-aa232ca428ad",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470cd029-00e3-4d94-9cb3-18ff2204f93b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1359d7f7-bd6f-4a3f-be71-43744428916e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90b28d8-f62a-4b3c-9f61-9425ad3f321b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f9e79f-bb72-465e-8f9b-7dc337d03f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ea36e5-ce9b-437b-924e-50438a9058db",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76501e39-2f1f-4f0e-b365-906eb8c990d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c916d32b-80b7-459b-aa84-6ec11ac2d9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de03ded-73c8-49bd-a531-87e19417fea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65b0534-f422-47ae-9779-452fa34aa154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e507482e-fce9-4eb7-90bc-410e3e32359f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41162ec6-01b6-468c-8f42-79d8aae3780e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7925f3a6-c362-46f0-9fd5-9ae4340b2f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dca549a-f45a-4fcf-ac41-6e70e382465e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c4a69f-1283-4df4-a6b2-229c10ec916e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c598141-45b4-48f0-bf05-f5b54bc30663",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d75103-c065-459b-b591-534491586348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "576b675e-fa0d-42e7-8c2d-abb63a862efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd9d579-03ee-4785-ae48-a1d5f569b80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1abe37a-52de-4534-9ef8-b588b070d074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6603bddc-03e7-42f1-8529-2db29eeb74bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81a90c7-719c-4156-9119-a929df498bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1923d086-dfa4-466b-a173-0faf4c43024a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef6f210-308b-4c11-b289-b928df3bf65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2757f2-6b4b-45dd-a1d4-7af856600fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96595fe-b091-4251-a2bc-bd3a9e0f2efd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1b4bbd-3e24-4737-8e05-08ac30847172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd9cf7ec-5c74-408f-9e4e-d58a79fe2eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c3aa1b-daca-4851-9363-7486dc3fa489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0eb657-ab4b-4fd7-ad35-62c4e7614be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513b031c-c66f-47cc-b077-01ba69d08cca",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132b0055-5ad8-446a-be4e-dc5cbe425754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4963c5-5bf6-441d-82c8-ac9f09e84a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec59e9c1-26df-4c78-a089-4fad50ea3041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc4d384-6c15-45f7-bf47-60f445724929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a780843f-9d4d-48db-8f2a-a80f3b1883ee",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541d2fb0-981a-41d7-8d1b-e63aa5c0067e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b7f33d-c341-450b-afec-4f5919b24f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80be1364-4f86-4e7f-89b3-faffe752bb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05180988-3840-4c3d-ac41-f30ce6d1c3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cb06ce-cf9f-46de-965e-26f29ae68057",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e83084-6f9d-4c49-a669-b64489d95c20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212fdede-feef-447c-9644-9b02b1cb642a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47345f7-f504-47e7-869e-a8166eda99b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbfde098-7e7f-43be-b3fd-af198ee8919d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f611bb2a-8878-49c4-b0e4-dc7fbbad57c3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39be8146-2e09-4d58-8541-e7c4ed3ed805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3140c855-8dc9-4429-816c-e08c2d8fd202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275a77a8-e311-4cfc-a9ae-dbf3db49c420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f440513d-62d8-4fa2-99bc-04df61c90b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5ddcd2-e885-4f94-9f9e-bd0ab9936088",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc17b48-2aa0-4efb-9d96-1c3f5f70b3ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb21806-73a7-4877-a08f-a714cd24ff0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1444bf-720d-406c-9321-a88a7e366cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b111c5-c516-4312-9abb-67007cba4b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17f4e7e-ea92-4f08-aabb-4024aeb62a06",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668afbe3-7429-45b9-b581-c16f59919637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b18fb56b-e278-4c11-806a-51550c4dc5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599ee56f-47c5-46f1-b6f8-9bab0eb9af92",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ded4911-0f76-4542-bf62-d77d9f853bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d2bbc1-23b2-4b51-87c3-ba12eec2ab11",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511c8716-d49c-4e25-80c1-cb28cd0c23ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b674a9fb-bbc5-4037-ade8-6a654cb1b0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f10d232-9025-451f-a7b9-6852923faaf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2661eab8-afc3-4303-99c7-43a1f2c41494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc880cf0-1eac-406a-a07a-d027b15dcd77",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce04e9e4-c906-448a-969d-2a18b9c15f35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc22c2c-08ef-413b-85d2-a254d69a59b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f65061-da7d-4781-a7cd-c9c6dd7d40b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ada0e2-e048-4aa4-bd8b-cfea330cd53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439dc718-ad2a-4c7f-b76f-3715ca423aff",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d131e1a-c926-4dbb-abe7-72eba896eff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288b65bd-ea7c-4ea4-b580-7b06730edb3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2ecd80-a1ce-4a57-bc38-bce61b099a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2916c8fd-1e0e-45f4-b0d2-b4610b9e4649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4b98bb-17e6-4988-b718-4dfc07ec5598",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bb7ca2-4807-4598-80ad-7475f59f835f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522bfd90-b9ff-481d-a08b-487d085e9cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5a4285-7625-40e7-b610-20489b3ce28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1299a381-bd30-401a-ae29-cf07834dd7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0846ed-9707-4eda-b25d-494b3e94ad37",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5698a2b6-4a23-4ed5-8e72-268a026fa359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8b5c87-cc7b-4351-83b6-3e760f5aade6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac7659c-4630-42bf-9429-68a0fd9a28e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7707b7-597e-44f2-9dd7-8d2fad267d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113f3fe-2301-4526-b296-11d398f9b46f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e728735a-9418-4b66-8bcc-3353d5b55461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806b0390-fc82-4d6c-b500-0103a98aea41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eacba5-32a3-48b4-9c9d-9c00af1456b8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7094b272-affc-43f2-99a7-dc5d8a6796ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c1653b-d4bf-4a3a-966f-1f6d3b37f1e0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29d8ffe-5a3a-4a0d-8666-1e4200717f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bf6ba5-8c57-484b-b0b2-874532393549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82649cf-65ef-4cfe-a989-93efbd5d4698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f74f79-9a10-4c6a-aca5-5201d9ac6d81"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a94d46c-7f82-4701-91bf-a1703fbfb791",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d62a3d2a-c8aa-4830-98b6-21b6c8f8a9a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f98620a-93ae-4790-8737-b5e9450d53af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "995a333a-882b-413a-9e36-ce358af62091"
                    }
                  }
                ]
              },
              {
                "id": "c6f07853-0331-4f30-8d89-060be34c7075",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8757a3fa-4a04-4216-812b-2c9f95eba2a5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04696c4b-2404-45cb-9f1a-76c1f7a0a45e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f108ab5c-6b68-4f90-a997-eea07836c4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51609b2b-b835-456f-a126-7ddee078b181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80f50061-4c72-4bad-9ab4-0d540a977b63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70a4b8a9-ef2e-44b0-8dff-affff58a48b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c5b550f-c433-4c71-aebe-2c6087f5cb05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f1848ee-4270-4e4d-8e54-7d83dceaf10c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "068d552a-a8b1-4811-b2b4-cb35cd376057"
                    }
                  }
                ]
              },
              {
                "id": "dfd00091-9e82-4728-ba07-40848db4c552",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2eadde88-ad45-442b-83e8-aea34fc64791",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b3b9f5-5931-49ae-8f82-6e2223c878ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9635a897-9149-42b1-b464-2f9b52cb7f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff85e80-7120-4cb1-8b43-fc86f594a505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ec283d-2ce5-44e3-b8bb-636e817f8645"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "46c9d0d1-2ede-4012-bd82-06abd315b0ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a5e42999-a658-4e32-aed5-28af24e19514",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f530fec-6f43-4f49-88d1-e9ac2591ae8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "58841d38-8385-47fb-a48d-2415308b9d0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "117c6808-84c7-42e6-853d-6bde359f907a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf06dad5-b558-49a0-85d2-349dce458da2"
                    }
                  }
                ]
              },
              {
                "id": "92aa6069-6e25-4529-bc0f-3c68a14089a4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efb9dbef-53ef-47d4-badb-f2ff55729ed5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b4417d86-77dd-45bb-8e53-b34842f9d68b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4cea8cb-ad9d-4b06-bce9-985e8cf80a49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e5c8fdc-b138-4e3d-9c39-f99ec3d718c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0610779-cf1a-472b-95a4-77a3fd4578f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b7a5e80-75fb-46ea-a5da-e2e7fc7ad6c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf734b9f-80d7-4973-866a-620d8831a946",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93c32d90-bb18-4a4e-b028-9b082148d426"
            }
          }
        ]
      },
      {
        "id": "1ea2e366-7044-4302-9b01-6110b4fef4b6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0498d7c3-d247-4378-9c0d-dd771da6d2db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f80105c-ca74-4655-a751-e954523f5d5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "824ec6ab-3450-4e98-815d-3c9cf1a9ebed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebb2a8e-ba9c-49f6-be19-b5280dcb4bcf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "604797b5-c952-4ad6-b8fc-90105577357f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d02b066-6342-4c29-95c9-5feb8076ef8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d55e10d8-2c0b-477a-b66c-24aa8d012637"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02c45b73-2c01-478e-baba-71d2abb1fb83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bff15b1d-db5f-468c-9d0f-779b4cfa0f3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d787bd7-2751-4413-9f3b-f6eb991f7ff9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fabc910-ff01-4b0e-96d3-424eee257ba5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e7c537b-a4df-4d1b-816b-a7f0430634ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "39dc3a06-d655-435b-b6f6-5b3f8d12ce66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d262653-c0d0-44fe-a22a-a1f04c0756a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19a8ad7a-355a-4ad4-b7f4-0f7c77539edc"
            }
          }
        ]
      },
      {
        "id": "f908498b-c0dd-4652-ae08-26342bc2ce70",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b28f049e-9b73-4650-9d90-d4f75f466989",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe44b362-2775-461d-9a17-ee554ac489a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04a7871b-6a2e-4ff8-96c9-daefbf206f8f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f794c6c-6cb2-4e77-b193-46951725e1c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a29a339e-2e96-45f0-9131-aeadc55e4961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcbe210-4699-4199-9189-eabf1cdf8129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "430c0cbb-d19b-4a72-b49d-2bb6206208c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e90e701-f5c7-40e7-879c-44b59e4fcd54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b061608-8ff8-4760-a74b-9a55468938b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "761cd55a-0d81-41fe-bcf7-a43e247322ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "311bef5b-1d93-47ea-b3c2-ba4a27d98c19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e641b5e-ae25-432f-beba-ce3602eaf0c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94680145-5111-435a-b228-5616ca70985e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a62d4a65-eaa5-41d2-ab12-37b3c7d40c9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cbac13e-0d32-40fe-873d-58d01c879eb0"
            }
          }
        ]
      },
      {
        "id": "f2c106d0-3103-4b43-b2b3-35fe1a6654ae",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d21f0a4e-4cf4-4a2d-9c78-0c649a9d3d0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "515aa26d-dfbf-4192-b643-422dc531045d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e740c1a1-477e-4d59-8114-4c1b7b8ac71b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c3201d-f985-453b-8b98-aeba392d4001",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ce4f499-0215-4e64-8447-03db205c1db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3bf8b5-4848-47a3-8080-e199d1b4bc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56fd4842-2c4f-4528-b87b-9bcbe0d1c6c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50e0394c-3d2d-4641-a0e0-b4694c0038e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21b4bd57-3cbf-4b21-94fe-708dde73c761"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "713b0445-2018-4598-bb13-338f0f9943ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c9b8b1d-c04c-4ea3-bb06-0766a98935c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8393c79-2328-4f34-9bc8-f03325dbd47c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "532b3d80-f8f1-426e-9e62-49241d0f44f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f0fff12-9fde-49ab-b5c7-c38f2ee789bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e1b60a9-47e0-4e2f-9e21-090aa5946627"
            }
          }
        ]
      },
      {
        "id": "1f8e4cf6-2270-44a8-be76-774077e31ba5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eda82a45-bd4c-423a-9958-a6dc118fa38f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e77df7f-6a92-4980-8715-a99468c7f78f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "38705fdb-4e07-4e4c-8971-913de9b35a31",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1cfd37f-ec7a-4528-879a-7558982f2e55",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9d697fd-3e53-4c02-a0f4-a7ff18492fad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 15.088028169014068,
      "responseMin": 6,
      "responseMax": 465,
      "responseSd": 35.060049055497004,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694392392386,
      "completed": 1694392408092
    },
    "executions": [
      {
        "id": "18506048-fc68-4996-8848-47534e0971cb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "761367f2-50a8-4504-952c-b94d0490107c",
          "httpRequestId": "60a1f1c9-1ccf-42f6-a74e-8158b793d452"
        },
        "item": {
          "id": "18506048-fc68-4996-8848-47534e0971cb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8bcd858f-8700-42f9-907b-0766ccae7318",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 0
        }
      },
      {
        "id": "574ccf02-d716-471f-8d00-27eb73a1d8b7",
        "cursor": {
          "ref": "8503f4b2-0c82-4c51-81a6-bdf76c66b563",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6e0fdaae-e3d1-4818-a42e-8f2631214b91"
        },
        "item": {
          "id": "574ccf02-d716-471f-8d00-27eb73a1d8b7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d052f43b-ab01-4d72-934b-1f8cb778fa69",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e97e1eeb-4c06-4731-b2fe-653bfc20057e",
        "cursor": {
          "ref": "a3c92f73-155a-409a-b511-69087a31aabf",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a0662138-b111-45d7-a3b4-96970a5cf6b6"
        },
        "item": {
          "id": "e97e1eeb-4c06-4731-b2fe-653bfc20057e",
          "name": "did_json"
        },
        "response": {
          "id": "f6374bf7-7e10-4939-aa84-d35a04faedac",
          "status": "OK",
          "code": 200,
          "responseTime": 205,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703926b3-f30d-4cc9-8289-19ad92053957",
        "cursor": {
          "ref": "28abb6c2-21d9-4775-8021-717ddc0576e5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c47dff49-aad5-4655-a1fa-ba60d255f252"
        },
        "item": {
          "id": "703926b3-f30d-4cc9-8289-19ad92053957",
          "name": "did:invalid"
        },
        "response": {
          "id": "d994a2ec-c520-493a-ae30-bafff426465a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703926b3-f30d-4cc9-8289-19ad92053957",
        "cursor": {
          "ref": "28abb6c2-21d9-4775-8021-717ddc0576e5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c47dff49-aad5-4655-a1fa-ba60d255f252"
        },
        "item": {
          "id": "703926b3-f30d-4cc9-8289-19ad92053957",
          "name": "did:invalid"
        },
        "response": {
          "id": "d994a2ec-c520-493a-ae30-bafff426465a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba971d36-18cd-4096-8b37-f84f5f463957",
        "cursor": {
          "ref": "f43c68a5-82bd-43e7-882b-878f6ddee95f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fff77cef-65fb-4483-893f-74d6db4d400e"
        },
        "item": {
          "id": "ba971d36-18cd-4096-8b37-f84f5f463957",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "29e06432-9923-422c-851c-e5bd21c5e59a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6665610f-ce26-4c40-ad2d-5426cc41c02f",
        "cursor": {
          "ref": "c97440b1-65d7-4de8-ac34-33547adb9a1d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b7f22b5c-40f6-457b-870d-221c48231049"
        },
        "item": {
          "id": "6665610f-ce26-4c40-ad2d-5426cc41c02f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6873c53a-7919-4a6e-a6f7-01ca86ad2393",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22301e7-5bb2-4dc8-bc65-d819941e9c23",
        "cursor": {
          "ref": "29900038-6363-461b-9358-92116b984ada",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eacc486c-b36b-449f-a991-63eaa89a551a"
        },
        "item": {
          "id": "f22301e7-5bb2-4dc8-bc65-d819941e9c23",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "919f812a-cc57-4d26-8cb6-c34618954c64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b167d6-0d96-4b1c-a47e-4f811118394c",
        "cursor": {
          "ref": "be744329-8f31-41d4-8309-6fda6e5a3afc",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5a057b6-2749-434a-acdc-8ec906b4857c"
        },
        "item": {
          "id": "93b167d6-0d96-4b1c-a47e-4f811118394c",
          "name": "identifiers"
        },
        "response": {
          "id": "f341b804-5b71-4245-a870-0b30f112dc93",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34fea23-941b-40f5-a9db-414fa7374422",
        "cursor": {
          "ref": "0e52a102-a90b-4571-b808-29b55522676e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e32328bf-8abf-4398-b111-fd0380892c31"
        },
        "item": {
          "id": "e34fea23-941b-40f5-a9db-414fa7374422",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8c9da09d-989c-4bcc-9df1-d53825cc8791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b9d195-0453-44da-bd8b-2d1adbe7e252",
        "cursor": {
          "ref": "2a39ec48-e2a3-4af1-ad37-3623fa4d6dab",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2995f722-5954-4f4b-8257-295f1d908c5f"
        },
        "item": {
          "id": "10b9d195-0453-44da-bd8b-2d1adbe7e252",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "afc2caaf-1f35-4db8-af31-c5cbc15448d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10857c5f-71d7-4e23-afe4-eb9f9d662f3c",
        "cursor": {
          "ref": "700581ec-c594-4e61-8df2-bd801614e914",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fd21aec0-4221-454e-a0e7-b846ec7806f2"
        },
        "item": {
          "id": "10857c5f-71d7-4e23-afe4-eb9f9d662f3c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "655e270c-8d35-48b8-8897-cfa46bb9f831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a434ee-7e7e-4cd8-9c29-1059f7a023f2",
        "cursor": {
          "ref": "9559ea47-8269-4814-b82f-59be6fdac5bb",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "efefb138-58ba-4af4-815d-6507a9e377f2"
        },
        "item": {
          "id": "68a434ee-7e7e-4cd8-9c29-1059f7a023f2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "197773b4-def0-4656-81c2-8cd006d9754c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94375bc8-ad4a-48ef-a4a1-1a5ff583cd5c",
        "cursor": {
          "ref": "a4b1dcd2-7b24-4c13-a536-df7c41dccd54",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6be79412-9931-4142-a0e9-dcb41bd6eb82"
        },
        "item": {
          "id": "94375bc8-ad4a-48ef-a4a1-1a5ff583cd5c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3122c8aa-cc20-491d-8d56-f98e8d3391ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fa894e-bc3b-478b-9a35-ff662349aa42",
        "cursor": {
          "ref": "040a8d7e-9176-4804-9680-c08b687e8460",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2b9d419a-d1da-4510-aa15-7c3a598fa0f1"
        },
        "item": {
          "id": "32fa894e-bc3b-478b-9a35-ff662349aa42",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "418c8983-b363-4f76-9eb4-0b86c68e4ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f55d63-90c4-4d5b-96ce-9bac4ff2237f",
        "cursor": {
          "ref": "e87a20c2-6edc-482b-978d-226739014b07",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7711b95b-ab14-4413-9029-4ab9eb7b89ea"
        },
        "item": {
          "id": "12f55d63-90c4-4d5b-96ce-9bac4ff2237f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8a42cea5-0545-442d-b481-f483c98e2cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90aa8ac-e2be-4bc8-bf37-e50380049431",
        "cursor": {
          "ref": "5d7a8a51-8c6b-4b81-b48c-d9e17b565e05",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bafbbc77-f504-4879-8b07-4f542600b9b9"
        },
        "item": {
          "id": "d90aa8ac-e2be-4bc8-bf37-e50380049431",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e85cc4b6-854b-42aa-bcad-01f5fb9874bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fff848-a362-4217-8bdf-06cc3e7d7903",
        "cursor": {
          "ref": "f103e082-7011-472c-ad58-1f2c06a2b4ca",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1d09c993-5ea7-433b-bcbc-1d52d3829898"
        },
        "item": {
          "id": "c9fff848-a362-4217-8bdf-06cc3e7d7903",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c5fe6348-3261-4166-8cf7-75b2b08ef5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cd6507-25f0-4b5c-bb8b-0bb38ad00ef0",
        "cursor": {
          "ref": "9f7ed454-9383-4189-929b-75b0fbb988f2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "863b6b6b-44a9-45e1-9438-fb3a1bdb64f6"
        },
        "item": {
          "id": "26cd6507-25f0-4b5c-bb8b-0bb38ad00ef0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "52b1f50d-fcfb-4e54-bae1-bbf054df23ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164f443f-911d-4ae3-9f81-edd9339aa75d",
        "cursor": {
          "ref": "108dde7b-efd8-4ccc-bdaa-736da885ea2e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "aff7a765-ac52-4f8a-af03-92ce6b9545a0"
        },
        "item": {
          "id": "164f443f-911d-4ae3-9f81-edd9339aa75d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "be31d224-7e1f-4597-80ac-3c03eb8760ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a4a18d-f3e5-41c2-a3b0-d9e72fe40351",
        "cursor": {
          "ref": "f0e5c48e-f5c0-4bc4-827d-8e942cb4741f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "243e751b-b789-45a4-84ad-2d845f2cdd1e"
        },
        "item": {
          "id": "40a4a18d-f3e5-41c2-a3b0-d9e72fe40351",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bbf403fc-a985-40c2-81f7-a11ba2515801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43135dd4-ee9e-4b9f-b77d-1bd681e5e5e6",
        "cursor": {
          "ref": "a77c8301-0349-4177-b448-77dad748d9e9",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cfbfb52b-6ebc-4464-b469-761057b2b945"
        },
        "item": {
          "id": "43135dd4-ee9e-4b9f-b77d-1bd681e5e5e6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "957cbbd0-b63e-4c5a-bff4-810991f231b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159752a9-8ad9-4792-9958-a5fe11263586",
        "cursor": {
          "ref": "f876ebe4-e0b4-4ba1-b928-08f80e5272e3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f436619c-747b-4d70-98d2-92853e6c0499"
        },
        "item": {
          "id": "159752a9-8ad9-4792-9958-a5fe11263586",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "863a0bb4-52bb-4014-9eb6-478fd36e0100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302931f8-2353-4647-9f6d-15662763f3ef",
        "cursor": {
          "ref": "79e99dc9-3f64-4f45-937a-8061c030ddd7",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6fc8261c-af52-45c0-b662-2fb236564250"
        },
        "item": {
          "id": "302931f8-2353-4647-9f6d-15662763f3ef",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "15bfd3ff-12bc-4742-ba5a-7d80550bc7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4686501-03a8-4fac-b76b-9211ea6b690a",
        "cursor": {
          "ref": "728bc888-afb6-4657-8034-a0b68a3747e2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f6a30a2f-a770-408b-a577-d9626e394f40"
        },
        "item": {
          "id": "d4686501-03a8-4fac-b76b-9211ea6b690a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4f8c3c78-8a90-4e74-8dd9-d3f673370680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d0770f-ec5f-41ae-8a75-df8c8ab13b21",
        "cursor": {
          "ref": "994933ee-a4e9-456a-aafa-dda4055c0d3f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1ff039d0-793c-4f27-a7e8-d644103fc324"
        },
        "item": {
          "id": "a1d0770f-ec5f-41ae-8a75-df8c8ab13b21",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d2ccd88d-f375-443c-846e-fc8b767e06c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae1df27-1705-4b0d-9a76-97c33a17e1da",
        "cursor": {
          "ref": "647df25e-cc23-4b9a-957f-6ceafa620c58",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9381cf1a-0239-4b5c-b0f3-254b8a42d478"
        },
        "item": {
          "id": "cae1df27-1705-4b0d-9a76-97c33a17e1da",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a2f1ec04-9fdd-4dcd-9cb4-048436469300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e55615-b9a8-435f-82fe-50ae6d43e50b",
        "cursor": {
          "ref": "3fb62393-ea91-42c0-b44f-309efb6319ce",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1460ba1f-8e91-4568-85c2-61264b9f89cd"
        },
        "item": {
          "id": "f6e55615-b9a8-435f-82fe-50ae6d43e50b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3e264f5e-f2ed-4bbe-96b8-33c7c23c5b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b8cca7-8d93-4ed6-84c3-001f21acdd4b",
        "cursor": {
          "ref": "66e33140-ba9e-459f-a5ce-a3482dabb85a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "14a7b564-8718-4036-8393-ed50ca8c1208"
        },
        "item": {
          "id": "51b8cca7-8d93-4ed6-84c3-001f21acdd4b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1e9d4009-6d72-44e0-b76f-40e4d7764856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91303889-fef0-4362-8351-a9d5e61f5191",
        "cursor": {
          "ref": "c13e359e-4ca6-4ebf-88f0-a8c6d50e08b3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7c34b821-eed3-42a3-a282-f5eb1e1002cd"
        },
        "item": {
          "id": "91303889-fef0-4362-8351-a9d5e61f5191",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "68cc7d72-4628-44ac-913d-bad99acb359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0553e04f-4ad3-4dd7-a933-b360c420f721",
        "cursor": {
          "ref": "70a8f545-b185-4f05-a0d5-a804890a19be",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8efc2c2f-6a2a-4ac3-9c96-abee6f7e4d86"
        },
        "item": {
          "id": "0553e04f-4ad3-4dd7-a933-b360c420f721",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3d40f563-093d-4e7c-a43f-7818a0f153be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce70b2c-0fb3-47db-9768-70f533778e04",
        "cursor": {
          "ref": "8df4a847-b982-4c17-88d5-741c4a3ac195",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "83d6ea7e-78bf-4f27-a75d-29df09c95710"
        },
        "item": {
          "id": "7ce70b2c-0fb3-47db-9768-70f533778e04",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "15b99ce5-552f-48d1-aecc-2dc09511a593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cecec9-15eb-482d-8b13-b5f3239a40aa",
        "cursor": {
          "ref": "f10e6713-0631-45d4-b6b3-2d5a06da4633",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "954fa057-0b00-419d-9138-c3d198d960c5"
        },
        "item": {
          "id": "f0cecec9-15eb-482d-8b13-b5f3239a40aa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "37f75dbb-492d-4596-9966-24da2146765a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9700c0c2-56dc-4b64-af15-d108990d19ef",
        "cursor": {
          "ref": "852e8253-4338-48f3-a67b-7b0cab389d7b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a5ddc869-413b-47c1-aaa7-501080cfa8f1"
        },
        "item": {
          "id": "9700c0c2-56dc-4b64-af15-d108990d19ef",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d0a70ca0-0592-42b6-9925-1f97588cb774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f24c10-28c3-4297-b33e-d9719c8ca64f",
        "cursor": {
          "ref": "ba638af4-73d7-4009-8f1e-9619c2dbb3b7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2ede6ffd-58b3-4b8e-8c07-9e3017206fe4"
        },
        "item": {
          "id": "09f24c10-28c3-4297-b33e-d9719c8ca64f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "462c6300-395d-4c28-8855-fa66d1b6fa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8539f2-e6ec-41dd-8b42-d38d76022ee1",
        "cursor": {
          "ref": "4dc4e2cc-514f-4d68-8265-7d69b23b745a",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9902690d-0479-44de-a009-8cd44cfec8e4"
        },
        "item": {
          "id": "cd8539f2-e6ec-41dd-8b42-d38d76022ee1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "23419f8e-431d-44cb-8dad-4fe631d1c04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b0afaa-c509-4df6-8663-d237b745d53f",
        "cursor": {
          "ref": "4ea23bc9-6a97-4055-95d8-6268f89770dd",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ce2304e7-942e-4207-91f0-c3f3d6b563ab"
        },
        "item": {
          "id": "83b0afaa-c509-4df6-8663-d237b745d53f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "02afa38a-d8d3-4947-a2e9-e83297e639f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c490af1-16ff-42de-b12e-1953e7e349dc",
        "cursor": {
          "ref": "affda422-ca91-4a3e-8cd2-9e20d654c5f1",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fcf5bdbf-988f-4be2-948f-c6a52d0c8187"
        },
        "item": {
          "id": "6c490af1-16ff-42de-b12e-1953e7e349dc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f281570d-59ad-4187-bbf3-ca9b2ba82e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61fb900-c98f-4732-8f26-031e3d50715a",
        "cursor": {
          "ref": "2da3fc08-6ff2-4e48-ae42-7e1d7ac6dab3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2e6eb1f3-9abb-43ab-89d4-28a1a3120b25"
        },
        "item": {
          "id": "a61fb900-c98f-4732-8f26-031e3d50715a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e422263a-5a4e-4c00-973a-b297607d8cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea04eb2-20a1-4caa-a232-41000d8180e4",
        "cursor": {
          "ref": "f297440f-be79-4712-ac52-94506c69a6a6",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d393c5c0-8c92-4286-bd94-e3fee45cf8fc"
        },
        "item": {
          "id": "3ea04eb2-20a1-4caa-a232-41000d8180e4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "70e8e603-9e3d-4a6a-80ab-fc574bbc31c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e23b333-ed69-4e7c-9f37-d8c152a52f88",
        "cursor": {
          "ref": "a7bbfaff-4853-4554-b3ee-1d2fa8fa12ff",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d0d7342b-bf89-46c3-b40f-c36eb28f37f3"
        },
        "item": {
          "id": "4e23b333-ed69-4e7c-9f37-d8c152a52f88",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fc3e80ca-fc19-4253-828a-8c7be219ba00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56347bc9-3402-4440-b0f7-80299f324c16",
        "cursor": {
          "ref": "7715ad0f-6297-4ca0-91a5-27f15d32311c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7f5b2429-3ec5-4910-bf9e-eb50ae2722ee"
        },
        "item": {
          "id": "56347bc9-3402-4440-b0f7-80299f324c16",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8505a621-9b91-485c-bcaf-75ccbbdc812f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18dc6e7-7841-4f97-aba8-2da051a0a116",
        "cursor": {
          "ref": "13d57080-eb01-4d5c-be75-bfa9bf049a12",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e7bb6539-bb3d-4e44-8586-b12770d65302"
        },
        "item": {
          "id": "a18dc6e7-7841-4f97-aba8-2da051a0a116",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2a417b44-9634-49b0-aa7e-8bf1ec209ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecf4759-0eda-47ea-b56c-5a733be12d63",
        "cursor": {
          "ref": "33957fcc-23f9-48e5-aa94-539e3b27a770",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f51ae008-d624-4a13-b464-7ee94d84cfd6"
        },
        "item": {
          "id": "aecf4759-0eda-47ea-b56c-5a733be12d63",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d1c6d667-9296-4a6d-931c-5301c83a6b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c7692e-2fa6-4948-9308-643a814a4276",
        "cursor": {
          "ref": "c8f1aefa-c349-4bf2-9d95-b0fbf54f5574",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "58dd9ebe-5fe2-427b-b6b9-8d199cde1725"
        },
        "item": {
          "id": "26c7692e-2fa6-4948-9308-643a814a4276",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c0b7282a-9744-4891-964b-5115d4ddb6ab",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceadf09f-5d2a-4551-b082-97052f9125ab",
        "cursor": {
          "ref": "3ce01ee4-32a8-4bfe-87b9-3bf4e8a6f3f6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3f8d8703-5706-407b-9fba-4a44c4198686"
        },
        "item": {
          "id": "ceadf09f-5d2a-4551-b082-97052f9125ab",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f75017fe-e6ae-409f-a896-a848acdc469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e265590d-ca55-42b4-980a-f968589b25b5",
        "cursor": {
          "ref": "a67639ea-aef7-495e-82fb-086610462d65",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "af1c6cac-953f-4df0-8ec8-f256ef21a88f"
        },
        "item": {
          "id": "e265590d-ca55-42b4-980a-f968589b25b5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c3f2f376-9982-477a-84d7-670563fd7e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1412c44-1d9b-42a5-9b1b-cad0d3c34f43",
        "cursor": {
          "ref": "90ecf37c-c110-4cb6-8a88-8f5fc4f8f195",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "72816236-834d-49a1-a315-207ae8d1eb1c"
        },
        "item": {
          "id": "f1412c44-1d9b-42a5-9b1b-cad0d3c34f43",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "62278576-bffb-498a-a486-20f9a2fc75b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9888e0e0-d67e-4eae-ba71-fe164df36702",
        "cursor": {
          "ref": "eb9419f1-4d98-4def-9658-a39deefdf643",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2caf5d99-6fd0-4f28-b4c9-a643f7b2b451"
        },
        "item": {
          "id": "9888e0e0-d67e-4eae-ba71-fe164df36702",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6a2cfc3a-69b7-4d80-8d53-4c9851b34a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef61e2c-702b-4ff5-8fb3-5f1472234468",
        "cursor": {
          "ref": "912f76f5-dc6d-4b45-863b-f1d9fca80082",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "01542098-ae11-46b6-8a1f-1c01a6e73dd3"
        },
        "item": {
          "id": "9ef61e2c-702b-4ff5-8fb3-5f1472234468",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c35be3b5-de40-4694-9f5d-b6ca06c631c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5c26d6-c1b1-4701-99d5-207ebb8219a6",
        "cursor": {
          "ref": "ef9b5866-1875-4033-a8b4-a58bac3ed1b4",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bdd115d8-bc94-4a8a-9df9-9e0f795ceb41"
        },
        "item": {
          "id": "2f5c26d6-c1b1-4701-99d5-207ebb8219a6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1081b5c4-019e-4fc0-8de3-6893bf0664a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad238bf-7e5d-4974-a0a9-c0cdfeee25dc",
        "cursor": {
          "ref": "0a682a85-6158-41fb-a103-076ed557a3ca",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6ad7d26a-5cd3-450d-8e32-feaba96f9af8"
        },
        "item": {
          "id": "cad238bf-7e5d-4974-a0a9-c0cdfeee25dc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0f089c85-9b0f-4b4f-83f0-3654d500b4cd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08688524-2adc-451d-a78a-1baf86e41557",
        "cursor": {
          "ref": "fd8f2f9f-3a6b-45fa-9ca7-e67190db6005",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "74b57c82-99b5-4b4f-aa59-6b3d32d1e06a"
        },
        "item": {
          "id": "08688524-2adc-451d-a78a-1baf86e41557",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b6679359-3226-4fad-b3a9-c53cb54c57be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332812f0-577f-4723-93dc-7045d93565ea",
        "cursor": {
          "ref": "1d507bbc-0092-4a50-befb-14b32cf1459c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f32387e1-52dd-4bf9-9a8a-8636faecfb01"
        },
        "item": {
          "id": "332812f0-577f-4723-93dc-7045d93565ea",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "33d74607-6e44-4e1d-ac11-9dea4fa1ffe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa73b60-9925-4981-8d85-5b9f2b9d8154",
        "cursor": {
          "ref": "d1304b37-9b77-4c13-97e1-61897600b944",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f8d4c368-3ca4-4734-aef0-9c561e9f03c3"
        },
        "item": {
          "id": "6fa73b60-9925-4981-8d85-5b9f2b9d8154",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b71f955f-0a32-4f74-b6c5-89e83d9a3abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaa241b-fde2-4e40-bbe7-1d1a9a156167",
        "cursor": {
          "ref": "3793f29c-63d6-4605-8427-3f0fabad15f7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9c332b44-b579-40fd-82ac-37579ae2fbe7"
        },
        "item": {
          "id": "caaa241b-fde2-4e40-bbe7-1d1a9a156167",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "92c2a883-bed7-4734-8c3a-18bfcc5212c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccf7b83-a421-4b19-b06c-dd0a41bad387",
        "cursor": {
          "ref": "f8da6647-fea5-4432-a535-bbdab439fa35",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b2d98d4-44ca-4d15-86ef-150cc42a8579"
        },
        "item": {
          "id": "6ccf7b83-a421-4b19-b06c-dd0a41bad387",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4d46fcb4-330e-4377-9eec-01dd69ba9c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da504db0-8fa3-49a6-892a-995d9cf488dc",
        "cursor": {
          "ref": "12cc6486-1908-47f4-8df7-8561885eb4ec",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "902ec4d2-f57d-4982-b71d-d70c3edece4b"
        },
        "item": {
          "id": "da504db0-8fa3-49a6-892a-995d9cf488dc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a9bc4d5a-a920-42ba-ad37-9668bd72a1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e570e22-a2e9-4981-9c39-489d3715043f",
        "cursor": {
          "ref": "74c040c0-5564-43f7-97ed-feeb2f93e82c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6b730ee5-fe5c-42ac-a65e-f5532dc92e6d"
        },
        "item": {
          "id": "0e570e22-a2e9-4981-9c39-489d3715043f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1f00c1b5-ce7c-4525-8425-517c4fefff5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4977b77f-3a7b-4b98-ae89-66698a2042d2",
        "cursor": {
          "ref": "dd130f84-605f-4dcc-8cdb-d258c73a2118",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "53070163-fbb4-46b1-9af6-06f7a3c33dba"
        },
        "item": {
          "id": "4977b77f-3a7b-4b98-ae89-66698a2042d2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f643d2e5-23d1-4e55-af9c-a2c0e740a961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69874108-8da8-403f-9459-257ac946bfa7",
        "cursor": {
          "ref": "1bc94459-9a00-4ffa-9f89-4bacdccca740",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "73d1caad-0ed3-4e62-b8b4-0969d22b9855"
        },
        "item": {
          "id": "69874108-8da8-403f-9459-257ac946bfa7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c0081d0c-2520-4b1e-acbe-3bddcde2a170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79973a0-b6ce-444d-902f-2d37265ac5dd",
        "cursor": {
          "ref": "6adc6b43-8447-4407-98e1-439f6b6a2b53",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "64ae1c75-e634-4e73-b2e1-ba70cd0045d9"
        },
        "item": {
          "id": "b79973a0-b6ce-444d-902f-2d37265ac5dd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2a7a4e14-f43c-40ec-b5de-d44cc6aee711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54436927-3bae-4ccb-9bd4-c58325a7d032",
        "cursor": {
          "ref": "abf51bdd-4333-43a6-a121-19e9c7367c62",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "43f58a40-55d7-4787-b85d-790bffba16c7"
        },
        "item": {
          "id": "54436927-3bae-4ccb-9bd4-c58325a7d032",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f13badcf-2c3a-40f6-9d09-ebbff523551a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733114bd-89ee-4970-83c6-547e658a27b5",
        "cursor": {
          "ref": "da93d583-c8ed-4530-b067-c285e66ef4cc",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f332968d-ce3f-41dd-881d-19e78b297c91"
        },
        "item": {
          "id": "733114bd-89ee-4970-83c6-547e658a27b5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3d415612-936a-41a4-b3a9-cff0d1c995d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf9e53b-6eb6-4895-b3ca-36a63161aabb",
        "cursor": {
          "ref": "b4d7d0f3-2f77-4a3e-bb2b-8442dad1e196",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6f7e61e1-6522-429e-8d32-bbf38a262009"
        },
        "item": {
          "id": "faf9e53b-6eb6-4895-b3ca-36a63161aabb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "762c3bb6-77c2-4167-a420-60f2f0834b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e47dd94-3a7f-4b17-8033-ff657faa4e76",
        "cursor": {
          "ref": "420a911c-906e-438b-b447-03f2b7678ed9",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e5ac5aef-81da-4fb0-af17-3208baf38b22"
        },
        "item": {
          "id": "7e47dd94-3a7f-4b17-8033-ff657faa4e76",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "329c83b4-bcd4-443c-b7fa-09ff35922ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e947c299-37ba-48d5-865b-d9e9e356a9fb",
        "cursor": {
          "ref": "d8580615-db1c-4e27-9507-e9f158b41b6f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "61371184-212b-4d39-a0bf-240858d87726"
        },
        "item": {
          "id": "e947c299-37ba-48d5-865b-d9e9e356a9fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "07de2105-9382-4551-8d7a-7691b56603e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f92ef65-561a-4005-815a-7cf3c93def8b",
        "cursor": {
          "ref": "0560885f-4f28-426a-8766-aef26c5dc02a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b755f296-fa60-4993-ace3-6bb03bd19f4c"
        },
        "item": {
          "id": "2f92ef65-561a-4005-815a-7cf3c93def8b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "81fe2a29-b456-45ac-b430-a347cbc02105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de192a9-d909-4802-9f63-fb62d19c620e",
        "cursor": {
          "ref": "ff8407dc-d4bc-4b0c-bc72-260dd61f154d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "49a74cf0-9848-445a-8489-312ecb557f2d"
        },
        "item": {
          "id": "5de192a9-d909-4802-9f63-fb62d19c620e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "63a16195-042c-40f7-9387-be0ac5213d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f603de-dd66-479b-b212-da1c1959f168",
        "cursor": {
          "ref": "98487456-2f05-451e-a2d2-759b473804bb",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4add5e15-42aa-4466-8ca7-a81fcd6a7192"
        },
        "item": {
          "id": "06f603de-dd66-479b-b212-da1c1959f168",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6651b915-1259-4ddb-8127-31be234076cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83135a8-a207-4e21-a1ae-85e0a8189054",
        "cursor": {
          "ref": "b4ba6832-3724-4951-8f49-2bc325c89eea",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8cf0084f-5000-4f95-88cd-7321cb10330c"
        },
        "item": {
          "id": "b83135a8-a207-4e21-a1ae-85e0a8189054",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b24dbac1-74f6-4aa9-a705-ee35f75a5be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a38c918-117a-49fe-bd1c-ce66ce50a9e8",
        "cursor": {
          "ref": "3df7a6fd-b1f1-4e6c-8fd7-a64883c9ebe9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c460fa59-a93d-42a4-a7c4-79fb38385248"
        },
        "item": {
          "id": "5a38c918-117a-49fe-bd1c-ce66ce50a9e8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e78cc0f7-69de-455f-8709-bd0b7b7347a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932a9696-0907-47d2-b034-6b534e3b1a15",
        "cursor": {
          "ref": "983900b0-6edd-401b-8ae3-e441011787d8",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "76f5ab6a-3490-408e-b43c-b1c5ccc0ad6a"
        },
        "item": {
          "id": "932a9696-0907-47d2-b034-6b534e3b1a15",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ae099cdd-464e-4bcd-a994-1aa41bc88f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960c4366-49cf-4360-bd68-a23ec0de3929",
        "cursor": {
          "ref": "22123148-7324-47ee-b33e-9d2f36102bd0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "96c9fcdc-043e-4e77-a76d-8295f8e9c327"
        },
        "item": {
          "id": "960c4366-49cf-4360-bd68-a23ec0de3929",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fe66d897-3e27-4c5a-bf4e-74c2d5a98f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08b4948-771b-4141-8da0-04c299667429",
        "cursor": {
          "ref": "cdd769ee-560f-44ab-b979-179f4c7fbfcb",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7feb1f9a-a107-445d-a5bc-baaab1ce8184"
        },
        "item": {
          "id": "c08b4948-771b-4141-8da0-04c299667429",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0701afa8-b801-48b5-bc09-5042ed253ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b7fe2a-bbd7-4ef8-bba8-ef4e9fdb1ea5",
        "cursor": {
          "ref": "a788fd1d-d1ef-4b60-943c-eddf0fac1c28",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a76ee6d7-e885-4833-ab38-19ebab6c2482"
        },
        "item": {
          "id": "66b7fe2a-bbd7-4ef8-bba8-ef4e9fdb1ea5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "880189bc-2c5c-48d2-85b3-43f1c014c676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50af3764-14d2-4ae3-a23c-d0e0aa4f697a",
        "cursor": {
          "ref": "b0ace20d-e0e7-4ad8-b931-5bca889928b0",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4765f806-43a9-4f85-b73d-0e9d31a3ac15"
        },
        "item": {
          "id": "50af3764-14d2-4ae3-a23c-d0e0aa4f697a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c5ed15a2-17d7-464e-9fde-e92dd567671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8c5e5d-3a7f-407d-9e09-ceb1683316f1",
        "cursor": {
          "ref": "9e158235-5830-4122-8f84-889e1c995a11",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "95dad63c-ce5d-4bbb-be90-df6fd0abcfe2"
        },
        "item": {
          "id": "3c8c5e5d-3a7f-407d-9e09-ceb1683316f1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f71225bc-c136-414c-9350-945db6bd1baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb00421-f1a6-4319-b59c-eb235af54e30",
        "cursor": {
          "ref": "384224e6-5e41-43d2-9398-dda01f3afbf5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7c21325e-4aa0-421f-8e81-f278f015b454"
        },
        "item": {
          "id": "6cb00421-f1a6-4319-b59c-eb235af54e30",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "af432411-993a-41a2-9220-5eda45c0c0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32935157-9383-4a0f-a7f4-b915c71f511a",
        "cursor": {
          "ref": "1aaa4112-eacb-4e1e-b5bc-039744b9b1e0",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4a02bd62-53b7-41e7-b110-3806ffb0a053"
        },
        "item": {
          "id": "32935157-9383-4a0f-a7f4-b915c71f511a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ca423b76-dc0b-486c-852b-47697662ac26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06759f0f-ae47-4198-aa52-864247611983",
        "cursor": {
          "ref": "695fe811-04b6-4834-98e0-1b91b1097c6a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b83169a2-d840-4987-836b-78688d119cae"
        },
        "item": {
          "id": "06759f0f-ae47-4198-aa52-864247611983",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d2190ce1-e5e5-427a-9b4e-ca0a47d051ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347352c4-c40f-488e-b116-1be154c4421a",
        "cursor": {
          "ref": "6230dd88-c1fd-457d-a8e4-114efd7a517d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1d00f6e9-a630-4a6a-b815-a3fe24c2ecc5"
        },
        "item": {
          "id": "347352c4-c40f-488e-b116-1be154c4421a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "58b46993-f996-416d-96fc-e6d48ccaa2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70340893-7068-4e9b-ad6c-6e0f3c0b13d8",
        "cursor": {
          "ref": "8d898e19-7f63-401f-b727-692a957015aa",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "21d6120a-4b79-438b-bf06-960fe7a643f6"
        },
        "item": {
          "id": "70340893-7068-4e9b-ad6c-6e0f3c0b13d8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2e1a861e-851a-4267-bb91-fceb727c119e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c751374e-c632-4c10-a1bc-b1a958a5a52c",
        "cursor": {
          "ref": "6b1b5ddf-b2d4-4e4d-95cd-06fc54facd3a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bcf81ca6-7ead-4f5b-be08-e5c6a1df951e"
        },
        "item": {
          "id": "c751374e-c632-4c10-a1bc-b1a958a5a52c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e6632147-0c4f-4acb-9150-68290abc8700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bd186b-9643-407b-9a0d-6fc348588089",
        "cursor": {
          "ref": "ae4106e9-59dd-4e78-b0fa-32c223bd8aab",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0c0e7afa-07d9-4446-b44e-b335dbb238eb"
        },
        "item": {
          "id": "56bd186b-9643-407b-9a0d-6fc348588089",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1da9d856-90ab-4a94-aa2d-922dd484260d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe709ed8-d010-4be6-8445-6df5342d44f0",
        "cursor": {
          "ref": "b5946492-57a6-44e3-b771-539d3d440a42",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9076b4ae-2517-421f-9f02-a8c77265f490"
        },
        "item": {
          "id": "fe709ed8-d010-4be6-8445-6df5342d44f0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f605687f-d09f-4067-9e97-19b81580e993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd108f1-d275-413e-b898-0e3ef7ead242",
        "cursor": {
          "ref": "cdc92b66-23e6-4530-90b4-ac770ce61f8f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e7e3519a-2093-4033-a5d6-7d2cae8c744c"
        },
        "item": {
          "id": "0bd108f1-d275-413e-b898-0e3ef7ead242",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1cb5c3a5-7702-4bd4-94d1-55db410b39ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f680ddd-ca12-4845-b75c-d4e0daa344c5",
        "cursor": {
          "ref": "ca609ad9-9592-4880-8416-ab9c2f286794",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c0fb7014-ec46-4de8-83c5-5335034aad60"
        },
        "item": {
          "id": "1f680ddd-ca12-4845-b75c-d4e0daa344c5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "23cf42c0-807d-411d-9f7f-b97d9d535919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cb10a1-a520-415c-a4eb-3484f97ad3a9",
        "cursor": {
          "ref": "32c07bb0-65bd-4b49-b8e9-42fa7d95e660",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "48c1d819-ed3e-4527-8b66-753b4863d46b"
        },
        "item": {
          "id": "d9cb10a1-a520-415c-a4eb-3484f97ad3a9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f46b21d8-50af-40c1-a40d-6e36ba2079a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336a0e59-2483-44ca-ab40-fd93546edef3",
        "cursor": {
          "ref": "127d894b-9dab-40c4-bd63-b9e0f59b6cee",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dfcb9122-9bd3-4e6e-bf6c-133e9a3b3cad"
        },
        "item": {
          "id": "336a0e59-2483-44ca-ab40-fd93546edef3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "60729214-89be-4147-a192-5751a54a2294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3519db-11f4-4721-a97f-d610d03dc857",
        "cursor": {
          "ref": "e3fe7492-5ad6-4744-8126-190ce7ad7930",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7e3538c6-3686-44c6-9c89-732c6c3a9da7"
        },
        "item": {
          "id": "1f3519db-11f4-4721-a97f-d610d03dc857",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2d983890-6cd2-4fc0-ab17-c0e9f108dc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8547144c-627e-481a-bba3-2b97ae2b8a18",
        "cursor": {
          "ref": "15bc6257-0c92-4bea-a85a-c3acdcb4f18c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6b3d1b55-7d54-45c8-b41b-0117bb655f5c"
        },
        "item": {
          "id": "8547144c-627e-481a-bba3-2b97ae2b8a18",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cb273a7b-af38-4109-afc5-af9c1b705c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370ef7ee-b128-42a0-9a46-29dc9a649ab6",
        "cursor": {
          "ref": "c7f65d4d-9d1d-4c85-8eb6-4d9d46cd987e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "462f0cf7-1255-4c4e-8ac5-cb4ca8f87785"
        },
        "item": {
          "id": "370ef7ee-b128-42a0-9a46-29dc9a649ab6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "238a2dac-9d94-4cbd-bccd-97372ec759a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8484c3fd-9de7-42e7-a726-971ca5bb989e",
        "cursor": {
          "ref": "9fbb4d84-fbcb-46ca-b0b5-73ae1e404961",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "232c95e8-d4cf-49a2-8dc2-c919e7f7baf8"
        },
        "item": {
          "id": "8484c3fd-9de7-42e7-a726-971ca5bb989e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "636b6c75-dffa-4337-93c8-a48506a63b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3335a733-dfc7-4285-95bf-dcc5671070aa",
        "cursor": {
          "ref": "dae60b99-ce66-4df9-b6f1-a6e87f734972",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bacae5e8-3235-4928-b719-1715d3971f95"
        },
        "item": {
          "id": "3335a733-dfc7-4285-95bf-dcc5671070aa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d6848367-80f8-4fb8-83ac-3c1adfbab9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5705fe24-e689-49ba-8068-ada076279a6c",
        "cursor": {
          "ref": "c09217c2-d8bf-4e86-ad1d-e7926b97a17a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "71f7bfca-95f0-476a-81eb-84a956530e92"
        },
        "item": {
          "id": "5705fe24-e689-49ba-8068-ada076279a6c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6e2a9b75-9bd9-4b76-94e1-7375bd67d1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f863f3-ea39-4c4a-9db8-be151eb9edf7",
        "cursor": {
          "ref": "80efe42d-d3fb-4172-a3b1-2a91afdf29d5",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "84621765-4c3b-434c-a7c8-299411eeed8f"
        },
        "item": {
          "id": "b9f863f3-ea39-4c4a-9db8-be151eb9edf7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "23da4d1f-20b2-499e-814f-47162a9c0d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd15ab3-56c8-4b94-bb90-07ec2a24be2d",
        "cursor": {
          "ref": "03986963-a11e-4f4f-ae6b-98c7840ccd3d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6bc00e53-21c6-4841-961a-96ee3b2064f9"
        },
        "item": {
          "id": "8fd15ab3-56c8-4b94-bb90-07ec2a24be2d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6e801775-6955-4f41-b0d1-efc5c56785b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef1f009-fe5b-407a-a883-62fc4b4a1af2",
        "cursor": {
          "ref": "1b0656e3-4c08-444b-aae6-10b8828b28ec",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "64c7b12d-968d-4b65-b2e6-b71053695b51"
        },
        "item": {
          "id": "4ef1f009-fe5b-407a-a883-62fc4b4a1af2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7aa28fc6-489a-4b5f-9ad0-18360f1e689b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6048f0b7-9653-48c7-a6f6-d8bbe5f80caf",
        "cursor": {
          "ref": "6443def6-7abe-4c15-a9d6-9de5f07f3d5f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ac5dcb38-7d8e-4a11-a876-4494578a9b3c"
        },
        "item": {
          "id": "6048f0b7-9653-48c7-a6f6-d8bbe5f80caf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c8db5534-b33c-4471-8059-56182e38902a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012ce83f-d8b3-44b3-9a16-da66cb5af30d",
        "cursor": {
          "ref": "8ebf2132-7cd4-4b44-903b-3c9a8f0af74f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b04bb9c3-650c-41fe-98c6-1dfbf5b28d8e"
        },
        "item": {
          "id": "012ce83f-d8b3-44b3-9a16-da66cb5af30d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "42bf555d-f0af-473f-ad77-35e92e7f1ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fd1811-0d29-479e-9826-2c6432b57aab",
        "cursor": {
          "ref": "42908ebe-b467-4017-b5e9-253f7678b660",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8080dabd-ffa4-47a1-a221-97a96172ae45"
        },
        "item": {
          "id": "c3fd1811-0d29-479e-9826-2c6432b57aab",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0af1b409-9916-4f54-8071-6e5dd0375dae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8bec87-1839-42ee-a8de-6649fb066f2f",
        "cursor": {
          "ref": "29680788-e21f-4bc8-a289-e3329f7fd7be",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "52180e52-9c00-46fd-8338-8f5be138b73e"
        },
        "item": {
          "id": "5a8bec87-1839-42ee-a8de-6649fb066f2f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cec1499b-1f24-4b33-bd38-497ed293a7e3",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2b5f42-07a0-4d5f-870e-feafe3a5cf71",
        "cursor": {
          "ref": "0a2f657a-2aa8-4e19-a63e-4e278d7e03bf",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c27cac7e-4dda-48c3-a588-3a8de7d5ab19"
        },
        "item": {
          "id": "2e2b5f42-07a0-4d5f-870e-feafe3a5cf71",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cd700579-6bcf-4c77-a1a3-d9c54cc756ee",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3891032b-eeaf-4534-873a-f94552eecf95",
        "cursor": {
          "ref": "ffead3a9-0ce8-4620-a9b1-ed24de74677c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0559ecf8-642c-4701-867e-6dda08f97c7f"
        },
        "item": {
          "id": "3891032b-eeaf-4534-873a-f94552eecf95",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5db08084-7d19-4c93-a98f-cf83e27e3ac4",
          "status": "Created",
          "code": 201,
          "responseTime": 223,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9fabc8-73d1-46c1-bbbb-631eb38b524f",
        "cursor": {
          "ref": "6e70b5fc-70c4-4def-a578-92fa82f963ab",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8235087b-b008-4579-aa5e-0faa32e11e94"
        },
        "item": {
          "id": "ff9fabc8-73d1-46c1-bbbb-631eb38b524f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "00a83c6b-7d75-4883-9fe3-f5164a4f9d3a",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3879903-7bbb-4824-8380-9e7bf3fdf911",
        "cursor": {
          "ref": "372c6e54-4cd4-4d02-87e1-c2243c1654f7",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "37d2be66-6764-4bbe-90df-897c81f3f087"
        },
        "item": {
          "id": "a3879903-7bbb-4824-8380-9e7bf3fdf911",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8d2d865a-6c13-473a-835b-164a9456b525",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcce3a03-da87-43b3-b6f0-ba2e26c000a3",
        "cursor": {
          "ref": "da3edf4c-927b-45cd-94d7-4ec3b71fc37d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dc4f728a-b5f2-46fb-9f3e-3e0b4228b411"
        },
        "item": {
          "id": "fcce3a03-da87-43b3-b6f0-ba2e26c000a3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c86876c3-60e3-4b73-a3ea-97921e8e16b5",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae6cd25-51af-4005-8866-463d8c67c76c",
        "cursor": {
          "ref": "a26ab2c2-b634-443c-8348-f353e863946f",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c2dc996e-e311-47b5-831f-c80ddf83acdc"
        },
        "item": {
          "id": "8ae6cd25-51af-4005-8866-463d8c67c76c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0a96f6f2-0fae-4d73-b4e7-3b0392a1eae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5988286-d3a1-4c6a-8be3-cddf7aa43143",
        "cursor": {
          "ref": "23497b8a-f6ee-4945-8989-e10293859a8b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a59d751c-7e0b-4eb1-80ba-48cb20e271c9"
        },
        "item": {
          "id": "e5988286-d3a1-4c6a-8be3-cddf7aa43143",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1b8c498c-3861-4594-b1b5-3867709fcecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b91f60-c636-40cb-b926-94f6ac5e2d80",
        "cursor": {
          "ref": "84aa2180-19d1-4753-ade3-5cbcd276f6b2",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5e2a2450-6923-4b63-9fbf-0055f858937e"
        },
        "item": {
          "id": "90b91f60-c636-40cb-b926-94f6ac5e2d80",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e5303c33-f1a6-46c5-92a0-b9549c43dc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adb05d9-ca42-4546-ba82-100f14c0cf79",
        "cursor": {
          "ref": "54186244-7c5c-4a79-8ab0-2ee7eb98c057",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "28c056d6-2d1e-44ca-a2f5-45aad9de92ed"
        },
        "item": {
          "id": "5adb05d9-ca42-4546-ba82-100f14c0cf79",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da1c08cb-1bd1-44df-ba80-cc162170e981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979196fa-2507-4711-a6b3-8844217e0ded",
        "cursor": {
          "ref": "86937911-4ca8-42b6-a59f-32ac6ecb9b5d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "213bf9f4-bf5c-42cb-abed-b20d1fd49459"
        },
        "item": {
          "id": "979196fa-2507-4711-a6b3-8844217e0ded",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "822a2038-7db1-4d8e-ac78-1bc885cb4775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bcf035-330d-4f19-aefc-427760ad3bd5",
        "cursor": {
          "ref": "70bf14d2-6435-4e15-aaa4-d9460f0a26ae",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c4f04c0d-5c54-40bb-be32-1c13d50f8358"
        },
        "item": {
          "id": "21bcf035-330d-4f19-aefc-427760ad3bd5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0351db31-8c3c-4b5a-8053-b5ed120f9bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6ad589-b9ae-4ded-89b2-824c62755854",
        "cursor": {
          "ref": "1fc58a6f-ce71-4cc7-b32f-0aa22e58a8be",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "02b6d57e-70b2-410c-986b-63b16c6f78c1"
        },
        "item": {
          "id": "be6ad589-b9ae-4ded-89b2-824c62755854",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "94b751c3-0f22-4c40-b01d-e9328ab80b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29370daf-7abf-41d4-a6ca-2bf0e8892951",
        "cursor": {
          "ref": "34f51d29-2180-4af0-8399-148584393ca1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "092dc6d8-193e-4725-89a6-51c389680273"
        },
        "item": {
          "id": "29370daf-7abf-41d4-a6ca-2bf0e8892951",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "41dc002a-8ff9-4b4c-8669-6fdfb0e2b6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e09ea41-aa84-49fb-b2f3-9679d321cae0",
        "cursor": {
          "ref": "6ee20b75-62a3-4834-8bb8-4e9e67d6158a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "056fa939-ca70-4fbd-bad6-9c037c610dc7"
        },
        "item": {
          "id": "6e09ea41-aa84-49fb-b2f3-9679d321cae0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "427213a6-7449-405b-9035-a7821fe993e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa9f7c3-95e4-4bfd-bd9b-f21efdb06843",
        "cursor": {
          "ref": "67065cb8-474e-461b-89e2-3d6644ef1653",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e71e28a2-1cc9-4a56-b728-8bdfc7d1c3ac"
        },
        "item": {
          "id": "3aa9f7c3-95e4-4bfd-bd9b-f21efdb06843",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "de226c86-f86b-43de-b503-fe81f814b5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790122d8-893d-4c6d-8c76-ce6aeb6c6629",
        "cursor": {
          "ref": "03be4559-19fa-4fe5-aa67-a0329a083688",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "35ba7894-c8dd-425b-9cfb-6ce070fffcd5"
        },
        "item": {
          "id": "790122d8-893d-4c6d-8c76-ce6aeb6c6629",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "85254af5-a899-49ec-9be0-497d19ef83c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0e8a40-b26e-4933-a01f-debded87df8f",
        "cursor": {
          "ref": "79074a16-d2c5-4d9f-81fd-fc3315f858b5",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0e1899b7-6a71-409e-8c61-c71e8329be84"
        },
        "item": {
          "id": "9e0e8a40-b26e-4933-a01f-debded87df8f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f600e0c2-98b6-4a36-bbdd-b327989cf405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bab1dd2-52fd-467c-aa4b-275b2880e8d5",
        "cursor": {
          "ref": "58de39fb-f2e8-4bf7-a636-cc50b677426c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bc8f075a-731c-4e79-8c15-5d6017004cd8"
        },
        "item": {
          "id": "6bab1dd2-52fd-467c-aa4b-275b2880e8d5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a30f31c6-830e-4af1-942a-d82ec4dcda5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa2a802-b972-42b9-8e65-988c65f3be3c",
        "cursor": {
          "ref": "e7ed3ddd-be7e-4f11-bde5-0cb939b418a6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d647c334-70f7-4086-9052-3728fafa18e4"
        },
        "item": {
          "id": "caa2a802-b972-42b9-8e65-988c65f3be3c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6753df2e-a756-404a-a9fd-57e34e53f390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99d9d5b-30db-4e25-b623-4aa1a3d62b0a",
        "cursor": {
          "ref": "40577521-359c-4703-a081-ef260ccc6141",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bbb20d55-0b98-4cf3-b272-2c2f3bdba42a"
        },
        "item": {
          "id": "d99d9d5b-30db-4e25-b623-4aa1a3d62b0a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1d428e00-70d5-4193-87bb-d87784e0bfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683411a2-fbf3-489d-a312-6aed7883e737",
        "cursor": {
          "ref": "3015d7eb-1483-45da-9749-483e70804c4b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bfcefc54-ef6d-4425-a990-51fe1e99c59c"
        },
        "item": {
          "id": "683411a2-fbf3-489d-a312-6aed7883e737",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2810cf00-8e8e-45e3-9eec-5e5d712d524a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096fa07b-5cf9-42bc-8c9f-7c6f55556409",
        "cursor": {
          "ref": "83b25d6d-96df-4191-8a7e-869a93893932",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f1204c01-0bf8-41a1-bd66-8e116ebed96a"
        },
        "item": {
          "id": "096fa07b-5cf9-42bc-8c9f-7c6f55556409",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a900a3e5-4003-453f-9632-7c5d630b8e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edd67ca-ec73-448e-8410-b5834fa2de10",
        "cursor": {
          "ref": "82139527-c895-4317-abb5-c5d68e5e730c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "85bb26d2-9007-4333-ae17-0e37a338a168"
        },
        "item": {
          "id": "0edd67ca-ec73-448e-8410-b5834fa2de10",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c5ed02b0-e5c5-43c3-ad6d-b11775c795ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acddb6ab-95fb-4872-858c-dcb79aa3e7a3",
        "cursor": {
          "ref": "99ec3b25-89ea-4017-9774-bc2c810b4a36",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a02b048a-9798-4ed7-af25-aa00802da405"
        },
        "item": {
          "id": "acddb6ab-95fb-4872-858c-dcb79aa3e7a3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9adc20ec-1eba-452e-b5e9-c105714129f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8961ca6b-31d6-49b1-8a65-a67624d226d7",
        "cursor": {
          "ref": "40b933ee-0214-4fe0-b06b-3aaeb7de7c40",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5429f422-98fa-432e-8758-cea0b79833de"
        },
        "item": {
          "id": "8961ca6b-31d6-49b1-8a65-a67624d226d7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ee01bd5-0ddf-4b19-a6fa-c768fa6d5851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8939b84-23fe-42a6-8c02-6ffcb43a3612",
        "cursor": {
          "ref": "d8eceba4-42fa-4ee1-abea-42c8c99c7062",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "19fb3c7c-cdae-45ed-ac99-75c683bba944"
        },
        "item": {
          "id": "f8939b84-23fe-42a6-8c02-6ffcb43a3612",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a010dee8-06fd-4de1-8f6d-9425bd28892a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2392a24-8fef-4305-bdd2-28c2187d8d29",
        "cursor": {
          "ref": "99e0737d-a6a3-4bd2-81c1-ce76c4e13bd7",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "503b9e33-4e70-44f1-bd40-9841222a7bb2"
        },
        "item": {
          "id": "e2392a24-8fef-4305-bdd2-28c2187d8d29",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b3bd9ea0-8523-4006-be48-710d2e86fa8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f954dc34-578a-4100-b7d1-f514de8122e0",
        "cursor": {
          "ref": "69a4ad84-6ae3-4f1c-9708-6338a18d9d53",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c3fb54fb-78d4-47c4-b19b-3594bd57cabc"
        },
        "item": {
          "id": "f954dc34-578a-4100-b7d1-f514de8122e0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f102d206-cd11-4a63-9e36-b5f23898d244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6feb7eca-da26-4ac7-b081-ff221aeec314",
        "cursor": {
          "ref": "08e44830-0465-4ae9-a12a-9b7fe416ea79",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8fc589f1-0d66-40e6-9dac-d5db64d16816"
        },
        "item": {
          "id": "6feb7eca-da26-4ac7-b081-ff221aeec314",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "53d2884a-c496-43a5-9f85-c94f34180b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06726fd8-ee7a-4b94-848e-ae501f983fc1",
        "cursor": {
          "ref": "5a54ef6f-b508-4225-a15c-abe7a981003a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "54eac496-d48d-4204-8f65-5e25aec49f21"
        },
        "item": {
          "id": "06726fd8-ee7a-4b94-848e-ae501f983fc1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cdf8c6f6-89d1-4fe8-96d4-11f2a459ced5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18158cc-640e-487c-8f38-5bd3d4f951ba",
        "cursor": {
          "ref": "1ab5b2d3-90da-4497-b4b7-61ddc7526e24",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e6b4ab31-8060-485f-9c2a-b899fb6f417b"
        },
        "item": {
          "id": "b18158cc-640e-487c-8f38-5bd3d4f951ba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fdfab9eb-395e-47e3-9c40-8259115f656a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd05b312-7ff5-4aee-8cba-75eb3480cc1b",
        "cursor": {
          "ref": "3821205c-6e62-4b6d-b891-f23912ba6897",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "39c502b3-b7e7-481d-b300-ab78fd7ce8a4"
        },
        "item": {
          "id": "bd05b312-7ff5-4aee-8cba-75eb3480cc1b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1238ff73-c794-4338-806d-65d1f9abc4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d7b2e0-4cfb-49d4-be48-dfc9e3fcad15",
        "cursor": {
          "ref": "1440c2a9-77d9-49cd-bbdf-6982fa580efa",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7e755b2a-ee6c-4b0f-85a8-78861e07b70e"
        },
        "item": {
          "id": "75d7b2e0-4cfb-49d4-be48-dfc9e3fcad15",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "55f1bc15-14b2-42a4-89ee-671f15cb71e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24186d4-bd69-4782-a4bc-6cafc15028de",
        "cursor": {
          "ref": "33f701cd-dcfb-4279-b8bf-b8547854d5f8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "660b4f81-7731-432a-b77d-756f4c665866"
        },
        "item": {
          "id": "b24186d4-bd69-4782-a4bc-6cafc15028de",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2571c7df-30f0-4cee-ba23-43c5c8a6ce9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7ea18a-1879-43c6-927c-87c5f0b14f35",
        "cursor": {
          "ref": "df076458-2af6-4285-bb4c-1be6ae96110b",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d560779a-f1aa-4c8a-ab3a-8b598caab6cf"
        },
        "item": {
          "id": "1d7ea18a-1879-43c6-927c-87c5f0b14f35",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "de203f94-0982-49cb-a557-e594c6e18c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5929507-9b63-4213-bafc-4df9f2b63f6b",
        "cursor": {
          "ref": "faec3fbd-4be0-49b2-8150-66d5d7b7ce1d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "148a82eb-1f00-45a4-924d-7f7c52d032f2"
        },
        "item": {
          "id": "c5929507-9b63-4213-bafc-4df9f2b63f6b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "113b834b-90ed-4bae-ae9c-6e5301d9f2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a04b7-dc4f-473b-81a0-b476a7648efc",
        "cursor": {
          "ref": "9e30a23b-8d3b-4f3e-bcc4-2752d96ac638",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8324acf1-b573-4195-a9a8-42cb4be7cc76"
        },
        "item": {
          "id": "641a04b7-dc4f-473b-81a0-b476a7648efc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a1181771-694e-454e-8e51-852d8c0c1ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c69281-323e-4e91-86f5-0d3ca1df69a6",
        "cursor": {
          "ref": "cf99a752-1978-4ff0-a340-8cf5d9633202",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "50de1305-e5e2-401f-a5d1-ca1b513a230d"
        },
        "item": {
          "id": "d8c69281-323e-4e91-86f5-0d3ca1df69a6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7beda431-34f7-47a8-9e73-11a436f8559e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952d8727-3542-46c1-85e2-894c2b0c7e45",
        "cursor": {
          "ref": "dd3c9ed3-ac2f-4c9a-b355-b27e54008d44",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2304a25e-bf38-411b-a3e6-dbc70df2498b"
        },
        "item": {
          "id": "952d8727-3542-46c1-85e2-894c2b0c7e45",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "75bb8e1a-326b-468c-88ca-ca0f60b1ceaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a603a83-c4fa-4069-ba5b-46a48a27f8c1",
        "cursor": {
          "ref": "4401af4f-8139-47ba-843b-91eaced68803",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8df648a8-e8e9-4eb0-a4da-50c738edcc5d"
        },
        "item": {
          "id": "0a603a83-c4fa-4069-ba5b-46a48a27f8c1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b87a81e3-4d90-410b-971a-0ef2dd40de2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551e785f-83eb-4d50-b5b6-dce7fc643598",
        "cursor": {
          "ref": "99b088bc-5c85-4956-acb8-c674b9b982af",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b219231c-97e9-4da0-9974-8320c182ac29"
        },
        "item": {
          "id": "551e785f-83eb-4d50-b5b6-dce7fc643598",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "841f6ebf-ab9d-4900-b325-c4a82aad5273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd9eae0-293c-45c8-ab6a-57a28537fab7",
        "cursor": {
          "ref": "f91d3e09-083f-4fee-996f-90e6d18056e5",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "daa73228-a0aa-4b99-af7e-8dd067103ac9"
        },
        "item": {
          "id": "5cd9eae0-293c-45c8-ab6a-57a28537fab7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0f0829cc-58cb-424b-a385-871313c8943b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e99330a-d6d5-4b27-aa45-bb69b56d9fa4",
        "cursor": {
          "ref": "f24be847-0bf8-4ec9-ac01-0fe5a536f1db",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dfa24ef1-fe59-44fc-8f19-5999e15cf837"
        },
        "item": {
          "id": "5e99330a-d6d5-4b27-aa45-bb69b56d9fa4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "45772371-b1e5-45bd-a58e-7341769404c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70e9d13-b8c7-45bc-950f-00c3a9845e65",
        "cursor": {
          "ref": "a5503cfa-7f1f-4ab2-9dfe-cf2171ae8342",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "78c9c93b-f586-4f9d-a13b-d15ceaaa7c7a"
        },
        "item": {
          "id": "c70e9d13-b8c7-45bc-950f-00c3a9845e65",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "35ad7e31-c1ff-4ab8-a299-ef915d2579d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6353537-9d32-4178-9ffc-e5de118f875b",
        "cursor": {
          "ref": "7e071aed-d481-41bc-b1f9-4e29ace7e918",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6fdb7be0-4b92-47ce-b094-c7c1adfe4267"
        },
        "item": {
          "id": "b6353537-9d32-4178-9ffc-e5de118f875b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a6063015-d9d7-4432-8da6-580ee3848f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7221d1-365a-4a46-a4b3-321984b3998b",
        "cursor": {
          "ref": "25b4af6c-f6ab-4dc2-b8bd-590c1dd01625",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "487f0157-350a-4264-9241-c584187ce35a"
        },
        "item": {
          "id": "4f7221d1-365a-4a46-a4b3-321984b3998b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c14cb5c-1ca8-4d5e-88a4-8adced522b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253e3d56-8c37-4660-9652-c4c6e8b6f0bf",
        "cursor": {
          "ref": "5973e0fe-d1c7-4dad-bf41-60ecf23c60f6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "76bf7d5c-2f10-4f9d-8140-09695c873089"
        },
        "item": {
          "id": "253e3d56-8c37-4660-9652-c4c6e8b6f0bf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "004e97c0-795e-4352-b728-7e5a84ca3fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35581ce8-d65a-4609-8654-a01b881c7d15",
        "cursor": {
          "ref": "3305f19e-45d4-4049-88b2-ffd7c4e8aaf2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "79d6621d-af51-448e-883c-5e25a591acaa"
        },
        "item": {
          "id": "35581ce8-d65a-4609-8654-a01b881c7d15",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "445816d8-13af-48b3-98e9-06e57aa6f815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8de4150-c56e-46ff-8e3b-20317b542382",
        "cursor": {
          "ref": "52fa4ae1-d214-4c4e-a10d-a9069d84179a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "240e1147-0919-4ff1-a498-b7bdb6174c6c"
        },
        "item": {
          "id": "e8de4150-c56e-46ff-8e3b-20317b542382",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "75209300-146f-427b-82dc-e1d8e661659a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bc3417-06a6-4d7d-8a33-cabf560e86b6",
        "cursor": {
          "ref": "65ae9b3e-8673-4d5b-9653-6ede47fcb8f5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "82d2e535-95d7-413e-81d1-49946acc6d42"
        },
        "item": {
          "id": "24bc3417-06a6-4d7d-8a33-cabf560e86b6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ba41b83e-9fac-4a53-a24c-93fc8aa86985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03036bf-b907-4e48-bf49-d76578cb988b",
        "cursor": {
          "ref": "16ac4533-4b84-4f03-856c-38afe9aba10f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e6c76409-11bb-49dc-bd69-1f0315fa754a"
        },
        "item": {
          "id": "a03036bf-b907-4e48-bf49-d76578cb988b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4f3f8116-6e2a-42f3-b350-b05f4d463825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33e6559-0d17-4b96-ad39-f8f1b583e8ac",
        "cursor": {
          "ref": "c331a6bd-1568-4a56-b82f-eeb0380ba3c8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3a503107-ad25-4af2-9c5c-2a6af1e5a261"
        },
        "item": {
          "id": "c33e6559-0d17-4b96-ad39-f8f1b583e8ac",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a0b15ed6-1daf-4fb7-b439-7b4b05133170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f355e5-8dc5-4b64-8316-5a8461ad112a",
        "cursor": {
          "ref": "dbbfdac6-64a8-46c6-8a68-add934c07c5d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "44e655d9-1eba-4876-8c3d-b4dc3398a3ad"
        },
        "item": {
          "id": "e5f355e5-8dc5-4b64-8316-5a8461ad112a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "60a48263-cc6f-4768-819b-e0b724730b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9c30b8-5d19-4fb6-9b49-41b79a1b417c",
        "cursor": {
          "ref": "9ea4aa51-7d10-45ba-bfc7-9ea83537c2b1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5fdb7c40-1d0d-4ec8-bbb2-ec3b7bf628c2"
        },
        "item": {
          "id": "7a9c30b8-5d19-4fb6-9b49-41b79a1b417c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1281d811-28c7-4a85-9dca-da6bea79a783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daada27-1738-4094-ae4d-e269923d8a10",
        "cursor": {
          "ref": "ea15a79e-19d1-4e2f-be3a-bd430c8b1da5",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6b63088b-1fab-46dc-9040-f85a0ad736bc"
        },
        "item": {
          "id": "8daada27-1738-4094-ae4d-e269923d8a10",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b59db085-9c05-4277-824d-5f325a0b9bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7a7522-9f4e-42ec-91b5-3666d8f633eb",
        "cursor": {
          "ref": "3807e0c0-abd5-4941-a98a-8f2449941100",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5f7f0d8d-e2a7-4872-9479-11ceaf848916"
        },
        "item": {
          "id": "fc7a7522-9f4e-42ec-91b5-3666d8f633eb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "27a953af-b9e9-4179-8e91-d79a720d433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36453b06-32b4-4285-b112-c554fce4e5af",
        "cursor": {
          "ref": "6d67ccd8-505d-42ff-b463-5e7d2df6a1af",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0abf92f2-02cf-4e45-aa41-150c46064178"
        },
        "item": {
          "id": "36453b06-32b4-4285-b112-c554fce4e5af",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d8b785ee-f145-41dc-83e5-5ba4dbedcd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41034b70-3920-4ebc-9396-d7fc8736315a",
        "cursor": {
          "ref": "0ca2a809-ad8c-4e3f-b693-555c9d2a1de7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c123e75b-41fe-41af-9f83-43212ede4593"
        },
        "item": {
          "id": "41034b70-3920-4ebc-9396-d7fc8736315a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f3e01aff-18cc-4ec6-8538-d7dd7ea27aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79aecc65-5665-4a87-888d-4cf48a685923",
        "cursor": {
          "ref": "666bf3e0-ee84-4cae-be2b-7eb529cc95eb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e7c22fbc-dc9a-409f-b77c-fcc0aea0f4ce"
        },
        "item": {
          "id": "79aecc65-5665-4a87-888d-4cf48a685923",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b8b4d221-a33a-4e2d-9fee-c7fd91a63de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2887dbf4-d2f0-464d-a612-a729c0a19bb7",
        "cursor": {
          "ref": "85357151-898d-4c8f-b150-e137e678594f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3b42ea54-4526-4232-9254-fb9f02a40be0"
        },
        "item": {
          "id": "2887dbf4-d2f0-464d-a612-a729c0a19bb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "41673407-7cd1-49a1-b492-44e59433f2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c660e5a8-0b4d-4153-9f48-e2b70b085c7e",
        "cursor": {
          "ref": "77b96dbe-10a9-4193-a78a-57a12084a610",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ee7170c7-201a-46b6-9651-30d4aed84444"
        },
        "item": {
          "id": "c660e5a8-0b4d-4153-9f48-e2b70b085c7e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "42d9c16d-75ba-4350-9673-b56c30abfc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e3dc1b-5e3e-44e9-8511-6768bba49c9c",
        "cursor": {
          "ref": "50a974c9-987d-4a9a-8a2a-33003f581572",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "238d4ad3-8acc-4e08-b9e7-b9e11ce38fb6"
        },
        "item": {
          "id": "17e3dc1b-5e3e-44e9-8511-6768bba49c9c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2dea9d12-c51d-426c-b66f-27bea4adbc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950c3890-c656-42f7-89d7-f1f3ce9b8bde",
        "cursor": {
          "ref": "a206cb8e-b7cc-49d5-adba-8b725fb1eabe",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0eb52273-b06b-4c3d-97bc-3e785c57e074"
        },
        "item": {
          "id": "950c3890-c656-42f7-89d7-f1f3ce9b8bde",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "42e5e672-d13b-4267-8a22-2203db08baec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ab470f-819a-4956-80b5-c965b635b4f9",
        "cursor": {
          "ref": "ae1806ce-4aad-407f-b1e1-a64140a242ac",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6c842806-ddf6-4d31-bc53-4badde5a4636"
        },
        "item": {
          "id": "64ab470f-819a-4956-80b5-c965b635b4f9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8031c23d-5094-4ced-a5d8-3cc6d07b8ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1c1e6c-b952-428b-b097-8c21935a53e9",
        "cursor": {
          "ref": "392c0daf-bcde-4529-a6f1-bc4251c73e22",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "47793b8f-ef65-4b7e-a067-138ed41d4474"
        },
        "item": {
          "id": "0f1c1e6c-b952-428b-b097-8c21935a53e9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4fbfc551-b815-4038-9c52-80a5b1865309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3327ee49-109b-438c-9281-f150cc96ebb2",
        "cursor": {
          "ref": "2781116b-93e7-4cbb-82e8-a7ad43fbf215",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ba078e00-3bae-4f03-a564-7247ee644b59"
        },
        "item": {
          "id": "3327ee49-109b-438c-9281-f150cc96ebb2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aa96694b-f8db-481a-9430-ea56ce525c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d13741c-6a63-455f-930c-8830414ceb0e",
        "cursor": {
          "ref": "66984fd4-e2c1-45d3-9e06-2f9d5e79624a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "583b24dc-72b4-4dc0-ba4b-06839b8e5aed"
        },
        "item": {
          "id": "8d13741c-6a63-455f-930c-8830414ceb0e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "54347ded-e366-417a-abab-b01395e68175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99212c1-8634-4ba4-b1af-1ce3b7045a46",
        "cursor": {
          "ref": "494823fd-0364-433a-bd9b-c1d15087e447",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fbbfe191-be78-4e3f-88b5-76ed002a2516"
        },
        "item": {
          "id": "c99212c1-8634-4ba4-b1af-1ce3b7045a46",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ef55a0a6-9454-4370-9b4f-6a19f02ca271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b81a93b-f051-4ab0-aefc-9f02ada47bf7",
        "cursor": {
          "ref": "a5872368-9bb9-44c6-bb15-c0850dad3cf3",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "969153e5-cc33-4584-a8b5-96ae8e7c47bf"
        },
        "item": {
          "id": "5b81a93b-f051-4ab0-aefc-9f02ada47bf7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d460b5de-6bb0-423a-bb38-e148f5bb20a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d0d898-8613-439d-a338-c56bfc443e3d",
        "cursor": {
          "ref": "4a80464c-1fb1-46ff-8a9e-e06449f010bc",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "af7aff8a-07ca-4728-bb4a-76d794617b74"
        },
        "item": {
          "id": "d7d0d898-8613-439d-a338-c56bfc443e3d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "28592e4c-6413-4365-99b2-61292c2d3936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060b6286-470f-4bb9-9154-a75185961f94",
        "cursor": {
          "ref": "afab451d-b497-44b6-b85d-a91720058a37",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a5301f2d-2fb4-439d-8cdc-7955eee17b62"
        },
        "item": {
          "id": "060b6286-470f-4bb9-9154-a75185961f94",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b2c8dd12-b6f6-45fe-a99a-67418c2c1fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29750932-e3f2-466c-9647-cf3093444a6d",
        "cursor": {
          "ref": "63f353ad-02fe-418e-a41d-0067f4a2a0a9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a80ca2c0-d702-4395-b84f-125849bb090c"
        },
        "item": {
          "id": "29750932-e3f2-466c-9647-cf3093444a6d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "581d7e92-43a1-47d2-9107-70cc749d7302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cc2995-7f59-48a7-b66a-5c90ee6693db",
        "cursor": {
          "ref": "db3e37a3-eed4-44a4-a470-e047f343e0f5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "84bd4cbe-5de8-482b-9e6b-d04bce8f072c"
        },
        "item": {
          "id": "c7cc2995-7f59-48a7-b66a-5c90ee6693db",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "090d01f9-bd82-415e-97ab-72a2a8476d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5fc07c-bd5f-40cc-9963-2c2e3a9cec0e",
        "cursor": {
          "ref": "d9e7c6da-e55f-441e-9a48-6284ff063364",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4c5bb4a5-b46f-4aeb-94e5-37492f4e78a2"
        },
        "item": {
          "id": "3e5fc07c-bd5f-40cc-9963-2c2e3a9cec0e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b783c479-1534-4e8c-9301-d48d8e31c76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eeb1a7-1bc3-450d-880f-76a32f4cb5a3",
        "cursor": {
          "ref": "1e47a270-aabd-4f8b-85d4-99087f853d7b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dc18e20f-51bc-4ed2-b4b9-47753020bee4"
        },
        "item": {
          "id": "05eeb1a7-1bc3-450d-880f-76a32f4cb5a3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "76e45009-3bb7-4f2c-9972-1026f5950b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fae9bc-cb73-40b2-9746-27fb977c8eeb",
        "cursor": {
          "ref": "a5996215-b94a-41c7-9620-fe1bd1748fbe",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e8b3478b-c798-4da6-937b-ca5c76b82c30"
        },
        "item": {
          "id": "87fae9bc-cb73-40b2-9746-27fb977c8eeb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2dba9ba0-5c3a-4841-978c-cd60078fbad9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a04200-1882-4f29-b97b-3bb1ebf864e8",
        "cursor": {
          "ref": "d0a22f65-5f13-4945-8149-6dc5844273da",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cc65c33f-f325-47fc-9574-f1fe075c7db6"
        },
        "item": {
          "id": "a6a04200-1882-4f29-b97b-3bb1ebf864e8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "195746cb-395d-4838-8531-405be94c4496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb566683-6f21-40d0-af4b-794e61e4e082",
        "cursor": {
          "ref": "35139bda-c6e1-410c-aa94-62f24fb704cb",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "35ba61d9-3167-48c0-a291-bbafd4562869"
        },
        "item": {
          "id": "eb566683-6f21-40d0-af4b-794e61e4e082",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ae387504-4265-481e-9d40-cb134a24c3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e8d8c0-161e-4769-820c-f9ef6672be84",
        "cursor": {
          "ref": "303abbd5-e827-421e-b785-8cec8117fe2c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3dd222d2-3866-4769-a931-fecd82a47817"
        },
        "item": {
          "id": "16e8d8c0-161e-4769-820c-f9ef6672be84",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a3b7e9fa-1d59-4881-9831-ff01ecd378b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af2a8ad-3b2d-47a5-a7a0-786e51a51a13",
        "cursor": {
          "ref": "88870ec1-eca0-4365-a964-b4add0c611e9",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "43666e86-59fe-4d74-bd13-7e770c1846a3"
        },
        "item": {
          "id": "9af2a8ad-3b2d-47a5-a7a0-786e51a51a13",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b6895101-fd25-40df-856e-b4f65e60a8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8111525a-225c-484f-a91a-7254bd0dc67a",
        "cursor": {
          "ref": "a3352204-831e-4a6b-9e8d-5a80894b0ddc",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "15c8ba5a-7783-442c-b669-e08ec35ff09a"
        },
        "item": {
          "id": "8111525a-225c-484f-a91a-7254bd0dc67a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "af831932-a389-4cf1-be66-082778bdc1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa5980b-6e3a-4a2c-95b5-117c939efc26",
        "cursor": {
          "ref": "f98d5f7f-7f4e-407c-a7e5-632a35eec23b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9dbaeee9-f45a-4bcd-9a28-7d1e20dd153b"
        },
        "item": {
          "id": "cfa5980b-6e3a-4a2c-95b5-117c939efc26",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7539b770-e80b-4392-a59b-bf1de941bd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dad3ea2-6fbb-4a84-a25c-e056d31c6b0d",
        "cursor": {
          "ref": "fb521ffb-47c3-4eef-9e06-668065a3d4bf",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "19392370-552c-499c-9e38-7e889b566881"
        },
        "item": {
          "id": "5dad3ea2-6fbb-4a84-a25c-e056d31c6b0d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8afc3eb0-8760-44d9-9af9-9f727764bcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712d1edb-6d8f-4f27-b1ef-2c4d1a1f2632",
        "cursor": {
          "ref": "6a83460a-eb5f-4f40-87c0-f70bc4c06071",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eb18740d-7f4a-4895-b9a9-d800374aab63"
        },
        "item": {
          "id": "712d1edb-6d8f-4f27-b1ef-2c4d1a1f2632",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "93345a15-3343-4e15-9e1a-c6ba9a6031d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e633933-e954-4372-8221-a1131863b125",
        "cursor": {
          "ref": "c1f52326-bc10-467b-a044-6a4438eb97da",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cb2660d8-2a09-4fbc-9584-0fa09671a052"
        },
        "item": {
          "id": "4e633933-e954-4372-8221-a1131863b125",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5f991b41-f4eb-491d-a142-a4372f58444a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58419fd-37bf-40bb-8fba-38d301916290",
        "cursor": {
          "ref": "931c3d50-9de5-4c6d-be01-bc888eb65708",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "33b2f675-d321-444d-b984-c01b1c5d4d98"
        },
        "item": {
          "id": "d58419fd-37bf-40bb-8fba-38d301916290",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "abbb7bd3-7871-4dc8-ac06-eec347f814ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7a6bdf-5bdd-4788-ae14-b7fa052697bb",
        "cursor": {
          "ref": "67dcba81-fa56-48ca-9666-172369da430c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9504ab5a-7fa3-4866-84c9-651071cf6aa0"
        },
        "item": {
          "id": "ca7a6bdf-5bdd-4788-ae14-b7fa052697bb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6c262705-87cf-4016-8d30-e75fc33701b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d31656-4559-473b-ba54-9e1bc3ed74ee",
        "cursor": {
          "ref": "36203d5f-3ae0-4f08-9d7e-963a4ee504c3",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dec98b1e-44ad-4d65-8b31-0dbe79dd44bb"
        },
        "item": {
          "id": "f5d31656-4559-473b-ba54-9e1bc3ed74ee",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0eab87fc-16b0-4ec0-b1a6-f4b282905e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87df6ab-506f-4675-89ab-57ce5e7e0980",
        "cursor": {
          "ref": "0f47a552-f775-4efc-b5b9-07fc3886d1de",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ca359222-030e-4152-8489-fb6416823c41"
        },
        "item": {
          "id": "e87df6ab-506f-4675-89ab-57ce5e7e0980",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8459958b-c21a-4aff-92a6-9f7c91237430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7027187-519a-4dae-826e-b7481f1b3e85",
        "cursor": {
          "ref": "b9c4f1fb-9f47-4b34-a0fe-2ee9b92a90ac",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6aa60b2f-77e2-4311-b168-54498cc1c672"
        },
        "item": {
          "id": "e7027187-519a-4dae-826e-b7481f1b3e85",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "67483781-f3b4-4475-8ed3-e25aa2dfe5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ee5e18-e626-4c8e-b245-82077c4ab1c0",
        "cursor": {
          "ref": "1072ab18-7a46-409d-90b6-6a6a7e11da6e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "339c076f-24f9-4126-a4c0-18454df541d0"
        },
        "item": {
          "id": "21ee5e18-e626-4c8e-b245-82077c4ab1c0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bac4ced5-e8cd-4f0b-81d2-96b459e4d001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb5426e-26c3-47dc-8271-092fb1c31862",
        "cursor": {
          "ref": "bede466f-2f38-4434-81a8-f1cea906633b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "933689d8-bf1b-4c0b-8ef2-59cd53f6f6ac"
        },
        "item": {
          "id": "cbb5426e-26c3-47dc-8271-092fb1c31862",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "619bee64-d6b8-47fd-bef5-07cb724959cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca939f9-fcf1-4b3f-ae07-2a220155b44c",
        "cursor": {
          "ref": "660ef102-63ac-45a4-899c-d533746d7784",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8b2336d7-c0de-4bed-bafe-2b66ce7db8b4"
        },
        "item": {
          "id": "2ca939f9-fcf1-4b3f-ae07-2a220155b44c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a2211b79-0ebe-4d57-80a7-21b5f4d80974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae52ace-9de9-4d22-8d57-66ed13b73292",
        "cursor": {
          "ref": "29905e1c-d707-483d-83f2-d9adc2da9d3f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0d7e39e7-7f4f-4b5b-a4d9-7e4f84c4dc6a"
        },
        "item": {
          "id": "3ae52ace-9de9-4d22-8d57-66ed13b73292",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bccd8d8d-6d9f-4e78-8fbd-125419f787c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b90d0ff-522d-4b50-ac35-4fa0622da853",
        "cursor": {
          "ref": "31493c83-03c4-4e00-bf96-5ea63504ee5a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d48d2b09-0e8f-48a5-bbf1-b577c33bd665"
        },
        "item": {
          "id": "1b90d0ff-522d-4b50-ac35-4fa0622da853",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cc1eeaae-a010-47e8-8aa4-3b7a9a4444ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbfc9f3-e933-4f08-8be3-9a9fc0010b31",
        "cursor": {
          "ref": "f30498f8-abba-48ef-86ae-faec5053d9f0",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "039a8143-32e8-4514-9925-a19304c2ae4d"
        },
        "item": {
          "id": "7fbfc9f3-e933-4f08-8be3-9a9fc0010b31",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d50760de-ad62-48d8-b33c-06f132a40e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f5371f-2c88-48b7-b665-9dcdabae910c",
        "cursor": {
          "ref": "044d2afc-0a43-4837-8eec-11ba2e6c145e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a1a897ff-e711-4d77-9d03-ef5e5034b9be"
        },
        "item": {
          "id": "14f5371f-2c88-48b7-b665-9dcdabae910c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "14d34bb7-f0a0-46d1-840b-1be95686839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e917028-f3f7-441c-96e3-ae4690e4367c",
        "cursor": {
          "ref": "74552f86-0e0e-4b4c-995b-12da62e0aa05",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a50bac29-dd11-454f-a62a-edc3a0ebeb9c"
        },
        "item": {
          "id": "3e917028-f3f7-441c-96e3-ae4690e4367c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "86b0cac7-757c-4cd8-be4b-0354647b444f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6857697-2c20-4071-8a65-750cabb755e3",
        "cursor": {
          "ref": "100dc3f9-146c-49e6-96fd-8f911b557cad",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cc6054e7-839b-487f-bf21-6f49d9d41586"
        },
        "item": {
          "id": "b6857697-2c20-4071-8a65-750cabb755e3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "956c7fba-b451-4d39-9ad0-3c5bca26fd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea36c962-fc24-4a3d-b655-d42b4c8dcb95",
        "cursor": {
          "ref": "b72b036c-c302-40f3-b736-474e68d3b1d2",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b57ee8ea-081d-4bc3-9fa3-98e4540c6a09"
        },
        "item": {
          "id": "ea36c962-fc24-4a3d-b655-d42b4c8dcb95",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "96e9a57a-0e7e-4869-85a4-4fc776ba65d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ce8836-0988-40e9-b8ef-05e9c7cfb6ba",
        "cursor": {
          "ref": "85f31822-9e1e-4616-8c06-c8c7bb853253",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "92ae65f5-948a-4420-bf8f-9c5ec846f60b"
        },
        "item": {
          "id": "71ce8836-0988-40e9-b8ef-05e9c7cfb6ba",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "02e8b48d-8637-43d8-b9b1-04c3da87e6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c546c4-3154-4bc0-87e5-fba554cdf67e",
        "cursor": {
          "ref": "1922bf57-af2a-444b-860b-558f73d1f6bb",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a4d6745c-c4e0-4c0a-931e-35412af82e73"
        },
        "item": {
          "id": "a1c546c4-3154-4bc0-87e5-fba554cdf67e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "310ff404-1d23-4b04-b203-7c1efc189884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be573c5a-3922-48a6-8628-eeaa46094b73",
        "cursor": {
          "ref": "134b94b1-611d-4992-8a06-0ce728c61b08",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3b0f08b8-dbfb-43b7-84b3-b5e18a70da21"
        },
        "item": {
          "id": "be573c5a-3922-48a6-8628-eeaa46094b73",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3fdfb247-eee4-47f4-90eb-ff7779d53381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37617330-e352-42ba-bd4d-59b43ecb2ebe",
        "cursor": {
          "ref": "d95009e7-728a-46fc-b1f0-35426165bc26",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a4f4c006-8a9a-4717-b13e-c91adfe64f7c"
        },
        "item": {
          "id": "37617330-e352-42ba-bd4d-59b43ecb2ebe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e7a61d7a-093c-436b-a06b-dcb2b5e2ad61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b018fd3f-4052-410d-aa90-eb5fe0cf07ff",
        "cursor": {
          "ref": "408552b2-1297-4c9d-8b67-7351377f3805",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b16be516-ec41-4c1e-b085-daceb71bd290"
        },
        "item": {
          "id": "b018fd3f-4052-410d-aa90-eb5fe0cf07ff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f19322ab-79d9-4795-ae8d-20a204252f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900fdd75-cee5-4bc9-8b20-b49a119e900b",
        "cursor": {
          "ref": "30a96b58-3631-4e5f-bcb8-ced6b1ebc874",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6581800a-ed17-4f14-ab4b-fb594d133b92"
        },
        "item": {
          "id": "900fdd75-cee5-4bc9-8b20-b49a119e900b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9f98ec7e-5f0a-44f5-bf49-3df1460535b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4470fe-5342-4b6d-aa52-36e3157fd627",
        "cursor": {
          "ref": "1d5e509f-2adf-448f-bc1c-fc8fdafbeac4",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3d644592-ac0b-4d50-9df1-577f8c5565bf"
        },
        "item": {
          "id": "7f4470fe-5342-4b6d-aa52-36e3157fd627",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1c564c10-80d3-4b9d-9fb8-7ae0d4ee7eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d529816-06a2-425f-8865-8b7d8e51fe53",
        "cursor": {
          "ref": "4c0f314e-140e-4086-b16b-7d17c5debbea",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fcdf092d-2abb-4bd8-8235-6c4e11afcadd"
        },
        "item": {
          "id": "7d529816-06a2-425f-8865-8b7d8e51fe53",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a5459674-a2ac-4456-a2c1-9f972b6475d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0cfe4d-fdea-4b6c-8eb9-c0fcbaf20068",
        "cursor": {
          "ref": "1932b96b-1cdc-4e6b-a3e0-568eb451f6e3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "856c4437-7380-450a-a8cb-fdb6aaaed80f"
        },
        "item": {
          "id": "ba0cfe4d-fdea-4b6c-8eb9-c0fcbaf20068",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "292e2b98-0e4a-4b33-a61e-4ad3218b9e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabc6f1f-6778-417d-8cad-b06b603c2782",
        "cursor": {
          "ref": "50caab65-7f79-419e-af5d-a87f805ae8f6",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d6a1716d-999e-4a7b-a1ce-73979ccb8652"
        },
        "item": {
          "id": "cabc6f1f-6778-417d-8cad-b06b603c2782",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c39427f0-f9f0-4a01-a612-ae88770319cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc534d0-1064-4ee8-a80b-38a2833433d8",
        "cursor": {
          "ref": "302b7cc7-21e7-4abb-9f4a-34ae14a67bdd",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1a7843e8-9ad7-466d-a95a-956ac810203c"
        },
        "item": {
          "id": "cfc534d0-1064-4ee8-a80b-38a2833433d8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c39dc5f3-3078-4d86-875d-8a2727ac9892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bb3269-5d65-45f2-bb84-128d8deda9d6",
        "cursor": {
          "ref": "76d13117-9ef6-4cb8-89da-0403ae7bec80",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "54d79734-2289-4269-8093-92f899949b58"
        },
        "item": {
          "id": "f1bb3269-5d65-45f2-bb84-128d8deda9d6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f5b7da5d-9989-49a9-8671-11471f983535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec9b427-5567-4fa7-953c-fbaccfd30a2c",
        "cursor": {
          "ref": "aeebfd9f-4d05-4498-a13e-7cd88ed8cccc",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cbed0855-3991-4549-ad76-1d9695535661"
        },
        "item": {
          "id": "aec9b427-5567-4fa7-953c-fbaccfd30a2c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "473738d5-7f61-4d44-9425-4b60ca013230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a7dcf4-b4f5-4621-9a9f-2dd933714e65",
        "cursor": {
          "ref": "021b5332-3cbe-4eda-bad0-c4d73edfc6ba",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "15322e6f-32e6-4cf7-916f-5103561ed906"
        },
        "item": {
          "id": "d0a7dcf4-b4f5-4621-9a9f-2dd933714e65",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7b93d733-bc7f-4eaa-ac36-0fac91406a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ac2262-4e2c-4c41-9a25-18b72c1990a9",
        "cursor": {
          "ref": "7af0ce3d-faea-48da-8bd8-d1c028344a25",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "557fc066-b8a3-46ff-921e-e2d15ef0321b"
        },
        "item": {
          "id": "38ac2262-4e2c-4c41-9a25-18b72c1990a9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "357606c2-36b1-4f0c-8c2e-7aa166e41218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516b8494-9b33-43a3-8b00-0e0455b91681",
        "cursor": {
          "ref": "221bec5a-b14b-4b19-9cda-0c56074001da",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "17f86fcd-e1e7-4a9b-bd13-783a3abd4f10"
        },
        "item": {
          "id": "516b8494-9b33-43a3-8b00-0e0455b91681",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f67f3aef-9e26-4948-ac84-67fdc6300302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a24549-bc79-4051-a32e-0bbeecb4188b",
        "cursor": {
          "ref": "8ff662ec-a928-40cb-a09e-8f1d44df65cd",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d16cc5af-fb1b-4b16-86c4-d8bc6a761577"
        },
        "item": {
          "id": "68a24549-bc79-4051-a32e-0bbeecb4188b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c43374d3-e447-40aa-a0f1-90f0ca17514f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6e06f2-c272-4af1-85e2-39d52c1271af",
        "cursor": {
          "ref": "65760c13-474c-4bc7-98d9-21fb3b045d09",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "510e88a3-cc6b-4647-af22-cccc09ba37d6"
        },
        "item": {
          "id": "fe6e06f2-c272-4af1-85e2-39d52c1271af",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c45a428e-4392-46ac-89a0-983c47a48343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61feb4fb-fc84-4d7c-9df6-116af5561575",
        "cursor": {
          "ref": "3d172033-81c0-4ec4-91dc-ac010cd3556c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "69814510-63b9-48fa-9760-15ddff0e5fd4"
        },
        "item": {
          "id": "61feb4fb-fc84-4d7c-9df6-116af5561575",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c1676370-43c7-4b4a-bd7c-8600b307e629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb6480b-228b-4609-b955-859c3371ffbe",
        "cursor": {
          "ref": "f4398fd9-c350-4f2f-b8ca-3ddafc517be6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6ff30b1e-1bd6-43bf-9942-2f38714e4720"
        },
        "item": {
          "id": "6bb6480b-228b-4609-b955-859c3371ffbe",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7252014c-53d1-4ca6-a20b-cc219e2fae31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2746996b-bd83-4c31-9e5f-aff46fde95dd",
        "cursor": {
          "ref": "27e280f0-0384-422f-8e42-f4ab729dad7c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4c1c398a-7ae6-42ea-8014-bcccbcc5d594"
        },
        "item": {
          "id": "2746996b-bd83-4c31-9e5f-aff46fde95dd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "85c52422-2d07-4f57-a982-9b00f7309def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34100cb2-0204-4d48-bb97-3b07fb3bbcd1",
        "cursor": {
          "ref": "047d82a4-59e5-4daf-be6a-a0512017df39",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dabdd630-fd9e-4a59-9ad2-66e6fb6c0df1"
        },
        "item": {
          "id": "34100cb2-0204-4d48-bb97-3b07fb3bbcd1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bfde3857-1baf-429e-87ef-cc2e9252cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a03625-54df-402d-8ebd-549ef6a4314e",
        "cursor": {
          "ref": "56d7fea7-ce34-4b74-ac97-87b9ed06672b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1ac54dee-d7cd-4f8b-831a-8ec98a238bd4"
        },
        "item": {
          "id": "29a03625-54df-402d-8ebd-549ef6a4314e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "42f05076-2dd7-4a69-b7bf-3d680712b89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba52ec0-e16c-44ce-a58e-c0cf23bc9874",
        "cursor": {
          "ref": "75f128cf-ae40-4369-a927-d6fc5509a1fa",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "df3e3381-8c7c-4ea8-b424-90d093c17605"
        },
        "item": {
          "id": "3ba52ec0-e16c-44ce-a58e-c0cf23bc9874",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f7f73f83-83ad-4af9-af6b-995543a98799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5962b18b-fbd5-460e-ab63-00f2e1f45ac2",
        "cursor": {
          "ref": "f825b8cc-a34e-4c21-987a-52f11212923c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a341acdc-7016-499a-8cfa-15b78e6a0881"
        },
        "item": {
          "id": "5962b18b-fbd5-460e-ab63-00f2e1f45ac2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "864be42c-1cb8-479c-9d78-66d2d9c88f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea336af-0ab0-4f13-9456-91cfd7728c38",
        "cursor": {
          "ref": "548c771d-c28f-44d0-9568-28e717eab43d",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9de2c2b9-ead6-4ef1-b80d-36e6b16fa77f"
        },
        "item": {
          "id": "6ea336af-0ab0-4f13-9456-91cfd7728c38",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2b5ac15d-898c-4835-bea4-842d157842e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f429c49-c8b8-4427-abb0-b29e3e573781",
        "cursor": {
          "ref": "4c8868af-eea6-4457-af09-d192da8e23ef",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "945e4b9b-d1c9-450b-83d8-b1e27ce088e6"
        },
        "item": {
          "id": "1f429c49-c8b8-4427-abb0-b29e3e573781",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "87ac6200-e4de-4ad3-98e3-ecea67ff7c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d68e020-8e6d-45d0-bb9c-778a79234581",
        "cursor": {
          "ref": "3cbeb6a1-ffc8-4cb0-b0d3-38fe1b78cd9a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6ad6b6ff-0fc8-46a3-b1e8-d77ae996c0d6"
        },
        "item": {
          "id": "5d68e020-8e6d-45d0-bb9c-778a79234581",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "79847ed0-2ea2-4991-958b-2b372cb64ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe135e7-fee5-4fab-94c4-9250ba60ec5f",
        "cursor": {
          "ref": "ade4d98e-8e6b-40a0-a154-db0a33aeabb7",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ca9f5079-5389-45ce-b8ff-b3cb2eb93060"
        },
        "item": {
          "id": "dbe135e7-fee5-4fab-94c4-9250ba60ec5f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "337c92e5-9122-48b4-a98c-c371d2c4aa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45b6c55-83c8-49fe-be04-5380046dff0f",
        "cursor": {
          "ref": "3e077771-4bcc-434e-8fb3-58a3ece7ef38",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ed06182a-6913-44bf-abd3-ba44733e44fd"
        },
        "item": {
          "id": "e45b6c55-83c8-49fe-be04-5380046dff0f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9f71325a-c3dd-44a1-a8e6-aa9c45f9bae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38c0316-3e8e-4177-aa65-cdf2d1b2f76c",
        "cursor": {
          "ref": "4cc6a654-4a9f-4746-abb9-c70519cec1c5",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5a9f9cab-b87d-407e-8eca-05c011751bc7"
        },
        "item": {
          "id": "d38c0316-3e8e-4177-aa65-cdf2d1b2f76c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d6f4873b-3828-4e56-b96c-9c825064f114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29d254a-32bd-4e68-abcd-91d26ab56777",
        "cursor": {
          "ref": "f06423b7-83ca-425d-a510-7a31af442b78",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9d1d9a7d-8518-45c3-8e46-c8be837821ee"
        },
        "item": {
          "id": "c29d254a-32bd-4e68-abcd-91d26ab56777",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5fa23669-bbde-4483-99cd-0ebf47393c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af8a775-d457-4a12-aced-229d31a82479",
        "cursor": {
          "ref": "535a8e9f-e9dc-4ad9-a50a-524d903eb73f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd128652-8f26-4cee-a465-51e809614e98"
        },
        "item": {
          "id": "1af8a775-d457-4a12-aced-229d31a82479",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "27f443f1-8e8a-4b95-9168-4f5239c6dbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4c25e9-7f03-4a3a-a528-a63e3372d06d",
        "cursor": {
          "ref": "5ba51f22-5576-4b53-9180-edb83b73089a",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5b5993c4-ac30-46a2-a38f-c47753581ffd"
        },
        "item": {
          "id": "de4c25e9-7f03-4a3a-a528-a63e3372d06d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2a145340-26b7-438a-82b8-7c8eecd12310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ef30c8-c350-4809-a611-59ddf4fdc335",
        "cursor": {
          "ref": "58e58cc1-475a-4305-8a02-a82d3ebdd0e7",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b8d99046-3f73-4812-b477-36d27e58959d"
        },
        "item": {
          "id": "24ef30c8-c350-4809-a611-59ddf4fdc335",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "313fb989-fc3f-40f5-b7be-0cf5b6db830a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef27cf2-1356-46f6-93e3-69e3bcfb3542",
        "cursor": {
          "ref": "c54a7327-495a-4b69-a835-a174af44aa53",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1552ca71-384d-419e-a17d-18b81fc58db4"
        },
        "item": {
          "id": "8ef27cf2-1356-46f6-93e3-69e3bcfb3542",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "22c69f51-805a-4c67-9c50-3057c54d8575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26debc38-4046-45e0-b50e-73c9e49b9d24",
        "cursor": {
          "ref": "58ecc178-761a-4ae9-979f-a7931301d5aa",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ae2db027-bd17-4f6a-b3a8-d8a781b0461b"
        },
        "item": {
          "id": "26debc38-4046-45e0-b50e-73c9e49b9d24",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "397f5f0e-c499-4e69-af64-d90c54fc53a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbd1015-da18-4b4f-9a53-c4c4922352c8",
        "cursor": {
          "ref": "81aaf3f4-9d26-4c54-80c2-097f73262489",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0708ad94-088e-44e4-b351-55044b4d451b"
        },
        "item": {
          "id": "6fbd1015-da18-4b4f-9a53-c4c4922352c8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d7e9a889-813b-48c7-b4e4-ef5b54c6c841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe40188-7a61-4b58-af37-750c37456ddc",
        "cursor": {
          "ref": "6d49875f-88ff-4545-9336-a1287ffd951c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "beedc715-7dee-440a-8a65-77ebbd650d50"
        },
        "item": {
          "id": "dfe40188-7a61-4b58-af37-750c37456ddc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "429b89fb-c483-4493-8351-ce067bc7e474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5980e23-60a0-4a4b-8550-6b98f5d5dadc",
        "cursor": {
          "ref": "85aac92e-cc3d-4e38-9e48-c778995aa5a7",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "65ebaca5-b14f-468b-85e3-340901ee2725"
        },
        "item": {
          "id": "f5980e23-60a0-4a4b-8550-6b98f5d5dadc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2c4cc3b3-b9d5-45ad-ac3e-9ec9abaa0943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11c6809-a96a-4883-84da-37b87bbbcffb",
        "cursor": {
          "ref": "54f152ca-db66-4373-a698-942b5e29a7d3",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0c92ac3e-be7a-4b67-ad42-da305faebf21"
        },
        "item": {
          "id": "c11c6809-a96a-4883-84da-37b87bbbcffb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6bd35d9c-b94a-4f8a-9bcb-5f4642828eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f0640e-eb47-4e01-bcfa-bc085b1299f9",
        "cursor": {
          "ref": "e753fe61-7575-4111-aefd-128324c59925",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bda7bce6-a87e-40e6-aa09-f42337ed07b5"
        },
        "item": {
          "id": "38f0640e-eb47-4e01-bcfa-bc085b1299f9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "46cfaa36-609a-45bf-970d-43a44534762a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1bce16-b9f2-4731-bdd0-053b0eb4e475",
        "cursor": {
          "ref": "7a2d0712-a6d0-419d-8fe2-9a3cf19ca09b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "27398c2b-43e4-4f9e-a347-ecabdd642246"
        },
        "item": {
          "id": "1b1bce16-b9f2-4731-bdd0-053b0eb4e475",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7235598b-269f-4436-a614-af0930604e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0059a2-b642-47d1-8703-16c39952d1c7",
        "cursor": {
          "ref": "6d850bc6-2d3b-4797-bf46-78f68f34ab6c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b6ecf87f-9179-433f-8db5-7442d758fcf7"
        },
        "item": {
          "id": "6a0059a2-b642-47d1-8703-16c39952d1c7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a227e850-5f8a-4d81-bb43-7db024603321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9061b7f-49e5-416a-9237-b73a38ea746b",
        "cursor": {
          "ref": "cc4b33b0-c6b6-4c8f-8de7-0525b5fe3eb8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6aa9e06b-a461-4bed-93eb-658dc9a528c8"
        },
        "item": {
          "id": "d9061b7f-49e5-416a-9237-b73a38ea746b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "650610ef-f4be-480d-b86e-d7a66986754a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a4d980-17b3-4da8-b404-db6bda427ad4",
        "cursor": {
          "ref": "0d0bdb10-0d03-4059-980e-ad083677951e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "734ce3c6-9c9e-47c5-bf3b-40b883320e86"
        },
        "item": {
          "id": "10a4d980-17b3-4da8-b404-db6bda427ad4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ecaae017-4cf1-4cd7-8506-413f8b8bab11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23df8479-9e02-4858-a8a6-b754ebf6b7e9",
        "cursor": {
          "ref": "4a2b2c79-fa1e-4c53-8141-0c78fbbc2668",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "36e01f71-edd7-47a7-8d85-0c8192deb2ee"
        },
        "item": {
          "id": "23df8479-9e02-4858-a8a6-b754ebf6b7e9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9a286aad-9af5-4b44-ba5f-e1d175d827cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faaf106-4f6b-44a4-a49b-95340dea22c3",
        "cursor": {
          "ref": "232e2988-57b1-428b-8b1e-40829bb0fdc3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "901117fa-fea6-4adb-ac6a-d6d4b2857ec5"
        },
        "item": {
          "id": "9faaf106-4f6b-44a4-a49b-95340dea22c3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d9ed236a-8e1a-4d9d-bca9-e7e27c3c5f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc4225a-9d04-400b-939b-c0eb2c3874d6",
        "cursor": {
          "ref": "da739225-4e95-483d-a440-cdbbb891b4ad",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f0adf365-d97b-4e59-a28f-f04d9610940d"
        },
        "item": {
          "id": "8cc4225a-9d04-400b-939b-c0eb2c3874d6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7badf0ac-d340-409a-99f1-e23d4ea870dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661ae8ad-0811-499e-b392-240e444b678c",
        "cursor": {
          "ref": "3d0438bf-deee-41aa-a76e-771cf2640184",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ce2c316a-c219-46bb-835c-310beb75ec0d"
        },
        "item": {
          "id": "661ae8ad-0811-499e-b392-240e444b678c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "25f84e50-876c-4313-80ee-5c0fc2158e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dfef5b-274b-45b8-a61f-1008630d8289",
        "cursor": {
          "ref": "6fda08ac-1da6-4bc6-aabf-fc7a1a7d7edd",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b6738f92-3a12-4e6e-accd-593cabd641a5"
        },
        "item": {
          "id": "d3dfef5b-274b-45b8-a61f-1008630d8289",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e1495090-5aab-42fd-98c3-2278e40e3fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209815d4-768f-4d98-bb83-1cde81dd9a05",
        "cursor": {
          "ref": "bb1ee5cc-11a3-422b-9b7e-dd99a356e8bd",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "287ba5df-4773-4203-9fa9-c63723c09fb5"
        },
        "item": {
          "id": "209815d4-768f-4d98-bb83-1cde81dd9a05",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "274a694f-df5d-47d0-a1f4-5a229b5c0f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a7b5c7-5105-45b5-a19a-677b1a58ced5",
        "cursor": {
          "ref": "cb8aeb5e-2e82-4865-ad86-390bc44d292e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "eae7d117-66d6-40c1-ae0b-7c68bda7e827"
        },
        "item": {
          "id": "16a7b5c7-5105-45b5-a19a-677b1a58ced5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f6602d6b-6c70-4382-bbda-4d3ddd130260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe48c74e-81a1-4d01-b290-14ab62452259",
        "cursor": {
          "ref": "a44c3f11-2c85-4613-8ad4-9dfd7b0b4b23",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8642a715-bcf4-4f9f-9637-20bbec9b7f4c"
        },
        "item": {
          "id": "fe48c74e-81a1-4d01-b290-14ab62452259",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4e0f0a5f-631f-42bd-a3c9-8b9aa5bfc7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54ee43d-abb6-4236-b587-aa232ca428ad",
        "cursor": {
          "ref": "e62dc2c7-c7bf-4202-963e-7ba5c4272867",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "258adbf4-5254-4b32-b18a-82bfe84b5716"
        },
        "item": {
          "id": "c54ee43d-abb6-4236-b587-aa232ca428ad",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9b088246-0efe-41bb-9438-5e4d231981ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ea36e5-ce9b-437b-924e-50438a9058db",
        "cursor": {
          "ref": "753e4a35-f374-4437-8075-ec0f178a34ef",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "700f2632-52cb-4961-b731-8d344054ad80"
        },
        "item": {
          "id": "21ea36e5-ce9b-437b-924e-50438a9058db",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a4ce90b2-2eab-40c4-ac0d-a4d67e83044b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e507482e-fce9-4eb7-90bc-410e3e32359f",
        "cursor": {
          "ref": "d21bd779-513d-4dbf-a820-5db2442325e5",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a4129cd5-5d7b-45e0-9ede-892cb197a302"
        },
        "item": {
          "id": "e507482e-fce9-4eb7-90bc-410e3e32359f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dd1308ee-0452-40c9-bdba-b5e5a6805065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c598141-45b4-48f0-bf05-f5b54bc30663",
        "cursor": {
          "ref": "bbd7d887-a4b4-459e-91a2-8fee816b5c3c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5fe184d7-c84e-4060-95c1-29c1e6b9bcc2"
        },
        "item": {
          "id": "3c598141-45b4-48f0-bf05-f5b54bc30663",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d38fc04d-de92-4878-9b05-5618f6306e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6603bddc-03e7-42f1-8529-2db29eeb74bd",
        "cursor": {
          "ref": "62bcb906-afa6-4888-a9ea-a6fde7e73cdb",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7a31eff8-a0f0-4d73-a31d-f91ebe30ecf4"
        },
        "item": {
          "id": "6603bddc-03e7-42f1-8529-2db29eeb74bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "048a17c9-6be8-4f19-ae7e-ae9c6afc1e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96595fe-b091-4251-a2bc-bd3a9e0f2efd",
        "cursor": {
          "ref": "60de7f78-40be-4954-8ac4-addbbc4637b7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "32d657e7-f17d-4501-b9c5-17dfab118823"
        },
        "item": {
          "id": "c96595fe-b091-4251-a2bc-bd3a9e0f2efd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b253ec37-caee-4b15-bddd-cbb842ccfae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513b031c-c66f-47cc-b077-01ba69d08cca",
        "cursor": {
          "ref": "8fb0f05c-6ac5-40ef-9256-9f271fe46434",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d3ec5a1f-c6ca-4727-807f-ab210756a62c"
        },
        "item": {
          "id": "513b031c-c66f-47cc-b077-01ba69d08cca",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cc3dd887-c9ca-4a1a-9a2e-108b5f8a66f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a780843f-9d4d-48db-8f2a-a80f3b1883ee",
        "cursor": {
          "ref": "695bf882-567f-4ac2-8781-941c2a3521dc",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "34843e6b-c877-4160-b8c6-d56c9c830cac"
        },
        "item": {
          "id": "a780843f-9d4d-48db-8f2a-a80f3b1883ee",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9fd55168-39cf-4a84-9366-60c3ebafa7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cb06ce-cf9f-46de-965e-26f29ae68057",
        "cursor": {
          "ref": "1ee9cd99-c3f6-4d0e-bddf-a7456686ac87",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "309079d4-758d-4c12-8025-b6582c1c5111"
        },
        "item": {
          "id": "a5cb06ce-cf9f-46de-965e-26f29ae68057",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "859f1e88-7dcb-4dec-a999-cdd998f14bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f611bb2a-8878-49c4-b0e4-dc7fbbad57c3",
        "cursor": {
          "ref": "214cb83f-9972-44ff-af00-1b1facc92325",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "dfc48e01-2719-46f0-b02c-b47ab5d3c621"
        },
        "item": {
          "id": "f611bb2a-8878-49c4-b0e4-dc7fbbad57c3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ce9ad800-5e4d-4f6c-8a08-fe66dea462c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5ddcd2-e885-4f94-9f9e-bd0ab9936088",
        "cursor": {
          "ref": "aaea13ff-f0fe-4937-8685-dc25b05fe493",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "788ce330-ca04-4993-bcad-c1c67c44b0ce"
        },
        "item": {
          "id": "ff5ddcd2-e885-4f94-9f9e-bd0ab9936088",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a3d8a702-35b2-46ef-a314-6c02862611fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17f4e7e-ea92-4f08-aabb-4024aeb62a06",
        "cursor": {
          "ref": "605bd033-baff-4858-a14b-2de37aede9d2",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "319b5b6f-f09a-4a75-b5d6-9a541a403a9d"
        },
        "item": {
          "id": "e17f4e7e-ea92-4f08-aabb-4024aeb62a06",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "441c3288-f6fb-4874-8979-d28c7ee8f56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d2bbc1-23b2-4b51-87c3-ba12eec2ab11",
        "cursor": {
          "ref": "b69c022a-98e2-4fcc-b9ab-ea862eae493a",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5b0f7591-b1d9-4747-82eb-de481b14d555"
        },
        "item": {
          "id": "28d2bbc1-23b2-4b51-87c3-ba12eec2ab11",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9e1e876d-c95b-41cd-b2ac-1b9e0c47753c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc880cf0-1eac-406a-a07a-d027b15dcd77",
        "cursor": {
          "ref": "4789b9ef-c749-4ce4-9eb7-4be69c6faa33",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "21299c68-1570-4c14-a216-e3659711b189"
        },
        "item": {
          "id": "fc880cf0-1eac-406a-a07a-d027b15dcd77",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f61ceb0-30de-43cc-b280-bb2c519b561d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439dc718-ad2a-4c7f-b76f-3715ca423aff",
        "cursor": {
          "ref": "e6544830-e003-4e42-a55b-1b147fef6285",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8696d451-e79e-428e-9657-6bbdd2861748"
        },
        "item": {
          "id": "439dc718-ad2a-4c7f-b76f-3715ca423aff",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dad15460-9461-4c22-935a-d18efec0776f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4b98bb-17e6-4988-b718-4dfc07ec5598",
        "cursor": {
          "ref": "70392506-37ca-403b-aad4-efcfd703e142",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9932d113-5f96-4beb-a91f-96a501fb33b8"
        },
        "item": {
          "id": "bf4b98bb-17e6-4988-b718-4dfc07ec5598",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0d934a9f-ef96-44c7-8f73-60a032e3c399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0846ed-9707-4eda-b25d-494b3e94ad37",
        "cursor": {
          "ref": "2b5e7f48-816e-42a8-bfa3-5b5070a7a23e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b8a5bc84-88d4-4e47-b3fc-e7bac98bb481"
        },
        "item": {
          "id": "ae0846ed-9707-4eda-b25d-494b3e94ad37",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7fcbfc38-362c-48af-9fcb-34fd19ff27ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113f3fe-2301-4526-b296-11d398f9b46f",
        "cursor": {
          "ref": "e7553908-7cf3-495a-8fa7-6335b89964e4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d951560d-9f39-49e8-8b90-5b08679b6f0d"
        },
        "item": {
          "id": "8113f3fe-2301-4526-b296-11d398f9b46f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "772c7282-2dbb-4d20-8a59-0f654991700c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c1653b-d4bf-4a3a-966f-1f6d3b37f1e0",
        "cursor": {
          "ref": "3b32ddbc-a09e-4612-b1f9-25278061111a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6591f6a6-d8c6-43ad-aee7-0f30a6b5738e"
        },
        "item": {
          "id": "78c1653b-d4bf-4a3a-966f-1f6d3b37f1e0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d16c80ed-613a-41fd-b54a-f0aa7bb09013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8757a3fa-4a04-4216-812b-2c9f95eba2a5",
        "cursor": {
          "ref": "4b69bc79-3f60-4656-80b0-e11cc05b63aa",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c4b40e74-b5b0-415a-b00c-2b861718309e"
        },
        "item": {
          "id": "8757a3fa-4a04-4216-812b-2c9f95eba2a5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b274780b-b500-47a0-bf9e-f775d7bfbce0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eadde88-ad45-442b-83e8-aea34fc64791",
        "cursor": {
          "ref": "4226a6f7-a771-4afe-8251-0b1d4d7ad656",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "85f39ff9-dc15-4fa1-b013-d961bfb37b6f"
        },
        "item": {
          "id": "2eadde88-ad45-442b-83e8-aea34fc64791",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2efb086a-c96a-4ae9-a030-427a624e579e",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e42999-a658-4e32-aed5-28af24e19514",
        "cursor": {
          "ref": "536c3806-20f9-4dc4-abce-0b8367eff050",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0546c909-6ed0-426a-b153-2ea3047920ba"
        },
        "item": {
          "id": "a5e42999-a658-4e32-aed5-28af24e19514",
          "name": "credentials_verify"
        },
        "response": {
          "id": "57d538fc-1091-424a-8fcd-c1b1c0a0330b",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "92aa6069-6e25-4529-bc0f-3c68a14089a4",
        "cursor": {
          "ref": "11a84b84-91d1-4a4a-83ac-8703bc9c7ead",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "46136a59-8e98-4e14-bc3b-f1d9e1df56be"
        },
        "item": {
          "id": "92aa6069-6e25-4529-bc0f-3c68a14089a4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2752df4b-fa3f-4442-ae02-cee3cba8777e",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "824ec6ab-3450-4e98-815d-3c9cf1a9ebed",
        "cursor": {
          "ref": "6b07e32e-8a20-423f-b694-5eb088a2c6be",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c66ba439-7e92-4a9d-acd5-8fb67b9712d9"
        },
        "item": {
          "id": "824ec6ab-3450-4e98-815d-3c9cf1a9ebed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bac7096d-a169-48e1-a5fe-4cf8826ef29b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824ec6ab-3450-4e98-815d-3c9cf1a9ebed",
        "cursor": {
          "ref": "6b07e32e-8a20-423f-b694-5eb088a2c6be",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c66ba439-7e92-4a9d-acd5-8fb67b9712d9"
        },
        "item": {
          "id": "824ec6ab-3450-4e98-815d-3c9cf1a9ebed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bac7096d-a169-48e1-a5fe-4cf8826ef29b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a7871b-6a2e-4ff8-96c9-daefbf206f8f",
        "cursor": {
          "ref": "2fad3dd6-68bb-4f8d-b3e9-e263f5bf57f5",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b281d0ed-b8a3-4f3c-9466-f73b72f44f8a"
        },
        "item": {
          "id": "04a7871b-6a2e-4ff8-96c9-daefbf206f8f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6ed9f52a-8b32-4975-9997-b79ca662df9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e740c1a1-477e-4d59-8114-4c1b7b8ac71b",
        "cursor": {
          "ref": "9c13fe6f-95f6-4fd0-a6c2-ad0cf1931dac",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cd35b463-1173-422f-b1a4-75e12e02e127"
        },
        "item": {
          "id": "e740c1a1-477e-4d59-8114-4c1b7b8ac71b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b14438bd-658c-4643-a918-9ccd17766efc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}