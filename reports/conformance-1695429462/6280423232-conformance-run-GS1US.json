{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "23ad94e0-c1a5-4511-8f56-03f73adc5ace",
        "name": "Clear Cache",
        "item": [
          {
            "id": "987a4491-3e4d-44d1-99a4-36e140e57ed7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f55a57a6-058c-4ace-9a3f-1195bbc7a3a4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "67316d09-77dc-46a4-b700-9a445c2b607e"
                }
              }
            ]
          },
          {
            "id": "00c1a696-2ea9-4fab-bb6d-a76d5e50335e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab241613-d1ec-4f33-b4bf-01f40d8451fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "864cbb86-0172-4eec-8154-720da8f0495c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "403dd4f2-1148-4c4a-aab6-6669a3d9de4d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9de3f592-544e-4505-b2e8-a890335c9ece",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a5f23ce1-01d2-4a65-af65-3425742a394d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4746472e-88ed-464d-aeb7-d5697cb8ae11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3686b90d-024f-4a26-a7d6-664237f89f0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef54fd7c-acbe-42c8-8d72-8dc00929f73f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6a443d8-3ac2-4a9c-9d70-696e18221c53"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76e53b33-0fa7-4d42-b095-86a4643342f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12200240-7ed1-4878-823d-219948cb8987"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ede35350-e14b-446f-8ad8-bd79afec9c80",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "437cbee3-f7c5-418a-ae31-a54fd45e1daa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a50ca2e1-d18f-4a22-b56f-6eca2435ad85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e900e7c6-8479-408c-ba5e-0c79d3d4118d"
            }
          }
        ]
      },
      {
        "id": "36cabeea-90ac-4611-a783-7b9067bd2d3d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bbc8439a-17f5-4446-8e0a-4ba79cbff80e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14e2ee41-1430-4b11-82cb-ff8044b094ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4243d64b-f004-4e13-bd94-97e1d50ecb5a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a503ce8e-46c3-4d92-bdef-0bb764672e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58886f53-826a-4942-a43c-69796d05ac79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1185233-01f2-4db8-af54-0039c6bae17a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb3e3db-0802-45dd-860e-16799164e9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4310cf8b-58b6-41b3-b3a5-9a16b17d0e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba9e411-bd91-45cc-bbed-41f58f1a21e4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de86b6c8-9591-42ff-bf9b-1cf15b45103c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fd98092-c21a-49f5-80b5-2f52819504f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c8227b1-7605-44a7-a6a8-de5dcefd0cb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "232544ba-dee7-4452-99b7-7e68306bda86",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6250b980-c044-4e3a-b6ce-367d66d99ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13006ed2-537f-4703-be54-c3e84002ef9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4849d6-3e92-4792-93d7-a902210426fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0dfd5e7-74a1-4bb0-b882-a591110f7991"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "25145693-40a1-427f-905c-936ada841414",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d573433c-c2fe-42c7-8bf5-4f466a804411",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5637f165-ec91-496e-a7a0-4dffd8fcefc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "43e31e48-2062-4eca-8b27-50d3e93541d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c802089a-60d5-4d24-b46a-ae972f72c2b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "165a8f30-b808-43e8-9c48-fde04cb07fc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f15d9ff-54d0-4704-910a-0641020e3af7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5922600e-a9d2-4484-b277-76e072ad9680"
            }
          }
        ]
      },
      {
        "id": "17e8008c-c379-4618-ac84-bd3e01a129f7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "dfa07d8c-82e7-45ce-9a00-c8664f686c31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0906ada7-feb5-476c-9665-0a5f202f93ee",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6d96023e-f507-4594-b861-8bf6783e8fff",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff4f074-eccf-49d6-a94e-7c86a53bb72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d270b01-7772-4daa-a9dd-7449c32c29e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fed9366-05f5-44fc-a8f9-11270fd00630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0ff46dc-5b83-4e39-9ecd-67b2ffc0b2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f27fb7e-f038-406d-8f42-a923c13ea54a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064602e6-5884-4740-9da9-bba683db4cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a9d311-efb2-422d-993d-9a20f39acb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d60b255-1598-432a-b9d9-5a9322033e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01e9fce5-9b89-48a3-aae4-ed06e377b272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0266754-958d-41b6-b479-1a29788e7f55",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df6273d-d2d2-4152-8449-92d64e0d3260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a724c2-3290-4683-9e0b-31d71cee054c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2ac274-0547-4159-acc1-8ec509344e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "608c1728-f3b2-4baa-824a-ae7f5b676b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aed5ce-5d39-42e6-a213-0445ae59c0db",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d6b61d-e3b2-4ae9-b1af-4cdee4b0898b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab5d15e-cf41-4491-a43a-5c8ef0d3a496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c1fb79-4351-47bd-9887-2fc2f1ab8833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe4a0be0-0230-4845-89e0-3e36c5b78949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decab829-cb90-4c4b-9ec7-24f030f876a2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e4f92b-093b-4039-b717-4c4f71a81d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb32028-bd49-49e1-842c-f4a3f56ca5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0586caac-6660-4179-bfe7-7c0571860a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "133c7f7b-3b16-4474-a56b-529aba5956eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46618e7-8e68-4ff8-a2b0-22704fe7dda1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee52a9b8-6211-4640-8349-91fdb00167d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b687d92-7311-4474-b8cd-b5a8cd67a0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab13253-b369-4334-b0c6-5962de67d00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c537916-30ea-4835-8f91-fbac3cf925fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7570db-82b2-4423-b021-6f28dbbd7c20",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81afdc5c-a04e-4ddb-a519-20e92fa5d267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3273f082-27df-4638-96c2-bd728f914430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8f0e05-86a7-4856-acae-946b69e606b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0939df1-6630-4abd-b520-ef2f726f1ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31a7a38-e5d9-433f-aca1-d6c80db0b75a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b27df1-8406-45df-b63e-c7d32013f763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6198941-c9e6-4110-95af-a80a08ddfca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61508cf-000b-4608-9bab-121346154ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d7e9a0d-3b7f-4476-8a6f-4dadbe765ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372be7de-8c6c-4241-b59b-b0f640f44610",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330e20c9-7405-4d22-a951-19bd3c146c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8153a87c-154e-4138-86d8-6b5b30f4a482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1efa12f-e66d-469d-9052-76fed9010cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d91d76b7-f0ee-49c6-9718-90e1316bcdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc80e84-5a54-471f-97e1-f3dc741e2915",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a2f064-8245-480f-8d39-473b71f1f529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a863d37-7c58-47fb-bfb9-5aed91c9f93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f80184a-2e28-4619-bff5-8ffc67285273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a2e4fcc-5d0f-48c4-94e0-a86705d94816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03edeef9-0802-4f13-878a-f2ed956a53dd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bd0741-fbe5-4c04-aa88-ad8022bdb52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb06388-26f8-4fa4-93a2-1667128a5152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62e3b97-0046-494b-b3ea-a7ca86f85534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68728579-41df-4f09-8366-a01fb008f972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e041c3e-de6a-4df8-8eea-cf6a854e2709",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63a9ca1-4d5c-4297-8f0b-3c3ba3f71861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c75c3d-64d8-4d1d-9ab3-3aa63fed6bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6645be-3ed9-47cf-975d-a951a3eb89f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21d0fade-b82e-44d8-9f8b-f7011c9c771e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf118c1-1a90-4feb-81b2-30fd6b843b9a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3591ad6-7012-4f03-96ad-fcc508c70b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd101aaa-35a4-4c39-a54a-3b8bcf95b096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36bde33-0539-4cba-a038-2425a5a46b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3915a9ac-b9df-4537-a5ac-4453b7cad0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fdfe98-5a04-48aa-8aa3-f4ae5d9190e7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fa9d8d-419f-4add-9f12-9cb903e0307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d088b68-9737-48f6-81b7-78c7b92f3125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d47610-b50a-474c-a7ba-23a5db54ca5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc63777f-c22b-470d-9222-5f204f79981a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77b05ee-6009-4145-b944-a8360971cc66",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95bbab4-3ca8-4cfd-a8b1-8f02050df2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1865566f-b357-4bd5-866c-72d533b3e8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f61993-7068-4538-ad99-8b622c6d8d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec234598-868a-4d5a-87db-a91a35ddf7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ce92ce-3093-4755-b6c4-ad862230be25",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32b6b66-fb01-45be-b989-684729df82b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d54c054-f8aa-4409-b9a9-34a285efb543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904502ce-ac4b-4366-bdb9-3db91e388af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95aabda5-1133-442e-a045-2d86ba49d7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8311c6-143d-4176-ba65-c626767a7314",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a68414b-010d-443d-a2fa-05d34ebec857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dbf5a3-308c-4b12-9710-29c3a022dd21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9203b7da-8972-4fdb-80af-cf43bb72c0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48cf91fd-da16-44ea-9ca4-c7a9dfe821e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6653e064-31ca-4b74-9024-250fe102dc18",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbea3f5d-395c-4221-bcd4-64595545b5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd71ed38-1397-4a7c-a484-a13b650c88c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af573441-8152-4a5f-bed5-79d35ccb01e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "79826a6b-91db-4842-828a-affe2e9259e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf441e8c-756f-474d-93d2-5116b7e0cd0a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f9709d-d290-4be3-a882-ba7c851c4d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f187714e-41b8-49a4-9a78-e57e059678d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8560ec-d9db-4492-84e0-da324d0a221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d41bafc0-c22f-47de-b929-8f0ce5f0dd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e400bad-611f-408a-96a3-f727da575198",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91689001-6adf-4633-b765-12bc0c80562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98509edf-db9a-4b7b-9404-e8bec41305bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b13edd-a181-46d7-9d0e-f99301084957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c74a8f49-08cf-4fb0-88c8-9e2aaa74eedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e0b53c-b7e3-4556-950c-719be35b62af",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f324b7c2-aa72-4290-ab97-256fca416d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7336f585-a275-432c-9ad0-74b0c594844b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197723df-277b-4bae-9bad-3055abbd6954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5c27c8-adea-49bc-b456-5218f29073ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be561a8f-6f8b-4769-b6e4-df98d879dd57",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f347a5d-b961-4c9f-ae6e-35edc3470222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c43d226-cfa5-4a53-b5cc-a6b07c66fdc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d8c1cb-8d56-4453-98c5-33e4b1be7266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce6dfd3-e465-4951-b9e3-6b1414640f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519da65f-157c-493f-8647-5bbe70ce2fa0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1354e229-aee8-43df-9ec7-5db1cee696bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f52392-b5e8-4fb1-b9c8-f6d4ae13c390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3630d63d-6110-46e3-82b4-25a00b8b13f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e4564e-8083-45dd-b236-5f70631c5081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2508331b-660d-47a6-9a50-c65f3b3738b5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b58f180-3a6f-41e9-8659-927bbed41383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee5f606-0b56-4e1c-950c-5a5ec21798bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d214d9a1-59a6-400e-820c-a0830244a364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0e5d73-6923-49a5-9c9d-67db44285312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d222a7f-59c1-4aa4-abc6-4ca4486655ac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c432e07-ac96-4d49-8873-8db5be1a0260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcc819c-9b90-481a-b329-13774cebde83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f779fab8-1d38-45f7-89c8-ccb6dd3ea774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f026478-21d5-4aaf-bdaf-41316425117e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0971fa10-79a2-4fd0-a34f-dc78d27fe7c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b909a37b-8a28-4961-a058-d0fb4be4e9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d58374-7d46-433a-acf7-4d8bb8e9481d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836f9586-17b5-4c7a-afa4-a288f8724574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "169847fc-9192-4236-86dd-e1d8c5f11cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0712c277-6fc8-44b8-a35c-b1c43583a242",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cbadc9-c4b4-4edd-a493-3de23481c1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff8042e-8bad-4607-9c97-fc8e14d61ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90664c99-0021-45f9-b743-3148c8fa2aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "018d3d12-2bd6-4647-8421-a1abc2655465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075e8edc-31b3-4ba2-b864-c6117c45d541",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38157d4c-2ba4-4795-9f88-076f69d41bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59def038-9bc6-4824-be41-6edf5450c530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57111a32-f575-45f5-a92d-486186c3badc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b3ddf6-1318-4f45-8ea9-33ea79ce611d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd2d033-6b57-4817-9c9c-6d8963c84617",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944129cc-429f-431e-a61b-552bc67b2334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056ff0d1-354f-49f9-b6a9-cdc5b4c4c864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74c32dd-a0be-411f-907c-a9d14b6319dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc1239c-a67f-4b68-b5d5-ee8c7d3dbe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb16f78-9468-455d-bcdb-8fbd59befed4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcffb65-5fb3-4d8a-ba18-246b64980bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d607145-cb37-4ca9-9251-8f0610b0ddb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271605a4-a017-4bb5-b15b-3f6d848330a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d469c1-2ef0-4ac9-9d91-b35124a773b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d4c112-1d5b-4109-bafc-8819786d7627",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2bc6f2-e83e-4889-a935-5df0ede8e873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e451b43-9a8a-4a0c-997a-556bc4b9ebc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0418555-5573-482a-b10a-1013634b8029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f1e62d-9a4f-492a-aa53-ebae7b73121b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cb4812-bca2-40da-9901-aa9b919abd5e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f983ae-898d-48bf-add8-f75d6c7b26f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee55714-b339-4b3d-9aed-e67f80a39924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81e080a-1ef4-4f97-a1fb-de2f8ec4f95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b29745-25ea-4d2b-b03c-1fd8e4c8f339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbbe007-d4f9-4d3d-a74e-10fe7f187b99",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f01c4a3-86f2-42b8-a2ba-5fc9e1bac837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4c3119-588d-4962-8cf1-2ccca0e67082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349f08cb-9088-472e-9b80-090e2c47447c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d330d003-8b09-46f5-a91c-a91fbebffb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5745d902-1a17-4c9d-a2e1-9662bccd7cab",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dd6ffb-d9ab-4107-a3ba-9b139824ac71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad0567a-a0b6-4f2b-962a-fb06c37f9db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b9c323-ff09-473f-9607-83966e5e4a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07462c1d-01e3-40aa-8c12-d793942a6e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a091558b-371d-4cf9-a562-db79302516a0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7c6c3d-8457-432e-9095-14161a337a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa39b2cc-1835-42cf-bf5d-eaa276269bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4dd7ed-3f53-4ad8-a0d0-97dbfebc55b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b54da5-a740-4fac-b8c4-1ce4f4f2a608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e58760a-a6ed-4713-97a0-7d670d70fe5c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ea5476-e3af-40de-bf1c-632cba1d4e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec18bf01-f5b0-4178-8fed-8f1b5c987990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef97b6b1-128a-4fd9-993d-fc12ded96714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fcaf9f-a8d1-4b0d-8dce-8bd2e1917284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369e5822-6efd-4db4-b554-2644eefa1374",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eafba6-f6fb-41ac-ae9a-a5280eb561ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274e9b23-cefd-4498-a4c5-bf1d05a9e1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b54e2f9-945d-4319-923a-235b1c716276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "174c8c9d-f617-4d6a-9c6f-4a5660a28a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03845938-96e0-496f-b8ce-703595efb89a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ed75cf-862a-4dde-acbc-66280614db6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea059ec-c158-4869-a6ba-345d79ff20ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525c3648-8c0e-4983-b451-26c70435f264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "47b6dc54-c2ea-4e88-b095-35365a4b9e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7aee401-9a90-4eb0-98ff-d7656fefef62",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1a9102-b049-492a-bedf-7835fa194a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733c4dad-cdd0-4942-b08f-b21fcc7e7e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df77e80c-76b2-42dc-af0e-7a88859168cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3ae5ef-99a0-4fe8-8179-5c2faedc90de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed21bb5-7edf-44ed-bc55-859659ffec20",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124e7a4c-a8f2-4d24-8a39-c89a5e1ee1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3313d8-9a8b-464e-b3db-86f1b3514ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb7f444-43e4-4d15-b90a-1042a1d6a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ec2b03-a387-454f-b3bd-672d9756a9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380b1798-f25b-46ad-8e0b-6c0967e5c5af",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8726beb8-6429-4e45-8213-74d4cc5fda13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a2437c-e30d-4d70-bc58-a8b65c450ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc18737-b9b4-4ed7-9bc6-42424c71349e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5eb2cf7-1491-4f93-99db-eb96f8728177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1afc503-bed9-4426-ab9b-a9385366b555",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b981031-5f6e-4213-87ac-22c97c3a79c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5840ab9-a7b1-474a-afe0-3426e807a519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d155a152-3218-4230-96bb-b147f7d8a967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1e6688-998d-4f6d-bb9b-b0183bbcf7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac8ed9b-1ba0-472b-8037-cc412cd96031",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c96c5dc-16d4-4a19-b245-746bd9b8e37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c24b24-8f05-458e-af7a-8368f404b20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf158f8-d9ce-4242-89ca-38132612a45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd29902f-29f4-4271-8759-e947d3e7bef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae9846b-f851-4f00-a5e3-a9f3c7215a59",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c88f246-cd27-4e36-b588-fea9405c6c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32589c59-225f-42e9-ae9f-401c2f1d06df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6abdd4-1d81-4699-a3e1-422b0cc61392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fffd0f7b-899f-4e61-a3f5-f4db0a5048f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab50a12-be76-426e-b4d2-927452777643",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a1611-c11b-4134-8bfe-a8fa2cbdaf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692bb878-7efb-4976-9f2b-ce99f088c6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9604a2aa-97c2-4dc8-a52d-45a7f3bf73fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48b5a0c-b952-4728-acb6-0be781b98760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad68b19e-700a-4db8-9157-6321ce36be65",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4076aa69-a5a1-473b-a9eb-89bffec7ac0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d71cb3a-4cf7-48e2-b96a-0b5fb9ca8967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d274d3-11e4-4e1e-ae64-732a6064f67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e93f18-aadb-4068-9cbf-1c9245f2991e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056bb9cc-ca9f-4d2c-a306-557957a8f953",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07c8ebe-f591-4fd3-9d60-152393b6757c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2822483-ab3c-475e-8758-d96400193dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8840a49f-321b-4b5b-b88f-3b3bd2f538cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3741105f-7dc6-4b40-a718-2a5bc8d6e1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dc5cae-e81f-42ce-a95a-24648f86e828",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9e9a8f-cf2f-4967-9b07-2ed645c39a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfdec62-b6fd-475f-a0aa-d8502f6b0a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd13c8d-9d27-4a6e-9a53-b343ae606658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd228bf9-51d1-436b-8b2b-e77f7e7e7e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daad6e3-82eb-401a-b2cc-5e38e1500f7c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf73a0e-ef0b-4df1-bca8-48078110cd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5655e9e-20d0-4b2a-85bf-ffa88c296138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b208cac-77d9-4e74-8b15-12fd718ad0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18cc0b8d-c56e-47c6-9b4b-4066dab1807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9803f036-70a1-439e-a422-b866e9ef9d34",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a07b8a9-2edb-49dc-a716-04cf3b539d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3522b7-f2e7-4674-b42c-0f4282c6c2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5020332-236f-46d3-9540-25fce8263ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47e5a22d-e97b-4d0e-8008-2328db0d4430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad22de67-61e3-40a8-afd0-e933545b1c78",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b32d716-6dfa-44b4-80e3-e68f8784f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0802af44-3186-42fb-abfc-41d3de56f655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5303546-446b-4a91-a0dc-a5a168911893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a1083c-b395-4648-9135-e6475c6f77b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed91d0e1-25aa-415c-8290-b28c540158de",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d853190e-c0cc-4e51-a415-71314c309ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a23e697-8fd4-4bee-ab11-fad5fdf59962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7ce0dd-3a4c-45b9-a183-e7d90dd3d499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a298ec-4008-4798-b6e1-84118fe3925a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff860019-99dd-4d92-be55-5f13b9bf10d8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56613729-60ed-41ba-aa6b-9f3ff335a856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42be9437-33f3-4abb-9cb1-3f1fce3c2989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237ae6f1-f072-4eb2-a14d-ef12192e22b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4105461-0ba5-4360-bfec-b3e92fab86ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e7cbee-089c-48e8-9754-61c0198bc332",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7649650d-0eb0-4420-b93c-8ab8055ea751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65aa1c79-50e8-43a4-8ec3-f89877bb1940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bab63e-8693-440d-858f-40aa614aebbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef0eb73-a677-486c-a915-27ef255f7f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefb225b-4f77-4a9d-a1e5-9e01b4997736",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e861a80f-7b4f-49ba-ad77-0602655d569b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235dfa3a-9827-4352-9fc5-7caed0122b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f802c0-0198-41af-99f4-2f586a33c3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "805ba3b4-830c-4d00-b849-f4abffeb81a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286455af-c747-4fd0-85b9-2955b04c5ad5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acb08c2-be78-4b32-b670-6bf716bb90bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0709640-10fd-4fbb-af7b-e25442ef4a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48d794a-768d-494d-a5e0-096db74165e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2fb9f5-17f1-40f9-9a12-d0c2dc8380cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b205dcf-7584-4a17-a853-04a5745a2749",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6ae6d6-40c1-4558-bbf0-4df9511a8880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d4f4d3-12f5-4821-bc1f-00ea53c6dcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd7f1e2-949e-47fd-aabc-a798e3aa3b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f89fd41d-673a-40e2-854d-1a5303a7c01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f0e794-2f8a-40fd-b311-b6b33ae75d63",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415a0a41-9dbb-4b80-bb78-bb34775ecb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e777a2-3634-4f15-8c44-2c493ce99109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddf5e5b-893f-4ef5-9062-54a8badeccb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a041446-b2e0-4052-b7d4-59ce53e396e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cb7e99-87b9-4f1e-ba78-e3a24b609409",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586158cc-40b7-4d72-b7e6-5ae7372495b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463f4c25-ef15-4611-849a-4a97c9d1a722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb2424b-7665-4125-bf8d-9dddceb6763e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae3b0cf-d0c8-4ba0-b78e-9e9eac0d2c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d778b6-275b-4e78-b088-a2f706961955",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903f8da3-d1db-4fda-bee5-e8d461181dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb15b656-ac75-47a0-a3dc-1fe61cf6beb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416592c9-d4ee-43aa-a6b9-b3f3a4311510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b22d13e8-2464-4a5b-b572-305de49c0477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565b5625-dc7b-43f5-ba71-7ea26a4e0563",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2376ec-2022-4c15-a593-da81ee8902f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec2ae9c-17c9-4b97-aed8-62f722bda02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f12e6e3-c2c7-4fcc-a1d9-788a1217cee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "827d2f93-605b-4aa1-a391-ce5295b393e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2acdf2c-fbb8-48b3-8ac1-76349dea5ce6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588734db-8e9b-45c5-9303-fbf13297079e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ccc8ba-648f-4f65-9acd-6ff3cdda2d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9e3ece-3c5b-453e-a890-19576752222b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "80432887-9ae5-41b9-9169-bd3a54708040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a22c3e-113b-4851-9f00-b1bac595ae9e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5245715c-d3db-4978-b4b8-e45d8ed9d4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfaff25-21e4-4173-aa93-9e5e95499ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb5711d-5386-4587-937a-d4a9ef2870d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de55248e-e77b-46b4-9b4d-07733187f37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd38fb7a-6db1-4428-8d46-18ff8d28727f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c05344-ac45-4b96-b50d-8e61b6a11226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb29925-7c35-4178-9b90-320355e5835e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ebf2b4-1c8b-40aa-ad18-198eb80fac42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccbc3e7-4296-4a6b-af74-04da93378974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b3f180-bcaa-4cef-82b9-eec986d46b21",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5676b1d5-c8e3-4eb9-bf2d-b9ec3872ddd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1095657d-c35b-4441-b0f1-8d5f04e829c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e0870d-8cc4-43b5-85da-71a753619269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "140579bb-1709-4a5b-8c68-232a6ca6a6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef0d179-4ae9-4b36-b6ff-b817f91cfcb4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc26ff7c-678d-47af-bd60-7db07fdd49de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e940c59-89c9-4638-ae04-d0ff062cd642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8246983-0ade-40c8-9e0b-e8623288c1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dca2cd8-58e1-4977-b5a1-a68c3caeb535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baccc26b-d024-4abb-8d18-5efec4e1f87c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecfb1f3-1c18-4c26-a5e1-b7ae1000f452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a78127c-2f1c-4a4c-90d5-cc8a8484e57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eae15d-6a02-42da-80ca-66c1ea918581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70d218de-feba-4f7d-809a-8e6d24c4ac71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43de621-fba5-421c-8a04-82b2b4252f22",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b540b8c-430c-4537-9ce5-e691866172b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa9e108-a090-4665-ad51-6b0033b820d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2b8b97-7486-4e6f-97dc-d5ffe8d3e4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b98ad5-78ba-4ff3-8cc4-208932faf4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecd8ae6-8192-48eb-9669-61501566fe94",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67da4c47-f335-4f35-a0f7-41aaf5e40067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698e50dd-e1b8-4348-94f9-25223501ef34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fa05e1-8c0e-4628-bede-8acbab2298f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b39cdb-d777-496f-95b8-0df37ceddc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627b70d5-6ea2-4042-bfaa-ad70d68320cd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0556a5d2-70c5-4378-9dc3-b77c665b6056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e35c9a-6230-436c-a908-4f9228cd27f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991ba71a-4780-4a8f-abcb-667a3163a8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b4012f-8793-4ff5-b4ea-b601d1868b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5672f1-e314-4072-b81a-9339b336b8ab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598b7e55-0d87-4a4b-bbe5-692cfca95685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d10b9d-be31-40ab-b010-ad4392adcfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173f8063-c0e1-4936-bfc9-b572729c73b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e57a7eb2-7d98-4bc5-9ca0-02acbea80fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f29aa2-7184-43e6-be83-2dbd28967205",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b003c8b-fefb-4b3b-bc6e-3f397276b448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b94e07-222b-42a5-a8b0-6465fd6afdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d202802f-b9b0-409f-b0d6-e94d29868e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9fe47a-9193-437b-ad45-56e66fbb2c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebe70db-6678-407a-8729-e9cc2629ea64",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a7effa-6287-4617-9218-07a9689a1a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a967fa4-f590-48f0-a0c8-9f6627fa311a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5259a0ab-c1cc-48b1-8f92-a8ef28e4aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d012e07b-ff75-4a90-a6ce-aa0e9aaa08dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfac01f-8dd6-48ac-a216-3f0d17f88c6d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8fd4b7-2103-4c8f-9d55-2f1181400285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7857926-717d-48fb-bd12-d737bb99d6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27031e53-8667-4627-87bb-0d4eeec260f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "164a6e6a-d1d8-4678-a1e9-05a58becdc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28318c7b-9174-4bfe-93fe-88f725f29f41",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f004ff9-604d-481c-bb89-bc2233e50e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850d0e80-11d5-476f-a227-01820eb9d263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4741ea-29ac-4e60-811f-0385223f4016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7239bf0-f3c8-424f-b53e-6228b6e4e47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c4c63a-57d2-400c-9d10-4f2af9e0d36a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5484967-4cbb-4ed7-84a7-1ec3996f1188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fe3e29-727e-4fe2-9e72-3923fb0088da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50600653-24aa-43df-a898-b4a866136f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43beb118-b879-46e0-8776-ec652f278aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90de02c-8819-4783-ad15-61327af7bc00",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec38251-0c86-4f00-be42-c19e0d035f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4408f50f-6e61-4963-a02d-bfcaf780d667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfe7853-826b-4219-9677-4fd8ff42bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f32b8bd-cdf2-40fc-aafc-76346034fee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ec79ea-3288-49a9-b752-9c014105c097",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e86e8b-ba38-4569-8056-81fd5b49d58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc300750-b4f1-4e19-90b3-f1f324d11bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b5e357-99f2-4d14-af0c-ad867e889c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae8377b-d3b1-40af-a395-7cc8d753865a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85da8e3-1dff-44e2-be59-b5fa757f9e92",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a64cd3-8b4c-4b94-aba4-cfa749fec5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58345aff-f2ee-44f9-85cb-d477ec8735db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73186b13-7c95-4461-b0d6-59f05b26657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7a5976-98be-4de5-a81f-0b82a44c4bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48dae6d-0a7c-497e-8767-a0a48a8acf3e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385a905e-95c3-4d88-aeb8-c25d1c543b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd19c81e-6415-4f24-a20d-c8f0c8e69bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cc83a8-7a60-4814-b82d-95a51a64bc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f93797b5-5f5f-4e88-96f5-8f6f95e20c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a27d81e-fdb9-4a4b-8fe9-21ee3b008501",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0ce229-d3d8-4de9-8711-69f2c6e2087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e360c9a4-a20d-46ed-a9f9-9860ee231957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e45ee56-05b1-412a-a7ca-c37de0c31fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55d3459e-7f43-4936-90e2-fa764a488582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f3aefb-cdad-4c69-9ce7-e3515f4720c0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c63efe-febe-4680-ba2e-e2cea2434c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8b2238-35f8-433c-8264-53006fc74852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb189ea-5b2a-4f38-9c27-7c892f763c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ed6514-8837-425f-8f02-189ea1925117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87a255a-17ea-425c-a28a-08b20b5ebe5b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f2c58b-1aad-4ba5-bd7e-e3a6a7799a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f39563-d73b-4066-b8ca-26d687bf6ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4a2589-4d79-4281-bd48-d1dc7ee95321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac730aa-1400-4709-82b8-e78e6b1457ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a60a4fc-85fe-4dda-8a63-4591aa411b35",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c18695-1afd-4f09-9c7f-cf51fa2d2099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2bcaa5-95e1-43d9-bfa4-833da8b960e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d2d6f7-3df9-4ae6-99df-8674d868b4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0577c72a-373c-40f8-87ea-eb62ed4955f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41935be1-c33b-4c48-ae99-bd6a883a25b9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8ce6b1-4b50-43a4-9c1c-ec774d7f8c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d68614-2ec8-44a3-b3a5-7b884a7f48ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e161e307-7dff-480a-adcc-aea08d9a1374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1357ee24-9d81-469c-9492-a8784818a5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f56fe22-62e7-4150-867b-ef9ebaa60e14",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01fecf7-55a3-482d-9b15-37ba4801d85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f88b1b8-0d62-4fa5-a570-8d307684ebc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad07edf-36e3-428b-bc38-45beba8ce97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a11cd712-c182-4537-8fd5-578a0dd0a560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d29227-d214-4f1d-a9d7-0c323d09b133",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1d7276-e883-471c-aa8e-5176b13a24bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adf76ea-f031-454a-b95b-1c8d87dee3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b200080a-db0f-467d-97d2-7cd9176a86a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee566e56-9004-499b-ba06-dc39cb4c221c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bbd468-4edf-4b09-8efb-452d2c9f0ee7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227d9a01-41a3-4967-bd93-9985a3aaac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962f6dc1-2ab6-4323-b194-e96af8efa104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468a4476-1230-4add-b1de-cb9abbec068a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84820884-ffb7-4172-8898-beae41506fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2951e7-255d-4bec-8000-9540f2ae3551",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e79a9a-1455-4893-a72f-a5318b07d477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9836ab49-6e8e-4bbc-991c-c836b3c82974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760b2c8b-a7b0-4748-80b3-c79d7e2a9c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ece9e723-b199-496a-9090-dd5be7d8892d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f6d78b-61e3-4c6b-9c13-36ed50ae926c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558f1c05-10df-4e9c-8c48-b71871163682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bd2ce6-44e8-462f-a3d1-44d53ee5491e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8878777-e64b-4d65-a1d0-7e949f55e844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "648c9f84-7948-4400-8c7c-d8be7b84035a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab7bab7-de85-4589-8e50-ee48ad487ab9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf26af2d-4960-4cde-baa3-56ebe23de819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea119b59-f7f5-49a6-a1eb-adfab1bad7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace920b2-3058-41ce-a971-4dc7a00d4408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e09b22f-2435-47b8-9d19-13e7bd088242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4e3bf1-b8be-43e2-be36-be2065fdbf8e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892a1393-e137-4da2-8c75-b80660d032a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "00c099b6-621c-4999-a83f-aff91bc11a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0945a0f-8261-4b3b-bc6b-517efd10df2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "35d10cf1-4540-4df5-9849-bf3df126b271"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed15520e-982f-4562-bbbf-1d3139123d40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b4c99c9-b97e-48ef-a222-2d6f81609d08",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e901e6-c59c-4e05-bb43-96c6bef6f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30f8b3c9-f626-4199-aba9-593a8d5897d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c7e10f-e60f-45bf-997b-973ae7b695cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3c4632e-e4b2-4260-86c3-7a751bfd3c7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a5aeddb-31c9-425a-9ac0-7ca4faafb8a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c33fe36a-4410-406a-b17c-ffd10770b5db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dafacee-55c6-49f5-a326-420febb6aca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ffbd8e0-2c8e-42a1-8815-7a992519a9d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b38775ce-3346-47af-9ab1-7f6872b1c470",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb45860d-c78e-495f-ac50-bd60ab36a255"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1c63e60b-b5c2-4933-8a3b-0a6850ab82b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66fc5798-0453-484e-9393-01c3e8f5b936"
                }
              }
            ]
          },
          {
            "id": "801923e4-a78e-4538-9ca7-d32a61ea6bcc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf707f08-eb5c-4a6c-97c7-4160035e5ed9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3d42227-e713-4b51-9153-bdd48c9a023e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cce34b9e-1d82-4b24-9c25-c31c494cec0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64a355ff-c1ed-4b31-aee8-cf2ffad367bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6189b61-e1f2-4ce4-b0c9-90422d0f6211"
                    }
                  }
                ]
              },
              {
                "id": "c611275d-7fa1-4a26-8390-cf62347dde45",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38626306-753f-45b7-bd43-403e65e52612",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed2cbea6-747a-49ee-83d0-d982fb47c4bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ce50ddd-fbac-448f-a670-0e3820fdd609",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e3def5e-ac5c-4800-8a10-567b0fd977dd"
                    }
                  }
                ]
              },
              {
                "id": "569d866a-51e9-4b66-a416-9f7a76a182aa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "894cc940-e7ed-4dbb-ab05-b69308b2d854",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2092938c-ab80-464f-9ab9-401eceb85093"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0229285a-32cc-453f-a29b-efcbed5180e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e4baa09-553b-43cb-a6c2-969a9591d8ab"
                    }
                  }
                ]
              },
              {
                "id": "8a67bd3b-3556-4338-a4a6-0537a5b52b3d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "553bc697-3881-4c90-abb7-938356a167c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf17bd1b-488b-4ade-bfe5-7b426a70666d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "518edfa8-00f4-4c69-8721-b9cc42e76727",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e966a37-7238-4da3-aaec-76614b16c455"
                    }
                  }
                ]
              },
              {
                "id": "7b9d8de8-15c4-46b3-820d-61c7fc968ac6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd46cbe9-196a-4569-8af1-1b1cc06ef2a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "142bf2c2-0a48-4aed-9f1b-3ee3150b96e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67279ab9-d4fe-48e3-be40-529da4dbfa66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "74698bca-e418-47e7-b7a2-128ad16ebbe0"
                    }
                  }
                ]
              },
              {
                "id": "6556afaa-3fb4-4a0c-9f6e-772fba6dbe96",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ccb27b0-de01-458b-b485-5a73f05a07a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e2d6062-c068-4500-bf79-3baf6e00c9e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c395312e-b76b-44b0-8917-4496c8c169f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cfbf8fb-16ea-4d63-b8d7-05c62e23ebb8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14d44dae-92cc-4b0c-829d-039682fec1d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8122e28f-61c7-485f-ae3d-cf8e17086744"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96c412b1-dc24-4625-ac89-72a42f6bb60b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cef50bc0-1157-46df-a3fc-a961b2c8ee6c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f364e54c-dee3-4bc3-bcc7-7cf76ba39d9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d5378d1d-8603-4461-b515-477e99de7ca2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02918d07-61bc-4014-bda8-965d8677c2ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a43c6ec1-6824-45ea-8d1d-cddd8b3b45fb"
            }
          }
        ]
      },
      {
        "id": "e9818e09-ebb1-4943-8d3c-5f2163715839",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "885ac991-f366-4961-8c19-5b941035ef74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bcd7215-98bf-4f10-8c7a-3cb1fcb2fd61",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1961ea41-4d66-41d6-bddc-c73190196ef4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11391785-6f2c-4a00-94f7-7eed2323b9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ab9cd9-20ef-4f6e-bdf2-3f7ced223dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9ddf8f-e119-47dd-9511-93f0a54c29c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e98f7c-b6db-4260-bfa4-777ea381ecda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600e6d01-6b56-4af4-9247-9d51ddcf3d92",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b593529-2a66-4d52-b4db-d39303cad5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96e7222-9594-4811-955d-e3680444e409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0506fd-da08-4b77-911e-e4f79cda350a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe697b7-2ce2-4e3f-8a58-5c02ae2806cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fb87f8-a72b-4589-ab74-774df1a6319c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e44565-e2cc-4209-8345-a0f8bdb26973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e3ab98-6779-49a4-b942-1a7b1078fe0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255d584f-47dc-4911-bc31-e2d9ffc8b402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "086e8fe7-723b-4709-98f2-986462df40a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28f0754-448d-4bcf-bfb5-e72b174fed47",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee79099-269c-4b7c-a6fa-34fd712a346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf87f944-48c6-48d9-860e-c03374b7e9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb875db6-600f-4f99-8469-5128910148a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d30536c0-8960-478a-80e0-7d4c6ceda55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aba683-0d1a-48cf-af4c-bd6f81d4224a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d5807c-4c77-4ebb-8467-5142fb907c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4f60af-eb5a-40c9-a8e4-c52b17d24944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16def50a-004a-4b7e-acb4-57101b3ac76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b859d6-8f88-4d40-ad46-ffddd5c3c5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a1d18d-70fa-4707-bd03-3d689c992162",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c317640-8fff-4e3f-a0aa-71e302040401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e273f00e-9ec6-4e00-bc50-fcec6e8a3c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d259b8-ccd0-4d03-8eeb-35e2f24f62d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efc95f63-0ca9-453b-ab7e-2aab4cf076f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f33305-066c-4133-91b3-79010f51b6ef",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b7d56d-72fb-47fa-9516-f238c4b9c617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6c9117-5adb-4cf9-b2e7-364d55f29b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbaf9af-39ce-4fb3-90a7-c7622aa252a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed2a3c2-972d-4b57-abb7-9f61670f3548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43283b33-fdd5-4d12-bfbd-a7b5b1349780",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea27596-3292-4c09-aa8b-1c9b995020fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6006fd-0dce-492e-a7a7-5f4f33f87266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b27a599-58a6-41f0-bc06-9239b7afd105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6831d0d-263f-4349-bbe9-0a21f92a314d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b92319-ff9a-4218-8800-5312580083ac",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7660f78c-e72e-4587-b5d6-8bb0d7e589b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b007e9dc-5470-4d29-bae7-3137dfbeaf4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dec0e86-4226-458b-be4a-36576454a51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f03991-ef92-4f32-9ad1-957a8e807459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6121049f-1965-46f9-b1b8-8e369f583b98",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f2696c-c088-4e50-9acc-b18ba00703f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3597262b-a4ad-4ab4-ab93-3a900aa87d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db6177b-fed8-4d6b-8c42-1b9bf0e452c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcca9ee5-224a-44d9-b9f4-114fb88cca06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c84530-ad96-432d-8285-af73ae1a3170",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f248ed-fa3b-46b3-bd4f-c67a5d758a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cba9c62-041c-4304-91da-44f4f38f335c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aaadaf-c742-4a5a-953d-904ef8c3ee2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d1daf142-42fc-4705-a762-ea8940c0d14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f0ec66-0647-44ad-b874-7e7c06f3a0b0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a020e6-1e50-4a03-82f2-216f5019a8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569129da-fe47-45fc-86f5-ecf526a0a822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7a036f-5cdb-4928-be80-52b05a42f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5cb9a6-e3a2-4175-916d-590e62bbd96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226132f5-13f3-4ea9-aafc-10a860d7b108",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463c5c52-e983-4f4d-a282-f97c9ee4294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a823247-e695-495e-bc40-7562286d8c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377129ad-cd71-4737-88ce-62329e36e0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9b9a73-3434-4a67-92fc-84ea9ac3df32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c00c79-5c62-4f2a-b4f0-4c3f8b557ee9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851de4a8-0152-4ec1-968b-6e457fbaf37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8f970f-2e79-4fc8-aa23-5d9b5a43d05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297e2d52-f450-4aa7-b753-e4a12172e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83c6e57-4701-4877-aa91-9ff9f2924162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf855862-ecca-4bc3-a813-61fc6b80a55a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e419f3c-47cb-47f6-9aba-bbf91ccebc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595e0114-3e8c-471b-9bdf-697781409934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee18d2bc-d401-47e7-8c95-49d861b088e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b8006c-cfbc-4367-b65e-aaf91b1fad19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e0678a-8e62-49b9-a67d-067b32c621ed",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80e1cdc-53d3-45f4-8d11-5eb0e4e9d239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f744457-56f2-49d7-9f3a-605565caf1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b4698a-7992-44ed-a6d1-1cfc2a1ea0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae3132d-5586-4263-837d-f4f58dfc58f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11483f63-219f-47ac-a47e-e43dcd85a74c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367bab74-a005-40d7-b05e-04c90159d5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e98a402-33e4-400e-8be8-4a3fcad03606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ef5f55-4ece-40bd-9ac7-c123ae435e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "20efc508-befd-439b-9383-bf0a536abf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63724112-e09d-40be-8d0b-adb4fe61d5d1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7736a5-5a53-441d-9309-923bebdd4d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bae3a6a-12a3-47f9-a19f-76c5e2e6ef4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a76c25-3e7e-4310-aa47-e632f41b9da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "563c706f-3def-4bf7-9be9-52dbf5be8d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628b195c-39b6-4322-b4b0-e3f94809918b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f72d75a-2ac8-4086-a786-d24306c0a38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa5162f-b313-48a5-9b81-cc4d215bcf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243dc0e6-b1e5-4e41-96a4-0cf8551394e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce8cab9-ed79-46d5-8cd6-b559204a16b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff3a583-f1d1-4094-9461-d77f12c97b8a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0d7c59-1cc8-4887-8ce1-d6c65bc4da76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93a047e-061d-4bec-85f5-72bff1ae6529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49de022a-2215-4e8d-a785-650aee170532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "410c97be-5497-4f61-bf7e-795a59cbb30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feed05c6-d442-45fd-87ab-8580f7a7cc14",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f5d1d7-5efe-4471-9b23-078e39758d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961d448d-f87b-437f-a87b-fc5640e5f82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b7c7d1-3618-462f-8f9f-fe78134beeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36904207-45e0-4beb-8e50-c8ed7289df16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54468be7-722b-4968-b7e9-b788d2b4330b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13bf4ef-c818-43e4-82be-d103ff29808c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd37990-e9dd-4913-b078-e37e678cc9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c8dda1-b016-4570-96bb-0afef60570ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04efd341-a360-43ea-8dcd-90924453b5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480f8b35-978a-4b75-be01-3454a85aee5f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b383f22-26f6-42ad-aecf-e9a61afb1d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1260f7cd-1301-4b00-b040-76c7bc4f830d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93debbe-a57a-4d4e-9ec4-c5234097b730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6644a63d-c063-4c9d-ba2d-fba5b15080f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab78e39-ded9-4a3a-8696-7f61aa618a6c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b1c4d-cdd9-46e6-a27b-6e181f9f1f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af81506-b5af-49ea-8323-7bfa8881c2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02cfc77-4da3-4a6f-8980-fabced3d697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da6e6743-88e8-4914-ba32-2298350f7aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e095f040-49a8-4d7c-9233-bf8035cf77d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef983923-ad6f-45f2-8c24-5198d0d1e78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9065259f-5aa6-4f46-8184-5646f309c08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4864f5-cea4-42d4-84d6-8295403380e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8c97aa-3484-44ec-9c02-804098640524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c440452e-52a6-4574-bede-22682381165f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e42ad0-f59a-4312-9037-d5819e0b7d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cd8d3d-ba29-4120-af7f-5b93068e7702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b36897-0fd0-44b5-abf7-fd2f7de831b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d063ea7-a924-49b6-adbe-4fcaa8d163e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9044bebc-2d1a-4062-9b1b-7619eb1a91e9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa54f8a5-9787-4414-86d2-5d38376a477f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bade7f73-d7fd-4eda-8214-abffd61568ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4263d7db-6549-4cb0-9a77-a9354194566d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0dd4a8f-b2c4-4136-960d-a08931eefc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8acd60-765b-4b22-91f8-554be9a339e4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779446bb-85f7-490d-b922-bb3c0230ed25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2615f87-d25c-4e52-89ff-4e87984d5265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c885528-ed70-4163-9da3-a1b8baf06b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc787eb-2ef9-4346-87c1-70b31912520a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd69da44-3769-4222-8c42-146ba7c43cc2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dc6dc4-8306-49e8-b5ca-ec381d62d7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393d0ce6-259a-4d99-8ace-96ea24cd63ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b270e719-7a0e-4fa5-87ee-553d59ac2067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec10825-8968-4576-a1fb-c620df6307e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed22aef-77d7-4b80-bea9-9f2f68c1e5f8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94bb6f5-83f7-43dc-b1db-b4b4ca117ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520a29d5-ec8b-4454-92d0-7f8b89db79af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4983a512-3309-426f-891d-3ef641b4d9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a000ece-e488-4812-baab-853edd2e4f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35646630-a71b-41b2-ae09-c27c4cae22a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9be098d-eef9-4efd-8777-77a2bf8c5bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467932cd-2538-4027-bb0f-f0ba9fe17bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8975fd-056c-4c3d-8069-84fc5897bd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "488c4a6c-14c2-4a7a-9bd4-0ff26e8dd5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9357645-73df-4400-824f-8ea62de8ec0d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80882d73-8277-4514-9ae6-00e799abe2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488de2a1-cebb-4f79-b1f2-87bf398581db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c57ee8-3eb8-422b-9b9c-49e9fb02ece3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6000284-b9d2-476a-8e73-8ce8ac48f273"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68a855bb-819b-4d13-a200-110f8349e93c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae899808-4ceb-47b8-9869-d952ef0af6a6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f8a65c-9262-42af-b1ac-f9d0f3222131",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d249ae-7391-4b8e-a1b6-84c40b6a3a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41eaa97-27b8-4853-b3ed-93538faa7666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a68b2a71-fb2d-4c46-9000-0dfb33614dc4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "536301d5-1296-4380-b996-b733756b3f03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f620364-4dca-4fb2-b002-98f0ab04cc5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "554a737a-5e81-4b9e-a6dc-172a6977cdb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae0168ff-81d5-475e-8324-a91b5d5f3526"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0339b47-05f2-47ed-91c8-1ce4f25b38a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d20f8969-93b2-4113-b060-728b5542b051"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab14b22c-0611-4bd1-9809-351ba6656df8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23f4ccd6-df47-417f-b2db-4f6ca6c3dffb"
            }
          }
        ]
      },
      {
        "id": "77280440-4a07-4166-8911-42859acb5fed",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "aeebd558-7a91-44b0-ae7f-e9c1b41f51cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "249ce190-1868-479d-9561-20e651ddb6a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce0c72ab-ad99-4adb-b578-cdf027fe6aa6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d57fc77-6d91-41ac-b456-3803f21a4087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1c8211-715b-461d-8539-37539e254ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a658b9-6c90-41e7-8b5f-270de15db318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9435b9-3706-4ecc-a542-aadc226a5af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a4b14f-fa66-4621-a786-8d8ba338ebc2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7278c2f-7b96-4546-b4c4-9aa61dec8577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbad786-4932-45bf-9640-b47d8c4cd376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56c8064-6754-4a6e-96ec-e2e04c124e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "269ffffd-ed08-4f38-ac93-58748f4abb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4b7fbe-875d-4f3d-ba48-a97c63a3f920",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e73972-74b5-496a-bdc0-632ebbd7316d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e0060a-8366-40fe-b0e4-739a60ad17a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb7d41d-ccb8-4fec-8b6c-6b28769a155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78eac38-259f-47ea-9db4-5f25f685b887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e260556c-8ed7-4bc3-8494-5228ea05722c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8f8bba-9c23-4e99-8eaa-4e3c8adf2def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26206583-3639-4147-acc7-259b27d965b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784a75c5-387c-46ae-a1ce-d35f4dedae17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58715bba-cc57-4c11-980a-47213e2f8437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0a73c6-fcb3-43ff-88df-feed1e7db326",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e266deb1-1e40-4b46-ad0d-8f8cb43178cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17331017-b753-4daf-8d74-063bb8f3f0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d49e98a-127f-468d-8743-5bc4f61c0728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db03497-a5d1-434b-98d2-8dc5b3b0775e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14e9916-e49e-4964-9df9-1f63d7ed9d68",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f10587-b9a2-4a3f-bc6e-3ba5eb44262d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793e44b4-987b-4d70-8310-87c43a1be468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d791bbd3-e5ef-4a47-b1dd-9240dcc4517c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30316cd5-a4b1-4383-b7e3-dc6e46a7cef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad345890-1b79-4475-8fbe-f8c54f416805",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b76b4f-f2c5-4992-98d5-eb7b824c5d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b2ad10-d6dc-4fe0-820e-2e33c6db0066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca13c14-5605-40da-bf40-7e8b79a9ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d7854e-f29a-4089-a5df-1b6a92222732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960017ce-ef3b-4300-8641-a26b7d8395e9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aac4e03-14be-4d5c-981c-352bc149f522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b998899-3212-4e9f-ad24-4f66275fc46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f78e29-4d36-42a6-b5ce-742d014dcd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde5193c-0488-448b-99a0-be4462bfef5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797922ff-636e-414d-b05c-13b70dbe1656",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc2a279-fc8d-40aa-a01e-b21ce34d4a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8881f3-d97a-42d5-80f5-80e8cae49873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefb4e05-4422-4afc-8960-e6de472045e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0e8845-8075-40dc-a52c-29ebba44eec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f527508-043b-4bd7-8daa-0e3c4a8b9871",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dd48fb-486c-4a4d-add0-d06adf273210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee9565a-eac7-4c8a-a92f-114d08814315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c71a41-a404-4b10-88a5-569a65d1b731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70463e5b-c6c7-4107-b517-4f6a7b01f352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447769d2-ca94-4d97-acf1-20da151e82f9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f0a51b-50ad-459d-8feb-495aedbd016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd9d821-e75e-4cd2-8511-104b38199ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bead2e-1bde-41f3-aeab-9e064db9ad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3416f2ce-1659-425e-8167-8650d19e6712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fbb1cb-4583-4024-8327-7ed706ec27cd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e7bd21-8781-48ee-a9fb-fcc95ab2843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9746f21c-c9bb-4480-b715-217680196f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a04b0e-8e2e-4542-b8fe-0b306cdd5dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1b2e1b-6746-4880-bc55-8f09539e8561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b609b013-29bc-4fe5-ad1f-f29243593207",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d370c9-363f-4486-ad3d-97be5796b6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f08c87b-0a6d-4923-ac68-474592aee9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc915716-fcc5-4168-8146-6d612d8d8c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef274259-e19f-42f0-9369-c0196789d4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f720f0d8-a6db-4607-800a-f9052a43af4a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21efd52e-802d-4675-b864-1b432ab28203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1054137-46ca-41e4-9b3b-19b6a377e33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6639a2e5-5632-46e5-9a45-a87f3ce8e2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4fe84c-5f75-46ff-9388-97921a8f7bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1b7d69-5e85-4a25-b366-907b2331d984",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97e2d90-ccae-4f11-b9db-36d6680bf209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257c7079-eed0-466f-a240-638cb0a5795c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f5fcf5-f390-4ea0-b7f9-348ac0cd5d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0942c723-c067-4643-acb3-c32523309a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75d0484-1a47-46f4-912a-fc63244fbc37",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef51d1e2-f42b-44c1-8613-f8266aa855fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f04248-469e-49bc-9da0-7e3b71a03a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7674231d-63a2-420e-b8d5-c1ef1cb5b3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a73d02-e73b-4d29-bcf0-e3e11f8ecbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1565254f-cafc-49dd-bd66-ae4acb19a662",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc358043-7789-40cf-9c9c-a919210cc8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad827b15-270e-43c0-a1a5-148212fe13c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ca2252-e4ce-4b84-8815-6487ef50578a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a07f195-e185-4071-9369-315579d693d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5fab1c-a581-4cd1-8a90-dd744c658fee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c5cc88-b10d-4c77-8e73-92d1798b87fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20ab32f-b6a4-44a4-b0df-9e69348cf80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dc02e5-829f-49eb-8d9d-08148d11720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e387d2-029c-4090-81bc-2de0eb75e541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e776687d-b3b1-431d-854f-29f3fd7bdffe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c86f09-3a8f-4580-859e-e2311936e7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b69f39-dbf5-4c4f-9181-674e41bb998a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe2c6d5-2884-406a-8138-2190880a54de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da920ea5-83d3-4c7b-b76c-6803c9a5b3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb09b2f4-bec3-4e8e-aeb9-ac0670a66ae3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb33430-2209-4854-8a28-4914b24531ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa5b798-decf-4fa5-b8c5-4b7950a71b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57debe5d-815a-44b3-946f-5e1eafdb9bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eda8aebd-14d5-4de3-829d-1c5fb22a910a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8c7719-9080-4ae8-8fd4-73c9d69523c6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe5c866-ee4f-4a67-9695-5afd9bf7f2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b100ad7f-0290-4ed7-9ea2-bae6f30f4813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f7ced4-44a1-4fae-bce7-b84cb26fc858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f6fda8-10b3-48a2-80bb-ec7dbe3dd5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ebbc96-4e79-410d-b5b5-77ed7461adbd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754a3f62-a0d5-4385-8ca7-cbb3c4e5b74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fac5e8d-b0ba-4289-aa0c-e893d484b3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8d9336-f371-4ac4-889b-a8e9383fc446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7abdb1-77d0-492f-a93d-60cf59d5dbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce7235f-dc04-4d7b-9aaa-2577b994faa5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c626ac7-a8f9-44b3-92d4-21779b828983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4f433c-e85e-4e35-a1d6-41ae4b0dca59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6a40bd-3640-47c4-90d2-59ed0cda2b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0445bfa2-02ca-4e97-9a5b-5c49d48bd5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6986bd-527b-4449-9904-cce80d6be84f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057d3fb6-81a1-4f16-925f-75f5318b8f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9a222a-5be4-4a02-87b4-a979f62dfcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e696f11d-e3fa-4d44-8168-3da3879e9af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4fe8c1-bd3c-4fdd-a50e-3191802c5d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a68e03a-318c-400e-9d11-adfacd733ba1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0f0de4-b3f1-4c09-b4e6-2be1a292734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04872146-0375-476b-b7ff-74245877395a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8c416b-4a8c-46e0-acb2-6af9fe994a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beed92a5-8745-40ad-8b89-e11acb600ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df338e45-6e7d-4773-b417-8c470ec48d4b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3b90b6-5f8b-4a28-8fb4-280b272aecf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2101e69-309c-4525-a0e2-2590a0d32632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b254b42d-a1da-4c55-a1c6-4fc2324a3b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d29aba5-ee6a-4cf6-91df-45f5b8123e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55c77e9-8ee8-4db6-a0d7-811dd397d1f2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7910416-2a9d-4e59-9731-ddebaf968bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d970a40-fb37-4b89-b690-6fabf79454fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e58958-7c95-4821-9fb8-63e1d1a341f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a355da34-c050-4cc3-b2fc-0cfcb3245796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e515860-e776-4636-8cfd-9322028f0a3b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121e7b54-1ef2-47bc-8af5-22ea69d2d147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f152aa-0089-48f9-aa33-40befe71928a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcf34b5-9d1a-491c-ae79-9d121a51f1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7a1851-b038-4818-b6b0-2d7fa8821c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06e3e36-d2a4-4c8d-8989-a4afe9cb9456",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bc8b37-783c-4a3e-a6d1-5740d32234ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490428d8-39b6-4fa7-be95-3e9c3609623e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f77ce6-3a46-4959-8414-d0b92bc1a0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78bc6405-196c-457d-b7c7-b4a3354b9b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d93199-bff5-4dbe-8f60-ed06a7d8d8bd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc51f9f-72a5-47bc-ac03-1cb5d8edbbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8178a3-7cba-4fb2-b4d7-8472508d2630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b74ce8-f6aa-4ddf-8f72-7e845baaafd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c43797a-e330-41bb-afa5-21bb2154e155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cba1509-767b-48bc-a83f-02f447f03e53",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1b70c8-ee53-4de0-9599-d2ee4ad4358a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac6b436-01f8-4c8b-9089-a0d197e7667a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f51ef1-866c-41ed-bbc7-e087194d5203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2df141-d466-4db6-9d0b-89250ecaba60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5804a1-502a-44a6-8814-16b40ca938de",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d17cb9f-1104-40ed-8d7b-6b0137eb4ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bdeb4fb-1798-4be3-957e-9f5b09bc6e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c619ed-0d73-4923-8d83-42249ef36cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a6e6b0-6cc3-47b4-acd7-99e2b09d3008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230163b4-3a72-4f4d-9184-907ddccb0983",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ecc125-107d-407e-ab6a-c03953fd2452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b6a87c-d270-4f33-8198-ff422403f1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ad96ca-ed0f-4d21-9145-62783744116b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c57e4929-b753-4d79-b231-d98a5a1a7114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e087db-1b60-4d07-8e28-8d474f405c4b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d842f8-0c54-45b4-8b90-dc0d3a6b55c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a740ace7-dcbb-4920-9dee-778cc2b3841c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4652e06f-1b54-406d-9fd3-ee9ba220063e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca91c712-2bcb-42c2-8efc-2e6bcd80a25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e208cc8-aead-42ae-b746-41f734c5839d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07de2c00-393a-45ee-978b-0087ca86257d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8699c2-435b-4e53-ab43-8afef244ad4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71e84d8-6914-43e2-8706-42ccaf69ad7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbf30db-f2e7-41f1-8cba-ab00d7872b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e5d993-9e85-4b69-8b36-1a4ea13e4001",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70d0e4d-1d13-421a-8e44-0568ebbdd829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac44573-0ea1-4ec5-a662-5eb12426ac20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa319150-6fab-4972-abe1-7cda76202805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db818fef-3968-4016-95a6-709e267e01dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbff916-aff7-473a-a27f-11c687248a21",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35f3956-21bf-4f21-aedd-19ce8a9f8ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66609511-7011-4551-bd26-44da6a31a761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4f7a4a-1e38-4243-a299-f88b70fc45f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b0cc14-bcf0-418a-9031-7b8e231759f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a920d90e-0e06-486f-9a8f-f5b1c9e2d4ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e9393ff-f5ca-479b-83b8-985b90eb6933",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a7fdc2-8f05-4c7e-9051-4659ef05c877",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4d462ec1-5e94-4c04-9e1f-03213c67340d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f0db4c-4095-4065-9402-4d96d4c70bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1b252ce-bedd-4812-82c2-8dee198dc185"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeaa2574-4377-4c71-98ab-f5016e8d6cd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "626b9cd9-1d41-49fb-869e-8a627eba9535"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c8dbe7f-3d6a-4547-b7d3-b8703ad4b7d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ce5a9ef-4c3c-467f-af93-2876d2876ad5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c120df42-823e-44f1-b7ea-74b1b0d1cb23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "19ebfd06-2819-4b07-a322-2482fabd209d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f64d56e-07cd-4246-8323-4155858f8c84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9bc06124-68af-421b-aec1-32feb569a952"
            }
          }
        ]
      },
      {
        "id": "b882ec0d-6553-416b-a6c2-e4f5a65601ce",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "99c3a8ad-7dd0-4c39-8a1c-c1e4043baf70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef306440-4e1c-445a-a794-953e5a99e8ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97ef6ead-169e-404b-b8bb-2e76fb53ee9f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2148a5-fd32-49ab-be5b-d4e5c0d6cf6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8c8058-000d-4cc9-8aed-1f8bf31a9d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ea2bff-dd52-420f-a883-d43281629f66",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0a44d7-9bfe-4ec3-bba1-ebb2675f89f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a800741-5fb1-4af1-87e3-e4d95bd70c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e144ce31-4021-4a45-94a5-c69ede239ad1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8667ac64-37df-4fee-a73f-1cd0300b2acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe53733-5d79-4358-b651-346d49011832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8566c0b5-b92d-4f8f-9ec9-0bd2d8def04b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0956d9-8e00-4415-9fc4-25e12d300a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c026fe-9f48-4742-bd9c-64f3612b8d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d59b21b-7a03-407e-99b5-69961d5c3a4c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f12884a-d2d0-41d5-91bd-30a774d4464d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc3d72a-4afc-4ce9-9a97-d6e151294310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca7f482-1ecd-418e-89a8-706c88b7074d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0dcc16-d394-4c8f-85e1-d9e4ae1aa40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0b98e4-f860-4ddf-ade3-29e3653d73fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd17fa9e-e8b8-4e72-9c86-e190528fbe75",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3f5b2f-80d0-4420-81a7-eafae326c827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bb3ec9-06a2-44e5-a0bb-ba19379fe634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91194d5-506f-498b-8a27-d37c77ec0e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79acb08f-90c3-424f-9636-8c4035c34d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306e1f52-65d6-4a3e-9ee5-6d7f960ad4bf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc02122-1447-4684-853b-0efe6d55ff3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b991d8e-10b3-426f-8fa0-19e7d6ca4b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb005ff8-80e6-48c2-ae26-9c32b15d0489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db4fa99-1a7a-4cad-82cb-280dc6fc941f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c8d068-fc0b-4fef-9e0b-4294d94b9169",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa84acc-10e3-4f84-a9e0-188240bf5ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b7eac9-2d1f-42b0-b6c7-e1c5bb0e0657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d343f843-ee3f-4bc9-be66-8c922d445f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0e977b-d95d-433a-ae47-eb62bfcb6210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cffeff-760a-4c53-8c59-55489184eaa6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502859ba-e14f-40f3-b8ee-4a3bc1575cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8f8fe4-fdac-404b-a2e7-4693af276fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853863d-6034-4b44-83ca-08b791afb987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d18fd6-3342-416c-9cb8-1b2692c9c11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee16ed9d-0237-49b7-aa4f-102359aa60f6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c40c28-855a-46a8-9bde-8a3313f91c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd71ee99-cfb1-47aa-abe1-a00d743bdab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31627f00-b85e-4b35-966e-eb3c4916d4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927d65e1-76dc-4e90-9fec-20c9c875e37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2932c757-d22b-4dd8-82cf-0faeeb7dc40f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b43dcf-9b72-4303-a5d9-0d2908f9c1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b6c037-b9c8-41ff-a4ed-90764766a09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e630820a-42be-4f25-932f-2fcff610196b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3387110-5c85-4d49-bbc4-74ead273e43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9592aa3d-5ce7-48d7-9913-47500b9b0352",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b96cd7-71eb-4700-bf99-8b2a5ed8bc35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b8cd1b-fa0a-4f7d-9edd-ae20227b4336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8b92ed-437f-44ed-ac91-af4e3d9799af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94932b93-f69c-4d26-9e5c-4645dd8a2efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f834dc23-43a5-49b2-9c8f-a45599aa2b5f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f14d60b-87c5-42be-bd77-6a5e86b8041f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "965447cf-4a4e-47a2-a5e2-40974e0128d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbcad12-c15f-4764-b20e-1c47e3333cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35262917-acf9-4967-9c5a-674ad7424019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1271a799-c967-4b19-882c-11bb66e10290",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bcfcd6-145d-4be0-bfce-6778cb4db79a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa0ded7-ef81-4e9b-9a16-c4ecad8ad30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a16d480-fa2b-43e0-9cf9-6c162d2979b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bf2e6e-0bab-4090-9aa6-691916c909dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbee4fda-fbac-47ae-8286-183fb904b8f4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5bdf1c-d352-4769-807d-13552d3dd4fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11c01b65-a4a5-4794-ab90-c4e3a932fe9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c4ed7a-71a8-45c2-94bb-c39f16e1aa55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996757f1-ac08-4165-9cb9-cf3fe00f70c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4ddf3e-6942-4c61-b55f-2f5d19fe3589",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcddfbfb-8746-4ccf-bcf6-420f36a7dd0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb5a2a4-50a9-4b51-a8cd-d009881d4b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba142ac-80b2-4bda-baf8-df62357dc077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a973fc-3b15-4930-b1bc-210cf27ff896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e949f8-41fb-437d-8391-9458d5472cc4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dee5e8-0a13-4044-9bc3-8f4612c8ae4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b232ff-6f59-4e6a-8502-12bc26107add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8666d46-3a1f-4184-ae4c-6c810a260aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddeb76b-a305-44f3-a0c6-7fcca61ce379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e234835-2c8c-424e-a831-98e9b42f0f16",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb13f9dc-d3aa-40dc-9e13-a643dc21ca1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb455c8-38ef-4a52-9a5f-25b26d62a0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7456a2f-2643-4579-9de0-d2323b5382d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7efbe1-cbdb-4230-bfdd-86924a7d8c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50da16db-4ecc-4f57-ab1f-fd9850730524",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dee0651-3d40-41b6-a78e-cf35daa186ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e17589-558b-4cbc-8aad-12e2c4461373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0cffe6-799f-43a0-b68b-467fb24128b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f90ac42-f176-4bcc-8cb6-e712060d6d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cd20f8-9e16-4ea5-92f3-8723d36d07e2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a6310b-c26e-4514-a1b1-712489969360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6ff479-4b29-4578-9b43-874626915b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d905562-daf3-4348-8860-3efd5381d970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb2f8ae-d40e-4210-9cfc-49505c98aefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a44b7ce-e448-4c6f-82c8-a14adec68366",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af664bb9-b5c2-4f6c-90e5-32b8dcc39d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b341c5d-2534-4849-bd08-2d0500a7d507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42634620-d39f-46e9-ae69-dccb208367be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b0c574-1320-4254-b5c3-effb2ada19f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55402197-57ef-4380-b996-2ea859f408ae",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d710a044-01ec-49aa-a8b4-a8fd2f1a87f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21e6792-fb9a-4d35-9de9-ecbc504c5d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e30a149-056d-4cff-9546-07ae21d42536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228e6d6b-cb6e-415b-96cf-aae6a8f26ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d46984-8ebc-4062-a875-850dcbc50a12",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361b9093-a645-473e-9bdc-a0aa8d69de07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1737bd-61ab-4eb3-8fcb-1483bf6d4a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549edbed-af0b-4281-a36e-08a7cdc12491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553e238d-1567-4099-996b-b8ecbc439c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd33aee9-4864-4698-ab67-dd538ef79f21",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128ccebd-a7a9-4fd2-97d7-281cd44c9826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1daf1dbe-953c-4de3-9989-a4e315105279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0d5ef7-bde8-4637-9178-b7981ae82dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29329fac-69e4-43f7-ae76-a59ba81e1478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22613063-c0c4-4c29-bfd6-cf1d8e7e635f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ba5de4-b3ac-41b1-8c7d-e3ecfb0af07b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a20f4a-c942-48df-a0ce-454fd112fa28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a1ac56-dc8d-4f6c-9ed7-0a15cc02f15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efe1d15-b8be-4c8d-9d9f-7ece8b52316f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207a6f21-2ed6-45be-96a5-d4a3f17dbbf4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f57c96-4782-44f4-8f36-fd9d60d2f763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96da8c14-2274-4024-b806-3835a38fccbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebf0661-e5a8-4e1b-a1d0-d10f91c0baf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec780036-c589-4b68-aa06-2128ea7654ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60afbc57-08e0-48d6-8132-61fc31ed8c83",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12587b3a-584a-4a20-ae06-35264e13051e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53f2116-c00c-49da-97cf-5befb1338346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053d7476-f9e9-4320-b35f-7d8899b0f8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27686b06-6af1-487a-a39d-812e8834d048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db12155-5f26-4311-b624-09b08ec9f121",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e229f589-f8fa-4f0b-97ea-14bca9a67929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c9c42b-da36-42a6-8981-7d309b3c2220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70af9158-f90e-4f7d-9136-ac72a7c13175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a366bd1-ecab-4603-abe5-0879d92b85eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0dd1ec-5fdf-4314-a4d1-898c054a70d4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcc188a-b7ae-4037-ace7-a681abcf5e5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f6708c-e113-4c44-b7ac-03f62fe82971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f896ab8-386a-4c94-917e-337e9b6c793e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5cbd35-4563-47a6-89c0-442cc055f871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a30982-49b4-49e4-a92a-83ba7d08695f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a03cfa-246f-47b8-86d7-7bb51a27993b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6e0197-5c20-48f5-a74e-41fb73cb4574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bee8dc-7a78-4dfc-8b66-680d63c7a37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c68256-1a50-4a04-99c8-b758f5cf8513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7c242e-563b-431e-a38d-fbad2d65e34e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4492fe49-c635-4559-b1f9-245ca57beb62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cfd0bd3-e846-425f-a5af-604fff28addb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b99ac2-19ff-4b47-9523-55f6c31b4273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d60d4a3-6941-4acd-9ff9-5628ebcbc306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fc99e4-4167-4ae3-b478-71889f39167c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba71de21-349d-4ad8-97d7-bf62f7572f30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "255916c1-1fcf-45b9-9509-c7ed12616224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2280f62-aab6-4a44-83bd-2071ed4a44a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d231f1e8-6df3-482c-85a7-15dcfa23177b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9693f452-db03-47bc-a96e-5697ea12acec",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d891fa-8254-4131-8493-428c69dc12d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6742da6c-41c0-44ce-8643-107dfca8b1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d58218-d9a2-421f-8989-56f6757b65f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513230f5-9284-4130-bcc6-4daa8c21e0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b034c1-43f8-4094-8c8d-49aa2bedc0ad",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d987b9a5-d591-4a1f-8fa9-ee24813cac26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234bf0fc-04bc-4d30-9f8e-1273837876b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16193e7b-c100-4384-9b64-1b0ce4b2c881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e510e4-ab55-48a3-9df3-6d109135256e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50549dc-5211-49cb-b867-d8ad8615142e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e03a5f-7c60-4566-8245-2b710a36261e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e52730a-e14b-49ac-9cac-c19e4f3c2f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031a3cc5-ca82-4597-bd65-e8037b61f7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b3c901-47c5-4a51-8079-62b46c6310a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a34498-04df-4079-a6ec-22aabe36e571",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2784e869-60a3-48c4-ad98-567a2b6a1e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52094ccd-5907-4de8-be70-50f10301c1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae83440-8ca6-4526-aef6-6599e9b7bef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8a2844-fbda-4152-b39b-6ac3cae175c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aed1c76-6adc-4f8d-9c13-2e9cbeb65994",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f21b3b4-f7c4-414f-84eb-573548904821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58275c1-1ac6-46c3-8a7a-9333f8bb9342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938c23da-2448-452d-b6aa-544469465139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5cafc6-72c5-4d5a-be4e-165bb1b5e563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400161ed-6d41-4d6e-a485-697a83dedf5a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e50be2-c228-4d8b-8566-bb3ea001b398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8e20c9-a041-4be2-8f22-d620654a26e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78de8ace-3d8d-4185-bdfc-0bbb2fc5fac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44807e36-d02e-4b59-a229-d6d6d98e9678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62277af-88e3-4fb5-9754-cc529611df18",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604d8151-b82c-4ba4-bb2a-fcd9a928aecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c47511-a158-47c3-8bcf-ca8763e4a012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04de2256-8ec9-47ef-86b6-6db70f38f688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bff5281-ccd9-42bd-8bad-98412d5ddbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3200dd09-87e2-42af-9fee-93d707dab339",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf27e54-1137-4a24-bab9-116fc0cb43f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd39408-7443-454a-bfe9-2f5c7e295a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f7c079-2f1f-4716-a2ae-36874f1be660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecd666d-ab64-4b2a-ba45-c3ab67d07233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad659d-d393-4b1f-9291-26a25aca14b2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6da964a-6828-4e23-94a1-ce46cc11a908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715df14b-8126-4f74-b995-cb0daa578435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2de15ae-9d25-4a92-ab21-3fe3ae7c0101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddb7c05-1de3-4eb5-b1b2-3970ab4cf21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1d798a-d876-41d3-b10b-d9166a5d7a33",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891939db-baac-44c7-9ffe-edbebaba72a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03eab934-e9e7-4d90-9557-00134cd0145a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25381c7b-02e4-4946-adb2-fd11189411f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72944182-c1bf-41ff-879f-2d4acf1cfd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8b5f1a-c889-4778-a548-db6b023d1dce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b24ed0-53ba-4454-a5d4-b2f44c74515d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1525f5-a004-4e15-a430-b48c66b0c100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe915215-1889-4708-8f6f-4383a019cb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d04d48-d7e3-4cb9-98eb-e82824946ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f87cac-ca1b-4523-a180-6ec8c43f1b24",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbf338b-ae08-40d2-ae32-bea6bcab82b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0197cb14-230c-442b-b31e-6e9f0df69202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adec20d-91f4-4910-a407-eab202d2146e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b811d637-e53b-4f82-822b-441af718b6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad72e749-9bb8-45ec-b6a3-0ef68eda3deb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dae451-66d0-47d2-8fac-c7e71cda4646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa8968c-0111-4e72-98e1-9d2fd5790aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5931948-7c1d-4d21-8d6c-4c6f5dcf413f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4caccab-235d-4d0d-aa3c-9c46aeb13aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e22b1d-6347-420f-ba9e-239db47a0100",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723fa191-b1ba-4b51-9e6f-0b2d8ec57592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279b9bd9-f7a0-4bf5-a56f-2d327cf61790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd7c12a-71d5-4446-923d-d75a6933f60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f25f51a-e7eb-456f-9f4c-399c7de9b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b6f870-ae07-4e1e-b5b6-e332cf60cd90",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee50065b-b1bd-41fb-8a5b-fc69342ffe98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b96c32-c8b2-4679-b92a-5dc19acc7f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d2efff-c788-4211-a485-648d7920198a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6700a6b7-bbea-4855-a886-e570e508fa8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4226305-1322-4a0d-a2cd-3f9a06f0b88f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789333a1-3126-46f5-a854-b92d6254eba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec29ae49-9cf3-4130-873d-4eb091e3e145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9903f699-2afe-4b06-a204-d7b73bbe003c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff23a11f-ee16-4bf4-a563-25853e466b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9401df-5de2-4251-b28a-80b692b35466",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacdbef5-4661-40d8-8bc6-ef225bb94b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9088c6-2b04-4a42-9e6b-b04def2c32e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d15b39-8797-4eb1-abcf-1cfd3f6c1d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6236a6a-9667-4880-886e-d6599594aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980804d0-807f-46eb-8b5d-a1d908dfaa41",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ca2a96-f19f-4795-a874-ce5398451259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3cec14a-52ab-4000-b34e-819632c4443e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c9a761-6aeb-41d2-a165-223e7f40f065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fa2338-d52d-4295-af8e-61ab3f551107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1f3621-4280-4efa-b57a-0d6e0bb6da9b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3797f1-87b6-439c-9239-95315e0d4821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e014f43a-9d63-49ce-a0f0-c022baf4121d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2a88f4-ff68-454f-b556-53684e59229a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf544ae4-e847-4222-bcbc-1d8e37aed200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48869b84-694c-4a4a-b8b8-145a787ee90c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baaf87e3-58a7-4009-972f-4a30cd7e09e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbddfc62-774e-4016-8b53-80e6bf1483f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23087f15-3ed2-4877-8f4f-81688f285a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a48f769-3fe2-42bf-8d73-dc6df949bcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71346624-5653-4bc6-9c2b-45f5b60f9344",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ba0165-6559-46aa-9862-7ebf7c49e8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799039e6-2c8d-4ad4-9795-31ea463f64c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bb7607-8fce-4d34-8630-38591106ab25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fd2e9d-482d-4058-a572-2687f8bb2d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c80a40-db46-4bf9-9753-06ac11ffacab",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01fe860-445b-4f43-9f6d-40f75af659d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad8b354-e0c5-4ed3-8713-c03a92112b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8f4d87-b6a1-4277-9935-bd5b53fbeba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e231af40-e6ca-41ce-88cb-4f6b4504330f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb0d36e-cb89-4b54-aec8-4c66939e2d6e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f57b4e-8c73-408d-a533-ef0dfb109357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908ae122-dddc-484d-a7cc-e4501e256838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e75d60-320e-4b36-930e-cc4b55b3a29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601df078-e5d4-4b2e-a147-4fa9eea1138a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774dc919-5728-40cb-aaf4-5a6378559d07",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6302fa8e-ce7a-481b-9b93-7b3bb509a880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696d1b9d-49b8-4341-9987-ed84d69246d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bff029a-9669-43cd-8c85-763ed823fd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddb1612-1280-45f7-8573-6e6de1c132d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25113689-3639-480b-87ab-625f85bea8c0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44266ea3-be1a-4ffa-8780-7fc1d921d997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e343b63e-effb-4b54-a98d-4f82db9f4ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfe6dbb-66f4-474a-a985-ff8c9afb0904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2aa4d5f-250e-4360-b77c-be9de3b1fdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059cb47e-d83a-4293-aeac-bab84bf0d79e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57af3917-b03c-4273-b007-d9e7ee3c99a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576cc0f7-cf08-4fb2-8ce1-3a08931a190b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a420ee62-ba7c-4b41-8388-2dc7f440b70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf46c805-a199-414e-9340-6ce4a05ef375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0296a566-cde4-404a-94ab-fcfadae83186",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a319ec32-f343-4aef-9fcd-d7a0861defef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430204a6-e974-4dba-9c92-31d7fc6574eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cadfcf-7d27-42f5-9039-fa132aa646e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d517ab-d597-4676-93d3-c856b1695128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82e31d6-fe4f-4ef2-ada7-c1f79a04b60f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e6edf0-053c-4a37-8c18-d52d054fe114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ee54bf-3421-4f20-87e7-b29dc13a225e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f31fc8c-0876-43b6-a3e1-91a029ee3969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d4955d-66c7-4e8e-b670-ef587bcb7974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed731163-86ef-4ae6-8d11-08bac26e13e1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26be0dd5-78f6-44d5-8c4e-ba14d9d02c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31f2bd4-f408-438a-af4b-d5b2a01f08eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd517f8-118d-4586-b65b-adf5fe307040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c29937-eafc-45b9-8cc4-f07ef5a90733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa1a253-155f-46bd-b949-18d93adc3000",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de910d6-2d36-49be-990e-b826f43aada1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5daf2e3-f20c-4e16-901b-4e14d162e28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad23c49-263f-4548-b0bb-63dc34bc1a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e92fbb-c1ee-4979-9fba-f47ccc95ba6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15db3fd0-a4f8-491e-8b52-2b0cfbaf6cd7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571a4505-6e99-42dc-ba34-d15600d4bc9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7b5308-b81d-49bb-8580-41819a885441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e1d807-5fd6-4c25-a10b-405cebc1c8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf6d6ac-b381-453b-a608-bbf65b538367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ddc3e7-481a-4fa4-8d9b-1a2819c443e5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61846219-3f17-4977-bcfc-ece24dbf72f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c996dcb4-c00e-4159-beeb-82597f32a784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa232f8-bed9-483d-b870-b389ec8a28e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9fa7c5-557c-422d-8c77-77f2a23b1915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2748fc-b78e-481b-b048-264016ac4036",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7feda09-e870-46df-ac45-61a43babba76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e29fa4-b525-4ce7-8501-d1e65c8fec4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2930f5d0-7760-4c8e-b1c5-59e7934ba4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1411ac4b-222d-4d5a-a97b-ee8a49f7c008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818e10a1-1439-4466-acf7-25208d1c8ac8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df5b147-17c8-447a-a2d6-b734eba54297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6e4716-17ff-40a5-81d7-1bb281e85c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f574e770-00c7-457a-b5f3-1835c6e8232c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da662b3c-ae99-4797-b317-259ee8794e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727cd651-96e4-4188-b09a-d3447b78194a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e753a3-9ae8-4372-bf1f-cbdcb5f7c54d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08ab208-7562-44b8-862d-02726408bc8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf41b00-9c7c-4f27-ad0c-43fcce9d89cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf338ebe-be20-40fb-b5a2-707b41821b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433352f7-d2e7-4b2b-b9ec-1bd614a5e1db",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da774946-5d07-4da3-93cd-5ab0458ee710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "402ba8e5-cc7a-497f-a48d-b806bd669eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d50348-d7eb-433a-ad03-ec428ff64f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557ab6f7-02cf-48a0-9776-33fdb3bec878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49419e5c-f15b-412b-8859-3ddf6be876aa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4033edb-4883-4517-ade6-cc44f5416bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "941e88c3-76c9-4c4c-bab3-74401e2fb650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4884e1f8-902f-496d-be63-163bccb89ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cc2ee1-f89a-4f1f-80af-e491403e5fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f0e432-217e-4216-b710-c9fd7a45e6b8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa431566-728c-46c0-b7cf-2063a4ae9dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dec6258-37fb-4bcb-963e-4fdeda5f3527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732c7ddd-f2cb-4717-9929-c9d8ddfee241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485722ae-5c44-448b-aac8-5edeaed10e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f407f092-bf36-48d0-a54c-25cdc9744ec7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee684cbf-6c70-47da-b775-a19f8b7b5f9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b441cb23-ebd9-403e-9adf-508040a80be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22355b55-1ff5-4fa2-865f-52645f00a35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120ac352-4a14-4c7c-a16b-b3bfd0ca4200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97235ef5-2def-4d04-9833-d0fe23acf633",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be782dcd-2ebc-49d0-b6e9-0de78b81bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6bafb1-20a1-4a6d-ad1f-be2a0f56be3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe768c6-61a0-45f5-8c7d-9cd6d9334597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d90b74-78ab-4dd5-b13b-a487388aae23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d593e9-addf-49b2-b845-0ad3af503c66",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969c07e2-b91f-453c-9078-a2e9d8f92757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfdd95fc-5971-4957-999e-bedfd0cf053b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ee00ee-6a60-486e-8df2-d6befe5f2e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02214074-8589-44c3-84e2-53fe083da05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0cfae4-9b3b-4ea0-9b0b-acd7bc5a747b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6156da7-0afa-4b9f-bfbe-47aab469a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55daa715-2276-4b6f-9331-9f8b8050dbf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a73438-9555-4eb8-b067-8a9a48458a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4ab5d6-8b85-4812-b5b5-7ecf7000e724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d3a6c1-f65e-4d08-a731-0ef8bfc3a85f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ae2676-de35-431a-8fdb-162f4987be91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f1faa7-89b8-4cc5-9b8c-44868522be2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c49aa9-5a59-4d0d-af3f-45273fc08773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41aac05b-29b9-4fca-82b3-1441d94a5ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeeca3e7-572a-4db7-a10e-20775c16ab6a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a7aa6c-46d7-46a8-9edc-d737d83acea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "846bb004-81f7-45da-bc2b-d45107eaa636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2179b567-808b-4ecd-a2f2-e59203dba236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2391411-67d2-4335-9d84-403ce1aadab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d82a2d-98ce-4bf2-a401-f125bfc6b504",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a23c42-8b1a-4c7c-a52c-8395cdc8a49a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06666e50-ce62-4827-8cca-642b4271b627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02d34b7-9817-4b3d-90f0-a2feda42b0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bed1e7f-148a-4597-ab73-ba65f1311d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227f2689-68ae-48d7-8805-b7f57e968935",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f5adcf-5bfa-4663-9a6c-519fd665afc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4462de-562e-4050-a95c-4f57699a0c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ac414a-1b3b-4f04-9361-61531fd94608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f545fd-9a61-4bb5-86b2-f9de4396f027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3fb7b9-e717-40b4-9953-4c28181476bc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d9491b-634d-43f5-9115-25894cfcc910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "158584a5-0855-43cc-850e-1bd18b17caf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b316bdb9-e98c-49d6-8184-ff1bb3150c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5cae6c-12c1-45d6-a194-2aa1dcb5f566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7594bb3-5fa8-48f4-85ce-11159293252d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3622d1-08cb-4a02-b706-0e16db375399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1bd0e66-f1be-4ad0-93ba-8197294174d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a90004-7ed5-40d2-9672-39945d398e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7f62aa-1d13-438e-b0f0-c549ae720722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e082b67-faee-4bab-8ce3-46f2213eb27c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29662b63-c505-4e92-9aec-49a990577a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44bdfb66-3a6f-40eb-846e-a4869d2da462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57450870-add8-4272-b6a7-0a5b98420d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0267b1ee-999f-4542-8c47-a1c704c74a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a76df7-19a8-495b-b20c-ef42e8dcb66b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe22830-0fb0-4ff4-ba2b-2abf0830f12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4ae3337-c398-4d41-959d-8db4ffa9f350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3854e3-8c7c-4aa0-bc57-1158a22d38de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31326bfa-a06e-496b-a006-f568b0312d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e881a2-e333-4a5f-b016-7d3f4e87d9ed",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb997c43-5e40-4bd0-be9f-414b8b4c0092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a419a915-fef9-4ff9-8e8f-7023d870f352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58329a8-4bc9-47a1-8375-d2e965781c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c760cd37-3491-42c9-a436-1f245153c779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb6a92e-6d40-4a16-b3dd-ed6e6f1ace04",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4476228-da79-4342-9b6f-a67e6d174e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd72b053-759b-42f2-819c-f43d0b225e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db120da-2311-4497-9c03-c31b5f98a1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f1e897-9b19-48bf-9ebb-ecc1d550b327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7be4a19-7d86-4a09-85a8-182cc3b9b8d3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf34c941-8b98-45ac-84c6-9683feab0550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a0cd13-47c5-47ea-88aa-dd3ef93fc73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b0db1b-a45b-49d4-bdac-260388d7d9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd55df2-2d59-4d63-8d34-1b4fc9b9b265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e27caa-ae80-4c06-81ec-7fc8cf224cca",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb8aba7-c60a-446f-b578-399b5c5add70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e498ba1-dfa5-4dab-92a0-571ffb0fe6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe7bafc-3245-4975-91f8-41de199d7e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faed430-ca8e-4309-90f3-a5ecb00b433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327bbbd9-aed6-4001-8a26-9135994030ac",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f733eb4-984b-457f-a177-fd8dfd135780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a980889a-bf2d-4bf0-9e75-ffc29b95c743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a2371d-2793-4538-9441-3c5970725328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5170a72-575d-4c78-a0a8-fd053ee75b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e349cd1b-9bb1-497e-8b1e-b3c6a1630e7a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2f2ad1-9439-4efb-892b-4f52da83e4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17543927-0d38-4abd-be35-210e6e236f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a872de45-83a4-4502-bb75-13f232e98cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15038dd9-2728-426d-9bc7-e5a868692889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c76e9f-7283-41c1-ac9e-f2c04d3a1fac",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd50b02-2b2c-4896-b635-d59a31a665c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d39b80-87e8-47d2-92da-d6de7577cfe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfdfff8-e484-4702-8a49-6110670855f8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f1cd06-52a2-46cb-bc5b-7a2ce6e75f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c0c7e3-2e31-4f5c-be98-b4d347e7c242",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a8e2bc-d5c3-4c1f-a0fe-91ade068dbfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ded3813-cc53-4eec-b9c2-0a239b17cd1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7877923-65e6-4554-a95a-1de43df01133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd7bbb2-f18b-4701-a232-7d7e92ac34a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbe7bcb-89c4-42d9-90f0-3143bf76bb97",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c26b99-f161-496c-896b-800894e5ce77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7385b6c0-4337-4c26-9400-96caf3f6f38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14772bf1-baea-444c-af84-95357cb4e1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c2c334-68ed-42ee-99ff-eafe538d0467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cede08a-275f-494e-9306-deffdebe85ae",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a6cedb-3e51-4a89-99e4-969505517f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96606dc2-5bac-4058-ad32-e219035141e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11506fc-40c2-4967-8c2c-5cacf127927c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b639db-b7ca-4f94-8ec9-1e23eb65b06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a0c0f3-3af7-4173-91a9-e92fa4052c43",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231511b4-1536-48ea-8ad6-13df96fb7627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4e154c4-2de9-4c9c-a2c5-4ce6aaaaf3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebf1762-e5ba-4250-b804-c24a7a6ad950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27bbdce-da0f-4020-909f-de7c48fc9262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eb79ae-f195-4e1e-8a9a-da720ce8975a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afecdd6c-5cb7-43b1-a9e7-1192e63b1d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d84eb9a-d47a-46e4-8642-9d7d64824bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84f001d-9a70-4cee-af85-19783728e453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa52fd0a-dd5f-4491-969c-dca15ca42c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cae557-792b-404e-b500-76d404e80f29",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbbfc3d-bd7a-4b1d-a183-fa3311bf34c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c2db6d2-5969-4316-af58-860e9ade2ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f94fd2b-0e6d-4d1e-894e-d5b242ee66b7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f99f6bc-b9d0-42ba-909b-f543e24c186a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c4d7cc-dce6-4ce6-95fb-ebc658869bdb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec8a163-8ccd-4816-b3d8-2e6036ea09d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15b16af0-f1c0-444a-a77b-d38d3db89d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2662668b-3497-44dc-9391-f21f1ba1c10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51efb8ba-e17d-490f-b12b-54ca50589b91"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34997470-f411-4fb9-9d52-14bf780eeaf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4360d47f-9a4e-4c62-b167-e62c723851e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9c77093-3ad8-46b2-bc00-f5bbab5c4b87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6a68b93-e491-483e-bedc-5de8bd0026f0"
                    }
                  }
                ]
              },
              {
                "id": "901eb83a-8801-43af-b4c6-804522905c7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c695f15a-6079-4c26-ac70-d534810f6996",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f1b49a-bea3-4a36-bc4b-8dc1fe86eaca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "77ea1065-dd06-43b9-9138-109af80c39cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219cd560-dd52-4c3d-88b8-f934f111c7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af88ddb6-f72d-4dfc-afec-1932f72c5488"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bab0ed3-f425-40db-9eeb-f9b92e2892e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "301bdd86-88ce-44bf-ac62-e8039f68baef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ec47fcc-3894-42d6-b4c5-c51bc750815c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ff7f75e-5e96-45f1-a75e-e54b42ce889d"
                    }
                  }
                ]
              },
              {
                "id": "6e18f792-becb-4f5d-9f13-d55cbcb244c8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3100adec-886f-4d07-96a3-07314c15f3c3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e495a590-1473-497e-8526-dc4274ff6518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3993e0ce-26b0-487d-9e1c-c6b0606c12e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a84a34d-4338-4ae6-b59f-222d312c5389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7894662-63c4-4108-9b10-2e691669e6a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5dddbf1a-8aa9-44a7-a102-b74563c791bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34852b17-57c4-4892-9d28-8fe9be4b6b2c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc85fb1b-d934-4767-9e5c-793dd12f5ef4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "93698514-c584-41af-aa5d-64245814be06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe38b63a-6005-4a43-a610-9d03753ccb71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd9b301c-09df-4806-b5c5-54f57e4b3603"
                    }
                  }
                ]
              },
              {
                "id": "0240ba4b-471d-4072-8c3a-076a695ac97f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0f3adaa-e85f-463e-82b5-731202936ae2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "76af558d-f613-4a05-96f5-4773bb825f79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb9355ac-c7c3-4fb9-afcf-ba33b2bc860c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a2f143f-ee14-453e-aeda-bf5cd465d74b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e23ac338-ec86-4981-a0c8-dcebaed9355d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5067227e-a9ed-4890-aafb-47580c91a234"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "feb8e97e-a7cf-4545-bbe0-bb7c26ab153f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d25597cb-388e-457a-865e-986d56666249"
            }
          }
        ]
      },
      {
        "id": "7f2c5aaa-fe23-4900-a493-48f114faf1a4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dc363918-7d23-488b-b1e6-b627f1079b82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f21ae2d0-cbca-4f18-a75a-a64bca962736",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1552fb66-4337-4084-b668-d05fb60bb054",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d370ee1-aa71-4ee0-938a-3d4a67c8d7c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "59518b99-d2bd-4426-91b3-4e689e6bed91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ceafb4-5124-43bd-b3e9-3ff7db70f204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d26cb3e4-5cb8-4273-94b8-1b844a17087b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d59edc1-0762-4a22-a99d-822ba0d07bbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1289e74a-c164-4e09-93fd-f3d59be2d083"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b3de7a4-ef06-4136-a326-4377943663f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5fa8d70-3fdb-4348-bf3a-701d7b5c64a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef2e7289-e5d7-4912-a876-2ade4fe66444",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5e29d0df-677b-4d78-8dd6-b85904a0c12d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5960892d-9450-46af-a1cf-b77b3bc26cf5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bcf1820-6edb-482d-ac89-518c523a308c"
            }
          }
        ]
      },
      {
        "id": "bd73615e-1264-4a29-8fe6-46ebe1f8571d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9827d87b-aea4-459d-ad79-3dd9c3337a92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3fc6d60-7b6b-4622-9274-7b98d3ae6e19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdcdb00d-1b04-48c0-9a22-27981554f4be",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acdde7a-9b79-450e-b904-79535b0d5cb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac52b226-fe50-4ed6-846c-cb0709938342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c908b9-143d-49ff-bcec-bb0b115287e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c35dfb7a-e885-457b-9f57-ecc17abf5d04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65ff439e-1b23-4782-a47a-9066861b3478",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf5243a7-a933-4a53-a01b-713b51aeeeb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8430439a-36be-49d8-bbb5-a0e16563c6bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "440fc93e-0987-4605-b561-8346329af883"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7db80f88-4773-47af-b74f-31c1765f4e1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07b3bf79-ece7-481c-8b10-cd2bf7235d38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2e042c0-4073-4e97-883b-6412035ea203",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51726782-bb83-47ae-80df-c2d7c2106999"
            }
          }
        ]
      },
      {
        "id": "daa7b7f6-0b9a-414b-9f3c-e1718bb0eb8d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b42ce051-7a35-4440-9a35-8a5c4fb5d5a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70b29009-4e35-4098-87ea-dc35c1527768",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17af35b2-f97c-48ba-8525-2ba19f67244f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17e8d84-93d9-42cd-adc0-8425cea0fad6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a977b367-df5c-4648-b6f0-9723915a2f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735b94dd-f5f4-448f-8873-6b63b1230b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c53cf35-78be-4030-a694-cff10df97c33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97ff1c8b-373b-4cc5-8467-efcbc48616b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d65a4d7-21d9-44d7-80a3-4c85c12ee09a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e6f34b7-e296-4e70-81dc-2e1d21eff3f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2767501-335f-42fa-b480-8cb758dd597e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cc95f73-c2b7-4733-bca9-0af35ecd461b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e8455054-cbd2-48e2-b535-bfc76a75db58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98a1240f-6738-4242-88ef-655ee0a2d36b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eee73036-103a-4fc7-9b73-2901773053ef"
            }
          }
        ]
      },
      {
        "id": "b31b2435-4c21-499c-84f1-c7606a57bb2c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3db5ca41-5067-4927-bf54-f398c118052a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa0e0b23-6448-4c9a-909c-fe2ddf7bad8e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "39559161-0542-4b38-97be-60bd5e123890",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f434cb2-24b1-48f0-a997-e399d3f5aedc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f24e9ce0-09d7-4206-8c8e-939ebe85db0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 107.85563380281691,
      "responseMin": 12,
      "responseMax": 5211,
      "responseSd": 409.11211436004646,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695429106651,
      "completed": 1695429149823
    },
    "executions": [
      {
        "id": "987a4491-3e4d-44d1-99a4-36e140e57ed7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c9f57501-c67d-40ff-b445-eee5bca90479",
          "httpRequestId": "d93e5952-1cbb-49c9-a5e9-7f0d626bf169"
        },
        "item": {
          "id": "987a4491-3e4d-44d1-99a4-36e140e57ed7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "609770c8-7eb7-4fea-b046-7373bae320a7",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "00c1a696-2ea9-4fab-bb6d-a76d5e50335e",
        "cursor": {
          "ref": "344954ec-94a9-4000-a743-f0c4220047a4",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6bf9e1af-4d36-4bc6-93c2-fb4867509a3e"
        },
        "item": {
          "id": "00c1a696-2ea9-4fab-bb6d-a76d5e50335e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fccf12c6-12cc-40ae-bafd-e960fa7f9b39",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "a5f23ce1-01d2-4a65-af65-3425742a394d",
        "cursor": {
          "ref": "1ee17ed3-0c1c-4053-812b-0d108f775227",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "602d3089-0564-4b56-8ea3-fe80d6d058bd"
        },
        "item": {
          "id": "a5f23ce1-01d2-4a65-af65-3425742a394d",
          "name": "did_json"
        },
        "response": {
          "id": "802d0a9f-2dd6-4414-bc82-bff79c10805b",
          "status": "OK",
          "code": 200,
          "responseTime": 262,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4243d64b-f004-4e13-bd94-97e1d50ecb5a",
        "cursor": {
          "ref": "b0a8978b-50c9-40d5-8631-fc17287fe229",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d333a31d-5bab-4e63-be27-c9639cb4f518"
        },
        "item": {
          "id": "4243d64b-f004-4e13-bd94-97e1d50ecb5a",
          "name": "did:invalid"
        },
        "response": {
          "id": "cea42d6b-8e0e-4422-8aed-69ab74a1bf10",
          "status": "Not Found",
          "code": 404,
          "responseTime": 616,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4243d64b-f004-4e13-bd94-97e1d50ecb5a",
        "cursor": {
          "ref": "b0a8978b-50c9-40d5-8631-fc17287fe229",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d333a31d-5bab-4e63-be27-c9639cb4f518"
        },
        "item": {
          "id": "4243d64b-f004-4e13-bd94-97e1d50ecb5a",
          "name": "did:invalid"
        },
        "response": {
          "id": "cea42d6b-8e0e-4422-8aed-69ab74a1bf10",
          "status": "Not Found",
          "code": 404,
          "responseTime": 616,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1185233-01f2-4db8-af54-0039c6bae17a",
        "cursor": {
          "ref": "ae2beb70-58d0-44b8-b92e-7b324106826c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5dfa7e00-7977-46e2-8eaa-d4c4b21c150b"
        },
        "item": {
          "id": "e1185233-01f2-4db8-af54-0039c6bae17a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9540a43b-30a9-4ee5-8dfa-449dce6ed077",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba9e411-bd91-45cc-bbed-41f58f1a21e4",
        "cursor": {
          "ref": "ab657da3-5c4d-48c3-a74d-856d87ea147d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d0bf8171-7b3b-47c5-9e27-4795594bc8f7"
        },
        "item": {
          "id": "0ba9e411-bd91-45cc-bbed-41f58f1a21e4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d0586b75-51a9-49c2-a609-0361b4cecf67",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232544ba-dee7-4452-99b7-7e68306bda86",
        "cursor": {
          "ref": "f356a2fc-dc23-4005-92e4-08070401e08b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "86676573-f9ed-44b4-96ac-c19f1c485a82"
        },
        "item": {
          "id": "232544ba-dee7-4452-99b7-7e68306bda86",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "83d28b8b-f95a-4cbd-99bc-3f3c244b77a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d573433c-c2fe-42c7-8bf5-4f466a804411",
        "cursor": {
          "ref": "26dd7104-4a11-4b1d-ab88-38d055f01598",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aec7cd8e-69fe-44be-9407-1fca71191725"
        },
        "item": {
          "id": "d573433c-c2fe-42c7-8bf5-4f466a804411",
          "name": "identifiers"
        },
        "response": {
          "id": "7f1c94b8-b58e-46d4-9f03-5dec9d126851",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d96023e-f507-4594-b861-8bf6783e8fff",
        "cursor": {
          "ref": "0e38a6b6-2de9-499b-ac60-21ca6718c540",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2fe0d1e3-6cbc-4226-b265-b73ecc4a1590"
        },
        "item": {
          "id": "6d96023e-f507-4594-b861-8bf6783e8fff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a0f2cf5b-ac21-4071-8e17-c7be3726637d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f27fb7e-f038-406d-8f42-a923c13ea54a",
        "cursor": {
          "ref": "13f8599e-c188-4e02-af90-3b50e0820a5a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "56f44847-0d34-47ec-a660-8fd9c9898857"
        },
        "item": {
          "id": "7f27fb7e-f038-406d-8f42-a923c13ea54a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f4ec198d-e30f-44ba-8723-5f50e9c7f1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0266754-958d-41b6-b479-1a29788e7f55",
        "cursor": {
          "ref": "99e0cf52-4a0d-41b8-9150-4c32c292e72f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "51b02755-1090-4ce2-bf65-44abd58cea85"
        },
        "item": {
          "id": "a0266754-958d-41b6-b479-1a29788e7f55",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fedae21b-22f1-496d-8fb3-ca621093e30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aed5ce-5d39-42e6-a213-0445ae59c0db",
        "cursor": {
          "ref": "e99a5d6f-7726-4a67-96e0-4f08be5d75b3",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ba2acc4f-e1f0-465e-a9b8-c29a7e33508a"
        },
        "item": {
          "id": "e7aed5ce-5d39-42e6-a213-0445ae59c0db",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7cc38abb-25c0-4160-9988-1d9b4fde8458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decab829-cb90-4c4b-9ec7-24f030f876a2",
        "cursor": {
          "ref": "e780460b-7aa5-412f-a91b-10fa5a28220f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "34d1cf2e-4f10-4900-b652-b052fd294ac2"
        },
        "item": {
          "id": "decab829-cb90-4c4b-9ec7-24f030f876a2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "43218991-42b1-4e97-b267-8d9a24d92d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46618e7-8e68-4ff8-a2b0-22704fe7dda1",
        "cursor": {
          "ref": "0ebc3ad8-fff0-412a-b400-3e33ecd52cec",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9f64e45f-5b7e-443b-868c-04d85c9c2a93"
        },
        "item": {
          "id": "b46618e7-8e68-4ff8-a2b0-22704fe7dda1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ca1d9c36-d709-42c1-84f7-03aa321c2d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7570db-82b2-4423-b021-6f28dbbd7c20",
        "cursor": {
          "ref": "ea9db7d3-cd09-4878-9e3e-55de51ead978",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "04d7b839-46a9-4380-8720-510685fb9a9a"
        },
        "item": {
          "id": "1a7570db-82b2-4423-b021-6f28dbbd7c20",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9a4f9e64-865d-4ee9-b759-cdfde95a230e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31a7a38-e5d9-433f-aca1-d6c80db0b75a",
        "cursor": {
          "ref": "019bb150-0c11-49ea-984e-4357365918a3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f47895bd-444e-477d-a5fe-b0ef5c26a2d9"
        },
        "item": {
          "id": "d31a7a38-e5d9-433f-aca1-d6c80db0b75a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f8aa2342-bbc8-4901-b1a0-87f4e58873b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372be7de-8c6c-4241-b59b-b0f640f44610",
        "cursor": {
          "ref": "fc824b4f-4698-4b6e-9dd7-d5229ce911da",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3f97477d-b476-4df8-b5b6-097031e97cda"
        },
        "item": {
          "id": "372be7de-8c6c-4241-b59b-b0f640f44610",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c4178975-5218-4a0e-9f7e-156b983e0cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc80e84-5a54-471f-97e1-f3dc741e2915",
        "cursor": {
          "ref": "e3f90d56-a7c2-4d74-94d5-f76d950f8db0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3e43d006-e7e2-40af-bab7-782cb7296b76"
        },
        "item": {
          "id": "fdc80e84-5a54-471f-97e1-f3dc741e2915",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f39fc4c0-09da-46b3-8eb9-44ffe6acb39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03edeef9-0802-4f13-878a-f2ed956a53dd",
        "cursor": {
          "ref": "29da08cf-b1a4-436f-b111-ccde9dc36a6e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5adba2da-c98f-4a83-a969-7e4be6171154"
        },
        "item": {
          "id": "03edeef9-0802-4f13-878a-f2ed956a53dd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "11d55f94-1ff1-4ab7-a208-72aa578ce241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e041c3e-de6a-4df8-8eea-cf6a854e2709",
        "cursor": {
          "ref": "81613b2e-28ae-4df6-aa50-cfa203ca8252",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "461787a4-9dd5-46d1-bc4f-b079c57cafe4"
        },
        "item": {
          "id": "1e041c3e-de6a-4df8-8eea-cf6a854e2709",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "01c3963c-2b44-4fe8-beb9-4768d72b309d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf118c1-1a90-4feb-81b2-30fd6b843b9a",
        "cursor": {
          "ref": "a9dd98a6-77a5-4cb1-b344-2c74c50dead6",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f8bd2395-e3f2-4723-b5ec-ab53dc89a79b"
        },
        "item": {
          "id": "dcf118c1-1a90-4feb-81b2-30fd6b843b9a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ab0d9336-98fd-4b95-b158-392ac31fa8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fdfe98-5a04-48aa-8aa3-f4ae5d9190e7",
        "cursor": {
          "ref": "f82fb742-de64-4f6b-9d66-fdce454d3369",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5875ce09-29c7-4784-9554-2a2f1cb357c1"
        },
        "item": {
          "id": "53fdfe98-5a04-48aa-8aa3-f4ae5d9190e7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2dea0aef-d577-4820-b9e4-62f02567a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77b05ee-6009-4145-b944-a8360971cc66",
        "cursor": {
          "ref": "bdd12c90-8a1d-4a0b-a7df-d5c20f11e8e3",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2f09011f-cd62-4cd1-8ff4-8ea37c9b9895"
        },
        "item": {
          "id": "b77b05ee-6009-4145-b944-a8360971cc66",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7d93a2e0-d99d-438d-a08f-133b7540ebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ce92ce-3093-4755-b6c4-ad862230be25",
        "cursor": {
          "ref": "a61d59ab-4746-4446-9a8e-d0bc44d72c9a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "403244aa-b0c8-4b5b-ae14-1ae287185b6c"
        },
        "item": {
          "id": "54ce92ce-3093-4755-b6c4-ad862230be25",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2969536e-8e84-489f-886f-1b7cbf017de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8311c6-143d-4176-ba65-c626767a7314",
        "cursor": {
          "ref": "ea397ba3-78d5-4676-8811-8b4059ffd878",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "da7eb419-4e30-4f5f-b4ee-dc2663cc8850"
        },
        "item": {
          "id": "7a8311c6-143d-4176-ba65-c626767a7314",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c1ca7735-f5e7-4654-b42c-469d534b5b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6653e064-31ca-4b74-9024-250fe102dc18",
        "cursor": {
          "ref": "f8c6fa83-fc6b-419d-9042-a9d85b7e9110",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6f755b1c-b423-4b65-b9e6-5d8674b836e1"
        },
        "item": {
          "id": "6653e064-31ca-4b74-9024-250fe102dc18",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3f0026ef-30b8-440f-a30f-bf54e7e1724e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf441e8c-756f-474d-93d2-5116b7e0cd0a",
        "cursor": {
          "ref": "33da5fd4-6a3a-48c9-ae64-f74b8f0992a7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "633aad7c-aed0-4cfc-81b6-5fb03f49eb80"
        },
        "item": {
          "id": "bf441e8c-756f-474d-93d2-5116b7e0cd0a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c9b481a3-03d2-4f98-a4f2-007de74c1054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e400bad-611f-408a-96a3-f727da575198",
        "cursor": {
          "ref": "040ec935-8388-4d6b-89ed-52a380c5c283",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2e1150a5-0598-486f-b7e1-003e06c27008"
        },
        "item": {
          "id": "0e400bad-611f-408a-96a3-f727da575198",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9a3830ca-44b3-40db-a805-3a0f241717ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e0b53c-b7e3-4556-950c-719be35b62af",
        "cursor": {
          "ref": "da419d6a-de91-4792-b554-df4b813880e5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f8cb8e5d-a315-4a29-aea8-6c68d6daef1c"
        },
        "item": {
          "id": "b6e0b53c-b7e3-4556-950c-719be35b62af",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "555f39e2-7601-4523-bdd6-da124f63f319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be561a8f-6f8b-4769-b6e4-df98d879dd57",
        "cursor": {
          "ref": "e76e2e90-b6ae-4b8b-a195-93fa46d59caf",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "de184c60-ba1b-47e7-9b02-c16b169f966a"
        },
        "item": {
          "id": "be561a8f-6f8b-4769-b6e4-df98d879dd57",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6bf1c09c-9633-4cd2-8beb-86f0e903b12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519da65f-157c-493f-8647-5bbe70ce2fa0",
        "cursor": {
          "ref": "eea8e987-78db-44a1-b0b6-749203a79814",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b592165c-fd98-473f-9316-e0fb14a5989f"
        },
        "item": {
          "id": "519da65f-157c-493f-8647-5bbe70ce2fa0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1759476d-5651-4627-89de-f668d0d2e0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2508331b-660d-47a6-9a50-c65f3b3738b5",
        "cursor": {
          "ref": "5900789d-fee7-47f1-b7a5-031ca8f8bdc0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "120c328e-3c52-4ae8-bc6e-01fdf9eeab30"
        },
        "item": {
          "id": "2508331b-660d-47a6-9a50-c65f3b3738b5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "76046292-6163-4d75-951c-06c227c54e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d222a7f-59c1-4aa4-abc6-4ca4486655ac",
        "cursor": {
          "ref": "dc4ab462-4347-44da-95b3-1d4c06bc4add",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "858f9083-6608-4eaa-b388-c2ccdc7d7e33"
        },
        "item": {
          "id": "9d222a7f-59c1-4aa4-abc6-4ca4486655ac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "632fc58a-e9b1-423b-ac6e-304416848c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0971fa10-79a2-4fd0-a34f-dc78d27fe7c7",
        "cursor": {
          "ref": "dc8aeb76-3e0e-4d78-a83b-aaab77514184",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "72efd42a-e34e-44b1-bf1c-876243d21ea3"
        },
        "item": {
          "id": "0971fa10-79a2-4fd0-a34f-dc78d27fe7c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "529d0769-8b23-4288-8ca7-3506dc15f571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0712c277-6fc8-44b8-a35c-b1c43583a242",
        "cursor": {
          "ref": "75ff2633-2a92-4362-b002-b622661659ec",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1ed0fec6-e610-4df9-9cd5-6624a6cea4d8"
        },
        "item": {
          "id": "0712c277-6fc8-44b8-a35c-b1c43583a242",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ea2e0054-942c-4c63-a32a-cf9005f2dd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075e8edc-31b3-4ba2-b864-c6117c45d541",
        "cursor": {
          "ref": "b744b094-69e2-47c0-98a8-79fe8107336b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6b7577da-7096-4f95-8c87-ec1a0cb91345"
        },
        "item": {
          "id": "075e8edc-31b3-4ba2-b864-c6117c45d541",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4cc11ddc-3a3b-47d4-9a87-0ae08b66711a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd2d033-6b57-4817-9c9c-6d8963c84617",
        "cursor": {
          "ref": "9fcb7d0e-2845-48d9-9504-fd441532f671",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b0826bed-0771-4f6c-8a67-8019074f7969"
        },
        "item": {
          "id": "9cd2d033-6b57-4817-9c9c-6d8963c84617",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a6d0dc0a-6aaa-4a84-8bfe-fa476e8f60ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb16f78-9468-455d-bcdb-8fbd59befed4",
        "cursor": {
          "ref": "6ab36638-f9d9-4dae-bb9f-bbe5a229a385",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "944deb88-d2ff-434d-b481-d707a604bc0b"
        },
        "item": {
          "id": "9eb16f78-9468-455d-bcdb-8fbd59befed4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aec0359e-2f3d-48a1-9f42-ce4ebfe1b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d4c112-1d5b-4109-bafc-8819786d7627",
        "cursor": {
          "ref": "7a2f3d95-f839-4a11-aeee-957d68d19431",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a8263941-41f4-4a38-8527-75154ee35f1a"
        },
        "item": {
          "id": "88d4c112-1d5b-4109-bafc-8819786d7627",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f452e643-bfd0-4bcd-b96d-eeccc00dfa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cb4812-bca2-40da-9901-aa9b919abd5e",
        "cursor": {
          "ref": "4978a8ad-7da7-4de0-9ef1-40129476f170",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "34ee69ec-e008-49fa-89ce-dcdb3acdf0cd"
        },
        "item": {
          "id": "28cb4812-bca2-40da-9901-aa9b919abd5e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a9d22807-9749-4e64-805f-8d1f11510112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbbe007-d4f9-4d3d-a74e-10fe7f187b99",
        "cursor": {
          "ref": "3d26ede3-04bd-428a-b5ac-b44ec50415f8",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "74e175aa-6572-481d-bea1-3e59b768f9ab"
        },
        "item": {
          "id": "1bbbe007-d4f9-4d3d-a74e-10fe7f187b99",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "48ba9f4c-a31a-4469-a2a1-cc055f360b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5745d902-1a17-4c9d-a2e1-9662bccd7cab",
        "cursor": {
          "ref": "b3f46581-9029-41bc-9c84-9e6caecd73c4",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "673febdf-372a-4252-b340-fbfde081f098"
        },
        "item": {
          "id": "5745d902-1a17-4c9d-a2e1-9662bccd7cab",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "66a2c6fa-92b9-4458-821c-0a1cb7350c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a091558b-371d-4cf9-a562-db79302516a0",
        "cursor": {
          "ref": "feab6c2b-459d-4a45-901e-9d822f05a495",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f8f8a8f4-9b04-4493-b2e5-386a27fd7702"
        },
        "item": {
          "id": "a091558b-371d-4cf9-a562-db79302516a0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f66d16f4-327d-4f11-bf3e-bcc9facb23ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e58760a-a6ed-4713-97a0-7d670d70fe5c",
        "cursor": {
          "ref": "eb69d99e-a668-4d09-9604-7d1a5a7e3f3f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f8ed92fe-cb4e-452e-8627-f3c3f6d4f682"
        },
        "item": {
          "id": "5e58760a-a6ed-4713-97a0-7d670d70fe5c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cb8bef96-4783-41be-965e-983ec482f904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369e5822-6efd-4db4-b554-2644eefa1374",
        "cursor": {
          "ref": "8ad43c67-f4a5-46b4-9786-c2e4e0bcaa54",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f6759a59-a8da-4b3f-b6b2-a65d59d8119d"
        },
        "item": {
          "id": "369e5822-6efd-4db4-b554-2644eefa1374",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "efdf9382-2f11-4466-ac62-249f98123ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03845938-96e0-496f-b8ce-703595efb89a",
        "cursor": {
          "ref": "70792b25-f623-4de2-8ee3-77990477bd81",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc554b54-c747-4acc-896c-a22372f999fb"
        },
        "item": {
          "id": "03845938-96e0-496f-b8ce-703595efb89a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5647b5d6-2386-4732-a7ee-e2db17c692a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7aee401-9a90-4eb0-98ff-d7656fefef62",
        "cursor": {
          "ref": "d6ab270d-a5f8-4ce1-b13f-ed990726deae",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3468d6e4-2d34-4f56-b44c-757e44f27cc8"
        },
        "item": {
          "id": "c7aee401-9a90-4eb0-98ff-d7656fefef62",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "87aca430-e067-4903-8526-9bc6925adade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed21bb5-7edf-44ed-bc55-859659ffec20",
        "cursor": {
          "ref": "f1779432-95f8-4b8f-9d3a-8e0a730a2868",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "30040fdf-bbf5-4fe7-8217-32313c6e6ca3"
        },
        "item": {
          "id": "3ed21bb5-7edf-44ed-bc55-859659ffec20",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b0c010b9-7df4-4718-943b-7e812ccc9cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380b1798-f25b-46ad-8e0b-6c0967e5c5af",
        "cursor": {
          "ref": "a9d0e432-fa57-4991-b56e-5c4a5e57d2de",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5d60abe3-3691-4887-a46a-e82ee38cc9e0"
        },
        "item": {
          "id": "380b1798-f25b-46ad-8e0b-6c0967e5c5af",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7ba465f0-f3a2-4043-8d03-4137b3654939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1afc503-bed9-4426-ab9b-a9385366b555",
        "cursor": {
          "ref": "b7256d28-8f6e-4010-9d9a-3afbd63932d5",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "321c1c4f-4ff5-4d66-8350-a2490a3f6108"
        },
        "item": {
          "id": "a1afc503-bed9-4426-ab9b-a9385366b555",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "955c5360-1adc-455b-8f8e-fd7f9f5a974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac8ed9b-1ba0-472b-8037-cc412cd96031",
        "cursor": {
          "ref": "1b4b4b07-b5e9-4253-ba65-b94caf5ee8b5",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5c0667d6-a66c-47e5-9df5-b6d74a303749"
        },
        "item": {
          "id": "aac8ed9b-1ba0-472b-8037-cc412cd96031",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "78e116cd-c98c-4afa-a4de-41c56add139f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae9846b-f851-4f00-a5e3-a9f3c7215a59",
        "cursor": {
          "ref": "d966b553-cfa3-4bc0-abab-79644c83dcfc",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "63d52540-b4f0-4360-bd16-21817771c50a"
        },
        "item": {
          "id": "fae9846b-f851-4f00-a5e3-a9f3c7215a59",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f1f44ede-e7a3-4655-a177-526d2ae93286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab50a12-be76-426e-b4d2-927452777643",
        "cursor": {
          "ref": "25f0efc7-4812-4f07-b756-ee98ada5c20a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bd2cc5cf-639b-428f-aa11-177624374579"
        },
        "item": {
          "id": "7ab50a12-be76-426e-b4d2-927452777643",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7d364203-3288-4363-b641-f4534f0c2d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad68b19e-700a-4db8-9157-6321ce36be65",
        "cursor": {
          "ref": "4b786419-e4da-4f69-92a5-a407821c0982",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3bf51b00-7926-4995-9a0a-7b11c714165a"
        },
        "item": {
          "id": "ad68b19e-700a-4db8-9157-6321ce36be65",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1050c3fb-2866-49c1-abfa-dc4109257c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056bb9cc-ca9f-4d2c-a306-557957a8f953",
        "cursor": {
          "ref": "9252b0e8-e626-4137-8944-077a8dff8ac5",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1572051a-6dea-4f64-9c78-cdc22e9d7288"
        },
        "item": {
          "id": "056bb9cc-ca9f-4d2c-a306-557957a8f953",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "622339a8-a7a3-4e75-9de5-42df3ae7843c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dc5cae-e81f-42ce-a95a-24648f86e828",
        "cursor": {
          "ref": "818e8b70-37c3-4209-b54c-7592c1c7aaa8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "207a1ded-cf7c-4818-a03d-05494ac28616"
        },
        "item": {
          "id": "63dc5cae-e81f-42ce-a95a-24648f86e828",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c5f80533-0635-4260-9da0-eedc1760ca96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daad6e3-82eb-401a-b2cc-5e38e1500f7c",
        "cursor": {
          "ref": "132a2755-30cf-40d1-a6f0-d048ab0c7db8",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1a9849b2-4974-4027-a16d-72839af445ab"
        },
        "item": {
          "id": "2daad6e3-82eb-401a-b2cc-5e38e1500f7c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7f7a9f8c-6bba-4eb0-9789-a0488379ff4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9803f036-70a1-439e-a422-b866e9ef9d34",
        "cursor": {
          "ref": "df14749e-cc60-48fe-990b-d72ab07fe6c1",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f7dd0b5b-6390-435a-8941-362b6ee50dc6"
        },
        "item": {
          "id": "9803f036-70a1-439e-a422-b866e9ef9d34",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4ceb2778-fed8-40f3-802b-1b640ec1d576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad22de67-61e3-40a8-afd0-e933545b1c78",
        "cursor": {
          "ref": "ffc95e5b-633a-4888-929a-144ba973a9dd",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3f3ebb65-1298-4898-b9d2-250b3eb9e89a"
        },
        "item": {
          "id": "ad22de67-61e3-40a8-afd0-e933545b1c78",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e577e6ba-e902-4875-8eb0-95d3a0a01232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed91d0e1-25aa-415c-8290-b28c540158de",
        "cursor": {
          "ref": "1c0ddd83-fb2e-40a3-8818-79530a436362",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "80dde99e-225a-46b3-8b5a-9af01c376078"
        },
        "item": {
          "id": "ed91d0e1-25aa-415c-8290-b28c540158de",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4a213d06-a3da-4174-9a2e-a322dcae00cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff860019-99dd-4d92-be55-5f13b9bf10d8",
        "cursor": {
          "ref": "6c6bd845-822d-4c3e-8d57-ed8b1303da7a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b4fbd4dc-d2af-41c4-9176-d18a18a9c9ce"
        },
        "item": {
          "id": "ff860019-99dd-4d92-be55-5f13b9bf10d8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "063c87a4-588f-49ad-9fc0-aac15684dccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e7cbee-089c-48e8-9754-61c0198bc332",
        "cursor": {
          "ref": "02dce29e-a184-44cf-8aa3-397606e7ca74",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "34c457f8-d25a-40f0-9d1d-330f4a9bb82e"
        },
        "item": {
          "id": "22e7cbee-089c-48e8-9754-61c0198bc332",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3bb04896-9af8-4017-bb17-417b3d5bf77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefb225b-4f77-4a9d-a1e5-9e01b4997736",
        "cursor": {
          "ref": "3276025e-a615-47b1-b02a-c882df14d5f4",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "defd1598-9a43-4d10-aa02-bd5151b3ec6f"
        },
        "item": {
          "id": "aefb225b-4f77-4a9d-a1e5-9e01b4997736",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "55fb68a4-3872-4b03-9f81-09d8c451ab22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286455af-c747-4fd0-85b9-2955b04c5ad5",
        "cursor": {
          "ref": "30e547da-13f3-430c-ab17-7f730e34723d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d6ac54f9-ec1e-4ab2-b23b-73bebfeb6f78"
        },
        "item": {
          "id": "286455af-c747-4fd0-85b9-2955b04c5ad5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8b8b1662-ab48-4b65-ab61-e31a7e575966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b205dcf-7584-4a17-a853-04a5745a2749",
        "cursor": {
          "ref": "5a102962-28a6-4b6c-9785-fd6f1b1832a5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "466b53c3-a31c-4aab-b447-254d5e5c369d"
        },
        "item": {
          "id": "7b205dcf-7584-4a17-a853-04a5745a2749",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1eef0f23-53a1-4516-a322-634915ddbceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f0e794-2f8a-40fd-b311-b6b33ae75d63",
        "cursor": {
          "ref": "eaf15797-fee1-407a-a7cb-761a0a26a0b3",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6d5ab84f-4f9d-401f-b13c-d85e1fbda0b4"
        },
        "item": {
          "id": "a7f0e794-2f8a-40fd-b311-b6b33ae75d63",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2f85e2b5-cdae-4f4d-914b-c2797e57afe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cb7e99-87b9-4f1e-ba78-e3a24b609409",
        "cursor": {
          "ref": "e231ede2-de99-4a7a-a8df-4c71b3cca0cf",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6265a033-cb4a-4863-9d9e-42ea2ca60c45"
        },
        "item": {
          "id": "a9cb7e99-87b9-4f1e-ba78-e3a24b609409",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "58fc2ebc-a834-4841-a727-70ce5599170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d778b6-275b-4e78-b088-a2f706961955",
        "cursor": {
          "ref": "72f8f8d9-32b7-4d11-a39b-ec4010902002",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d47b724a-133a-4a79-a354-f7ca0626a12d"
        },
        "item": {
          "id": "84d778b6-275b-4e78-b088-a2f706961955",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "53075c4f-312f-41a4-81b7-5c3497fe11fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b5625-dc7b-43f5-ba71-7ea26a4e0563",
        "cursor": {
          "ref": "66d62895-bc1a-458c-a55e-c26c30c9d9d0",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7dbf607e-d53e-4323-b9b7-5afc2a158789"
        },
        "item": {
          "id": "565b5625-dc7b-43f5-ba71-7ea26a4e0563",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "23e066f3-e313-4f25-aeda-80ee3c326bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2acdf2c-fbb8-48b3-8ac1-76349dea5ce6",
        "cursor": {
          "ref": "5baf2aad-ab94-4096-a97a-cd96c87c4e65",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ea925e33-3b63-4c52-b6b6-bde2a15bd494"
        },
        "item": {
          "id": "a2acdf2c-fbb8-48b3-8ac1-76349dea5ce6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1046de3d-5388-49ed-a72f-a55a1e9e4b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a22c3e-113b-4851-9f00-b1bac595ae9e",
        "cursor": {
          "ref": "1f6e1efd-433f-4edc-b97c-8f020fdf6457",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "153d58d9-eb65-4f3e-ac42-3428960dfbf2"
        },
        "item": {
          "id": "06a22c3e-113b-4851-9f00-b1bac595ae9e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "89d88530-443c-4b66-9364-dba30086a631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd38fb7a-6db1-4428-8d46-18ff8d28727f",
        "cursor": {
          "ref": "b2d18071-ba43-4739-ad36-0b632ee52470",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b635f354-eb48-460d-8f20-373600c27238"
        },
        "item": {
          "id": "bd38fb7a-6db1-4428-8d46-18ff8d28727f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "671370ce-35e1-4694-b42b-a7511fe14b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b3f180-bcaa-4cef-82b9-eec986d46b21",
        "cursor": {
          "ref": "76d1c3a9-6057-4349-8fde-0663d08908b8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1350fa68-b8ca-46a1-82f7-5d32ee9e05ba"
        },
        "item": {
          "id": "72b3f180-bcaa-4cef-82b9-eec986d46b21",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d432183c-eeb3-47a6-b99e-c276e7009848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef0d179-4ae9-4b36-b6ff-b817f91cfcb4",
        "cursor": {
          "ref": "b98414ec-d980-4e41-9490-cb6d1becee3c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7c109a48-ea26-4f6f-991e-5b7f0d3b3c4f"
        },
        "item": {
          "id": "6ef0d179-4ae9-4b36-b6ff-b817f91cfcb4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c1ab1673-fd14-42dc-a132-57bf5adff1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baccc26b-d024-4abb-8d18-5efec4e1f87c",
        "cursor": {
          "ref": "aad8a132-61a5-44e5-9f99-5faeae131a20",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4b76567f-4cb1-47c2-9e6c-98c7bf94cf7b"
        },
        "item": {
          "id": "baccc26b-d024-4abb-8d18-5efec4e1f87c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "17e155ab-c95b-4e20-9c82-175e4535c3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43de621-fba5-421c-8a04-82b2b4252f22",
        "cursor": {
          "ref": "37ae0c13-9dad-4ade-b7f7-89b2689ca192",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7e0ec4b0-725e-40fc-aa97-20b2d6d4a932"
        },
        "item": {
          "id": "c43de621-fba5-421c-8a04-82b2b4252f22",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c1653415-6fae-4a79-b5a6-69011b84e3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecd8ae6-8192-48eb-9669-61501566fe94",
        "cursor": {
          "ref": "78eb5849-9f44-4d09-9777-871ed14dc425",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f3e5a5e5-9291-49f9-9db0-15eb03b97471"
        },
        "item": {
          "id": "3ecd8ae6-8192-48eb-9669-61501566fe94",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b8847612-6861-4520-a593-499066f43e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627b70d5-6ea2-4042-bfaa-ad70d68320cd",
        "cursor": {
          "ref": "9cb939d2-15fc-4c06-9fd0-3ddfdc96d148",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "18c93678-f562-4a08-99ad-2f7eb592e03a"
        },
        "item": {
          "id": "627b70d5-6ea2-4042-bfaa-ad70d68320cd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7fabf875-d247-4ed8-a4ad-e403db04337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5672f1-e314-4072-b81a-9339b336b8ab",
        "cursor": {
          "ref": "453f2bd9-dd50-4b27-8256-0287c8e34d92",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b4da6291-fd37-4ce4-862b-7552c580e42b"
        },
        "item": {
          "id": "bb5672f1-e314-4072-b81a-9339b336b8ab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "916440e5-4dff-415d-aa13-99729ce18974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f29aa2-7184-43e6-be83-2dbd28967205",
        "cursor": {
          "ref": "b384d1d4-69ff-41bc-94c3-e19077ab3e96",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "47948c57-87b1-4068-84db-7fbf8cf208cb"
        },
        "item": {
          "id": "94f29aa2-7184-43e6-be83-2dbd28967205",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "10f4506c-e8d3-4e69-85cd-cf2e422071d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebe70db-6678-407a-8729-e9cc2629ea64",
        "cursor": {
          "ref": "f49fd2b7-51cb-4f21-bc51-b9a93dd58f11",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "193dcc76-f999-4569-956f-232598927775"
        },
        "item": {
          "id": "8ebe70db-6678-407a-8729-e9cc2629ea64",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "663e0787-00a5-4091-937a-bdb43df61c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfac01f-8dd6-48ac-a216-3f0d17f88c6d",
        "cursor": {
          "ref": "a964b697-0636-4f60-a907-355e69f267fc",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0a4da25b-6b6e-486d-86ab-c921a854ddd6"
        },
        "item": {
          "id": "bbfac01f-8dd6-48ac-a216-3f0d17f88c6d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3edae53d-2a91-4e58-9a38-f2fc56b8b620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28318c7b-9174-4bfe-93fe-88f725f29f41",
        "cursor": {
          "ref": "3e380c6a-bdda-4236-83e3-f6a3f864d0d8",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d8676082-da15-4239-9e33-1e01dc42c8bc"
        },
        "item": {
          "id": "28318c7b-9174-4bfe-93fe-88f725f29f41",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2cf215cf-ba98-47b3-89b5-eea20cd6db63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c4c63a-57d2-400c-9d10-4f2af9e0d36a",
        "cursor": {
          "ref": "3f71dcc4-340f-4bdb-b60c-bb44ff0ebd7d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "49f6bbf0-ace0-4827-b43c-b274fd1884bf"
        },
        "item": {
          "id": "17c4c63a-57d2-400c-9d10-4f2af9e0d36a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c2d30ded-411b-4ec8-ad5a-024e8b6be32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90de02c-8819-4783-ad15-61327af7bc00",
        "cursor": {
          "ref": "ca373962-39e7-4db9-a84c-e61f9d7ab146",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9b55dfe4-8df7-46c0-aa79-5b12ef37c004"
        },
        "item": {
          "id": "a90de02c-8819-4783-ad15-61327af7bc00",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "27ee16a1-c70d-420a-9e13-2a13a31c4c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ec79ea-3288-49a9-b752-9c014105c097",
        "cursor": {
          "ref": "cef3ffd0-9806-46b3-b0f9-8b15394cadba",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c25e3ef9-17c3-4be6-8be2-5eba3655b1bc"
        },
        "item": {
          "id": "32ec79ea-3288-49a9-b752-9c014105c097",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ad430524-3566-4ce4-a2fd-c24c9432913b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85da8e3-1dff-44e2-be59-b5fa757f9e92",
        "cursor": {
          "ref": "c5d4720a-8337-4873-b591-79039a99cf34",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c0163620-b0a4-458a-9085-9daf9b711eb1"
        },
        "item": {
          "id": "e85da8e3-1dff-44e2-be59-b5fa757f9e92",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c6a2cf5b-c3a2-4d5d-b76d-5dbdebef96e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48dae6d-0a7c-497e-8767-a0a48a8acf3e",
        "cursor": {
          "ref": "173ad08e-d2ba-464c-83a3-5a0306e1a540",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8f5d8433-69e4-401a-a432-13134d42000f"
        },
        "item": {
          "id": "d48dae6d-0a7c-497e-8767-a0a48a8acf3e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6eb8e30c-b775-4738-a8d6-04ba8641ea33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a27d81e-fdb9-4a4b-8fe9-21ee3b008501",
        "cursor": {
          "ref": "fc034fdc-0732-4417-9cce-752bfc034ceb",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6b3dedcc-3533-4c78-bbdd-8d0af84a7f05"
        },
        "item": {
          "id": "2a27d81e-fdb9-4a4b-8fe9-21ee3b008501",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c2724e8c-ba47-4b25-bef6-ee513a3c847e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f3aefb-cdad-4c69-9ce7-e3515f4720c0",
        "cursor": {
          "ref": "d1b3a103-453e-4758-a254-81adfb88643e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6f1c9719-1777-4726-bfd7-5f1106d759d3"
        },
        "item": {
          "id": "d5f3aefb-cdad-4c69-9ce7-e3515f4720c0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7699d88c-cb5d-4d72-ab2a-252db9df730a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87a255a-17ea-425c-a28a-08b20b5ebe5b",
        "cursor": {
          "ref": "88bd0fd4-5dd2-480f-9d1f-00e03b57dd8a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5c80f2d2-b712-45f7-b606-dbd530417b11"
        },
        "item": {
          "id": "d87a255a-17ea-425c-a28a-08b20b5ebe5b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "579f0da3-dec7-40c3-ab14-51fab7c28cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a60a4fc-85fe-4dda-8a63-4591aa411b35",
        "cursor": {
          "ref": "321908a3-abfc-4833-b2dc-7b3680b374cb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ad63e1ea-1ca8-46ad-a4ba-f2ebe0140553"
        },
        "item": {
          "id": "9a60a4fc-85fe-4dda-8a63-4591aa411b35",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "983ff922-be2c-4cc6-972f-9798ed4acec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41935be1-c33b-4c48-ae99-bd6a883a25b9",
        "cursor": {
          "ref": "638ad545-9cfa-4dbf-9c1c-53eaffd14aa1",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2db79574-a6a7-439b-a123-293e43fa29b6"
        },
        "item": {
          "id": "41935be1-c33b-4c48-ae99-bd6a883a25b9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5b0cfc1c-b168-469b-8764-2c11c57eaff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f56fe22-62e7-4150-867b-ef9ebaa60e14",
        "cursor": {
          "ref": "273a4263-774f-4cfe-850d-a88ba6b02de8",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0d0853c2-cdee-4415-9d5e-223b34d93f5d"
        },
        "item": {
          "id": "6f56fe22-62e7-4150-867b-ef9ebaa60e14",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "92d2f6ae-60b8-4050-9f5a-0da2c0360c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d29227-d214-4f1d-a9d7-0c323d09b133",
        "cursor": {
          "ref": "58b5435c-d965-4eba-ab37-7ea545b90110",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2b76220b-3389-4673-84d7-b50ce8dd7e3a"
        },
        "item": {
          "id": "78d29227-d214-4f1d-a9d7-0c323d09b133",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7c997597-08e6-4d4b-a2d9-b11b75ed23d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bbd468-4edf-4b09-8efb-452d2c9f0ee7",
        "cursor": {
          "ref": "b708dc21-e921-4d92-8a6d-9ce437336c72",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d90516a1-239f-4e7c-8242-70a2ff86828a"
        },
        "item": {
          "id": "a1bbd468-4edf-4b09-8efb-452d2c9f0ee7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "216b5390-10fe-4f0b-b68d-eb788873fc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2951e7-255d-4bec-8000-9540f2ae3551",
        "cursor": {
          "ref": "ded98af3-68b4-4e62-afee-d503153f23c1",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "49b55502-6521-44b2-b2c7-232e0553e178"
        },
        "item": {
          "id": "aa2951e7-255d-4bec-8000-9540f2ae3551",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "433ee3c1-d43d-4020-b837-533ae19aa226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f6d78b-61e3-4c6b-9c13-36ed50ae926c",
        "cursor": {
          "ref": "606a8e23-40fc-4852-85db-9b06f69f23d7",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "18590be6-6c54-4ed3-bcd5-9f851a6a6fdc"
        },
        "item": {
          "id": "a9f6d78b-61e3-4c6b-9c13-36ed50ae926c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "98494f0b-7492-4edd-9601-95ee84161e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab7bab7-de85-4589-8e50-ee48ad487ab9",
        "cursor": {
          "ref": "b2cea7e8-4241-405e-b706-19dca6a35c12",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b8f47920-0acb-46ed-9e6e-ec9b86f2216d"
        },
        "item": {
          "id": "1ab7bab7-de85-4589-8e50-ee48ad487ab9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "86452e1b-7e79-4c26-b615-da15199c8804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4e3bf1-b8be-43e2-be36-be2065fdbf8e",
        "cursor": {
          "ref": "47458bf7-5e44-4871-b6c1-984ff7a9f0e3",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "793c9366-483d-4660-84b1-6c6f427be387"
        },
        "item": {
          "id": "5f4e3bf1-b8be-43e2-be36-be2065fdbf8e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e622c82b-6664-4a9b-aaaa-1dc129d277ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4c99c9-b97e-48ef-a222-2d6f81609d08",
        "cursor": {
          "ref": "de95e018-04ae-4809-9905-23abaaabcf3a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "68eb6faa-85ef-4789-b09f-d4124f665de2"
        },
        "item": {
          "id": "9b4c99c9-b97e-48ef-a222-2d6f81609d08",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6a60fcb1-8c4b-4ec4-8d3f-d336ce6f4b86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf707f08-eb5c-4a6c-97c7-4160035e5ed9",
        "cursor": {
          "ref": "c779dd70-5775-4881-90ce-b5a3174c5a38",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b16b3946-ff17-4307-b514-3516d5c28317"
        },
        "item": {
          "id": "bf707f08-eb5c-4a6c-97c7-4160035e5ed9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "93d743a8-3714-45f9-93ca-a987ebb2a72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "c611275d-7fa1-4a26-8390-cf62347dde45",
        "cursor": {
          "ref": "246cfbc4-7c2e-482c-bc80-932c29ccf755",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4803e1b6-28aa-4792-b107-f8d75622de4c"
        },
        "item": {
          "id": "c611275d-7fa1-4a26-8390-cf62347dde45",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0c390a61-aaec-483d-a6cd-b04812b8920e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "569d866a-51e9-4b66-a416-9f7a76a182aa",
        "cursor": {
          "ref": "3e15b452-5744-4c75-87e6-614e68b49c4e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3252e970-e0ca-4a11-b923-28b4f4658b13"
        },
        "item": {
          "id": "569d866a-51e9-4b66-a416-9f7a76a182aa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3efaa440-aa69-46fc-84b9-c44935db872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8a67bd3b-3556-4338-a4a6-0537a5b52b3d",
        "cursor": {
          "ref": "ed27c149-94d6-4426-916a-73aede0ea394",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5100357d-3738-404a-a30e-44c8dcb395c3"
        },
        "item": {
          "id": "8a67bd3b-3556-4338-a4a6-0537a5b52b3d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "60a7a3b8-d2b9-4e1f-9972-7e793cedc256",
          "status": "Created",
          "code": 201,
          "responseTime": 5211,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9d8de8-15c4-46b3-820d-61c7fc968ac6",
        "cursor": {
          "ref": "e7b8b16d-2c2f-451c-ac32-bb4e003ca47d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6ea37183-7232-4ba9-9e91-c66a488ee06c"
        },
        "item": {
          "id": "7b9d8de8-15c4-46b3-820d-61c7fc968ac6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "befe219e-75ca-4713-a869-6a1b7045dc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6556afaa-3fb4-4a0c-9f6e-772fba6dbe96",
        "cursor": {
          "ref": "557ebe15-dea1-4d2a-be83-e4b7b639e374",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9b97ea8a-9cf5-4637-b8df-a420c3394282"
        },
        "item": {
          "id": "6556afaa-3fb4-4a0c-9f6e-772fba6dbe96",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6c79de20-c1a9-4087-8658-76b8d0c786e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "1961ea41-4d66-41d6-bddc-c73190196ef4",
        "cursor": {
          "ref": "933b8e50-4895-4e80-8f29-1ec9c346aa27",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d05fd6f8-2780-4211-9e74-1afa83673858"
        },
        "item": {
          "id": "1961ea41-4d66-41d6-bddc-c73190196ef4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "29f03806-796b-4058-b983-26bbc01acca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600e6d01-6b56-4af4-9247-9d51ddcf3d92",
        "cursor": {
          "ref": "0c5783dc-b872-439d-965d-6009b0eb5dda",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "27216354-830a-4329-a616-38aef432d7c7"
        },
        "item": {
          "id": "600e6d01-6b56-4af4-9247-9d51ddcf3d92",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c65d6d94-a746-4553-84d0-88d305022dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fb87f8-a72b-4589-ab74-774df1a6319c",
        "cursor": {
          "ref": "45a9aff8-6e55-4e24-aa72-754ce6e5eaa9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c507f973-d571-4095-8302-8d6c34a0d030"
        },
        "item": {
          "id": "e7fb87f8-a72b-4589-ab74-774df1a6319c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fd829601-a0c2-4135-a640-f53a27cecb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28f0754-448d-4bcf-bfb5-e72b174fed47",
        "cursor": {
          "ref": "d6d5c101-68b9-4c7c-8bba-0ccf3c8e4f4d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e396f44e-b34b-45be-aef5-5a3bc2aa0337"
        },
        "item": {
          "id": "a28f0754-448d-4bcf-bfb5-e72b174fed47",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d43e6800-8ad0-4b91-af48-a5250dfbc15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aba683-0d1a-48cf-af4c-bd6f81d4224a",
        "cursor": {
          "ref": "adfda506-c950-4532-893b-3e0cd1ba34ae",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cfed7f17-5e69-4684-8f04-1597f82acfad"
        },
        "item": {
          "id": "f4aba683-0d1a-48cf-af4c-bd6f81d4224a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c85fc1fd-6372-46c8-94f7-1ae9dbf74962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a1d18d-70fa-4707-bd03-3d689c992162",
        "cursor": {
          "ref": "0a456a6f-d899-4f20-aba6-be14bbe4d5e5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "be11c1b6-3ed1-449e-8158-5c7f2b9903ec"
        },
        "item": {
          "id": "24a1d18d-70fa-4707-bd03-3d689c992162",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8d8630b5-7b60-4ad3-8f04-ace16604989f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f33305-066c-4133-91b3-79010f51b6ef",
        "cursor": {
          "ref": "57a24a6c-5928-4dd7-8e2d-7a8160324fed",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cc109be7-d067-4cc6-9225-054ad846eccb"
        },
        "item": {
          "id": "09f33305-066c-4133-91b3-79010f51b6ef",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "09a45f99-2686-433e-a8b0-4aa38379c2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43283b33-fdd5-4d12-bfbd-a7b5b1349780",
        "cursor": {
          "ref": "a27b3b09-cd05-472f-9594-67358785d187",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "abbfd69d-393d-4030-bc6f-748a989c05b2"
        },
        "item": {
          "id": "43283b33-fdd5-4d12-bfbd-a7b5b1349780",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2711836f-5703-4497-b6a0-344802addbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b92319-ff9a-4218-8800-5312580083ac",
        "cursor": {
          "ref": "9635a384-791a-472c-8ea6-508866379f8c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d4261315-949e-477b-b32d-9ac31bbb999f"
        },
        "item": {
          "id": "69b92319-ff9a-4218-8800-5312580083ac",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5d229008-676b-43bf-8a9e-241eca837804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6121049f-1965-46f9-b1b8-8e369f583b98",
        "cursor": {
          "ref": "bd49c127-ebf2-49fc-9978-8468c601e735",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "071c5281-8db6-4c10-9cce-a57cdc61d724"
        },
        "item": {
          "id": "6121049f-1965-46f9-b1b8-8e369f583b98",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d1e9cdb0-f796-42f4-b85d-38c47374af6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c84530-ad96-432d-8285-af73ae1a3170",
        "cursor": {
          "ref": "d67ded25-b715-4f07-b3e3-4c33cdd373de",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e97675b3-d5d4-477b-8871-bb394440e1d5"
        },
        "item": {
          "id": "e0c84530-ad96-432d-8285-af73ae1a3170",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9a0dfa1-9c14-4339-ac1c-a3aa75fa6229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f0ec66-0647-44ad-b874-7e7c06f3a0b0",
        "cursor": {
          "ref": "a1484586-a097-4639-b81e-6dc3da8bf0cd",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "04630437-c3a8-4a8f-a331-960727a53ef4"
        },
        "item": {
          "id": "93f0ec66-0647-44ad-b874-7e7c06f3a0b0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "627f386d-dc61-4435-9372-c3a73be51d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226132f5-13f3-4ea9-aafc-10a860d7b108",
        "cursor": {
          "ref": "1f6b406c-5835-4089-8991-a70e25a06a29",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "75019783-4d72-44f3-a263-02183310251d"
        },
        "item": {
          "id": "226132f5-13f3-4ea9-aafc-10a860d7b108",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "539b06fb-59cf-4a54-8573-d72e9c2270ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c00c79-5c62-4f2a-b4f0-4c3f8b557ee9",
        "cursor": {
          "ref": "1cdd3158-90ac-4113-ac7a-eea8558f3a66",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "30342343-6e60-40f4-9b92-7b745ab2a64f"
        },
        "item": {
          "id": "f0c00c79-5c62-4f2a-b4f0-4c3f8b557ee9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9d08c8cc-a5c0-4e81-8193-c50d128465a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf855862-ecca-4bc3-a813-61fc6b80a55a",
        "cursor": {
          "ref": "9f87581f-986f-4178-8709-11226fdcc372",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7e8663f3-5167-43db-9916-02144bfabc67"
        },
        "item": {
          "id": "cf855862-ecca-4bc3-a813-61fc6b80a55a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d07ffe6b-b82a-4b47-90d6-1352d254ab89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e0678a-8e62-49b9-a67d-067b32c621ed",
        "cursor": {
          "ref": "1a582492-623b-4c90-a603-d5fd3bf2590f",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0192c183-9545-453d-924a-ebbdf0d2a8dc"
        },
        "item": {
          "id": "e9e0678a-8e62-49b9-a67d-067b32c621ed",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "464f91a6-8535-49c2-840b-19dcda822d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11483f63-219f-47ac-a47e-e43dcd85a74c",
        "cursor": {
          "ref": "992a8aa9-978c-427a-88c5-c7932212ba29",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "82bf1cf1-130b-49de-aaeb-740020bcb0fa"
        },
        "item": {
          "id": "11483f63-219f-47ac-a47e-e43dcd85a74c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "386aa977-9242-4856-8bce-b94bba934534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63724112-e09d-40be-8d0b-adb4fe61d5d1",
        "cursor": {
          "ref": "2743450f-d2db-4cab-a3f4-c9074aca392e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9099f145-aec3-4b0d-a140-d77fea66cc6c"
        },
        "item": {
          "id": "63724112-e09d-40be-8d0b-adb4fe61d5d1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0db49972-2732-433a-a4f1-b9621af2881d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628b195c-39b6-4322-b4b0-e3f94809918b",
        "cursor": {
          "ref": "0d0985dc-ec86-4e7c-b964-2c650accc6a2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "58a10923-fa3c-4270-ab4e-9cbd94bfc4bc"
        },
        "item": {
          "id": "628b195c-39b6-4322-b4b0-e3f94809918b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "213cd985-e3ff-42f7-b5a1-a329f0bd1bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff3a583-f1d1-4094-9461-d77f12c97b8a",
        "cursor": {
          "ref": "de62d4c4-5f8c-47eb-9d74-09bf5ecdb4ea",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "94813b3d-c4c1-4dcd-a7d6-4035fcd326af"
        },
        "item": {
          "id": "cff3a583-f1d1-4094-9461-d77f12c97b8a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ce90b233-ae3b-4c34-9376-0eb70b2face1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feed05c6-d442-45fd-87ab-8580f7a7cc14",
        "cursor": {
          "ref": "609d60a3-1f72-40c3-b22e-adea0013b61d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d3d7f518-c9a1-4b8b-8c3a-5af21ed58e7d"
        },
        "item": {
          "id": "feed05c6-d442-45fd-87ab-8580f7a7cc14",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "796beea8-c4cf-470d-aafb-b8c133e6e207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54468be7-722b-4968-b7e9-b788d2b4330b",
        "cursor": {
          "ref": "71e6d963-7fbb-4a80-b110-ee2f57e433ab",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1b023f58-15fe-464d-9e3e-b43362ee05b3"
        },
        "item": {
          "id": "54468be7-722b-4968-b7e9-b788d2b4330b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5cd3d0a0-67b6-4c57-882e-01f45e5697c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480f8b35-978a-4b75-be01-3454a85aee5f",
        "cursor": {
          "ref": "acc2da9c-8589-4c28-bb96-e1c21ac1b4a6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7b0ae937-e5f6-41f0-9269-e3482cdf1175"
        },
        "item": {
          "id": "480f8b35-978a-4b75-be01-3454a85aee5f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "251420c0-8bb0-4d7e-ad93-a6eb73f45833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab78e39-ded9-4a3a-8696-7f61aa618a6c",
        "cursor": {
          "ref": "f7bf2563-3fe1-41aa-bc3f-65350ed96db4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "003719b1-4328-45f3-acbb-dd6650bcf045"
        },
        "item": {
          "id": "0ab78e39-ded9-4a3a-8696-7f61aa618a6c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9afd0d9b-0d7d-403f-b948-c33ab4bcbbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e095f040-49a8-4d7c-9233-bf8035cf77d3",
        "cursor": {
          "ref": "ba9dd35c-997a-4f8f-86e0-c5409ffb57e9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0834da0f-976e-45ae-b694-ca45a4ca3074"
        },
        "item": {
          "id": "e095f040-49a8-4d7c-9233-bf8035cf77d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "18e1312c-ec59-4dfe-8217-b7f32c053278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c440452e-52a6-4574-bede-22682381165f",
        "cursor": {
          "ref": "1d3e02ea-b8fd-45e4-a4ca-e004abd5c7ae",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9f7d65c8-a6b4-4b25-8894-68e6f0f219f9"
        },
        "item": {
          "id": "c440452e-52a6-4574-bede-22682381165f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f20c2196-54b4-42b4-8505-3bace33b20e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9044bebc-2d1a-4062-9b1b-7619eb1a91e9",
        "cursor": {
          "ref": "633c1818-e812-4d18-b303-38d63bd3d80f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d9b06ba7-0b40-46e3-85ce-8fb1f63a217d"
        },
        "item": {
          "id": "9044bebc-2d1a-4062-9b1b-7619eb1a91e9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c8c021d7-31ce-4e6e-a55c-2b3bbbd2013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8acd60-765b-4b22-91f8-554be9a339e4",
        "cursor": {
          "ref": "cad7cdaa-8b45-46ac-94e1-7637e759bdf7",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "48a785c2-fb61-4b6a-b7b7-84878d0f5ea8"
        },
        "item": {
          "id": "1b8acd60-765b-4b22-91f8-554be9a339e4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "692ffdd6-3898-4454-9e64-f509f6fd9254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd69da44-3769-4222-8c42-146ba7c43cc2",
        "cursor": {
          "ref": "72de1c24-4e0d-4745-b71e-c39da3d7ce4b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9f2c8aac-c9c8-4ce7-b4e0-a9a9a6b40626"
        },
        "item": {
          "id": "dd69da44-3769-4222-8c42-146ba7c43cc2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "13a99a84-9e7c-4c50-ae29-cee6a9e35980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed22aef-77d7-4b80-bea9-9f2f68c1e5f8",
        "cursor": {
          "ref": "e1099179-795b-4fa8-a178-93f7fb46199f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "49019bc4-c7f7-4f6c-b248-13fc4befcbce"
        },
        "item": {
          "id": "8ed22aef-77d7-4b80-bea9-9f2f68c1e5f8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "433e7d01-ea73-49e3-ac65-efcd8f03b161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35646630-a71b-41b2-ae09-c27c4cae22a1",
        "cursor": {
          "ref": "08be9f6d-ed72-42dc-9f9a-0cf634bb9874",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "120c7818-d9c1-4e89-8a50-08c6ccdecd42"
        },
        "item": {
          "id": "35646630-a71b-41b2-ae09-c27c4cae22a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "51f04b9e-1735-4ea7-af4b-e9591b8b7924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9357645-73df-4400-824f-8ea62de8ec0d",
        "cursor": {
          "ref": "385ef9d1-5ac4-43dc-bf1c-1fdefece1dca",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "74a169de-988e-4b26-b9e5-4f05a2044110"
        },
        "item": {
          "id": "c9357645-73df-4400-824f-8ea62de8ec0d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5fb318da-8c18-4aa2-88cd-2ae493c940a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae899808-4ceb-47b8-9869-d952ef0af6a6",
        "cursor": {
          "ref": "3628ed2c-6017-43e8-ad20-b037ad293705",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "93231b9a-7b4d-49d6-b109-e17e7f3f49fb"
        },
        "item": {
          "id": "ae899808-4ceb-47b8-9869-d952ef0af6a6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3019f1ef-8cf4-49b1-85e8-43c8ce7381e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0c72ab-ad99-4adb-b578-cdf027fe6aa6",
        "cursor": {
          "ref": "d133d299-5036-4aeb-bdb8-782583d3de98",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b9169290-83f0-4119-818a-ffaf0d89ae70"
        },
        "item": {
          "id": "ce0c72ab-ad99-4adb-b578-cdf027fe6aa6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2d2bbc64-d927-41cf-95aa-1a1fd9b091dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a4b14f-fa66-4621-a786-8d8ba338ebc2",
        "cursor": {
          "ref": "5c86edfd-0afd-4153-ab95-b0223635d0ff",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ffb41b88-436a-4b5a-bc42-6484e6d3185f"
        },
        "item": {
          "id": "56a4b14f-fa66-4621-a786-8d8ba338ebc2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d7eef68a-eaf3-44da-bace-649785a2026f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4b7fbe-875d-4f3d-ba48-a97c63a3f920",
        "cursor": {
          "ref": "f978991b-a826-416b-9781-680eeee615bf",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e01fd51f-b14c-48b7-8323-89ed9e9fc26a"
        },
        "item": {
          "id": "bd4b7fbe-875d-4f3d-ba48-a97c63a3f920",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9ef40134-2343-4bd5-b2b0-b7c34cdb027b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e260556c-8ed7-4bc3-8494-5228ea05722c",
        "cursor": {
          "ref": "45b1ecb5-0e5e-4982-8a4a-851df10403a1",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f46bdb1c-1ad1-4d35-a060-2ead88c0eb61"
        },
        "item": {
          "id": "e260556c-8ed7-4bc3-8494-5228ea05722c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7666cb70-97af-4c93-a9e0-eef6c802d3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0a73c6-fcb3-43ff-88df-feed1e7db326",
        "cursor": {
          "ref": "9e7873a0-29d4-411c-92de-cde39959947f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b5e53448-567a-4d09-9a89-6b4ad59513d0"
        },
        "item": {
          "id": "db0a73c6-fcb3-43ff-88df-feed1e7db326",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b5057b67-855b-46de-8d4e-5c2e29cd6d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14e9916-e49e-4964-9df9-1f63d7ed9d68",
        "cursor": {
          "ref": "f46d8de8-6648-4ef3-873a-cac4d6b8df53",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d94c7ae7-778b-4f21-ba16-726f9db52979"
        },
        "item": {
          "id": "f14e9916-e49e-4964-9df9-1f63d7ed9d68",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b38e2e8b-a4e3-4c79-a210-9771b0f9d84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad345890-1b79-4475-8fbe-f8c54f416805",
        "cursor": {
          "ref": "c9750f6d-3552-4acb-985b-52f6524bc9f6",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e55486ec-51d3-41e7-afc7-5d94f67e2290"
        },
        "item": {
          "id": "ad345890-1b79-4475-8fbe-f8c54f416805",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "76daf423-e304-4bd0-b69c-4f153f351ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960017ce-ef3b-4300-8641-a26b7d8395e9",
        "cursor": {
          "ref": "75769ce9-1ff5-4888-a749-e3b871c3b3cd",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f7747d94-55e2-4c00-a47e-0a02e572ed4f"
        },
        "item": {
          "id": "960017ce-ef3b-4300-8641-a26b7d8395e9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e8fc33e0-88f6-4e0a-9d6b-9e11b159d83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797922ff-636e-414d-b05c-13b70dbe1656",
        "cursor": {
          "ref": "aa3aee92-cc52-4606-9afe-295f884b5dbc",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "091bb440-2a08-4c4d-abe8-4cc512b56e74"
        },
        "item": {
          "id": "797922ff-636e-414d-b05c-13b70dbe1656",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b095f466-d81c-4e05-ab72-b9a071dddeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f527508-043b-4bd7-8daa-0e3c4a8b9871",
        "cursor": {
          "ref": "43af5c1f-88d0-46e0-8bf2-39e3b9c2470a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "782c2ed1-64f0-4487-8504-59de69287def"
        },
        "item": {
          "id": "0f527508-043b-4bd7-8daa-0e3c4a8b9871",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "241f2ca5-65bf-4369-8136-f5f6fc68c40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447769d2-ca94-4d97-acf1-20da151e82f9",
        "cursor": {
          "ref": "bc61ed97-fba6-4495-be3b-d86d96b2e136",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fc0a8ba9-d29d-4e64-8bf4-5b74d5aa6920"
        },
        "item": {
          "id": "447769d2-ca94-4d97-acf1-20da151e82f9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a0dd3927-e5a8-4b5d-a396-31b919c90e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fbb1cb-4583-4024-8327-7ed706ec27cd",
        "cursor": {
          "ref": "7eedb2a5-eddb-472f-b259-0303fb612184",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4675ae23-80c8-4591-a758-4c8f9f300447"
        },
        "item": {
          "id": "b0fbb1cb-4583-4024-8327-7ed706ec27cd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d27209a1-bdc2-448f-b7fb-eec6187b5c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b609b013-29bc-4fe5-ad1f-f29243593207",
        "cursor": {
          "ref": "a3518bbe-18cd-4a11-aeed-afe4dd5351f0",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "070010f4-b19c-41b0-abe0-c2c08adade05"
        },
        "item": {
          "id": "b609b013-29bc-4fe5-ad1f-f29243593207",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2e6370a8-64b1-4591-888b-dfc18b4e1d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f720f0d8-a6db-4607-800a-f9052a43af4a",
        "cursor": {
          "ref": "370c09c9-2cc7-452a-99e8-20e97397946d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "04a47d4b-1fd3-4b0f-b059-c75e3b65c477"
        },
        "item": {
          "id": "f720f0d8-a6db-4607-800a-f9052a43af4a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "73d043e4-36d2-422e-b468-ca7f7f9873fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1b7d69-5e85-4a25-b366-907b2331d984",
        "cursor": {
          "ref": "6e5c99b7-fd03-46bc-ad99-72a86ed27890",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3e1a447a-6902-4f02-8fe0-1ebb1e4cbf87"
        },
        "item": {
          "id": "fb1b7d69-5e85-4a25-b366-907b2331d984",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "754ac573-c924-4e31-999c-ba690853c92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75d0484-1a47-46f4-912a-fc63244fbc37",
        "cursor": {
          "ref": "f78ecae7-8588-4680-800e-9f2031cfdebb",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c98370e0-1776-433c-b16d-a610fc9f41d2"
        },
        "item": {
          "id": "e75d0484-1a47-46f4-912a-fc63244fbc37",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2018efca-43a2-425d-b60f-57beccda6e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1565254f-cafc-49dd-bd66-ae4acb19a662",
        "cursor": {
          "ref": "7bc322b5-c94c-44f8-8ee5-9a973f39f930",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "76844476-4a0c-44af-a219-2426ea680891"
        },
        "item": {
          "id": "1565254f-cafc-49dd-bd66-ae4acb19a662",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "874b0375-23bb-42d9-9f3c-7c79375abe5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5fab1c-a581-4cd1-8a90-dd744c658fee",
        "cursor": {
          "ref": "633a3a97-de39-4c86-b7de-aa2d1627fbe0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "10b640b3-bb06-46d4-8738-4ce763fa1113"
        },
        "item": {
          "id": "ab5fab1c-a581-4cd1-8a90-dd744c658fee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "50afe20d-04f6-40a2-b157-db176f194bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e776687d-b3b1-431d-854f-29f3fd7bdffe",
        "cursor": {
          "ref": "f66ff3df-f896-4a31-9cc5-fa967c7accc6",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "de0a9bab-b451-4a7e-b843-65213c6570bf"
        },
        "item": {
          "id": "e776687d-b3b1-431d-854f-29f3fd7bdffe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f9150df9-d2b2-4de0-80bb-4e9ce4c7fbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb09b2f4-bec3-4e8e-aeb9-ac0670a66ae3",
        "cursor": {
          "ref": "5325e03c-f9ff-4244-86d3-fa66789b77e8",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8ae0b730-d3fa-4f63-bdf2-ff5cc6dc7050"
        },
        "item": {
          "id": "eb09b2f4-bec3-4e8e-aeb9-ac0670a66ae3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5817bc2d-753b-43fe-ac32-69b1d7c38161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8c7719-9080-4ae8-8fd4-73c9d69523c6",
        "cursor": {
          "ref": "d4ca66ec-aa85-4740-96d2-df01b9fb49b9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "741d4f94-32b7-4966-94f3-95f5ee4f0338"
        },
        "item": {
          "id": "ac8c7719-9080-4ae8-8fd4-73c9d69523c6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7bea8dd5-14a7-4888-af2d-0c44216d4b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ebbc96-4e79-410d-b5b5-77ed7461adbd",
        "cursor": {
          "ref": "f4c8251d-9991-446e-b27c-6a3667124efc",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3984706e-0131-450f-b9fd-fdf74340331d"
        },
        "item": {
          "id": "65ebbc96-4e79-410d-b5b5-77ed7461adbd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef0c463a-4a03-46e9-8944-f121dc6b5335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce7235f-dc04-4d7b-9aaa-2577b994faa5",
        "cursor": {
          "ref": "88512692-3d89-45be-b7eb-aee23fe958c0",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0bef42b2-5e61-411e-809c-023d80c30edf"
        },
        "item": {
          "id": "5ce7235f-dc04-4d7b-9aaa-2577b994faa5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0bd25d4d-cccf-4133-a28a-0407d2c6ae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6986bd-527b-4449-9904-cce80d6be84f",
        "cursor": {
          "ref": "7c888f6b-05a2-4220-ae2c-0a99b30e25b7",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7bf26f1e-396a-4092-829c-6c06079bd6f1"
        },
        "item": {
          "id": "6b6986bd-527b-4449-9904-cce80d6be84f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "07b70d78-cf5c-487e-a5c1-a439de95f55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a68e03a-318c-400e-9d11-adfacd733ba1",
        "cursor": {
          "ref": "6e71e26c-d4e7-434a-9d98-4d86fc1ea8eb",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3c823f4e-95e7-475d-b587-c129a8e2a2d7"
        },
        "item": {
          "id": "7a68e03a-318c-400e-9d11-adfacd733ba1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "10789d80-d836-4f12-96c1-2d381c3c828c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df338e45-6e7d-4773-b417-8c470ec48d4b",
        "cursor": {
          "ref": "98a3ae5a-3460-4ba3-81dc-72c30131052f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6a862569-8ac1-4e0f-91db-0a39c27eefb2"
        },
        "item": {
          "id": "df338e45-6e7d-4773-b417-8c470ec48d4b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eb93df4a-e24b-40a7-ad75-8c07368c338f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55c77e9-8ee8-4db6-a0d7-811dd397d1f2",
        "cursor": {
          "ref": "e2b38038-d9e2-4ce3-aa63-68c99c4c2b0f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "938fbdd2-16f8-4adf-a4a7-75de4570d5d8"
        },
        "item": {
          "id": "d55c77e9-8ee8-4db6-a0d7-811dd397d1f2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9a23a562-c2d2-46ef-9c76-2479437957e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e515860-e776-4636-8cfd-9322028f0a3b",
        "cursor": {
          "ref": "c53f8932-1cf4-451e-b173-cf1791e08ca1",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "78db7ddd-5216-4c1f-90bf-f1602e80547b"
        },
        "item": {
          "id": "5e515860-e776-4636-8cfd-9322028f0a3b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c639f8ab-22c4-45c9-b071-311e5918b8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06e3e36-d2a4-4c8d-8989-a4afe9cb9456",
        "cursor": {
          "ref": "3282aac6-35b0-4836-b43d-46ac73b5e43d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1b54db67-03fd-486a-aec9-bc9ee5907ee3"
        },
        "item": {
          "id": "c06e3e36-d2a4-4c8d-8989-a4afe9cb9456",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3f2e7f8a-099c-440a-8643-7fc625e472c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d93199-bff5-4dbe-8f60-ed06a7d8d8bd",
        "cursor": {
          "ref": "ab103009-1e6d-4be0-8b5d-f7a907bb7725",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "830c2776-ef33-4aba-b72c-05faf125cc7c"
        },
        "item": {
          "id": "29d93199-bff5-4dbe-8f60-ed06a7d8d8bd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e68b1e85-4d70-44e6-946c-25fe0f94c60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cba1509-767b-48bc-a83f-02f447f03e53",
        "cursor": {
          "ref": "af9a1c42-a85d-4db0-bb62-db94662ac356",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "64d4636e-afff-4237-b3f5-baf03136a64f"
        },
        "item": {
          "id": "1cba1509-767b-48bc-a83f-02f447f03e53",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c6e419c5-5cb9-4cab-aa56-8a60c5f06d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5804a1-502a-44a6-8814-16b40ca938de",
        "cursor": {
          "ref": "1e9b16e0-8400-4dd5-92d1-f2c4bd910708",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80a78402-f55a-46c9-9822-2fe63b241441"
        },
        "item": {
          "id": "5a5804a1-502a-44a6-8814-16b40ca938de",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6f92af6f-078e-4245-8d3a-e35e30ea91ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230163b4-3a72-4f4d-9184-907ddccb0983",
        "cursor": {
          "ref": "68456466-3af5-4781-b2aa-e40f2788f2b0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "08ba9aeb-ca22-4b24-b5e5-8db8720fde47"
        },
        "item": {
          "id": "230163b4-3a72-4f4d-9184-907ddccb0983",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "542ce215-667e-4fab-a6cc-fed5dfac844a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e087db-1b60-4d07-8e28-8d474f405c4b",
        "cursor": {
          "ref": "6862bd60-fbc8-430e-a3fe-fd4860a1b89e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "de8c72f5-ca6f-436f-8374-a5b5d15a466b"
        },
        "item": {
          "id": "b6e087db-1b60-4d07-8e28-8d474f405c4b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e5f07b70-bd20-4266-bc88-7bb55ffa6a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e208cc8-aead-42ae-b746-41f734c5839d",
        "cursor": {
          "ref": "7c2febbb-a728-4639-8c4f-cff4cc0a4fc5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4bc9995a-ba4d-423e-83dd-bb517a05ef5f"
        },
        "item": {
          "id": "9e208cc8-aead-42ae-b746-41f734c5839d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b76c9927-88bb-4751-add5-3ea39cd76355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e5d993-9e85-4b69-8b36-1a4ea13e4001",
        "cursor": {
          "ref": "8f95124c-6f13-40a4-9926-3fa4c4e90e2b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ba240212-8038-48e1-9291-61b9888df041"
        },
        "item": {
          "id": "f9e5d993-9e85-4b69-8b36-1a4ea13e4001",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "32ad3c9e-ff06-4c7b-ba2b-4d678cd528a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbff916-aff7-473a-a27f-11c687248a21",
        "cursor": {
          "ref": "a7a51326-0d15-412f-af45-f350239372e8",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dbd45a34-99bc-4df9-8d96-272466c7bcf4"
        },
        "item": {
          "id": "5fbff916-aff7-473a-a27f-11c687248a21",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fca78059-dac0-4afc-a4c3-618f1622486a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9393ff-f5ca-479b-83b8-985b90eb6933",
        "cursor": {
          "ref": "cd815142-668b-481a-a1f1-b5cf7c48a9e5",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b564a7ae-2d0a-418e-bf71-488579125659"
        },
        "item": {
          "id": "8e9393ff-f5ca-479b-83b8-985b90eb6933",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "85e7d32e-fad9-4d89-b91e-fae96bf5c863",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ef6ead-169e-404b-b8bb-2e76fb53ee9f",
        "cursor": {
          "ref": "a5a619e2-dce5-430e-9143-6a07c99e1458",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7fb9ba65-5808-40b1-9c8e-dda5ab61ee83"
        },
        "item": {
          "id": "97ef6ead-169e-404b-b8bb-2e76fb53ee9f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4bf77a05-3bae-48f6-9168-19b8cbe99bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ea2bff-dd52-420f-a883-d43281629f66",
        "cursor": {
          "ref": "400d6850-7191-4f10-ae2a-16f6eebaaa1b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "38619e1c-62c4-40b1-9101-8ce91895a851"
        },
        "item": {
          "id": "19ea2bff-dd52-420f-a883-d43281629f66",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1b2ffe94-0de2-4007-af12-6fd0cecda930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e144ce31-4021-4a45-94a5-c69ede239ad1",
        "cursor": {
          "ref": "26c19678-485f-44ad-be2b-61ae87444a7d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d7a78548-6384-44a0-85fc-d60675a8e3f8"
        },
        "item": {
          "id": "e144ce31-4021-4a45-94a5-c69ede239ad1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a108a0ec-6d7b-42c4-b559-9c94f48a8a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8566c0b5-b92d-4f8f-9ec9-0bd2d8def04b",
        "cursor": {
          "ref": "48ef2b1d-ef01-4d3a-9445-c4e79413c154",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a7ab9c60-962d-4bbe-992d-9e21e6822a93"
        },
        "item": {
          "id": "8566c0b5-b92d-4f8f-9ec9-0bd2d8def04b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5bfa879c-d6d7-4a74-b26a-2ff7d9563d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d59b21b-7a03-407e-99b5-69961d5c3a4c",
        "cursor": {
          "ref": "983d8d3e-8591-4ba6-8ad7-0784d75f83c5",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9ee948a9-4617-426a-8b41-c5872485415d"
        },
        "item": {
          "id": "3d59b21b-7a03-407e-99b5-69961d5c3a4c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f81f5e73-3021-4a44-9b7f-ca8228b49f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca7f482-1ecd-418e-89a8-706c88b7074d",
        "cursor": {
          "ref": "906edad6-f72d-4ab4-a195-ceb62923330f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3e9c3468-75fa-4b2d-a5ac-8b35eae5fe8e"
        },
        "item": {
          "id": "3ca7f482-1ecd-418e-89a8-706c88b7074d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "58d9b1ce-60ed-4c10-a7b5-01d02007237b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd17fa9e-e8b8-4e72-9c86-e190528fbe75",
        "cursor": {
          "ref": "9b0bf1fa-c853-4d2d-8c11-99c78d1f8a59",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a0b61d88-8a4b-4eb0-8622-1be081cd89ff"
        },
        "item": {
          "id": "fd17fa9e-e8b8-4e72-9c86-e190528fbe75",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a2dcfbc3-2ab2-4eed-b5eb-ec00f9d9de6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306e1f52-65d6-4a3e-9ee5-6d7f960ad4bf",
        "cursor": {
          "ref": "d2e482ea-fba6-4f35-b608-a385e67662d1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ee9b5b14-a613-494a-ba6c-dd0ce8192378"
        },
        "item": {
          "id": "306e1f52-65d6-4a3e-9ee5-6d7f960ad4bf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "297741f6-8820-420a-8bfb-7d409e61a3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c8d068-fc0b-4fef-9e0b-4294d94b9169",
        "cursor": {
          "ref": "7f9ecd7b-f221-4ade-8a4f-d79cf7c406b9",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3defd950-c170-4d6b-920b-0f9fc9784851"
        },
        "item": {
          "id": "60c8d068-fc0b-4fef-9e0b-4294d94b9169",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bce68ebf-7205-45e0-ba4f-b679669945e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cffeff-760a-4c53-8c59-55489184eaa6",
        "cursor": {
          "ref": "6f45e36e-e007-448e-a460-168ea4e18ca1",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "79d83d5c-794e-4d35-8717-6c65ec20cb55"
        },
        "item": {
          "id": "90cffeff-760a-4c53-8c59-55489184eaa6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "627bf3f7-e499-46bd-8150-b833792dd311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee16ed9d-0237-49b7-aa4f-102359aa60f6",
        "cursor": {
          "ref": "08972b6f-9a65-48d1-92ab-d3419845ad5a",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4e9abe7f-f443-428c-8c60-af8efa546a33"
        },
        "item": {
          "id": "ee16ed9d-0237-49b7-aa4f-102359aa60f6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9cdecb95-0ced-4295-8b46-93f1b46d72ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2932c757-d22b-4dd8-82cf-0faeeb7dc40f",
        "cursor": {
          "ref": "1b85e051-79a7-4e7f-9e5e-27060421ca67",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "31cf2d20-c8d5-409c-93d4-3a2b83049f85"
        },
        "item": {
          "id": "2932c757-d22b-4dd8-82cf-0faeeb7dc40f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bd09ea8e-9761-4951-b09a-092e3b94e640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9592aa3d-5ce7-48d7-9913-47500b9b0352",
        "cursor": {
          "ref": "6a9ce31a-b3f8-4591-a9b4-7fbbcbed7864",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "dd5b4d52-0324-4199-890a-f6f7d1fd091a"
        },
        "item": {
          "id": "9592aa3d-5ce7-48d7-9913-47500b9b0352",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f954fd14-35fe-4bc1-8966-44b0663ebce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f834dc23-43a5-49b2-9c8f-a45599aa2b5f",
        "cursor": {
          "ref": "cc0849e5-9b22-47f5-9c20-2f9500db24cc",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "44f88793-1e46-4166-af3a-405059b8f9db"
        },
        "item": {
          "id": "f834dc23-43a5-49b2-9c8f-a45599aa2b5f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3280e91b-f335-43e5-86cc-d32caec783e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1271a799-c967-4b19-882c-11bb66e10290",
        "cursor": {
          "ref": "97bd0eb0-b716-4965-818f-3915fa99d17a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a7062ea1-a993-41f8-a8c8-29b30c6312cb"
        },
        "item": {
          "id": "1271a799-c967-4b19-882c-11bb66e10290",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "73bf7aa0-0ea6-4b0a-9974-4c585d484c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbee4fda-fbac-47ae-8286-183fb904b8f4",
        "cursor": {
          "ref": "4ebef75f-edb0-46fa-875a-3497a52eda38",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f66c1db3-3cf5-4a7c-ba62-1721f60c9a68"
        },
        "item": {
          "id": "fbee4fda-fbac-47ae-8286-183fb904b8f4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "98dadcbb-a351-4048-8e98-5ae953c975f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4ddf3e-6942-4c61-b55f-2f5d19fe3589",
        "cursor": {
          "ref": "62406963-8eec-4421-beb2-c02409a9cbad",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b6a1f0a8-b542-4c6a-981e-688e540e094a"
        },
        "item": {
          "id": "7b4ddf3e-6942-4c61-b55f-2f5d19fe3589",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "480f9fb7-bbec-40fb-8983-c43bc0fe8a77",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "45e949f8-41fb-437d-8391-9458d5472cc4",
        "cursor": {
          "ref": "177f9596-c581-4b4d-bef3-14941fe81b34",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2e2369af-2ee1-43de-85df-b90232b113c1"
        },
        "item": {
          "id": "45e949f8-41fb-437d-8391-9458d5472cc4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ffcdaad6-c5a0-4b04-920b-d58c468e3f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e234835-2c8c-424e-a831-98e9b42f0f16",
        "cursor": {
          "ref": "66796d80-64ea-457b-82b3-0c723e4576ce",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a5810b13-69e1-4014-97d0-22a14e9aa1bf"
        },
        "item": {
          "id": "6e234835-2c8c-424e-a831-98e9b42f0f16",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e5999f55-e22a-456d-9ea2-92d60c2cff77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50da16db-4ecc-4f57-ab1f-fd9850730524",
        "cursor": {
          "ref": "e7840543-ff1f-4403-941f-e184a3b1e4c4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "498b039d-546b-4e77-a384-3fc69d537dca"
        },
        "item": {
          "id": "50da16db-4ecc-4f57-ab1f-fd9850730524",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1089bc76-7479-4c7d-956c-5fa1b7ab46b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cd20f8-9e16-4ea5-92f3-8723d36d07e2",
        "cursor": {
          "ref": "5a57eef0-5ce3-4862-875e-224083fd49dd",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "61d1e314-5fe0-4ffb-92a1-4ee77092329d"
        },
        "item": {
          "id": "e7cd20f8-9e16-4ea5-92f3-8723d36d07e2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b1ca2a20-5285-41aa-9ffd-cef63bbb2aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a44b7ce-e448-4c6f-82c8-a14adec68366",
        "cursor": {
          "ref": "4e6e2294-391d-488f-810d-0c4e81a7309c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "dd1ef367-81a4-464b-932b-8fb7f32cb085"
        },
        "item": {
          "id": "8a44b7ce-e448-4c6f-82c8-a14adec68366",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e1625a6-5674-41d7-9368-67de466e64aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55402197-57ef-4380-b996-2ea859f408ae",
        "cursor": {
          "ref": "4333c5a2-4b5b-46e8-b322-a5e2f566daca",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e71855a9-b095-40ba-a305-57477eb28af7"
        },
        "item": {
          "id": "55402197-57ef-4380-b996-2ea859f408ae",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3de7d9a1-30af-4b97-8939-20485c278dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d46984-8ebc-4062-a875-850dcbc50a12",
        "cursor": {
          "ref": "fc8dae9e-2e5d-4a10-8862-5dd617b77001",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d50d0955-fa23-4964-8a19-63b175875055"
        },
        "item": {
          "id": "90d46984-8ebc-4062-a875-850dcbc50a12",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b3380a49-2d14-4da5-b46e-b3cdf681c195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd33aee9-4864-4698-ab67-dd538ef79f21",
        "cursor": {
          "ref": "8b34eebd-ca64-4e29-99ab-703d0cc439cc",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "12f134d3-e6ca-4037-be9e-872e113494c6"
        },
        "item": {
          "id": "bd33aee9-4864-4698-ab67-dd538ef79f21",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "21cbc474-11b7-455a-8d8a-c72823768cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22613063-c0c4-4c29-bfd6-cf1d8e7e635f",
        "cursor": {
          "ref": "29e5a83b-941d-476b-875f-d3bdb3685a7d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "748322f0-9743-4967-867b-3916721f4bf1"
        },
        "item": {
          "id": "22613063-c0c4-4c29-bfd6-cf1d8e7e635f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ade73c04-28dd-4056-8a73-2946e6b50357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207a6f21-2ed6-45be-96a5-d4a3f17dbbf4",
        "cursor": {
          "ref": "a3a6bd56-af8f-45c7-8fe9-630e0b29bf6d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b453871f-bc1f-4630-8c56-0836b07063d1"
        },
        "item": {
          "id": "207a6f21-2ed6-45be-96a5-d4a3f17dbbf4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6ba2c83a-e5d7-4efd-a700-38bcf9626780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60afbc57-08e0-48d6-8132-61fc31ed8c83",
        "cursor": {
          "ref": "164188b9-04d9-49b4-a0bb-9dc4a203790b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3bcb8bbb-0269-429b-b854-788b94b734cd"
        },
        "item": {
          "id": "60afbc57-08e0-48d6-8132-61fc31ed8c83",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c7638363-6a8c-4145-af96-db8890429c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db12155-5f26-4311-b624-09b08ec9f121",
        "cursor": {
          "ref": "2dae89b1-a465-443d-8b00-e7b5e8fdd096",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "52ad1f3a-aee6-4553-97b3-2a7d17068f03"
        },
        "item": {
          "id": "4db12155-5f26-4311-b624-09b08ec9f121",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6816138d-b7ae-49f4-8cbd-b9eac06b3f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0dd1ec-5fdf-4314-a4d1-898c054a70d4",
        "cursor": {
          "ref": "63ea1802-da6e-4016-84e0-a95bc1c7e7e6",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bc183cd5-2345-4297-8162-e1b1eb3e2dd2"
        },
        "item": {
          "id": "ee0dd1ec-5fdf-4314-a4d1-898c054a70d4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6726690a-721f-4359-a95f-c0ac01099d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a30982-49b4-49e4-a92a-83ba7d08695f",
        "cursor": {
          "ref": "f66ee2fe-0a5c-4059-80de-68cd59a13379",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eb8ada37-f928-4fd1-bcf6-9310d0773475"
        },
        "item": {
          "id": "92a30982-49b4-49e4-a92a-83ba7d08695f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f10366ef-7af4-4fdc-87ce-76339415cdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7c242e-563b-431e-a38d-fbad2d65e34e",
        "cursor": {
          "ref": "c994ddf0-1873-46f3-a796-2ffc84417e0b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7430d06a-9d15-4788-99a6-426aac743f8f"
        },
        "item": {
          "id": "7f7c242e-563b-431e-a38d-fbad2d65e34e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c482c82e-1601-4b5f-8c10-06c2deb7d783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fc99e4-4167-4ae3-b478-71889f39167c",
        "cursor": {
          "ref": "91d92eb7-6552-4b8f-a461-88b8d5d1bd39",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ec1c65c1-08a2-4c85-9fbd-129c860d1daf"
        },
        "item": {
          "id": "55fc99e4-4167-4ae3-b478-71889f39167c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "273a38e2-1fe2-444e-b83c-19438f55f1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9693f452-db03-47bc-a96e-5697ea12acec",
        "cursor": {
          "ref": "e85246e2-f73a-4fa0-9bb2-e39ffa324e0a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4d530c60-ee39-4dba-bb38-5acd2729764b"
        },
        "item": {
          "id": "9693f452-db03-47bc-a96e-5697ea12acec",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e742decf-69c2-49fc-81fb-8a3a3c502dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b034c1-43f8-4094-8c8d-49aa2bedc0ad",
        "cursor": {
          "ref": "63e8defb-1271-4766-a18a-f7b8c03702e1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "32207678-c844-4c14-8dc2-c5d29d9a9ff8"
        },
        "item": {
          "id": "13b034c1-43f8-4094-8c8d-49aa2bedc0ad",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c791c504-2cc7-4c4f-b807-e0d688d0415b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50549dc-5211-49cb-b867-d8ad8615142e",
        "cursor": {
          "ref": "f202e1b7-8b79-4a67-baa3-0c072b9e4e8f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d5f99f20-2d2a-4bb8-9895-48220b2836b2"
        },
        "item": {
          "id": "f50549dc-5211-49cb-b867-d8ad8615142e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ba5148cd-8592-4afd-aee8-e2aa0785cb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a34498-04df-4079-a6ec-22aabe36e571",
        "cursor": {
          "ref": "a4b80312-0d5d-4ba8-8c33-8ac9ada6e8d2",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a57bb11e-ac8c-419f-9a1c-b692601b95d5"
        },
        "item": {
          "id": "96a34498-04df-4079-a6ec-22aabe36e571",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d45d0cb5-ef1e-440c-9fa2-9ba302840bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aed1c76-6adc-4f8d-9c13-2e9cbeb65994",
        "cursor": {
          "ref": "1285baaf-66f1-4052-81be-75c1e0262674",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b9afc5f9-ee6c-4e0f-a293-d6742c7dadde"
        },
        "item": {
          "id": "8aed1c76-6adc-4f8d-9c13-2e9cbeb65994",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f8e3bc27-b61f-49c9-ad76-69e579944caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400161ed-6d41-4d6e-a485-697a83dedf5a",
        "cursor": {
          "ref": "6683a6dc-0e57-4104-ab31-db648e5b45d3",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dc3bb77b-ddac-42b9-84cd-18699e476d34"
        },
        "item": {
          "id": "400161ed-6d41-4d6e-a485-697a83dedf5a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "93e06205-f748-40b2-92a6-86ce2adbe5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62277af-88e3-4fb5-9754-cc529611df18",
        "cursor": {
          "ref": "8e64f35b-09e0-4cb1-bd1e-47abc343b906",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a2570275-ee5e-45b1-a6c7-92c833133dd4"
        },
        "item": {
          "id": "e62277af-88e3-4fb5-9754-cc529611df18",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "57a85a8f-a336-44bc-9003-80bcf11bb964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3200dd09-87e2-42af-9fee-93d707dab339",
        "cursor": {
          "ref": "49f584d1-3292-43b0-8c00-cd2b2d8b30ec",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aa83abe8-06ee-4fdd-9eba-09acbd149efa"
        },
        "item": {
          "id": "3200dd09-87e2-42af-9fee-93d707dab339",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "16ca2d8b-1303-4ece-8bfd-c455dca1ec71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad659d-d393-4b1f-9291-26a25aca14b2",
        "cursor": {
          "ref": "2fab25e2-1a92-4338-b11d-f1751d1550af",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d010788d-ab20-4979-a9ee-4f1a9a26a87f"
        },
        "item": {
          "id": "99ad659d-d393-4b1f-9291-26a25aca14b2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "838fa7dc-71c2-4c8a-a35c-f9805768b347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1d798a-d876-41d3-b10b-d9166a5d7a33",
        "cursor": {
          "ref": "207be485-a2ea-4654-8170-37785b5f316b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f54f0943-a476-46f1-a363-bf75c245d420"
        },
        "item": {
          "id": "fa1d798a-d876-41d3-b10b-d9166a5d7a33",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6f7148ed-7dbc-4c7f-829b-44e3872a4857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8b5f1a-c889-4778-a548-db6b023d1dce",
        "cursor": {
          "ref": "c330cca3-075a-4f6e-b685-31b754f70272",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b86042da-c3a1-458d-a007-e07883bb65b2"
        },
        "item": {
          "id": "5d8b5f1a-c889-4778-a548-db6b023d1dce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a3ee4c30-cb8a-415b-bae0-60f4545835f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f87cac-ca1b-4523-a180-6ec8c43f1b24",
        "cursor": {
          "ref": "77e6d7ae-a5e7-4c6e-bd39-f2f60a9d38ca",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9f309aee-3522-4396-8aa2-ab6628049389"
        },
        "item": {
          "id": "92f87cac-ca1b-4523-a180-6ec8c43f1b24",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e1e484e8-9f92-428e-91bb-0a2a0a24fc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad72e749-9bb8-45ec-b6a3-0ef68eda3deb",
        "cursor": {
          "ref": "e282f532-9f96-4e8b-bc14-3e3e2166c47d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "88aea535-ec97-4987-9f57-803fb379e04e"
        },
        "item": {
          "id": "ad72e749-9bb8-45ec-b6a3-0ef68eda3deb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0a7d2116-b9db-4562-86f8-a11b91e1260b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e22b1d-6347-420f-ba9e-239db47a0100",
        "cursor": {
          "ref": "ec71dd79-4046-4a4e-ade6-f1ddc12a43d2",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0ab85d7e-800b-469f-ae5d-67ab750c5153"
        },
        "item": {
          "id": "25e22b1d-6347-420f-ba9e-239db47a0100",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "333352b4-6b98-4c5d-858e-4dd425df8324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b6f870-ae07-4e1e-b5b6-e332cf60cd90",
        "cursor": {
          "ref": "db7125f5-ca30-4287-8f5f-f34e1914e56b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "70cae648-c60e-4320-9372-784226768b29"
        },
        "item": {
          "id": "a4b6f870-ae07-4e1e-b5b6-e332cf60cd90",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b2ddacd7-bc67-49c9-acc0-a387f7bb0960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4226305-1322-4a0d-a2cd-3f9a06f0b88f",
        "cursor": {
          "ref": "829cf8f7-df68-4a6e-b3ef-969adf80a794",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "98ad0b2a-68d3-44ab-b29d-20928fd45d66"
        },
        "item": {
          "id": "f4226305-1322-4a0d-a2cd-3f9a06f0b88f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ae1b295f-e32e-49de-be59-09fe55e6479e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9401df-5de2-4251-b28a-80b692b35466",
        "cursor": {
          "ref": "6343d1a0-6037-41ba-815c-1fb507e1afaf",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "741cbba2-aca2-4d6e-ba8c-26d42d4609a5"
        },
        "item": {
          "id": "ef9401df-5de2-4251-b28a-80b692b35466",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ae1e9c30-00ce-45f2-bc6d-e0f3e5410818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980804d0-807f-46eb-8b5d-a1d908dfaa41",
        "cursor": {
          "ref": "313ce5ea-8258-434f-9a07-4fcd74956efe",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8d639458-d725-4f1e-af08-01d478dd660c"
        },
        "item": {
          "id": "980804d0-807f-46eb-8b5d-a1d908dfaa41",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b5ba3493-dd6e-4361-9942-9bffe4f1fe52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1f3621-4280-4efa-b57a-0d6e0bb6da9b",
        "cursor": {
          "ref": "8529257d-a059-449e-a037-265099e3b6a1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dacb1a66-ee27-4fbf-aaa5-0de17754ad7e"
        },
        "item": {
          "id": "6b1f3621-4280-4efa-b57a-0d6e0bb6da9b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9a4ef79e-f83a-40a4-9a66-b323506b151f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48869b84-694c-4a4a-b8b8-145a787ee90c",
        "cursor": {
          "ref": "08cdb482-7251-4a0d-b628-ffb6aaeb6bb6",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c052c5dd-360c-4ea0-b550-8bcb25050dc0"
        },
        "item": {
          "id": "48869b84-694c-4a4a-b8b8-145a787ee90c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e61b2810-8229-4dcc-971b-e81c59783bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71346624-5653-4bc6-9c2b-45f5b60f9344",
        "cursor": {
          "ref": "b37ad5ab-64a4-4234-bb93-2fc66d119573",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d52b18b0-5e5e-48b1-9c69-67798a6568cf"
        },
        "item": {
          "id": "71346624-5653-4bc6-9c2b-45f5b60f9344",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9fd42f12-8d3e-4a2c-b2a9-367ae57b29de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c80a40-db46-4bf9-9753-06ac11ffacab",
        "cursor": {
          "ref": "79727747-d009-47fa-a1e9-e09248732425",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0c9a13f7-1ef7-4740-9bc6-c0fa027ad75d"
        },
        "item": {
          "id": "65c80a40-db46-4bf9-9753-06ac11ffacab",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a8e0aba6-a407-4613-b272-bfd0e5d0bd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb0d36e-cb89-4b54-aec8-4c66939e2d6e",
        "cursor": {
          "ref": "7e5fe4f0-bdf7-4f57-b1f7-382a5fcab225",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "31a7a1e7-a9b5-49b8-916a-d26acf99cf62"
        },
        "item": {
          "id": "acb0d36e-cb89-4b54-aec8-4c66939e2d6e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7c4c3d62-3fdb-47e4-b515-33c778748277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774dc919-5728-40cb-aaf4-5a6378559d07",
        "cursor": {
          "ref": "2daa478b-90b1-4b85-8183-d4e6622422b2",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "44b62f80-a89a-4ae2-bec5-07869dd05293"
        },
        "item": {
          "id": "774dc919-5728-40cb-aaf4-5a6378559d07",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c2cc4c28-e238-4878-84f2-46e74326ffb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25113689-3639-480b-87ab-625f85bea8c0",
        "cursor": {
          "ref": "6a6899c8-a1cd-42f8-85de-0e30221bb96a",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e16810aa-e2f5-43a7-a3dc-acb995c31bd2"
        },
        "item": {
          "id": "25113689-3639-480b-87ab-625f85bea8c0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "68834bbc-91c8-4c49-87a9-46368196991b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059cb47e-d83a-4293-aeac-bab84bf0d79e",
        "cursor": {
          "ref": "d4fecd70-8fec-47ff-9578-5139ed6d052f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9563d570-91b7-4da5-afc1-f943bc123294"
        },
        "item": {
          "id": "059cb47e-d83a-4293-aeac-bab84bf0d79e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "159c9a62-01b9-4a41-9962-53d098693b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0296a566-cde4-404a-94ab-fcfadae83186",
        "cursor": {
          "ref": "95ca6aea-32e8-4f44-818d-2f7ce2f86ebb",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "64253843-a370-41b2-91cf-c6d068d40584"
        },
        "item": {
          "id": "0296a566-cde4-404a-94ab-fcfadae83186",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e62b2990-2f9d-4751-82ff-6dadbe6cac0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82e31d6-fe4f-4ef2-ada7-c1f79a04b60f",
        "cursor": {
          "ref": "9df37cff-328e-45dd-bf27-d98d05bfb767",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "718d0f20-f638-40c5-b7b6-4f3fcf32d881"
        },
        "item": {
          "id": "f82e31d6-fe4f-4ef2-ada7-c1f79a04b60f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "715162b8-f2de-40d9-8fbb-00a0541be9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed731163-86ef-4ae6-8d11-08bac26e13e1",
        "cursor": {
          "ref": "8135b066-4302-4d68-8d8a-a75597125c2c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "765e118f-d819-4c2c-88f1-c36528a42d50"
        },
        "item": {
          "id": "ed731163-86ef-4ae6-8d11-08bac26e13e1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3f6ed6ca-38bf-4b20-8678-02e2bbc33a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa1a253-155f-46bd-b949-18d93adc3000",
        "cursor": {
          "ref": "7fe18c2b-bcae-4417-b7b7-c300ade2ddae",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fc472160-4d0a-42f8-96a8-e217849be7a1"
        },
        "item": {
          "id": "9aa1a253-155f-46bd-b949-18d93adc3000",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a1df74e6-a2e7-4e4c-aa83-2acd6169ff9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15db3fd0-a4f8-491e-8b52-2b0cfbaf6cd7",
        "cursor": {
          "ref": "222d82e1-522f-4bae-89f2-1e1f47168009",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ac5d7536-9e76-4106-87da-2685e1893bae"
        },
        "item": {
          "id": "15db3fd0-a4f8-491e-8b52-2b0cfbaf6cd7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "febb8e10-16ce-4314-bae9-5bd98ed8c756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ddc3e7-481a-4fa4-8d9b-1a2819c443e5",
        "cursor": {
          "ref": "6df0e86a-37d6-4318-811a-381f88d2bee6",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6af8bed4-0950-452e-b6c9-01bf00c8c349"
        },
        "item": {
          "id": "05ddc3e7-481a-4fa4-8d9b-1a2819c443e5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "94622bb8-b4bb-4114-8954-5fbbe7112549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2748fc-b78e-481b-b048-264016ac4036",
        "cursor": {
          "ref": "d7f468cb-6cfa-436d-8c6b-660e210c7484",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "951cfc66-1f21-461d-9782-37e152e44a37"
        },
        "item": {
          "id": "1e2748fc-b78e-481b-b048-264016ac4036",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f689b76b-3987-49e1-8afa-be2c7e76a062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818e10a1-1439-4466-acf7-25208d1c8ac8",
        "cursor": {
          "ref": "7ba76766-d9f1-46c1-84ee-b924882c9aa7",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "28b8162b-b5a7-4678-9537-aa259258440c"
        },
        "item": {
          "id": "818e10a1-1439-4466-acf7-25208d1c8ac8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d71b744c-db42-4954-825c-3885f6d7f897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727cd651-96e4-4188-b09a-d3447b78194a",
        "cursor": {
          "ref": "c4ee2bac-95df-4565-8d6e-604fc69a97c7",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "148c9a3e-93ff-4a27-8f66-e84debd10dc1"
        },
        "item": {
          "id": "727cd651-96e4-4188-b09a-d3447b78194a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6ff9a842-cccf-49bc-a1fa-78f6cab06173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433352f7-d2e7-4b2b-b9ec-1bd614a5e1db",
        "cursor": {
          "ref": "80f4bfb1-7b0b-450b-a757-3ea1805c4193",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "544c1290-eb70-437a-ae08-9d3731b966c3"
        },
        "item": {
          "id": "433352f7-d2e7-4b2b-b9ec-1bd614a5e1db",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1c469c75-c744-4327-b6fb-3c3393975e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49419e5c-f15b-412b-8859-3ddf6be876aa",
        "cursor": {
          "ref": "f721246c-f573-4006-b4c2-7f0296111ce1",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "63bfcc6d-2fbe-4f00-b724-751ea25352b7"
        },
        "item": {
          "id": "49419e5c-f15b-412b-8859-3ddf6be876aa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c8f3ff41-edb9-4594-ac95-26801acf612c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f0e432-217e-4216-b710-c9fd7a45e6b8",
        "cursor": {
          "ref": "f3157820-bf9e-489f-bd37-e18a6ebaa1ac",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "31d4c494-8b7c-45dd-a02f-39739fb17cd5"
        },
        "item": {
          "id": "e6f0e432-217e-4216-b710-c9fd7a45e6b8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8c7927e6-942d-45a1-bb76-3cfc7f131e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f407f092-bf36-48d0-a54c-25cdc9744ec7",
        "cursor": {
          "ref": "c2b470a0-3b3f-42a7-b8ca-bbf6a2fa1a3b",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "abd7c0e1-080b-4d70-9bf8-ebbcdf620a55"
        },
        "item": {
          "id": "f407f092-bf36-48d0-a54c-25cdc9744ec7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "43e0a8aa-c69c-40ed-b491-d84292cdcd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97235ef5-2def-4d04-9833-d0fe23acf633",
        "cursor": {
          "ref": "b3ec18cf-e357-4c97-b71e-e8a8c7c7aaec",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "09015f45-396a-44ce-a3a4-cb191b014f04"
        },
        "item": {
          "id": "97235ef5-2def-4d04-9833-d0fe23acf633",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f8cb8d98-fb6e-4de2-bc6c-06019cf44475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d593e9-addf-49b2-b845-0ad3af503c66",
        "cursor": {
          "ref": "d0ffde8e-50a6-4478-9d55-db0b96c2180e",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7bab3b6c-5668-4c88-be59-d90bd480637f"
        },
        "item": {
          "id": "d6d593e9-addf-49b2-b845-0ad3af503c66",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a5a05d04-2a1d-4214-bd17-2bd22aa9789b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0cfae4-9b3b-4ea0-9b0b-acd7bc5a747b",
        "cursor": {
          "ref": "369a3bf0-7572-4d73-8338-f91816a39dbb",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3d456794-58d2-418f-9e9a-53714a0ff4db"
        },
        "item": {
          "id": "0f0cfae4-9b3b-4ea0-9b0b-acd7bc5a747b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4fbdf2e6-7b6e-4ad5-8a5a-95b59947c954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d3a6c1-f65e-4d08-a731-0ef8bfc3a85f",
        "cursor": {
          "ref": "b40acab2-9e1d-477b-b2a9-96a0a9431e20",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "20d4a48b-866b-4c81-8290-8eaf55afe49a"
        },
        "item": {
          "id": "d5d3a6c1-f65e-4d08-a731-0ef8bfc3a85f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9b3a8804-d899-4afa-a6e2-726e57f2e9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeeca3e7-572a-4db7-a10e-20775c16ab6a",
        "cursor": {
          "ref": "d6f27e15-80f8-4578-b4d6-a4e755ba23c3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b0f695f9-b2b5-4f33-84a4-7e5984f5046d"
        },
        "item": {
          "id": "eeeca3e7-572a-4db7-a10e-20775c16ab6a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ba86c913-5cfa-4d5e-b943-a7f08971f696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d82a2d-98ce-4bf2-a401-f125bfc6b504",
        "cursor": {
          "ref": "00efb8d1-bb76-4f20-9628-5853875be3be",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e9c143e8-d53a-487e-ad3e-d3673f4fce59"
        },
        "item": {
          "id": "c0d82a2d-98ce-4bf2-a401-f125bfc6b504",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0f7b3b4a-3677-410d-af7a-23ad103b2b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227f2689-68ae-48d7-8805-b7f57e968935",
        "cursor": {
          "ref": "a750a78b-cfd2-47f6-959f-12411e1f9e34",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "43c59c72-c863-47a9-ae02-3e48a05c1745"
        },
        "item": {
          "id": "227f2689-68ae-48d7-8805-b7f57e968935",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "14cf1d36-bc75-49a6-89e6-530d4103a0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3fb7b9-e717-40b4-9953-4c28181476bc",
        "cursor": {
          "ref": "71b35096-176a-4e68-b89d-313e3b90bda3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "439b932f-ed4c-4e11-8a04-dbf2a08b83ef"
        },
        "item": {
          "id": "4e3fb7b9-e717-40b4-9953-4c28181476bc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d6aaed8d-7734-4602-9c84-5319d37f2fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7594bb3-5fa8-48f4-85ce-11159293252d",
        "cursor": {
          "ref": "a839645e-5ed8-424e-94e4-b5ceff492a01",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "78ac57c8-2c95-4cda-8ec3-f7b18e26e964"
        },
        "item": {
          "id": "e7594bb3-5fa8-48f4-85ce-11159293252d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "90dc3ec1-6570-45d9-b2f6-31a6541e1a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e082b67-faee-4bab-8ce3-46f2213eb27c",
        "cursor": {
          "ref": "e8a3b9fa-4398-4151-accf-9428050e62e2",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "13af14f6-6bb3-442c-80ba-1a835e5189bb"
        },
        "item": {
          "id": "2e082b67-faee-4bab-8ce3-46f2213eb27c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "98b28f20-1ad3-4f40-b140-84d761386853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a76df7-19a8-495b-b20c-ef42e8dcb66b",
        "cursor": {
          "ref": "85c6a439-0bab-4b3a-8a13-c5e169239f5f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cef22fcb-c0cd-4251-99ac-71a7d2bd9295"
        },
        "item": {
          "id": "41a76df7-19a8-495b-b20c-ef42e8dcb66b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d95eae49-2f86-40a8-aca2-43be7037005e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e881a2-e333-4a5f-b016-7d3f4e87d9ed",
        "cursor": {
          "ref": "7a61dd26-841d-4137-88ed-41c6e5fa8720",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9fd303d1-db56-4762-b24b-d8f6bbbb44ea"
        },
        "item": {
          "id": "b6e881a2-e333-4a5f-b016-7d3f4e87d9ed",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b389c8bb-d02e-44f6-8191-99dcdab53610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb6a92e-6d40-4a16-b3dd-ed6e6f1ace04",
        "cursor": {
          "ref": "68bb7068-508e-45af-a7bf-235bb6c62aa3",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1d30ba7f-b32b-414b-be5d-d143eb339ee6"
        },
        "item": {
          "id": "5bb6a92e-6d40-4a16-b3dd-ed6e6f1ace04",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ed0e1ac0-0996-46e8-8046-b72baee55f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7be4a19-7d86-4a09-85a8-182cc3b9b8d3",
        "cursor": {
          "ref": "fde92925-22dc-4560-8114-dac48217fce1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "28753e6f-9d15-4f64-88b7-1f1ba7c5a828"
        },
        "item": {
          "id": "f7be4a19-7d86-4a09-85a8-182cc3b9b8d3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2d3ea5d8-8e84-4173-b83b-e9bd0633415c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e27caa-ae80-4c06-81ec-7fc8cf224cca",
        "cursor": {
          "ref": "3e2387c9-72d1-4d40-b3e4-3a94a8fe3f1c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a7199ce5-3eda-4a35-9a22-df852e9f5b98"
        },
        "item": {
          "id": "62e27caa-ae80-4c06-81ec-7fc8cf224cca",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7238ec46-18e0-4d62-b140-7f97950649ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327bbbd9-aed6-4001-8a26-9135994030ac",
        "cursor": {
          "ref": "15351010-cbed-43f6-9f0c-7699b767e65a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "dc104833-74a7-4852-823a-e0e819c19073"
        },
        "item": {
          "id": "327bbbd9-aed6-4001-8a26-9135994030ac",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d6d6ab96-0398-4af0-a5a7-2982ef80cd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e349cd1b-9bb1-497e-8b1e-b3c6a1630e7a",
        "cursor": {
          "ref": "f65610c0-10cf-4f5d-9d2a-ba337e3c0f49",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ef2e1cf2-f81d-4852-9fb1-e649ff7179fd"
        },
        "item": {
          "id": "e349cd1b-9bb1-497e-8b1e-b3c6a1630e7a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "02c0e6ae-f524-47e2-8818-513e35ac6c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c76e9f-7283-41c1-ac9e-f2c04d3a1fac",
        "cursor": {
          "ref": "e097eba7-88f4-446e-b24a-00c4945e3b4e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0af77d3f-56b5-4c3d-afa2-c0f7e9df1405"
        },
        "item": {
          "id": "a1c76e9f-7283-41c1-ac9e-f2c04d3a1fac",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2400f093-1e03-463d-b0bc-b7ce24cad53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c0c7e3-2e31-4f5c-be98-b4d347e7c242",
        "cursor": {
          "ref": "d93c9e3d-b00a-4a56-9912-937f24b26274",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6cab33d2-71b2-4c70-888a-99c24b47f339"
        },
        "item": {
          "id": "d5c0c7e3-2e31-4f5c-be98-b4d347e7c242",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "30596096-865f-42bf-b0e0-6318ff77acb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbe7bcb-89c4-42d9-90f0-3143bf76bb97",
        "cursor": {
          "ref": "8a423e05-5e2f-4519-bb14-d7b8c7b9a6e3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "06e9d7ec-58da-443b-a8a7-2b39b526715d"
        },
        "item": {
          "id": "7dbe7bcb-89c4-42d9-90f0-3143bf76bb97",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d1fa180c-e8e4-417b-a056-e8de29871747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cede08a-275f-494e-9306-deffdebe85ae",
        "cursor": {
          "ref": "1cebaffa-c4c0-4a91-9903-5e0ee3030dda",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7147638f-d32b-46d9-af84-eb39576d1c07"
        },
        "item": {
          "id": "9cede08a-275f-494e-9306-deffdebe85ae",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "53ca472a-40a0-433a-9439-74312351ec85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a0c0f3-3af7-4173-91a9-e92fa4052c43",
        "cursor": {
          "ref": "984eb102-334b-4fd3-bc5e-8cc61e900151",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "77d37247-09ca-4690-b0b8-f177a6565a11"
        },
        "item": {
          "id": "93a0c0f3-3af7-4173-91a9-e92fa4052c43",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "107979d8-4015-44f2-b71c-cc1197955921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eb79ae-f195-4e1e-8a9a-da720ce8975a",
        "cursor": {
          "ref": "b24c24a6-9052-4a4c-9af6-4c2e4fb2b846",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5c6dd9e8-a202-4de1-8076-ee991d1c304a"
        },
        "item": {
          "id": "18eb79ae-f195-4e1e-8a9a-da720ce8975a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9a17f7c0-f68c-4b0c-a2f6-d381d652fe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cae557-792b-404e-b500-76d404e80f29",
        "cursor": {
          "ref": "248e40d8-8b52-4a0d-8c21-3b0ae777e502",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "06024909-834c-4e5f-a661-bf39bf64b254"
        },
        "item": {
          "id": "78cae557-792b-404e-b500-76d404e80f29",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1ab07f91-f40b-4802-822b-ff41a0ae1744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c4d7cc-dce6-4ce6-95fb-ebc658869bdb",
        "cursor": {
          "ref": "9687c885-099b-4283-8a3d-4c8fc3f2105f",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "17b81b25-9c0d-4102-bc8f-d50b082352f0"
        },
        "item": {
          "id": "b2c4d7cc-dce6-4ce6-95fb-ebc658869bdb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "827eb1af-752c-4bea-9089-cd60fddfd464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c695f15a-6079-4c26-ac70-d534810f6996",
        "cursor": {
          "ref": "e088a748-a907-47f2-97fe-e794e971ab22",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1d90c844-cc68-4c9a-b235-93e0eea2e204"
        },
        "item": {
          "id": "c695f15a-6079-4c26-ac70-d534810f6996",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "255271a7-cf7d-45e3-a9b0-952dc7b68584",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3100adec-886f-4d07-96a3-07314c15f3c3",
        "cursor": {
          "ref": "f5d551be-e46c-46ae-a444-49ee40ae296d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fe655d27-9fc2-4e9b-b0c4-e93656e3ef39"
        },
        "item": {
          "id": "3100adec-886f-4d07-96a3-07314c15f3c3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "58c564b1-dc17-47fe-9d71-ac35861c7720",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "34852b17-57c4-4892-9d28-8fe9be4b6b2c",
        "cursor": {
          "ref": "7ef26eb1-d3e0-4510-8dc5-ae91c4d80ca3",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1c63200a-373e-4817-b534-a221f489c352"
        },
        "item": {
          "id": "34852b17-57c4-4892-9d28-8fe9be4b6b2c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4c7eb9e6-29a0-487e-b4d7-3ae5df293df8",
          "status": "OK",
          "code": 200,
          "responseTime": 3244,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0240ba4b-471d-4072-8c3a-076a695ac97f",
        "cursor": {
          "ref": "fad24573-88e0-4f6f-9a95-cb9d6060fa9e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8bcf70e1-054b-4137-986f-6b35cb6c0a50"
        },
        "item": {
          "id": "0240ba4b-471d-4072-8c3a-076a695ac97f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c9b9139f-eb2c-4bba-bae2-da81f2cfea5a",
          "status": "OK",
          "code": 200,
          "responseTime": 2737,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1552fb66-4337-4084-b668-d05fb60bb054",
        "cursor": {
          "ref": "5f11ffb9-3540-4d21-a645-f82ec239eaea",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ed1fea34-8abe-465b-9b45-e086c4e99354"
        },
        "item": {
          "id": "1552fb66-4337-4084-b668-d05fb60bb054",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec0ed15e-03cf-4f80-844a-e73046e1f9ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1552fb66-4337-4084-b668-d05fb60bb054",
        "cursor": {
          "ref": "5f11ffb9-3540-4d21-a645-f82ec239eaea",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ed1fea34-8abe-465b-9b45-e086c4e99354"
        },
        "item": {
          "id": "1552fb66-4337-4084-b668-d05fb60bb054",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec0ed15e-03cf-4f80-844a-e73046e1f9ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcdb00d-1b04-48c0-9a22-27981554f4be",
        "cursor": {
          "ref": "2f9eafd7-b36c-4cb9-9f3f-a661320dddb1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c262ba5b-d896-483d-908b-42e7381c13e8"
        },
        "item": {
          "id": "bdcdb00d-1b04-48c0-9a22-27981554f4be",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7dfa06dc-ba1b-433a-aeba-1008eefea2b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17af35b2-f97c-48ba-8525-2ba19f67244f",
        "cursor": {
          "ref": "b7f66a1c-13d6-4706-b3d1-730caec18be9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "73dc181c-21c8-45e8-b5cd-c3f3e159eac9"
        },
        "item": {
          "id": "17af35b2-f97c-48ba-8525-2ba19f67244f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "98630f02-1358-4325-89c3-4ec82dca9fd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}