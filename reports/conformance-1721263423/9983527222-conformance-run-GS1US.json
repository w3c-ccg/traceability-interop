{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "37a44313-6f39-4cbc-9d68-0e7ba84a39fc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2eefb51f-5d65-4a0a-be54-ae30e7805d63",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "279e18ce-e2d0-4002-9c24-49ab45d8fca1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31125849-75f1-46c0-9b9d-63939ca8d8d7"
                }
              }
            ]
          },
          {
            "id": "ce9c888e-a71b-459b-920f-0e2b7af58409",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28147e05-711f-47ca-a80d-b166ada4b6f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6e1e4841-46de-41fb-a292-0e01958688cf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e270207d-718c-4f16-8df5-fe9ced5f3651",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a4c661af-5388-4697-86d0-bb0fabb2264e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b37427b-5576-4bcd-ac6e-f161212e6af3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81e18d5f-37f8-4394-9c0a-d8053d2f0d2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5861303b-4970-4298-ae07-93dec922b361"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a02c0e9-eddb-43e6-a348-701f31b4d8bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb059f20-61c4-4216-bd41-0b948bf59465"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cdb14220-f726-49eb-b4f6-38b71d42db70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1bc08b2-b997-43b4-86f4-cd14d6c1feff"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3969b925-54ce-471b-91fe-cc33f22eb882",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d67ec444-5c12-43e1-82c6-17e74c6f2dd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08757c6d-2ca7-464b-accc-977b17274f70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "047cf3c6-16c3-4f18-8965-3d083543913a"
            }
          }
        ]
      },
      {
        "id": "920e32b7-da26-485c-bb2b-60545f1539b9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "de225b5f-c7a2-4c52-ac34-7089fa0968d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcdd6b80-5ee0-4179-ab3c-4b6aaee4d063",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ecb33cf2-8bb5-4c08-8157-169383c512d4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38938c5f-655f-4d61-af0b-f8d4f0283bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d9d54b1-f1fb-4798-9ccb-4a612d47853f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1582a1-4a57-4777-a534-7de9df1716d2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfaeecc-e55b-4460-bd37-331d9d5775ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43f39c60-4523-430c-942c-fb2c9831b29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcab3de-7cf3-4010-ba54-a6c9d5767011",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d0fb24-4126-43bc-84df-dba118afd61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d5b33df-67d2-471b-904f-f9bd4485bd0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "216f5ab3-5e31-48a0-83bd-04212d6953e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92d3c02a-2b70-45c5-ab27-dcb99d796813",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f926f46-4b85-44fc-a013-7fd6fd9c53a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b68c897-629c-4df4-8590-1fc3b2ba6413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b3565b-4a76-4473-a1bb-e94bd150ad47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8ea204-7fc4-48ec-85f4-6a1214c1ee10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "08c10040-d7f7-41b1-a051-0dd94428a976",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06a2bd97-b636-42f8-9df7-001aae2d9861",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb7e9bd5-555a-46ae-a41b-f04afa68922f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "749424d0-0236-4e13-b95e-db4550722c66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "020e5f04-4b4a-4971-b07e-f805ad5288b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4d7ddcca-43a9-4286-9175-993893b8a884"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b63ed6c-d616-43c9-9e4a-01602492eb99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c4c63e1-7f82-483d-ac98-27774a9341e5"
            }
          }
        ]
      },
      {
        "id": "4e509073-37b1-4820-b998-0659666fe3d3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a404ff12-db20-471b-82d2-07c304c664ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d42f5ec-6c88-44a0-b12a-32eddd203de0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "972b419d-c544-4c0b-949e-b393f04532f1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b32c4fd-e217-4614-8c25-2453ab506668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340f18b4-455e-45b1-8b42-59c07487cb4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874940d1-b103-4949-87b4-b6cfad5e6bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bea93efd-0333-43b2-b29f-f92157173ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cc5e87-de4a-4f99-a082-ae52f0178967",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29802d07-d265-420e-85e5-272f53c7c632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c402c0c6-ceba-4052-a2f0-c6be0d26f455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406ec530-c8d9-4a72-b3c2-fed7619baa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4096526-66cd-4817-8632-803cdac42fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7670df3e-8698-4a34-a2c9-9e7e5c583cfa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f3e228-df29-4a52-83bc-d90a9fc88b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6763fe-4315-4075-86d3-b6c7a7e91c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33495dcb-14ed-4c0d-9c2c-0a2f9938b3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ecd090d-fad8-4303-9b29-fc62def5ad4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109d259d-b9dd-4210-9aff-1d4c3ce2bb45",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff57717-21b7-425c-8e2d-586503adf674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd58794-ef6d-4634-892f-0f0745adffc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9e49b4-ed64-4ab0-819f-85e54aa89015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd651520-f502-4ff3-ad87-91191db72b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550f2c24-2caa-4750-8c8c-0fdffd5bcf47",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb2e685-4236-4f9e-944f-93cefe3382e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ed663e-ff34-42e0-b2b8-e72a28291449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a98940f-c1b0-4213-9a4a-52ac786d4f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68395541-edb4-4340-8187-91a32aba166c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9726ff-a908-48ea-bc24-10ed7d77cb72",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8cce10-8e7d-4e16-a770-1a4de0ffe50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66888b2c-b582-471a-b9c3-135cdebdf157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c339385-a7b0-4f25-9985-8ab2794ac413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7f3b555-b7f4-49ba-956f-903e97b8602c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa474b20-e903-4453-a7d4-2de36a88c88a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c161ea8f-e5a6-43d8-b6a8-c064406438c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236e7c34-e0d9-4dd4-b107-3f6580d3cea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d26de58-f12e-43df-9f49-87d6a7cf4abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "504e06ce-008e-452f-963c-6e1e01a2ef45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ef5034-bdb8-4878-854b-9877c3458f9a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a1c3f5-d86b-4db4-a6f2-a851c6bbba98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b71e9c-bffe-41ac-a504-4fa115476a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943938ed-3e51-4d85-92b9-4fefaf0f3148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79ec099f-58ff-4c80-a69f-4c94342cb524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a28aac-0922-4b88-806d-dcfe04e685ce",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329e19a5-40c3-4116-a7c7-e404581b5419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555ce239-0cb6-4e8c-89b3-4544341db005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3afcc66-6874-4dbc-afa1-e6b3e166d87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1aed2d4-1da4-42e1-9324-71e86080f03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23650dbb-81df-4b65-a3b1-c59fba4c1236",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41aa368b-e263-4a7c-9506-4cf814ad4767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0563a9-4bea-482a-a8ac-dc5ee48934a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66dd66e-a111-4eb3-bc50-1ebacfae2638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1aa398e-dbaf-48ba-918f-0d672405d8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e67b49-4993-475e-8b63-756f9a9bc6ed",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af105d79-40d9-44f0-8d3a-2eb57b4f24cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730e79b2-9019-41bd-8432-49f1de86d877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156d9e23-ece0-4b6e-b66c-72fd0783d7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e374a234-4b7a-4d1b-8ad5-3823daeaf116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8d9466-2c9a-441e-bdd4-3016be05cb02",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae49923a-0f3d-424d-974c-83f6bcb4ef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c846f517-4c1d-4f76-8693-edbf41133c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c04039-8e8e-436d-8909-431496fadcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31cb472d-0079-4172-a2a2-ede8de8f1f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f04815-eda8-46dd-a606-45aafea65d50",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4579f7-e23a-458b-8bb7-3a064661af1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcddab81-bd64-4f7e-a71d-3650c788a3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b3433e-1c9a-415b-b721-5ad7262fe6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc097752-b6a1-404d-8217-7365c4f67a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8943bcbc-eb7a-4afa-b7c6-9bee7ae9ac50",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a528ba-3e6d-4878-945e-aa99ca45a72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef743d29-6f1b-410a-aed9-29e1561bfa4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97883a5-92b8-4818-9f4f-0d01333a09c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a52bc77-5cc1-420c-8ea9-6c9ee71e0664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d78dcb-5ccb-436c-ba22-eefca85c5ada",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b4bcde-e739-43ea-ba77-949b4a9ac157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c567b044-2ece-4ae2-aa44-ba1a1c883fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d60452-2577-4783-b3c0-59039fdac3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71b06a7b-6a5d-4690-a6ef-7daff965ffae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e11732-3727-4452-b924-b60dc9dc40a0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e9c17f-88d8-4e0e-9ce0-468e5d4256f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023d7c7f-ef71-4d2a-a3d4-2f1f74144400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f773859-2c3a-4064-8c1a-8bf9558dbb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89d077c4-c12c-4a36-bbc5-5cc9012dd0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2332441-3cc4-42b2-83e0-5fe81e80b314",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a54bec-3477-4659-8347-8079031468b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f3b89a-3c54-4d25-9a95-9c4de3ca52db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9867b4e4-59f0-45cd-9166-970d030de588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "041a192b-ed4d-469e-9e22-4e618a64dec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91eb0ecd-c50e-4c68-9728-a25521bd571d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12364bd1-15aa-49d5-8638-f7c8704ed9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d0bdde-6006-4d7d-b467-7ab66ed38d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899023da-065e-46f6-bc29-2c5c1116f67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcc969a-0928-4b41-bcd2-679186ad7189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224aae83-c80b-4167-a4ca-3676aae330eb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d95f91-9724-471e-9163-c61d99c05ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6704265-6600-4c88-842c-71c74019f660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f37020-42e7-4911-a729-daf830b805c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7398f11-9f6d-4c45-a44d-d7c2ea49cae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0e916a-45d7-4337-ab49-2e533620c8ef",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222df0e7-2290-4929-8d6b-56b7b501ccd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6cba2f-8151-40f3-99b9-c42bfef957cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca081b05-64b4-478c-b094-18229a4cb097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fabedfa-eb5c-4df7-b60b-fa6df3427ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19b910b-fb14-425f-909f-af6182d87167",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7199e38-6dee-4e81-b5f1-34b7eb551daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9abf4df-a056-40a0-b00d-9eecd4134cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4861186b-e7cf-45d5-a2e9-cf096f63f321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "335859d0-502a-4414-bf69-91ef018af029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5033ec8f-3919-4d94-9ff3-29d8e1d046d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b01e2e-720a-41c1-b56f-52748cdb789f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adca8166-8e11-4308-8061-2cfaa80a993c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75efddeb-37ab-4b6e-82c0-82eea06c2432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33de947c-b6c8-4c68-9e21-8ffbc001ea39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36b6b28-71cd-4761-bd7b-287261eeae21",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d5ca81-0cbd-45e9-9a92-21df23cc7bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d47a88-a6d1-4f5a-8c92-37eea693070f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5a497a-58ff-4da3-b02d-5f0ffb592b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07fa25dc-71af-4885-ba03-7b8fbb362a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3705378b-8632-4726-99ac-98a1aa1d95be",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe49933b-f0ab-471c-9373-36ee9caff6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdfabce-16d6-44a1-ae7d-aa77b07f22de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df4ffc6-d48b-4695-902b-7dcacf17461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c948ad2b-8021-4fea-9b03-c5c0fc34a818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389453bc-3342-4ff0-b9f9-4b4e0ae259ea",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2f5cd8-a09c-4c6c-941a-b3a31d5f825a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5626f2c-c609-47c5-abb8-abd091b9f26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058738cd-a371-4d61-811b-59f2d0546c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8c2624-b191-4e0f-9a0a-1eb51fc014f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e9234e-76f4-490e-a05e-02dad143341c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2785b4d-6aa7-411c-ab08-6a832ca8e96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11db7f4-7bfe-4353-aadd-066c2dabc7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99bf433-ea72-402b-b6f1-e27ece0e864f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6838c7f5-5f13-4f5f-bc7e-b0fd3edd3d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c364bc2-0bbb-4f46-b63e-163e83f76568",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b826f8b0-53a6-4515-9129-457a5a70ee56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4cc5a9-5a49-4b09-b4c6-35a3c8cd6a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47b0492-8048-48ff-a9ed-20dbd57bfdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26bdb13b-3b6c-4952-96e8-719819530f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dee7c4e-492a-45c9-aaea-6424b4b68b98",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b680e6-6d87-4a78-9392-e9a9264cb3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb149972-7649-477a-9a28-28c3f964020d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c47c355-50bd-4918-8f9f-8deb26cabe7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdffcbea-b9cd-4e2f-9e0e-64893bc591e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097b144c-a1c1-4ff4-b1a2-c834c9cb9572",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2d3e0f-c603-4733-8bcc-1d938fe09d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34e95f6-641d-497b-a80d-093f4b0bd8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8ab76f-51a3-49ff-9fff-e7f591b23ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24d7bec1-d709-416b-845c-c12e112ce95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9156f4-dea8-4c67-ac0c-2f01a3464567",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a4a8c1-0309-4c3b-acca-a48c6a5bd1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afe1ec9-71d6-49a8-83c2-5b34bf0de35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26ed0fb-5146-4951-a517-dfff089fc0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ae7f03-2b8f-4dc0-b3ae-0f03af2b588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d7ca49-806f-412a-94b5-9cbd78676831",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b07b13f-d7d7-4f76-99bb-35bae8f728f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d6f254-36bf-47da-b6c1-b35ca96bb18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab521100-58fe-4d82-ba44-cee1a72709ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31155910-9eb0-4b80-b339-7c3fd29535ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952d6919-aa55-4f5d-8bbb-a67ddd322bd5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7739c8-15e2-49c2-8a8e-fdbbbb93e6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b267d14-9149-4a28-aa62-22380b649212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3050185-3552-46c4-aa2a-3fee7bf94baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12211c24-7acc-4f78-96da-fe171bd1af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc92c980-7a3a-446a-b3dc-9c3951ec20ea",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1435a5-3359-4377-a6a6-1d1f315c5381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a28dc38-2b31-4b16-9094-20e7ea96b4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66d017e-4db1-4883-a746-56b3c7875a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7706915c-25a8-4eea-85bc-2dd6b023b81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699dcf58-ccfd-4042-b64b-8a695b63d30e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef0bf8c-0f8c-4a1b-884d-bb57ae10ce7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5462f752-263c-4bff-8f58-72015ed0a03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592532d2-ddb2-4c6e-95d8-90ad88608b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ae6944-3577-4540-8832-2784432b955f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a35cde2-8611-4441-a154-1961c9f0a395",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f2f280-2349-4084-90cf-4c8e2841dc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4967ce-834b-4147-b98f-a57076f3d55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7cd8fb-748c-49d5-84aa-effed3e41005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "661acd4f-5e5c-4300-bf29-31a0e076a536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b357e586-b2c2-4597-8a47-620fdaf0d137",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146dfd5b-31ea-47b9-9111-cd78a555a87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48ab9474-0ccc-4835-9f64-715fd870410b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3037fa-c25d-4051-abdc-a4b59dfb5c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa5246a-a460-4fc0-b9e5-b2032bd69349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcf1e67-0290-4aa9-a1a9-7de0c28f92cd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba17a6d-836b-4eb9-9c99-be5cd5523ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbc1967-b962-4427-98fd-c59b7aa2e90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99720ee-966c-4ca5-881b-e9f235d42b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44a62b2e-d74b-48b5-b2e5-a615f2259c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af602154-fd17-4da3-bab7-81c2f1f11767",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47a6b30-b7bf-491f-ac01-170301d739cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164e388e-94df-4504-9272-f17f79fb62bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad96e33f-b763-43da-8b48-05c8e5af1e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a41f7446-bed9-412d-becf-b2e7268fc130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b740912-b722-46b1-88a8-4464e35451a4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5084d8-2fa0-4941-baa1-5513bf4b44a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb60332-0364-42da-b074-4167c756d593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7cd879-5f0b-4146-ba35-8fb405c90802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99857570-9c7e-4355-92d6-388f44ba83cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21970fd7-62f8-4dec-a20b-cf3d4f06f484",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90141fa9-fd80-4b03-bfb3-aa3a15c06e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebb30b8-7201-4c48-87e9-5802ffc8a0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cb8581-6cfa-4b6c-a277-d7866e9bd3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab5fd05-7bb8-46a1-bf80-bdff046a3fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcc7d62-4a65-4e97-b8dc-6bf6981261c5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e2bc91-7128-4dbe-ae9d-521fcac05600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce17e753-ad23-4c52-9e4c-e77bc51da9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35eaced-ad26-420a-a8ca-5e16935fab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de3dcea0-875e-4b0b-aabf-c6cf5b539164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802bdf30-0472-4ea5-a256-cd2f1ce9bb2d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9346b66e-a529-4f19-bedb-1ed7330e330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1158b8a7-5699-483a-a488-3fcc20c18fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e433cb-790d-459d-b2c1-b55713d559e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b9cc1807-3683-4426-8ea5-bbb9ccc61875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a92417-f3f3-4493-9f09-da9fe3922f19",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e7cb40-bcd3-476d-a3c4-b19fb283e33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ebd893-3513-4c03-95bc-c0a30557dcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04678c9-bd8c-4941-b5df-8dbaf4ec4d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a72c74-7ff2-4ca4-b3e3-a35f953bced4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d01848f-a71b-4778-95db-07095b0ddfb4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebabb0d3-1a69-4246-9cdf-d695ad4b0eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c224cebb-efc9-4551-922d-f6b21bff3310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c51cb80-cfa1-4831-8d5e-1efcf1a61770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e377740f-a063-43d1-9182-adeba211e3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf8bad6-e361-4669-8b77-d07dd3eb9d81",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2105abbc-98e2-4bc6-adb1-f3cc68ed395a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4529348-ea1d-4cad-a3b8-7f80e3e4ef3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d9d4cf-ee8a-4989-9bb6-b83a1ed58e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "262928c1-d56c-4c1b-b448-8739b501b086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dfc31b-5fd8-4144-9c70-ad71848c902f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef0a565-a77c-44bc-be22-6bfa1b96c4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a973fe3a-fab3-45a8-97ae-9e478cb9daee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4212aac6-024e-43c5-9725-9c7701bbc423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3a8cf6-a0b3-4b2e-a20b-506b1c4654ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd91bf4c-ee03-4e68-93e2-3b22303036d1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252a1ee5-226c-47ff-9ac4-928990b549e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c4a569-5e52-4b71-a262-0dc3f3c02ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ff300a-44ef-4a72-a5cd-fd4ee0c909cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d07e249-3f61-44d4-8ecd-888777e92410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5cbb2e-095e-4a0d-812d-1886d066f2fb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dadf37-fa7f-4329-944f-b5d533fb033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4345de-795a-4add-90ca-58c55a82971a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47364b04-55f9-4b38-911e-441be86a444c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ac33e8-dcf3-4f5a-bd75-01e5c14a486a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b82db3-d4c4-43bb-8429-14bc3b7ac3d2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc936f3b-c64d-4d65-ace5-a33a87f6d5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b2b441-2c60-4300-ab50-2b5c3eb97224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33568c50-59bb-4c4e-9a06-1c981d22aa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb2208b-1bf5-4711-bd71-fc032ec21a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728c7559-bd2d-4a13-b9ba-557f7d2f737c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8252a062-b450-41af-9916-980d43d68a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805847d3-9d34-4850-a48d-bf749b6f8fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88529cf7-78c5-4b93-9c7c-ff570ba6a3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13682481-9055-4489-8e53-5df713752912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8184ae4-06a6-4278-a80a-3ab2ef6c2167",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b17443-1f54-44e7-9a74-31e4190f3365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bdb481-2660-4da2-918c-bae80e4265d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976cb1fd-544f-4e4e-8004-8bffe02cef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6599ce69-b298-4568-a273-e19c96133f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bd9afb-26c6-444f-a7fb-f97d140b2f44",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e602e778-00cd-4223-8d9f-f7f5c2ce4a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20facf1c-fced-4ad6-b5ae-671f43b75654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48b0fcf-f7a4-444b-8cf1-f1b19196a3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d683755-7fa0-4a8e-9108-545feeb8ef8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47772c4e-d57b-4d9d-9722-da49dfd0308d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d201f53-36f0-42f0-995b-4274cac2bfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc89104f-81d0-4ba6-8f00-a3b86613fbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581ad365-834d-4877-9191-807534429fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4758b199-b2d2-4ed4-95ae-467934fbd2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcbeda7-3478-4088-b518-00b77fac309c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7da49fe-e9c0-48ea-a187-a7402e3cf0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0eb5fc3-2d22-4937-b6ca-5f9b3c5df3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78515029-b216-48f1-92af-fca11297fb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e82e08b-0bf4-4b81-8b5f-a99763292a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25250623-fdab-4b7d-99c4-42de04b650d2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcd88e6-e901-4ccc-a175-70a216f9cdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cb9128-0cfa-4433-964d-8a900d4f074a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d847e81-eb5f-4c20-b292-c1fe25ff4ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3308abfa-9ff8-47fd-b726-654346776001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8b6cfc-d52e-4018-8de0-9f9783cdb506",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023abfd6-783c-4120-be2a-cf8f24df0429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1f68eb-e371-41dd-ae34-6fdbc70e34f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fa9e34-91a2-46e2-a25f-ae4f87dfe5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5a43cf-3694-4ed5-a12e-49f8eeac0cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be013465-cab9-42c9-b463-d251ef1800e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d21b41e-cffe-45c1-b7ec-7c2f3d72f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628f208b-bf99-463b-9474-4504454efe68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b74b984-86bd-421d-ba3d-df7a8514db93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51025f5-c75d-4475-927e-4bfab310301d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe79b8b-f0e7-4838-ac20-8fda3d97d91e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750430b0-0648-4762-bb7c-77e3df79a969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a45d662-5574-4f5c-a259-839a87c500b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae971348-d6aa-4071-b4e3-9b94961170db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "360acb4d-0e82-4a3f-8557-2d742b7b9804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8f2223-6976-4f2c-977b-3f48261c0360",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f17fff8-82f4-4249-8814-4bb8aed81e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a64a6b4-f32f-4b31-9404-bba85ae89ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cba5f2-5bf3-4eb4-8458-864caa4235dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffda920-76b7-416b-bb98-8765633caef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669f7eb7-6bd9-407a-89f0-5e96471df2be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26db8671-b839-45b5-ab63-8da81e82d114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b54ff23-da8e-46c8-ac0e-fb84de8e2089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac09386f-d796-4a9a-b00c-25f5a265ef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f49ab616-1721-4bb7-a29e-ffc6943c3a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fe9522-0dd2-47b9-b1bd-93506b4496d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e56602-2e52-4852-96b7-bf3b95c25112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16aebdea-62c6-4a54-b39f-e434702ea64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e63201e-03d8-44b2-a991-13baa5fc27a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d32b3267-467e-4f58-bc99-e1860be954d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca99c68-f6c4-4f42-8dff-c39d1fe89b24",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0d610f-bf54-4f62-8992-214c97923397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5e25ad-3413-40ea-9c7d-4f7f66669d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab9bbf0-3069-43d7-9901-5f58e9688495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "09eb8853-69e5-4b78-9482-909840c48b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb9cd5c-fd91-4af6-ad97-9d1efe1a4473",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f814e1-d4f4-4b31-acae-2e995c482dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e424249b-037a-41b6-bf78-a058aa5abca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8645ac7b-2e47-4461-94ba-2fed617479c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c0515e-088a-49b1-80ba-c44569b9f6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a315c4d-048d-4ee4-b445-021c12114443",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a99f6b-2b3b-4e00-b4a9-7d6b20dd0eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffccd986-f02a-424e-90b4-f9f1e3a31e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06680ca0-6817-40fb-a0eb-72b96d4117a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ae5135-023e-4c8d-867b-7119cbc4a819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3298d6c9-8c5b-47fc-a03f-ac66cd9e1773",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f59148-486f-4178-aaa4-c72530353f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8713507-bf11-4c56-9cdf-e60c3738a4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeebd00-7350-4d9d-8ac8-f097bd5c7bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2a073b-3592-42f8-b698-db92782d0edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a843750-eb33-418f-b983-490fa00c880b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0a0302-72ac-4dcb-9361-65e24242b299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab480e1f-7c48-4e37-97ab-18c261ab9af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05afa0a0-f959-4b14-acf5-23970afa5806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2a73cc-c2d7-477f-a8d8-aab07c040404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b648ebb0-5e1a-465a-91fc-eb14fc9d2481",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aef7dae-333a-4463-a918-6d0a53d924b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e573064e-ccea-47be-ba63-c51dab95b39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee206ca-bbe1-4c43-8d1c-fd4448a3868c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9359e55-2191-4baf-b81d-8434c9f53ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff8cf99-aa82-4689-a655-375768d4a9c1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4cdc1f-6dbe-405d-981a-6d4d7af13572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a325fa-7496-4fd8-af37-4808e83799e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436aa053-21fb-4c4f-ac11-0ac3b09abc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d023c064-3feb-4878-b244-448afb9e4bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53954012-aa46-49eb-8262-6eba832261c2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c18029-6956-4bf7-a0f9-85bd1f438e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f975cb-c697-47c8-b4e6-3bd08d39cd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e554759-29e9-43f8-a671-e8ce627d2e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95cc3c6f-a909-48cb-9bac-a055e70de28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd5a85-6c01-4135-8fa3-234e47db6ef6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bae6e3-c442-42f3-ace0-83bb4cc32c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4821945-90c8-49b5-ad0a-50e1ba364573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fa0d74-aa20-4a72-bb1f-78871d1461d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "796f8969-45a7-4216-8e84-437d23a45b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65e9e15-1e07-4d48-bf2a-7529c53afd19",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d939d09-c9db-46f4-a3b7-d7ef0bc2d734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58a1bfc-a1a0-4fff-95a5-72a1d688d853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708f586a-b5b9-4aaa-a8c7-7baa3e5082d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed09ba2-56e0-4523-bbe8-29fee09e82a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ceaacc-3745-4572-b563-97f0a3aae80f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8f810c-1cf4-4d4b-9edd-90a5379da9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dc5ef2-8f06-4676-b781-63f89f37393f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c4d5ac-bd28-453b-a10c-43da5051cd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19940513-290c-47aa-93fe-9b82111bf2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0510d70-72f2-4f75-865d-8f0ee4b1d6dc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4b5ba7-04a8-49e0-88bd-073447948e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21aada01-eccb-478d-9d40-d4ba16b96683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1feaba5b-82e4-4183-b674-0c1cc6ebc28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bab1ac-4782-4311-821b-d6587665ba71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8905777f-424c-464d-90dd-07d78050db60",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725c6da7-e953-4926-8628-e88b96bc8244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb6d0ac-e6fc-4611-81c8-4b35c8bfc5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817b031a-af72-44b9-83fd-42f833c8c340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9bf30c-84c4-4998-96ac-87fdb20c4502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e40a24-646e-437d-9d48-1bbf0495bd47",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a648dd1-af9a-4307-a79e-677a410dd81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f6e808-08da-4cfa-ab60-09dd32150c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef1208b-5e59-48f1-a4c1-306b21c6d04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eda5e231-f336-4bf9-b5a8-e428e3ce793b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d9989f-0de4-4253-80ce-7452f323ce9f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cea097-93af-4be6-b589-efa1e4d5b265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035c7cef-f7bb-42da-b29b-4861a977c89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985f3bd5-deeb-47f9-a066-0f83187c2467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02eb7f94-ae52-4c37-9861-cd8ec5332cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64f258d-3500-4d15-9bba-e54ff174f816",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164b5f52-e742-4755-b14e-e6b3ec6e60aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea612f6-26fc-42fb-aed0-9f2922b154f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaa5c78-ebde-42a4-a58f-2a377a1a436b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b177fd60-b51a-4965-8bb3-50398fdda97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b797f6-2c35-4ec2-a9ec-49bc06d984b0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3dd19d-9395-491c-8d78-be7f457423ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101b7f33-ff03-465a-adf5-8751ef5e094d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54e4110-a990-4edb-a119-7c317f2c6ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a593c880-d25a-4be2-ac02-d26a55f02706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5e465b-4b90-4df2-b95d-a649e78af0c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07faaaa7-3f57-41c6-8fd6-ee24db635c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3ad044-7c65-42c2-974c-3683a31fc3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d9613a-61c4-4348-a5ec-c09fd308968d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "977a1516-34cf-479d-a363-2a091e9b216c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0491f29a-e679-4994-8fa4-9ff75830b96c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25389eb3-52dd-4c86-8a35-e44abde031c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4944af54-28a7-4bf0-b350-8578bdd0a9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d900991-c6d0-4c35-bbd8-1306d8e0d6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15269ba4-bb02-4e80-bdcd-6aa64ef2da81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0580ed58-6fc9-4e97-869c-bae4457e906f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8bd7c5-f237-49b9-b46f-605df2766ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaba766-1698-4bb5-a274-764e1902b533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f40503-cf99-4353-b5ba-197b605cee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5444d626-a5cb-47c5-9f92-b9727aaec7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0722d205-0c9b-45f7-aef6-e21a58abb16c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ba81ae-99ca-4d32-8fb1-beb00fbf1ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b785ac7-7011-4dee-8ee7-fe8117b71010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9609958b-a99c-44e5-ad18-88ac41a7ccf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "342327db-60a1-4e80-9edb-d0c14ce617c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c165e25-8a79-4c25-a042-6d8909f91d21",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f457e71-eac3-4b76-8939-1746893de9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce159f13-eef6-42cb-85fc-24f26958ff59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52e8080-5081-4ba1-be42-8794ffb9f664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b8f7fc-aeb1-4d95-8f74-d7a72c6b7fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7e4a90-eea4-46b2-ba49-b6270ac0037e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3c69b5-70c0-43e3-81e1-1cb80a3d3245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad49dd21-cdcd-4fea-920d-ea2a6fd44072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3225cc-b6fe-4ac9-8026-e2af1e36705a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8984d6f-6150-478a-8d99-2f0ee7fbc92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59191ec9-70c1-4851-8b99-ee1560878128",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c56e9e7-09b4-4f63-84f8-00ad84e38571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4351b4-5537-4e25-a67a-1f80311540d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd136074-91ad-4e9d-85b5-cfab751e3a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59357843-13c3-4a07-b502-ce64b4fdaaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361860bd-3cc5-43cf-bb2a-6246d2799315",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed665fd-d735-4257-8d12-cfc2bcfae500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affdbe4f-0271-4ff9-a4da-9a9ebd0f31e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae70e0a-4be8-4f39-900f-216935ad1174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71611df7-0fbf-4e1c-bea2-56b27f827ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d3db39-29fb-40a4-9b0d-e33e170e2d91",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f5e99c-e2e9-4a76-b777-dd19405892d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5468240a-7987-470a-983e-da41afc21968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d8aeb1-cfd2-4b92-ad2c-2ed118a35c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d80f771-a668-4803-b4ed-80a89bf9f3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84873849-384b-47d9-8b42-fbf4eb77eebe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54e98b0-a5c5-432b-83ba-48e820b53caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d538d1-2f81-4da8-940a-b3d202a4d177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744a8525-8e27-4990-a28e-2ca129e7dfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaefb0a2-f934-43b9-ad48-153ebb165a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2670e072-58c7-4579-82e2-68f811586a8f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935003b8-2008-46b3-a92f-8111fbadb3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71279e06-48ee-4ef6-9e1b-8d69b1b5eb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60d9a1e-2546-4b6f-a185-e9df6b5623d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4982602-3c15-4a84-8a41-60ec1cc9b751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173a161c-03c7-4a1e-8dc2-f27c6b5748c8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8e6677-6910-4aca-bfcf-82e9f7d9a3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f624ab-188f-4909-ac62-08d18c914962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bde021b-6e56-4dd0-90f4-35972ea4da54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0c57a4-0e1a-442d-b7d2-465ec7e307eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3aef879-34d6-4080-ad47-05d2c0c28db3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8b4fe2-d26e-4f38-bf90-7579070fd393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40bd316-34dc-4a54-bc63-d6865d2d8446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bb793f-3d25-4052-be27-c7decc2871df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "becf89eb-66da-4380-9750-8ed594709f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f649b52-c119-4058-9277-4bbe532706e3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb7cc67-f317-402e-a2e0-c16b63a74aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d2961d42-6d97-4c38-94cd-2edf66e284aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc03985-ba41-4742-8d15-e65f00e53b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "75f123ab-78d3-4111-a199-7f3c4f5493f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ca71f3c-2775-46a4-97ed-bcfcdf609a67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f93a9d33-5e25-4113-b59e-d44d32c525a2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed3a803-2062-453d-863b-433a96b4b918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3014512d-cc0d-45a7-bd4b-99ea5b1c3aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffda2f14-52f7-4a32-845c-e8102f99b4ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "107edc85-6c37-4159-aea3-3190ba0745b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4911872a-2932-474c-960e-aaa5c1266522",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "224d16ee-d3c8-4738-b670-daeb23439b92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7644b818-74f6-42a1-a268-8d7d7228de70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7733225d-9251-4ed3-8032-b34aa1672850"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46195a42-1703-41bd-90ec-5bbd8b1a1c55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5d1c2bd-cfb1-4e42-acac-394758d84f0a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "91d27655-511d-4018-bbb7-183f09317376",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69c6ff74-8977-4216-8f37-bbeee4b1e05d"
                }
              }
            ]
          },
          {
            "id": "1b875af4-f519-4397-9112-9e3c07d0d2df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0cdeed45-89c0-410e-b688-27686ab8e4c9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f47f6c4f-d6d7-48d4-be7f-9d6bfc8d03ce",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b039cbe-96b9-4090-8f89-1265f66df1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ecb8081c-c9b1-4c4a-a18e-c6f49f902914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c9440d-28be-48dd-bf01-5bf230ed9ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d144cff2-e5c9-4033-b9f9-24ad9fd69346"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9dda2679-80fa-4ade-ba6e-ccb85d27091e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c99272e5-7596-4f3d-a60f-2000afa0653a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26ebafc9-aeb6-49ee-a6b4-5de9e59ce6d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72a742db-3228-46e7-b02c-29ba43d03def",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b3d329e-43ec-40f9-b451-2aae0394a08d"
                    }
                  }
                ]
              },
              {
                "id": "ba210ee6-a7e2-46d3-97a9-8da25057f854",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "069d7ffd-7ca2-4b10-8a58-699a8944b285",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "efcfdd24-c414-40a8-b49f-8ae396ea173a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85e57af6-d070-42de-81f3-53f4e8e35f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b662f61c-af41-4930-8ef5-515b1aa4c15e"
                    }
                  }
                ]
              },
              {
                "id": "a5e63dbc-5d68-4847-a9af-bdb3366ff457",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e657379a-02cc-4e45-9946-6102b7d6aefa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "466e3a53-ab39-4304-b539-c405230956c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eef58625-b7a0-4ec2-b9cc-49dd808a3e36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7afcdfc-4d4e-4b67-a951-a3965a478633"
                    }
                  }
                ]
              },
              {
                "id": "b6c4d7d3-c580-4924-acf6-7b212723cea5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9acde3d0-741a-4d76-a4eb-80d8e17d3729",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6199868e-64ab-4418-979e-c4373d64eff4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a27d4159-6022-4b9e-8d84-46bee03433b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f28eca0d-0ede-42a5-81c3-3af0f06066ee"
                    }
                  }
                ]
              },
              {
                "id": "42caa591-8299-475b-a7f5-bf6647aab713",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce878459-f283-4ce8-8a58-488469923150",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "523651a1-c7fc-4c6b-8171-b839e9cbfcd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b7a8d48-2946-4e87-b182-a23881991818",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8c0e20cb-57a4-4c87-b94a-fe244ba8f9a1"
                    }
                  }
                ]
              },
              {
                "id": "49c420e2-6846-4eee-9bae-2d8f2a824d28",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10ccb17e-6c84-4c0c-8a7c-2920cf8484a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d3a8eca-2eee-4b84-8adc-0fd63cc83be9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60395620-887d-4049-9b5f-035690aa7bb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3658d3e0-dffe-4187-8dbe-64601080d559"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd04b902-e59a-4f90-8e23-49c06f0ec5ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89a9ded1-02c9-4487-9548-7e235e7d990f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0bcf6a3b-272b-4e99-b042-b041cb8c578d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9c70c33-eb12-4865-aac0-b82d0f3a010b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a9c9d27-90c3-4d49-9dac-b346478eb579",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "37b46b80-581b-40b9-abff-a37aebac09c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d368a138-cb3f-4a52-ac06-bd3bf66fcbf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6427bdf1-9ec6-4ad4-b95e-07fe2d59ee78"
            }
          }
        ]
      },
      {
        "id": "e26f664a-a66b-42fe-a494-5586a6c09782",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6ffe7835-a00b-4b3a-ae1a-1cf60389689c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ade0e86e-79b2-44c2-b9c9-c00b231a71af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63e84410-96f4-4e33-a923-c4105174870d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855bfb5b-fc9e-44aa-a1ea-00c6d0ddcce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b465df7f-9f9a-4c83-a133-b8ba29848434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaf9ab0-87d2-414d-bf07-407a2dcb4bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "23d3b71b-2372-4297-b4cd-75b8a56e5182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076802ac-7dea-433f-a849-20a8148cc008",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1150405f-dd6b-44ad-91bb-86cb380f2baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d52781-fa67-42ae-b80f-5f6dbf33657d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f063741-1d18-408d-8727-c5a0ddfaefe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0cfebe-ea2b-4ac6-befb-303d79bc7dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7924878-957e-4ce7-8092-4024ad4c3db0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1a53d7-73ee-4fff-b06f-a9ad145e9799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f408e7c7-4433-4f78-8a56-363b47473f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5321d50-1aa4-4dbd-b877-fd49652ea55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "732b4b11-7e39-4557-9836-641a98675eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e364357d-87ee-4757-8ec7-48377fa9572f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0159e76b-ef5a-4131-a408-8e1865319dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b9d86a-cec5-4846-a039-1d9996faf08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8739ab5d-9a42-4baa-830c-a08636b4e968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a0ae26-6ec7-439b-a679-14aa870b90ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48df1630-02de-47b3-9ee2-6056074dd952",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e134270-54d2-46ad-a9b2-0375721e356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3b0ee8-235e-479e-a52a-487ab77e02a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d47ad4-7a50-4c8f-9277-b94c94a8001a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31707993-d395-41b3-8922-c54d412bcc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3e17b9-c96c-4db4-b34e-560a20258a0a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b02030e-881a-40d1-aeb1-cb7a1dffaf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b950c750-42a1-44a1-87b3-2e60e6564d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b866f44-734f-426c-bcb8-ea0d9856ad1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93303804-8e1a-4be5-bc32-30c9014ac3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b098b602-e814-407c-aba1-6780f056f72b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84b3143-f75f-4683-9567-99481327229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c85df65-9b39-4bc8-bebd-b58fa868b00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5043b441-ca2d-4eb4-922b-94de5a454f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "47976959-ddbb-4fb0-ad9a-acb0bb029c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30c7b85-1fc0-4c08-9764-648eea7476e1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89462e1d-5d43-4820-ba3d-a617c9b10a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ac9877-efa1-455e-b83a-f8079cb0191a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490c3bd5-d968-4fcf-9aa9-efe812fbda61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a683a2-1de5-407e-b257-f8ae1376da39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b517f367-baaf-4940-a0b5-282b2d5229f4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496b3676-d94e-462c-a9b2-e11375bcf81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8cad0a-da16-44c4-b5f6-452fa64503e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6a946f-bfd6-497e-bc7f-0a082e75adc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22ac235b-9140-40d9-9b95-6b6cf0a03aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17340078-7526-424c-ab70-6ff3302d85cc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba1e3e7-3d7c-4af1-a61f-10ce8192f549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959bf89e-fbcc-4862-a5e5-04d35044a7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11416799-53f8-48d5-89f3-482bf66bcc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82743a1e-63e0-4ed7-9ca5-3a47a12f6711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9e8831-75e9-4106-9d1c-1ea35f6fc2ee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929dc362-d1be-4620-8cfc-79c03e991601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198e3083-fc7d-4022-88eb-1e8447068ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80485398-58b6-40d8-adfd-c02c9164b50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c80ff2-4ac4-4ef1-8237-6e6372f85c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6f772b-ecac-4ab2-9da6-ef50bbe26f5e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edda6d27-6edc-44ac-856b-c55f29d1ed6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83da7d0f-38ab-458c-a466-fa0b35c8cd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ac084f-a3cd-4504-b5fd-be621b7a7223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca5ae70-ee7f-438d-b137-0cc1356f5804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52c351a-8d95-464b-bb93-d0bf7028d069",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1717021-8d83-467d-8807-ff58c13b680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c33dfc5-931c-4014-b8a2-22f057abb25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cfd470-c8f2-4c8c-99ba-f62fd31217e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a918e0c-494c-409a-a3b2-0a21a4bba539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628783b7-718a-4932-9128-8d693f0f447e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d237c40-420d-4abe-bd24-1572748eb653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6cb2960-ac83-4532-81e6-bcd708418e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785a11d5-00e8-457f-9988-b715df5467fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "181cf990-c9fa-4888-88c5-5074c592f0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71988866-fab8-489c-8179-7195f41f12ee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e806d68b-0ad5-41df-9cc5-6bc28f4a786a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fdd580-80a5-4589-8ea1-f9069d936fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929b2268-88e0-4020-9758-6636992af853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b767b6-c4b8-4cb3-8a55-af0152f3f187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8946bb-8b9e-495d-ad31-1c7c041bc4a5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4d61ee-4a6c-436c-9e81-eb1c8e521352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56adb29-2b9e-4d76-a8a0-5f7284208ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b099a32-aeb9-4fa2-bca3-12c8d24c2fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5c4283-ce33-4599-b29f-a0c01bb6356d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c50945-caf8-4dfc-b0c1-89a2f3fe81d8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce2e168-2540-4f1b-a778-5c557a624b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb0d3b3-afb6-4d57-bd88-3aa93c483108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10feb56b-b243-46aa-bea9-9890947d7e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0421c07d-8781-4697-a50e-e451681b54a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f5c282-5660-46b2-b1a6-666dd470911e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e10ca9-60a4-457f-b511-ab788a5e0efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3951bd6e-be93-49b4-894e-3db352ec417b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe3862f-82a4-4a13-8cfc-aff2343f6a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f1b225-3f61-4466-856a-3ede7a5e6735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17d2c9d-a10d-4263-9148-62d3184c6515",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb14b1f-0662-4016-8d43-036428051940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2781dea2-bdd3-4578-b2e7-755d7aad79a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81cd5a4-6bca-4a2d-8b74-59f1de9c511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f9e35a-281b-48f5-a49c-1a0b90175b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cd56ab-dcf5-4206-93a0-491d4758b467",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d539049-5e6e-46e4-82f1-53f404ac4707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349434b2-de83-4534-91cf-4ccc49268d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e94bd4-5bb1-4a98-a0b2-642237f8262d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6361118b-6d74-4f07-a8b8-86429749def4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309b9ae9-8453-40f9-8580-4ab58d2c198a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522f5b2c-0b0c-4196-88d2-67a1612ad458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0338bbea-c972-486e-9317-88c8a7d92456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b26f00d-a03c-4cd6-a8ae-d10e0d8ea164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7e71e9-7ba8-48e5-878c-c67f09eaee36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e202f6f6-9c90-48d2-b3b0-eb2c6752061c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e812637b-0cc1-4d18-b846-899175edfbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09986fa7-1d79-42dd-8fb5-3e26d7d73628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2733a17e-c434-439c-9a8d-c9efccd1d081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fba983c9-6a36-4a66-892d-dbfebbbd0b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa954f30-e379-4b26-b050-4d97128529bc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356aef0a-6385-497d-a2de-8a8796862c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f50a9a-5151-4bdf-bd4f-598faa830960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea4e761-1d60-4a83-a810-8411750abf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3ea0ae-c38a-47de-ac08-fd09efb29bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd982b5c-c7a1-425c-ad94-b27c991adb62",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dc3e99-c724-4b56-84a2-de55d4f8244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431b1801-2511-45ed-a0fb-fa92204b159e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdc4850-127f-423d-a81f-2849db6da904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25a25f6f-8804-4126-82b5-226380d0eb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590b6c7c-731e-4300-9280-1bdd69c236ea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b0034e-3549-406b-b609-e7b31fcb1c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04691338-4759-4e8a-8635-51f6a25c55b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809b4e28-fe88-4dd2-a416-a4de8f61657b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5773141c-1482-4c7e-8732-8e42cbf0acff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbc5d2f-869c-4281-9792-b80325355675",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6dd408-f3ea-4e98-8ca4-a048b0f8d48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236e0e2b-7812-4249-b51f-0cd95aa03036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89466de-c23e-41f2-a7ba-8f1a300fbb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19be7feb-0a98-47ef-89ac-98b9dfc8721c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dbea9f-0643-4012-93db-fb28bace22a6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3456f3f-6b91-417a-859b-78bdee941589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db506c0-ac2e-47f9-ab70-7ef4de8e7aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac65ccb9-1e0d-4bbf-be5a-ed1f5747cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f588b24e-8192-48dd-a190-f27b87613ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1502e197-a923-42a1-ad16-fd189c040df0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e193e67c-83df-4751-91a9-57cb2ce35b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93206e8-8641-4f8d-916d-9dba632c3132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85680ea4-4083-49dc-9a82-29d791446496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fab5f95-ffca-4a28-a78a-64a4e4beb21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408e3035-88c0-4678-ada0-af3b66971a58",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dae3de-6432-41fb-a6a1-ceb58572dee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff82cf3a-3a41-4630-a33b-ab51fc3efa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18edc3c8-76c5-49d9-a699-586378850a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a345263-064f-46e7-a628-52562255bd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406d9ca1-0a4d-427b-8a85-3af72378153c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953731c4-99b9-43b5-b09e-719aa993dea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462a4a77-e3ce-46fb-bd97-326339a9ca4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a950e891-f27a-4c95-94e9-126f654fe0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56e4a54-9bae-433f-b068-435a52feabae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e3d593-159b-4832-9c34-5e73e20652d3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a3785a-f2bc-46ab-b2b5-e1b5a38f0ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983648a8-848d-4d11-a1a6-c75f6b660298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e625adfb-f87b-4e11-9732-01841b51ba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4e0584-cf75-4555-8a4a-a9a295be9f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64701e04-e526-46f6-9df4-d59e69dd39a2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de7d12c-d8eb-4824-bd97-6a0352e70c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba822d9-752a-4d9f-b365-3ec2f50c7dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8105cd10-fe6a-4362-8892-3a1e726713be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f6cb5d-7ef4-4c68-ab1f-61df43019ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48059c4b-1eff-4188-90f1-7cde2fd12990",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5272cccf-6544-4b22-8bb9-228c8c7985aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d372adc-e43c-496c-8f4b-bd2f2a47f7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853863d5-dde7-4cb1-a597-12038c789137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ebad49-0e95-4bac-b899-da23d9771114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa51719e-79a0-4f0b-bf64-c611b4cb3e1d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8af7a30-370e-4ed1-837e-96eabf02e7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81d9e13-f73b-438c-9a30-b0ffd59aa5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e268743f-c214-4ff4-9704-167c0aa151d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15d1a55-ed5a-4fae-94a1-9eb74193ba23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05e20b1-555d-4d31-aa65-57d07e0db1e7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9216574-48cc-42d7-a394-9307d5885721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4786c8-4ed9-4787-83d6-862f216a5951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1b6470-e260-4c56-aad7-c6ff97ca51df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecfb9b8-7367-4772-89f6-b779852f27f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8448805-b4eb-4b97-b288-2c09b5852ded",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f479d5-efed-482a-9f66-743e7cf0cb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf229a6-bf09-49a8-aa06-8ec8a37ee363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520c9c4f-b01b-4eb8-a7f6-dc250c136485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ed1abc-a9a5-416b-acb5-0e377e367091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe00358c-2edc-4dbb-a07a-494137f12934",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89608008-cf4c-42c5-b591-a297e21134b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ac3f42-51d6-477c-8ae3-9c85016e3c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7712881c-95b6-470d-b2dd-bd9e089535c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4b6de4-6887-4378-9cb6-b8425ebe68eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3670466-c370-4676-8ccf-099ca673e677",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "471a8809-713a-40df-880b-651dd1087c2e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37eb5520-c32f-45b4-a4e2-c35d0a59c0f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "45b5d827-1ebc-4ea9-832e-1c4541355281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d2abbb-21a7-4075-a8d8-40be050381ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f97a79ba-5471-4fde-9c13-3919096c4d77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27aaf9e3-4c86-4b89-abec-c8cab763fb61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccf2b5c1-685a-4891-af6a-c65c69aa20ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e6b3406-bb41-422d-a773-9f3da2c81f6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95642736-91c6-4066-af56-422ac07be148"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51e93456-0563-4945-87e8-11204816bbe6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70dff6db-9ace-40b1-bcf3-d78f8ead5ecd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94566087-20ce-48f5-a0cb-22ac30572766",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cac5bc88-0286-4b83-9ca3-f7f52c5c86fc"
            }
          }
        ]
      },
      {
        "id": "4f1cc9f8-a3a5-4972-a0ba-aca9b6fd3b22",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6a089aaf-f857-4cde-8227-bc7508696018",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9fdcb5d-c406-433b-9779-c6c7ffd25674",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d548ca3c-163b-480f-85dd-7e611ca424f2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55de18f-6e4e-40ee-8e6c-468f0ba97589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ac1613-28b1-4925-8541-bac07619963d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6c1703-66b3-45bc-88cb-3ce9b6b107dd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9e04bd-199d-4c1c-b40f-5cc7ca62e8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9eb3de9-7d86-4b10-9081-fe57e4ee1d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a01099-bb88-4f45-9f6d-c2e9ef015491",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38eca158-ae14-498e-9f0b-dc7fceb21c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5211c54f-3ce8-4b48-aab9-981dfdce0d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2661345e-e456-4dbb-b189-2fad5edbcf69",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a611d76-9938-4726-92aa-3f92943a44d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878f09b4-f2be-4057-a773-a63bc7da6a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3983d992-82d9-4cc3-8f9a-b60573f34fea",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f908f2-7db5-4f68-8a31-8e81760cf74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b970b2ce-6e61-4ab7-aaf7-15346811899a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3cfcc6-46ad-46ce-916b-7f12b1f565a2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dbb20b-f7ea-412c-9fa0-e88f2727c248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e25f4e-46c7-4019-a88a-476e68757fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1508087-156a-4be7-8150-b4151041cf4f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76f6c9a-6ec5-413e-b3b6-3f18b7ab6651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a739b83-5e3b-4125-8991-466cc08134ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1e72fa-1c45-4d6f-aa8e-a89c2e7783f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ac86aa-1962-4898-8160-5e010b72bde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a2b134-51a3-407a-b9be-24d418f3284f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a491fe-bf44-4ef6-82fb-138e6be5894a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06677caa-28e0-4d02-b3ee-219606b91662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4843c684-a6ab-491a-8fa1-f90c5cba40ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78914749-137d-438a-a075-8da45e1a4115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8691698c-efc7-4452-8d22-7d6712f6ccf7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180558e0-5af9-4361-a91a-518a3f28c293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5356d8ad-d028-4a1b-80f5-9e03d6e8b16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b700dec-213e-4a09-900a-2956550709b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e5b805-9730-45c6-a8d3-77148e58ea2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9e923a-193c-4278-873b-f636bc222e2c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed58106-a588-4d79-9a76-0515fbe9583a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19698320-3de4-4e5c-ba91-4861e285875f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e14829-0ca0-40fe-9595-98d610720fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feff101e-f935-41b5-8e70-6f2c0c9aca51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adb60c0-a346-43ab-8c6d-0ee450ce3518",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cec379-e3ca-44dc-a382-a71954880747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d90b7a-4daa-482d-a9e6-9233e8442a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a6ddf4-01ea-45df-a4d4-465a6ab1815d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee50be81-e740-4bff-ac8d-6070eec1f667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ca5ac7-d8cd-4da3-8f53-9dbe9ef5be7a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e527f289-3931-4016-9f16-7b4bf6d6094a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df508d5-4948-4c62-9278-8e718b7105e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4897b181-49b9-4a9e-8c58-6425ce9cfece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8fb50a-eccc-475f-8357-69fc892d2650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c350641-8dc6-4925-8f00-e155c24944ac",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14cf3f3-e097-4702-9ea2-da6d3aafba24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ba609b-04d1-46a8-866b-0fd936d5380b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8133f0-3cbc-44c0-a62b-bceab9125dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d256601-a080-4b6e-8895-61f52ca11f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6321ef52-1afd-4aec-a0f1-33198848b77f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07228b5-c934-499c-92e1-a8d8481ee0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03ba601-8b44-4539-acf7-d0cfa241759f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901d9c61-ec2a-43c9-b484-80e9a302338a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2674c83-2ec3-4b81-9938-b98f2f3b0365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73aa5905-ab91-4cba-a447-fad6d4aad5c7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a891ca-3e50-4f22-8da2-70ad7f4a9a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48720c20-0879-47f7-92fb-29c84896d18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95d41ec-08fa-45e7-96b3-e25be5085190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e4c6d3-b82b-4ab3-a030-fec17ee1838a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6d5f83-276b-42b8-8073-733469e4c388",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72916cd2-c02c-484e-b371-e056afbed752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b975386-d16f-4a24-a8c4-b8d2725a1643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3898ed-aa60-4dbf-af31-d94aabc45fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382bfe5f-3669-434a-88fd-784d0f07816d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f55bd2-b4d8-45bc-b8ce-bd556eeb3891",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb7f141-acef-49bd-b2ea-2e1ef8ecccbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad71caf-0282-4b8a-b892-91b0286e6fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9246515-8ee5-4c52-9066-6d061a493ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cc7e73-d965-4482-9b42-5eb32eac5bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7b3bfe-450c-4ec0-9403-2c220f58bdfa",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5835fb6f-7a6d-4410-83d2-a75256da9b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fb49e7-5bdf-407b-87b5-dbc58c9adc1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a580c8a7-dc11-4b2d-8d62-325ad0a55afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d735eb-a98f-404c-b26e-3f54ee868996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706bdc71-7db8-47eb-8369-24dab25f0f1f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf2bde1-4ef4-4104-801f-ebd3f09493c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac955573-86a1-4db6-ace7-63893d14239d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f29271d-a527-4945-9f27-f988706b3a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb8faa3-ae9e-4f64-a042-c0efa6f121da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a085190-8565-49c1-a59d-d74efdbd7a9b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebfaa54-232a-4aea-9e49-33712ca42297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa944dc3-74b4-42ff-b6fe-cea4243d9bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b70b4fc-4b77-49e5-860a-21cbcb25f630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde56dae-a3f4-48b1-86cd-ccdabf4a0365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c566c413-1366-4dd9-9e78-14cbe7b4fc7a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870cbe03-9ec6-447c-8e87-468aa1b539bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855fd7e2-ed77-4dc3-9986-a10bed29dd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c592d2-61f1-4723-bf56-b2c5c42483b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6b4d7a-f1a1-4a00-b25e-a3593e520669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9b6201-d3b6-4d0e-bb61-edbd6859e46a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cd5aac-ab57-4ca6-8ef1-3d6abc8c4310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae83dbb-a250-4de4-b4f4-b03a98ba9c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255a59e9-5069-4ebf-95a4-d03860601ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eda12c0-2916-4d64-a13f-dff63dc9a643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75be12e4-35a2-4ba2-9707-bfe55aae7f0b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c49139-0259-4ac1-96df-70380b2658ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbe1030-bb86-4560-aee6-82f17a97572b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f68e725-80ce-4dc3-8193-0c56cc854caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc906fce-eba1-4bd3-a1e1-9605a33c0ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf0c413-7304-4904-8953-edb61c652da1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fb6e46-19d1-4f54-8e5b-91bd18cabc26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db903a57-09f2-4657-99f6-676612fa0626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed37719-694b-4014-ade6-50175c804dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503324ad-2108-46fe-b8f5-a09766a84dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90aec3fa-e795-44af-86f4-30269fbd9ccc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6633f6-2bfd-4bcd-bcb4-def127e8b25e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21df46dd-e808-4dd7-a5f6-579e7ca4eb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13be488-e491-440b-8e14-ee2a46bb56d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05016184-f59f-4763-bbe1-87bfc98ad703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2b6656-410c-4738-8ac5-63932f1d54eb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c422e2a8-ac1c-4d25-99b1-09457ef4922d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55306f03-dc6c-46b4-919c-b4c8fed06123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a077c4-7938-4dff-9a16-9bb2aa635c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642006ef-2ffa-42f5-abbb-b87e5f9c6983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281034c7-ec4f-4695-ace3-bb603217330d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3051d9-03b4-40bf-9b03-853e2c446419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525b2a7a-d977-4115-a8a6-4446c38c4e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba45a61-ec36-4f6a-9ae0-a156f7762646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6dce3a-edab-4eab-ac2a-9d4e19ed2aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902538c4-1ab6-43f3-969a-41e3426049c4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e12a7b1-dd95-4ec6-b015-e118b3236c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf867518-dea4-4238-9f1d-f9638e85cd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde40420-df8e-4428-b976-b631c04745b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce88fde5-cf00-4ff3-9ab5-18a0c4027fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802b3338-145c-485d-8dbc-0ded713fd132",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f6debb-c626-41ec-9514-defb27744ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f05216-1344-40be-946c-b5f90e91dffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2c8f62-0c45-48d6-a5e9-429abded889a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b6feb8-2051-464b-99f0-e3ca4a68e6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0259ce11-8d1e-4de8-8095-af61889911bb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e809dcc1-1bda-4bd5-8fdf-326beb07897c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b983bd8-346c-4d2c-b311-c3c9d8832573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddfeb27-2694-430f-ae24-7cd25b4d0041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7914e0d2-2ed9-4050-8c96-2c631630823a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f931f6f7-3949-4cc3-9706-8a17aae29fbe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b964a7-d31e-42c5-896e-eebdb87a0923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4c5393-ddc8-4e8b-a391-0f835540b6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf39a52-581a-4fbc-877f-ebe167502521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8c0c0e-094f-4635-afb8-0b0e9c3c71ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a00c1a1-ef21-4d18-b860-c367779ddc35",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139df427-8a2f-43cc-9701-d48d0ec42b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350cdcf5-9f01-46b5-8869-27a749ca6b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2003d7f-c9fd-409e-8d60-724faf69fda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bea814f-2ec0-4416-834c-5a190c2071b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d2f8e1-1eaf-46ea-917c-9f3ee395cf3f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3a7012-21c9-4a66-9200-bc6ba8cefde1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c0f063-0598-4c90-843c-184217451b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1461a9ac-a726-4664-bb89-3ed027c098bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab08723d-95c5-4a20-80ce-aab330ea2473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5835178e-1168-4e18-b5e6-e5c52aea2a79",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcede38f-1695-47a4-a30d-7899a0e1e72b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a88c5d-8419-4ba5-9fc3-d11e571e58e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84004951-9392-4c1b-b753-dcd3b68137b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f86dcc9-a169-48fd-96a8-17284219d098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609245a5-43b9-4a48-b5cf-32bafbddea92",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef1a2a6-ef18-4250-83a4-a486a0bb8fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa2a61d-1364-4c11-a107-a8e8cd6c2846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24bbb02-a42d-494d-9ab0-c78c16b5947f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7124c67-480f-413d-92ba-2e7043fa391f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741bd171-3c54-4804-9d81-a65753c1257b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f2de27-2eae-4ec2-8958-a597b987c0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8fad99-a80d-400d-bc8f-5a2f601ba2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240403b8-9aa8-4c6c-8a52-efbf1c3970ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b4d415-7921-4302-9e18-8e655fd9d035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e2bd47-b64b-4037-ad89-b81d19d8395a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b09b93-b14e-463f-9764-ec64e0f0b293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d226ec-5132-4a17-abd5-241a7ef3ad0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb8797e-1a7f-4e7a-8151-b714fea66cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c085e88a-9343-49e2-ac37-a55897c7fc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c845b30a-7064-4fff-bded-4ffe86287920",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9791ad6-f2ad-4189-8cd5-66a9d6c37142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f86992-039d-4d7b-9b8c-e740e7c95a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a151802c-9912-424e-bf44-50396e2ebbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971d71a2-eaf8-4aa6-b527-58acfae5d580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaf78c6-b278-446f-9aee-b1dcc59dd0a7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a8cb50-9ba9-4c16-a55d-0e661cd4cc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72a981a-11a7-4134-88b9-176c2006155c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde0f255-c348-4cd7-b1e6-814fc4613c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a2c7e9-e54d-4aa0-8723-cc0061155831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02817bc-5577-4a6e-9f5c-c988acb7fbef",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3a7b34-e33f-4ed2-8654-1645a88b4695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c44ce4-ee17-4488-8b9d-b1fdb5bfb709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee2ac8e-77b8-47e9-96a5-30ea82231c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645bcc6c-c4e7-4027-9dc5-342ab847f2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cb8e92-1f98-45ac-b1fc-e1e81709090f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb36bc78-847b-42ef-b5cb-7920820114b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0ea06e-9a4e-4556-aaa6-b348f10cba7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab86a34-5b48-41c8-955d-040af8a46caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8104631-fcbe-4441-8efe-b658d47893a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f15b6b6-3cd8-42cd-b5fc-6458caf397ef",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1fa0bf-8005-4779-9e6b-6287c268ac4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b913aae6-ad9d-48e7-a174-9b52ed55954c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6450d5-83fb-4f2b-b27b-f1fc7dc0fce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7de126-9982-49b8-82d9-c6a9e93160ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632955e5-344c-4b7e-8424-1b42655ddd26",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4480b4d0-e29b-419e-89e1-99e5d43e5a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6478eddc-e53b-4e76-b3a9-f9889ef91ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29df2ba8-6a24-43d1-942d-9f5b6b5bf3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153d7e05-ba7e-4287-a467-e2513ed443f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f099f8d-533c-404c-a82f-80397daa5f21",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c757bce-4c6f-449d-9595-a0a3fa4c7634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd2f31b-1c47-4658-a5bc-15b5c2eec6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3c39b5-2dac-45fd-8eda-8e2b7bf01a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24da214-12c4-4a9e-a6a0-79dc58712fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e506ed-30fb-4595-b571-95a12937b6ff",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c07a04-a46a-4b81-95b5-ffb7097c987c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a96364-a0bc-4ff8-98ca-447a13c22512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7529307-df44-42bd-91d8-ae6d8b55e621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33557a1b-8513-4b8e-b8b7-acb87db8dd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de1b2e1-c154-4303-b799-15ca33110daf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1321f6f-5074-4c56-b4b1-25990fea61a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e693e9-f07b-4db1-8cf8-58bb7fe5fe45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2874f0-548b-4689-8495-0409d0cb0eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26366669-bd63-4eb4-b6bf-8f5a2d87465b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b30a62-3e0a-4faa-9c73-dceff557fa98",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c88156-87a4-44f7-9284-ece150dfb748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f7ba5e-b657-4b41-8ac9-e7eed6cd7447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5879471-e7e1-42f0-afba-095c85c6b521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c65af5e-2ff8-4643-8a36-5e6a7fa53854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae696f67-2218-40e4-a4ec-04594511273a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8883d14d-23d2-4c07-9485-82f1e7193dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0319f1-f1aa-49b5-bae9-8d455c3d9d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249aa7f4-7b28-4bf5-8a7b-d8e0aac45776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561174c5-e6b9-4138-ac8d-127ebc1eb0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5891de0-5ccf-46a9-92b8-9585034f0554",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64a756c-f376-44d9-bc6f-b77ea8d11cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08663336-2bfa-44ff-8eee-eb5e7b5ab163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb035699-1507-4deb-91b4-97d4fe26265e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c352e4-57a6-4cd4-a589-1b7e2ca14ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8408a86-dece-4c7f-88b9-8ad4d4666703",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884df462-07ef-473b-a05b-ddb948cb259c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8c4bba-7f8f-4876-9c7f-ffdeabed96cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f4c441-71fc-4271-811c-099ef79316a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2979738e-9293-45cf-a872-0a7d2f8b5ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedeca68-d8ba-4682-9f71-901fba6df5c3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e89f247-da16-410c-bcc3-bae73133acdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d108732c-8de4-4a14-9a32-ac0d3b66f471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7722ed70-7610-46e4-bfdb-acba7271a9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005550ef-cde3-4f29-9a2a-7625a345f6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbd2d28-661a-4c90-9d43-ef22d828f1a9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba35f6b-4e53-46e1-970b-0f287d6e2d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abdbe10-9d18-4d93-a2c7-c167d72cd371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa473970-fe61-425e-8580-5a2aa6888a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60751d18-4a35-4c23-897e-4721961ebd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cd35ca-5790-441b-81d2-97888baf4c32",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1631f01-5fb1-47aa-94d2-d2756da75890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10128e61-eb88-485e-a86f-c02b8cf11eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee55eb5e-2787-424f-b939-d04838d0b96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9957d44-5764-4419-8152-f354bbf6dbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64aa4a0-82e3-4c0f-bd3c-220b5a298243",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23237ece-fde9-4ba2-8b40-619d504cc9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab4c2e1-8fbe-4c39-9d19-df1bf518a0ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d9bf20-f6df-4b0b-8f85-2422eacbc5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0813162-3a2b-40c0-8592-c48e73eb778b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3256c60-3003-4ad0-a073-ed64be2d51ff",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbefae2d-2d69-480a-8883-48f24b7edc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903e39b9-0307-4565-8356-e2046c299614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bc60c0-06df-4e64-9d47-3e2b9a9cd7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c040bd-f04d-4816-9dae-d75be1c8a839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f6c8fc-a19a-468e-ae46-10600e84d6fe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09e6fca-f268-4c93-9546-16271b31ea7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3114838f-6311-4fd9-979a-fba005c09434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bd51b2-f139-429a-918f-f7c143dc2c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6f4999-8fef-4366-8aa3-eb6254af8d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cffe265-d220-490d-a8ab-2b64e53f7563",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78e8b5a-d1e4-44e9-8e42-0788e26b7d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bf9e7c-e6ab-431e-92e7-27891dabdebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bad786e-c7f8-4310-ba28-fe03fe416474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961895d7-667b-4bf2-8764-2885ed4b6413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d7ca4f-327b-4c2e-bac8-2cc70b8c2cbc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a672eb-49c8-45b1-a16e-b88886273469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f504e684-bade-47e9-85dc-ba65a8ecff2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22de9ef-506e-4bac-8933-61a02334cc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213b4dee-ef39-4f3b-aee4-c419e1199147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f02d442-eb81-4340-b7ad-9d9e37b93484",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1af496b-dc3c-4b3e-94f8-9fbe67775970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6913d894-6be1-403c-843a-c93587ea9d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c95976-6561-4a44-b423-5cfe97264491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fc8d5d-4b63-4133-ad89-2925e5e57223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7861f3ca-fff7-4273-bce4-ce42ccf40c8d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9b30b3-8a3f-45f1-a018-c52bccd4aaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b663e76d-a40d-44ed-81d9-4ecb1cf22427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3328d5ed-04c7-4b52-8333-e315bcd5c31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6269a9-54fb-479c-8450-33ab4da1ff2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9233da-07cf-4fc1-83e1-52cd0707c20e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a7cc64-d0db-44aa-b823-e359e6d3cbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c250b31-c865-4995-af92-2bd2b893f5ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20b905d-6a8f-49bf-a4ab-df91254481f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a36909-9900-4242-aec1-aca1d0528e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed20c02c-c476-4e39-af45-21351c1ee69b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517c2bf0-732b-4b90-ad04-3f988aee96a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be204e7-fc23-4ac8-8c45-331e90c7049b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf76b30e-e00f-4f13-a371-9d2f97a046a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c12997-37bb-40d4-903b-b257ef634599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7a9041-9590-4636-b0c2-5dfcb6ec51a7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e2c8ed-45d7-4394-9af7-3a30fb8eb5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf3a5b9-b9c8-4054-b20b-5aa33c24733d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd98376e-906a-44a7-9b18-fb4fc1dbc9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d742d4b-4161-48de-9b01-15ee4c2bf036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e98cdc8-b512-491e-99a5-24e4b39d3f97",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d22db70-c116-44d6-b7cb-74805e89c08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3587778-d0fc-4810-a55f-52b68aab1795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30f7a70-5179-4d6d-8ec5-1e0ce564b7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5c61a3-4933-406f-a854-298144a82f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838fc1ca-ce82-47bf-bb60-edcbabb0c926",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05eb1ae3-99f9-4c14-b062-e9904e62745e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6115792b-177b-45c8-b3af-4c2ab454302f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2ce7c0-0ee0-4480-b85c-4528d2d88278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5ba9d5-6353-45dc-84aa-e2ce006ccbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc20b9c5-9ec9-41b5-9a01-109ba811f6d8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aa30e4-8aef-4335-af19-2d724f0fb133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b68ce3b-0863-4cc1-902a-718bb71eab52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafa3114-6230-4ae2-904b-eeecff634eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4928846b-6c4d-42f0-a0ff-44f304d3cd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792a5a78-4be5-4c57-a8a2-0aa29ae20c75",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d234624-fbe1-422f-af56-a7cc10e19eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d84a70b1-e525-457d-a6bc-7eebbcb6a98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6284a87-2da1-46b9-9469-0e7fcba79ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abb6cf0-dea2-48ff-a262-62394f32fea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f84b8ec-3023-45c6-9819-c4155a34d7ff",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea3a232-aaaf-48f1-afd3-e51ae524f734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "118c80b6-c5b8-46f2-b9bc-00bcd636143e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46df9cac-79ea-462a-90e5-c72c47cb58f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612d905a-adeb-4a77-afdb-4a0420a50a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c98e2d-00fa-4cd6-bffb-053af8fe03e9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299347b2-dbce-48b8-ba40-d73e164a89a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1c1b34-bc0c-48dd-8fa6-65e2adf7a63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c36ca2-f5f0-4509-b21f-aeefd3b9f2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2235bb97-c677-4b1a-ada0-6f669ea6be98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21731d67-e0ca-4123-8a70-34051635d51b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6930aacc-33ec-4b88-8659-6f7b397d8dd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff550ec0-f76d-41d7-9af5-f10071c8b3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a1b147-3e5b-4cae-8f75-5b89260b172e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585b3aa9-560c-467c-b350-301565de0141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2e91a2-f454-49d5-9539-cd79cc654389",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d724af-ca46-4ce9-a107-fc3981553722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb441f14-0902-4e93-92d7-bfc39d03ba35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4fce1a-e07f-445c-b3af-04204b74cf9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb01ee1-63c7-4155-810b-8d12442050ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac80cd48-9606-4bbd-9798-8980e474e4d0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4652dd-b408-4b6f-904c-8c5158b5119e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270d42fa-7601-4c61-a791-6afa7c85a63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3012bdf5-6bd6-4fd6-806a-75782216c35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19cec90-ef1c-4695-a2cc-31ebd82c9f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e58a893-8956-43bd-8d79-e05b8eda5c5d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1856391-fc78-4b51-8fdd-819fee014ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6592c35-06d7-437d-92f3-a206f630aa94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390827d7-36e8-4cbd-abdc-944362d2054f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39007542-85df-4d01-a238-344a7763190d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb0b29e-e244-4a63-8fde-0e4fa518235e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7607aa3-c15f-4551-8556-dc0748aa4143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec4a660-9964-4653-99f5-348907262030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81edcbe2-aab0-489e-aed6-649cdda5360d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6ae3ab-6a9b-4043-bde5-312880c22f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f41772e-b1ec-4dab-b3ae-2e1a1528f036",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed3ca1f-5970-4fae-aa23-cb9207fc7648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd0ac65b-8cc8-4ce9-936a-66c64137392b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e651ca9-595b-4df0-bd84-ced82f248093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca25973-4064-436c-b944-bc54ef8841e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f47eb99-171a-4ff6-afb2-a5e3a694f648",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed4417a-dcb9-4201-93d0-c74cba69713f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83037f43-a812-45f5-85b9-b09183dd7bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc7da4e-2bd2-43a3-a12a-e1c0a26d8ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d073d0c7-0779-4274-872e-9a40606583d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabe3960-d2ee-4c19-a408-411153eff383",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1fc031-b607-443e-a569-99aa8a827296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa6c71e-8726-4bdb-9582-dfce91ae3716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb265b-a204-4997-bab4-1a41d9fbf36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953accce-1275-4b07-a605-ba628626bbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c779910-cd0d-4b32-9aab-4e40982828d8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf73c59-44f2-41ee-b8d8-ec08940cb518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3ce52d4-4eba-4f0b-87ca-3900d47209b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9b4c68-9eb7-4b6c-8d61-71d0c8f88a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b644cea-48a4-48a9-8bd9-1fa3356ab2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d839447-fe75-4877-b715-fe4d77aa8932",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e88fb2-e9f6-4188-9ca3-6b2b20c58f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec277c7-f05b-4b84-a350-fa8710eadd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeca4570-521a-4449-9387-9fd6cee95ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb4ed06-17f8-483a-b795-31ac8623b243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0136d9bd-e1f6-42cf-ab36-69136f65e3ec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f85f34d-6172-437f-a4d9-41a89265826a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2cb945-f1c3-4a6b-917e-696dff18c4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44f418b-fcb1-4fbd-9810-4f407bb6f7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b82c0c1-51ee-4b80-94d6-1e2bcd181878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57674f8f-ef59-493a-a8e9-ace2b6c35ff6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d325d7-b9ca-416e-9ef6-67dee1e83914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d449e56-fcaa-46d3-af60-c414ce7b7a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb356eb-682e-434e-9d6c-dc865f9afcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3278807c-0868-4d40-a1c8-8c750874cbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41eac23-9b42-4775-a0da-2081b2f1db24",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48921d51-f1ab-4e56-b050-f63b124da6a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49370359-9cd7-4b76-abb8-31d0fcec5af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49541475-2c9d-4eba-8040-ef827d59ade6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51516ec7-7431-4b6b-8d1d-4538020697db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed5b1a3-90b3-4a63-9a04-4f6eef662b5b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc03365e-54b0-4799-9090-5d43b77efe56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4136a7c2-cc25-40ac-9a0e-90e5cd778f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60947e44-5872-4467-aff2-e39d9ee31555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbbd9cb-d937-4166-9ddf-fca83e01630d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621c8683-2bf2-4822-a0d8-0bdba96d0b70",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99504c48-1afa-492c-8b04-84822f8a46a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07827bc-3735-4ad3-99e6-d72377a8f2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d39ab5-a2e2-4fa7-a929-6e19c8c19d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9a4901-3710-4ca9-a6bd-49a57f262628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d40d35-63e9-4f85-8336-c57feab9b64c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d42d93c-436e-4d9b-b0a2-91ce0386b21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86de216b-005b-4186-a4ab-7202f7b3bf0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee08844a-47ad-4cae-84ba-cd0bc723da67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5c7d23-14d2-4bde-9737-f01548b13921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27def112-5ce9-412c-b7d1-7dc7571a9972",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b81871-a57d-4676-a6ce-fe4f6a7725be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6455931e-0d32-4531-98c9-bac8c531b2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0602f3-6605-4bfa-b84d-87985bddca9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacd277f-407b-4e6c-b7ab-24fc63f3027f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63504b6-95c8-413b-8c3f-9b47dd0a51f3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf42230-2627-4482-9168-9e7f0a7811ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e33f77-84d3-4d6f-8230-9f7198a0189f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0909cf7-273b-49b7-b952-bc8d658a1d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e654688-336a-4c81-815c-5455498abd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9037305c-a4d5-4efb-933b-818202edc9fa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa82fb0a-214c-459a-9349-e0521b56abd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a29bd41-985f-45bc-b21b-e48e363e0901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fe515b-57af-4d82-a0ea-6338b862dc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbae3310-e041-41e8-a9f5-ee5bf79ab17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bb8301-0c0c-45fb-8c7b-d5690179d0b6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b93e73-53f7-4e2a-9d22-af2df47d0131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b3dbccd-b7a0-4772-a933-0f7b477ae09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5003999a-3192-4782-8243-38ef483d25e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fc15b2-2ca0-4c98-a48b-ddfb23f95709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e7271b-9037-466a-876a-43350771466b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fd4d9f-c6cf-46ff-9e24-58a5a31cacc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a454aec-1023-4dc0-8cfd-f78913e0dc1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84769a0a-2e0a-419f-a64a-c99a513145f8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996bce5a-ad81-4181-96ea-74a3232be90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497ce92a-1bb1-4ec5-a1e7-4287e8ad65e9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1118239e-70b5-4bad-b31f-b38368df5053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5160bf94-4fb8-4b47-a0a9-6d3f94975946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e427518-a909-4736-b094-e0047b1939b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32bf821-0686-4033-a2aa-76361745375b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf3a90c-0d10-4b47-aab9-fbed919a2ecb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19865100-4b56-4454-81d1-6ddb29beb182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ced9ef-41a4-4883-a9b6-521deac7d71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6981af40-f601-4fa2-a98c-e02839510e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1184ee5-f55c-4d3e-b0bb-0448cac103c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c927ddc-a1ec-4291-827b-948d47362c17",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80607ddc-41dd-43b3-9519-7cb1713acbcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbefc557-4e16-4bb9-a581-cc61959ad10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a608e1-7091-4fa9-b80a-f7e57c49a23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6dd88a-ee1e-4921-8e5d-cd58b8f5332e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570b4e28-f5e8-40b3-a299-6f498100f1fa",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79860f77-fd34-4742-bcfe-e5e6b65e7bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9eae87b-37b3-4278-96c4-fc72f298f1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ea9a40-3f5b-454d-9e73-2eac308d6c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c0ddc0-acca-41c0-a476-84d33ae7660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6851c119-6968-44cc-b6d0-633e2bdb9ceb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391b3589-7bab-492b-8ab5-87d877f89d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c43f64-8874-4bca-afea-5edca463d435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3787c8d1-86db-461d-8963-9b46cd10f193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2d95b7-87a5-4511-ba64-1d372791ae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bff600-ee13-4c0d-b63b-b1c7e7001389",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8865ac2f-ed48-4e99-ba4b-e77c9b51528d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527ecf20-5048-48cc-a6f8-242546661cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d586fb9-08e6-48ba-853d-3d1fc806ed58",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f7e6e0-d6f2-4b3c-8196-7a948c9da113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a55523-daab-46ce-a33c-c5a5f10271c2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19d3523-3a3c-458d-9e54-b7cbea0605f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b35701-64b4-47aa-8297-7f65a305d363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c79b06-dcba-476d-acca-5c0aaaf4b337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a4c89d-6d7c-487c-b77b-0bdd2ea979d7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f1116fa-a07c-4883-96ba-265ab8b0e95e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d05d4af6-249e-41bf-98b1-6ab541e57261"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7aabca8-7bce-4ed9-8a38-506e88d10d79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1da5df9f-e6b3-4a33-b3d3-7c0da62252b6"
                    }
                  }
                ]
              },
              {
                "id": "c86c2304-7d91-4d55-930d-62eebdba428b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf701f5c-4560-4e39-9e67-64385d4d55a6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bf6fb4-c3e2-4ecf-b529-893451d19db9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "de379864-0b74-4dbb-a941-e137b270f0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207863be-bb64-403b-960c-831c54770420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3835934d-ed56-4dba-9f01-cbabb3573219"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c78974c-d5d6-4a0f-94a4-7eb4fe1b47d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7428d77-1b03-4d01-a9d6-7646fd1e8220"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bc741b3-78df-46eb-8581-e3035c80b93b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6064ee55-2939-4d2d-98a3-df5c36bc33e1"
                    }
                  }
                ]
              },
              {
                "id": "2a0f0b9d-243d-42c2-b724-71519601b4a7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2efa304a-feb5-44e5-be0c-9da736eeb491",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f554190a-dfb9-40c7-ad64-d8fa9db837b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "18e424a2-410d-40bd-8eb0-0618f6a65999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de77dba4-2f8b-4573-ae20-0865d230801d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4539ba15-fbce-4525-a08b-baf5863d55be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f82c3ac1-a673-4e72-ab3f-7e64e191545c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "748a6cb5-394e-4206-9b8a-128acfbe9090",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e22b2a0-7496-4d35-999d-86a8f69ccd39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "39515bcc-7a6f-485b-b0e2-1bf7b0e3b8d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70dc3604-e2f8-48d0-939d-194dc2efc93b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6946d8d-6357-4758-963f-8bd86a5489b0"
                    }
                  }
                ]
              },
              {
                "id": "f27f1b9a-e719-4d26-a5e6-623648316078",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb9be596-8397-41e9-94f4-c478e9a6c965",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fd019e3f-c820-45e8-b020-10031a6df828"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93fd73eb-e564-45ae-bee1-a1929fa70fe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0a419a2-0be0-4296-b700-f95b32e4a5d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14c4c19e-79d6-4a7a-b97b-94982028766f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1cb34cd1-992a-44fd-ae88-d9fc9c7eb789"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "559ac385-35c4-4688-927a-ae4403cdd547",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b7f95b8-1390-4c45-b319-1333aa5bcd65"
            }
          }
        ]
      },
      {
        "id": "edeb2146-aa06-4f9c-aa2b-0dc77e80b1c7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ed4da598-65bb-4d7f-ad63-2eeb89b85933",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb5fcc2a-9f81-4415-919a-e7b0f7c134e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f573c7c1-ef76-46b2-b869-56785e9dabee",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f4e92d-0754-4d1f-991c-74b90df5b666",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d1f0239c-1ebc-47e7-9b0f-df079db339aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70084923-f9d4-4ad1-b5d6-eb8705b338fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "075c2eee-a6c0-4b1f-ad3d-47a315d6b014"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015c5c06-3b06-4e2c-a13a-d72c2a0c6b1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ef5184e-f2ae-4f1b-9281-5682cd9132e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18289fee-b088-430b-b303-d0ce311e0f8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c07eccf1-26a8-4939-b556-2c83f529eb98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc092590-fbf3-4faa-bbf5-3832e413d97b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "aa31c0f7-0c31-4f1e-bd3c-809649ef2bf6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3384d5f2-2f16-48e7-b419-7becec9a1b87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "079fc7d8-d6df-4151-bbd6-d1f32940a8b3"
            }
          }
        ]
      },
      {
        "id": "7f58f972-4ae0-4ffc-8b3e-c3c6390faa33",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6c0dbe4d-fe2a-4b84-9093-65c870180bad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4330118a-6e57-49f2-a826-111a66fe8291",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fab8fada-6f7a-4b5d-be6e-de03b23079a3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a748c6f4-fef6-4832-ad95-191457cf7e1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc15c9e0-8423-45dc-a3c8-86f141b50c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a140b1-3bea-44cb-ac23-2465e8d904ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e582813a-ecd3-4d7b-baab-0c536b6ce371"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cc2ee75-10eb-4aa3-b1c0-981c866fce69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88328e65-e6ca-49cd-b50c-531bf69438d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14d029a6-1cbf-4b82-a43b-f7cac3149def",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbb89957-aab8-4e7b-a285-e6713b7d4412"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a413df73-3359-43c1-983a-e9ace67b3877",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "809e64c3-fef9-4b4d-b503-e01c1affbed2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "058fe13d-bebf-42e8-b437-c9a9e0f0ee9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a042dd7e-a5dc-4c3f-b8f4-45e974d2a9ee"
            }
          }
        ]
      },
      {
        "id": "6152759b-ecf3-45bb-bb81-5f633a71b16a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "34fb238c-05d1-4cef-9fc9-7ef26a8ca115",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf819d7a-ff68-4f5a-8bdb-36f8fcef0639",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce91522d-8120-47b6-89b7-b98969901ce4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6e322c-7f0b-4554-99fe-93441982c156",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "471a28ff-e86b-4e87-83c2-47108c1e27fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82c7920-77c4-4384-86b0-adddb6aa9618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a21968cc-0715-4e2a-991e-9bb3dbd47ddc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afa9da19-dd41-4afe-92c4-15ea30428ac0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61eb2eb7-d95f-42ef-afcd-0007eebd1d69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "522e8fee-a0a4-4c93-9ac4-d4d8d8b267b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9d0d4ae-5c2c-4022-b78a-d8ab5b50af41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3e64783-cca5-4097-b47c-8bf44a89c1ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac354c89-00a4-4675-be2f-e447d5b2f3e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c8fbc9b-82a2-43ed-a56c-53038d8e9f06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c168d25-afc4-44f1-9fe9-576a9cfd8ede"
            }
          }
        ]
      },
      {
        "id": "a26c95f3-a87b-44a4-b0a9-6fa98494bb2d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12e06993-62a1-4baf-9501-c8d12ea7eee1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72e1bcf3-ce77-4f61-ab8a-11258f5f492d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3aa10a20-8656-4476-968b-dd79f0832533",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0a2dfe2-b3ca-4ef3-a2b3-9b4caa8a4bba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d1ae7a2-d273-47a9-a6aa-a3595c06a98c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 122.06746031746032,
      "responseMin": 14,
      "responseMax": 12136,
      "responseSd": 799.3966917907107,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721263148241,
      "completed": 1721263187430
    },
    "executions": [
      {
        "id": "2eefb51f-5d65-4a0a-be54-ae30e7805d63",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "48b0e9a5-248f-4b59-ad30-240d819bc204",
          "httpRequestId": "1d31e22e-819a-4acc-bc79-9507e6074374"
        },
        "item": {
          "id": "2eefb51f-5d65-4a0a-be54-ae30e7805d63",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "598f9315-48f2-42c9-9473-4668fae2e7fe",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "ce9c888e-a71b-459b-920f-0e2b7af58409",
        "cursor": {
          "ref": "6f29cf47-36bf-420f-920b-b79dd96b2aea",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ccab38ff-26bf-4ddb-89a4-989ab622316f"
        },
        "item": {
          "id": "ce9c888e-a71b-459b-920f-0e2b7af58409",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c56dee54-6ae3-4012-853a-eb1e5705ca80",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "3b37427b-5576-4bcd-ac6e-f161212e6af3",
        "cursor": {
          "ref": "bdb76493-8cf4-41b5-a105-439d1812a07d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "77f8b670-5767-4c36-a3b6-2f2281014129"
        },
        "item": {
          "id": "3b37427b-5576-4bcd-ac6e-f161212e6af3",
          "name": "did_json"
        },
        "response": {
          "id": "9dc051bc-f45c-4e9e-8bad-6d56f0889e1f",
          "status": "OK",
          "code": 200,
          "responseTime": 299,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb33cf2-8bb5-4c08-8157-169383c512d4",
        "cursor": {
          "ref": "627092ef-d8c0-42c5-813f-7aa1f625aee8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9f6ae70e-c3c0-429d-8b67-f7252930a7ea"
        },
        "item": {
          "id": "ecb33cf2-8bb5-4c08-8157-169383c512d4",
          "name": "did:invalid"
        },
        "response": {
          "id": "91a3e3cc-9571-4cde-a225-0e369cd05f1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 283,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb33cf2-8bb5-4c08-8157-169383c512d4",
        "cursor": {
          "ref": "627092ef-d8c0-42c5-813f-7aa1f625aee8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9f6ae70e-c3c0-429d-8b67-f7252930a7ea"
        },
        "item": {
          "id": "ecb33cf2-8bb5-4c08-8157-169383c512d4",
          "name": "did:invalid"
        },
        "response": {
          "id": "91a3e3cc-9571-4cde-a225-0e369cd05f1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 283,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1582a1-4a57-4777-a534-7de9df1716d2",
        "cursor": {
          "ref": "e1b276b2-dd03-4211-a9a4-1f31123d99e8",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "12810d0a-0280-47c1-96f6-29e1c0bc7efd"
        },
        "item": {
          "id": "ba1582a1-4a57-4777-a534-7de9df1716d2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c68604b9-bf0e-4515-a7ea-0d759c901846",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcab3de-7cf3-4010-ba54-a6c9d5767011",
        "cursor": {
          "ref": "376df15e-8e2d-4df0-96ec-2c6c57411783",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6a09e815-7898-4b70-a14f-9d1b0fdde723"
        },
        "item": {
          "id": "adcab3de-7cf3-4010-ba54-a6c9d5767011",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "40690d07-4833-4362-952c-66f5f21e82db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d3c02a-2b70-45c5-ab27-dcb99d796813",
        "cursor": {
          "ref": "bd009af1-e5b9-4226-acbe-836385a2be00",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6121daa6-c80a-42d5-8d3d-8ccdaa3a97c1"
        },
        "item": {
          "id": "92d3c02a-2b70-45c5-ab27-dcb99d796813",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5a583551-3d57-46c8-b7e3-4719646d7106",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a2bd97-b636-42f8-9df7-001aae2d9861",
        "cursor": {
          "ref": "c0ccdc5f-f87e-4856-a492-c825f867d8ae",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d5d0ab57-00db-4033-9358-b852d810ede4"
        },
        "item": {
          "id": "06a2bd97-b636-42f8-9df7-001aae2d9861",
          "name": "identifiers"
        },
        "response": {
          "id": "fb3ccac2-ae2e-434f-b498-5438ae8ef23e",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972b419d-c544-4c0b-949e-b393f04532f1",
        "cursor": {
          "ref": "b1beca1d-873a-457e-af0b-6b102c34966b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aed9442d-bb18-426a-9065-3c1878f61552"
        },
        "item": {
          "id": "972b419d-c544-4c0b-949e-b393f04532f1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "91392d7e-de87-4d77-abff-da0bce10e43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cc5e87-de4a-4f99-a082-ae52f0178967",
        "cursor": {
          "ref": "a9c7de30-7903-47cf-b23b-0d606e7194a4",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "36d004f9-55c1-466e-bd8d-a2fd02244498"
        },
        "item": {
          "id": "50cc5e87-de4a-4f99-a082-ae52f0178967",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "79b34cc0-de46-4c27-8d9a-568433591aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7670df3e-8698-4a34-a2c9-9e7e5c583cfa",
        "cursor": {
          "ref": "30705d29-6c15-4302-9cb6-c72b2ca05ae5",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2a61dafa-25a9-4bab-9bc6-2c6aa793f242"
        },
        "item": {
          "id": "7670df3e-8698-4a34-a2c9-9e7e5c583cfa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e3251065-b3e3-491a-8c6b-42aca35b569b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109d259d-b9dd-4210-9aff-1d4c3ce2bb45",
        "cursor": {
          "ref": "67c0885e-be26-416b-8e61-ea0cc6b5663e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "022f739f-c64a-4d6e-a187-4e19361c6728"
        },
        "item": {
          "id": "109d259d-b9dd-4210-9aff-1d4c3ce2bb45",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "462ba331-8150-4dfc-90d0-060c648e6dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550f2c24-2caa-4750-8c8c-0fdffd5bcf47",
        "cursor": {
          "ref": "25b27177-addd-44b3-b16a-07265d31831b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f8294f27-a3f4-42d6-a68a-c8343f978c1d"
        },
        "item": {
          "id": "550f2c24-2caa-4750-8c8c-0fdffd5bcf47",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4194cbbd-48a3-45f3-9b05-025e9b6e5475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9726ff-a908-48ea-bc24-10ed7d77cb72",
        "cursor": {
          "ref": "f5a170ff-fb2f-4963-b2bc-2b4f75fb5d17",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "db6e9298-d4fd-4aa6-b370-405af9608669"
        },
        "item": {
          "id": "8b9726ff-a908-48ea-bc24-10ed7d77cb72",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9922b315-6424-4965-b2a1-e235b83f8f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa474b20-e903-4453-a7d4-2de36a88c88a",
        "cursor": {
          "ref": "95e91891-c18c-43ba-a966-3438d0b5a88c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8c2e9262-04f1-46f2-8f94-38c1ed38edc2"
        },
        "item": {
          "id": "fa474b20-e903-4453-a7d4-2de36a88c88a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7c5e5356-2fc0-4bf8-8afa-8d40c64cb395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ef5034-bdb8-4878-854b-9877c3458f9a",
        "cursor": {
          "ref": "231a5815-5a02-4b50-9fbd-8b687892ae68",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "00951812-40dd-4805-9009-8c2662c8d268"
        },
        "item": {
          "id": "05ef5034-bdb8-4878-854b-9877c3458f9a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b5e8b61a-d341-4d58-a74b-c17a3843bd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a28aac-0922-4b88-806d-dcfe04e685ce",
        "cursor": {
          "ref": "2adfd052-3603-4d09-87e2-a1076abb4965",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6f0bd4f1-0a3b-46f7-997d-20052479a3c5"
        },
        "item": {
          "id": "e9a28aac-0922-4b88-806d-dcfe04e685ce",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3adbc7c3-ca1a-4159-9ca5-786219af34ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23650dbb-81df-4b65-a3b1-c59fba4c1236",
        "cursor": {
          "ref": "57647b36-2a05-4351-a16d-a36c5aa67d34",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e76fcb2c-8fe0-46a0-b401-acdf578fd2f9"
        },
        "item": {
          "id": "23650dbb-81df-4b65-a3b1-c59fba4c1236",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0329dbfd-2d8d-43f9-87fc-08a515021a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e67b49-4993-475e-8b63-756f9a9bc6ed",
        "cursor": {
          "ref": "dd317b24-c5a0-4da5-8616-2a59fad3fe06",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dd4b68c1-7604-4448-b88e-6846a6e2484e"
        },
        "item": {
          "id": "b2e67b49-4993-475e-8b63-756f9a9bc6ed",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "51976b3c-864d-42a2-9770-ca71878c846a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8d9466-2c9a-441e-bdd4-3016be05cb02",
        "cursor": {
          "ref": "5d501f90-c694-4661-9c42-a8f4101f9dc7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7442ae05-23dc-4fd0-b7a8-3ce4083eddd5"
        },
        "item": {
          "id": "8b8d9466-2c9a-441e-bdd4-3016be05cb02",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "860334fd-912d-4cdd-8530-823283c39cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f04815-eda8-46dd-a606-45aafea65d50",
        "cursor": {
          "ref": "bb484c85-4592-4e2b-8c21-cc70314108ea",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "55288426-eff9-409a-aa04-4280bc4fcc39"
        },
        "item": {
          "id": "20f04815-eda8-46dd-a606-45aafea65d50",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "06cda1cc-4fff-4d89-83db-c38213d3ce63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8943bcbc-eb7a-4afa-b7c6-9bee7ae9ac50",
        "cursor": {
          "ref": "97b70dcc-14ea-4c8d-8110-d6caaa04dbb6",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4239717d-95d1-43a6-a90d-dea0bd14a251"
        },
        "item": {
          "id": "8943bcbc-eb7a-4afa-b7c6-9bee7ae9ac50",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5569f29e-7831-4093-93b3-6bb544fd0838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d78dcb-5ccb-436c-ba22-eefca85c5ada",
        "cursor": {
          "ref": "821a315d-0a0d-451f-ad70-46f0a54c1de2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1755cc03-a6ef-4878-b372-d95cc47c705d"
        },
        "item": {
          "id": "e6d78dcb-5ccb-436c-ba22-eefca85c5ada",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "865976f6-1bec-42f6-b666-24818d94cf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e11732-3727-4452-b924-b60dc9dc40a0",
        "cursor": {
          "ref": "35d00bbb-9972-439f-8e6e-d1c46a2f7aae",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "896ce675-d659-42eb-8040-7844987cca25"
        },
        "item": {
          "id": "60e11732-3727-4452-b924-b60dc9dc40a0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "12c7d640-138f-47fd-9af4-07a2d05187c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2332441-3cc4-42b2-83e0-5fe81e80b314",
        "cursor": {
          "ref": "9b73a7ee-4d3f-41c3-9a7c-2146f3673aee",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "16cc885f-2607-4ebf-bc24-c3f2a9ae5b03"
        },
        "item": {
          "id": "f2332441-3cc4-42b2-83e0-5fe81e80b314",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d0dd9eb8-03b2-4ece-b260-a1be14df1b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91eb0ecd-c50e-4c68-9728-a25521bd571d",
        "cursor": {
          "ref": "7e8df230-6406-44db-bc25-ec6d1de273d0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e48b6b41-d3e1-4217-9b65-5c421a8d6a1d"
        },
        "item": {
          "id": "91eb0ecd-c50e-4c68-9728-a25521bd571d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "75787772-69cd-4c28-8edb-983fe62abace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224aae83-c80b-4167-a4ca-3676aae330eb",
        "cursor": {
          "ref": "7480e41f-888b-4c38-a7cb-67a3e4951ada",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7caf8366-d6e8-4e6b-9cb2-098e6827ea31"
        },
        "item": {
          "id": "224aae83-c80b-4167-a4ca-3676aae330eb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d510838e-1ff2-4c31-b96c-956e1df14cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0e916a-45d7-4337-ab49-2e533620c8ef",
        "cursor": {
          "ref": "858240b4-c405-438a-9e05-329f9ca49941",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c6cef34c-0262-4974-a413-9ce635c60a6c"
        },
        "item": {
          "id": "ae0e916a-45d7-4337-ab49-2e533620c8ef",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f1ce79d2-675b-4ad7-9198-6af7862c9c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19b910b-fb14-425f-909f-af6182d87167",
        "cursor": {
          "ref": "44acfb06-7aee-4cf8-acfb-72dfe61b7bbc",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7d7a3ef5-957b-47e1-b4d9-0db05500c88a"
        },
        "item": {
          "id": "e19b910b-fb14-425f-909f-af6182d87167",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bf77fab0-ea96-488a-b7f7-b8fd2d5c8000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5033ec8f-3919-4d94-9ff3-29d8e1d046d7",
        "cursor": {
          "ref": "3e752395-de78-43cc-92e8-c9e3452d9234",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "034cd1ed-22d4-431d-b23f-7a078883e4ca"
        },
        "item": {
          "id": "5033ec8f-3919-4d94-9ff3-29d8e1d046d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "91181b27-a8c5-4529-a7e2-e7385e31b7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36b6b28-71cd-4761-bd7b-287261eeae21",
        "cursor": {
          "ref": "3b3b3db6-0848-457a-b1ad-d8e0b2130b44",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "562f0f55-e5c9-47e7-9027-a5b6a6d6f87c"
        },
        "item": {
          "id": "a36b6b28-71cd-4761-bd7b-287261eeae21",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5f0edb78-5e57-4b43-b011-63faedce22d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3705378b-8632-4726-99ac-98a1aa1d95be",
        "cursor": {
          "ref": "ab436d5d-aa94-4183-b60b-45afc6f0f618",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0145a962-1bb2-4464-a92c-f7300150791c"
        },
        "item": {
          "id": "3705378b-8632-4726-99ac-98a1aa1d95be",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fbc3aca2-879f-40f1-a668-e5ab6f5acd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389453bc-3342-4ff0-b9f9-4b4e0ae259ea",
        "cursor": {
          "ref": "65212142-7240-4b2f-8c94-40e5563fe060",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dce1a3e9-aa1f-4a87-9fe7-1d0b9e02b1b9"
        },
        "item": {
          "id": "389453bc-3342-4ff0-b9f9-4b4e0ae259ea",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "75fefb8a-8fdb-4613-84e7-bbea91844ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e9234e-76f4-490e-a05e-02dad143341c",
        "cursor": {
          "ref": "a91397b2-48ca-4ba7-a8ed-5ca183fee9c2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "40286962-d507-48a4-907a-bcd948ae3fdd"
        },
        "item": {
          "id": "a8e9234e-76f4-490e-a05e-02dad143341c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cdb1c674-caf3-4681-9bad-c853c831961d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c364bc2-0bbb-4f46-b63e-163e83f76568",
        "cursor": {
          "ref": "7c678fc8-110c-49ea-a9ff-374ce6d65d92",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "348803da-4540-4090-bdda-717b52583b80"
        },
        "item": {
          "id": "1c364bc2-0bbb-4f46-b63e-163e83f76568",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d4ce6c24-c429-4b06-acea-f27527fe30ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dee7c4e-492a-45c9-aaea-6424b4b68b98",
        "cursor": {
          "ref": "10ec000e-e7a6-4815-a524-e17792461384",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dd066ab9-6ce3-4690-a747-a161871cadf6"
        },
        "item": {
          "id": "1dee7c4e-492a-45c9-aaea-6424b4b68b98",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e30c453b-f442-46d2-8db2-5d0e2d7d90ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097b144c-a1c1-4ff4-b1a2-c834c9cb9572",
        "cursor": {
          "ref": "79c9519c-a213-44da-8f7c-29e3dcff35b6",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "17fc7b84-edb0-484e-b1fa-d73a7768d4c2"
        },
        "item": {
          "id": "097b144c-a1c1-4ff4-b1a2-c834c9cb9572",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a51fa009-d933-4447-81c0-85353def0bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9156f4-dea8-4c67-ac0c-2f01a3464567",
        "cursor": {
          "ref": "5328cc00-4a94-487d-b4ed-8d29c105d874",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b2c2f069-46e4-44bf-8693-9366c216d40e"
        },
        "item": {
          "id": "4a9156f4-dea8-4c67-ac0c-2f01a3464567",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c0249c24-9dd1-48d1-9a14-dab70d4415a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d7ca49-806f-412a-94b5-9cbd78676831",
        "cursor": {
          "ref": "9623d32c-b27f-4b58-9b62-88e20f453147",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "441dc70a-b894-4d71-aae4-98c0d21a934b"
        },
        "item": {
          "id": "03d7ca49-806f-412a-94b5-9cbd78676831",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5f64bf02-ebf0-48e8-ae00-17174ea153e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952d6919-aa55-4f5d-8bbb-a67ddd322bd5",
        "cursor": {
          "ref": "05231576-2234-42cd-96ad-f69c9cc3ef2a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7b64d37a-389a-49c5-acd7-de5e7c9aa820"
        },
        "item": {
          "id": "952d6919-aa55-4f5d-8bbb-a67ddd322bd5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "03ad6201-7fb9-40aa-b5e1-a342bc0b1de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc92c980-7a3a-446a-b3dc-9c3951ec20ea",
        "cursor": {
          "ref": "1e87d77d-9921-41b8-a577-2bfcb8ae4681",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ff38adc4-eb93-47cd-bb19-1fee608df5a2"
        },
        "item": {
          "id": "fc92c980-7a3a-446a-b3dc-9c3951ec20ea",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0431f74f-4db8-4d71-95e0-41dff3f72948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699dcf58-ccfd-4042-b64b-8a695b63d30e",
        "cursor": {
          "ref": "50513b9c-e38c-4099-87a6-3aac098b1f69",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "af59cc47-fe56-4c5f-b530-f1661bbc0514"
        },
        "item": {
          "id": "699dcf58-ccfd-4042-b64b-8a695b63d30e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c002ca98-2134-4db9-9538-bb0bddeca2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a35cde2-8611-4441-a154-1961c9f0a395",
        "cursor": {
          "ref": "9795e20d-63b9-4612-b917-ada5310a036f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8e250420-bac1-4396-8ed3-ef20f869682d"
        },
        "item": {
          "id": "7a35cde2-8611-4441-a154-1961c9f0a395",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5ee60bcf-c640-4f2d-adcb-cc8630303a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b357e586-b2c2-4597-8a47-620fdaf0d137",
        "cursor": {
          "ref": "1f8af9d1-10a2-42f4-addc-22338f178092",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d754dc93-6088-43ae-a461-3ee9b25dcdd2"
        },
        "item": {
          "id": "b357e586-b2c2-4597-8a47-620fdaf0d137",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1a3b6edf-b569-4a4a-8754-77519b8ae549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcf1e67-0290-4aa9-a1a9-7de0c28f92cd",
        "cursor": {
          "ref": "d252860b-b5e4-4534-a698-441eceefb356",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9bbd3e00-8689-4fe3-ac5f-28b591612bb4"
        },
        "item": {
          "id": "bdcf1e67-0290-4aa9-a1a9-7de0c28f92cd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "24362f80-b22a-4183-a7a2-ab5eb2d17042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af602154-fd17-4da3-bab7-81c2f1f11767",
        "cursor": {
          "ref": "4f703b38-caf1-4e95-b6f7-9e4ae684f12e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c0fb2a2e-2987-43cf-a933-c8a772fdb18f"
        },
        "item": {
          "id": "af602154-fd17-4da3-bab7-81c2f1f11767",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "18ca3123-5e75-484b-8359-63e82518ead1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b740912-b722-46b1-88a8-4464e35451a4",
        "cursor": {
          "ref": "f59f44b6-3e93-4b46-82e7-383f8dff7280",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f7b18baa-2dc1-4793-88b7-bfcd258d1c16"
        },
        "item": {
          "id": "7b740912-b722-46b1-88a8-4464e35451a4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9b21054f-15af-48ea-b3fb-353464b54a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21970fd7-62f8-4dec-a20b-cf3d4f06f484",
        "cursor": {
          "ref": "79274fa6-c095-4538-b406-2ec81ee6fed8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "039ac729-8885-4d23-a870-492f334327f0"
        },
        "item": {
          "id": "21970fd7-62f8-4dec-a20b-cf3d4f06f484",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0aa3a907-4786-48e6-9992-7459d93699a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcc7d62-4a65-4e97-b8dc-6bf6981261c5",
        "cursor": {
          "ref": "0bb5fa8a-ed98-4fd4-ad9a-e4ea3f07df53",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ff6b312c-2739-4aad-8c7f-32a2566012d9"
        },
        "item": {
          "id": "0dcc7d62-4a65-4e97-b8dc-6bf6981261c5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0c7b8ef1-056a-4a6d-b62e-0e8fd0874c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802bdf30-0472-4ea5-a256-cd2f1ce9bb2d",
        "cursor": {
          "ref": "7faddf77-dee0-41c2-98d9-0dd2861b874d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6cf3049b-c0a1-44d3-887a-50a047d2fa24"
        },
        "item": {
          "id": "802bdf30-0472-4ea5-a256-cd2f1ce9bb2d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dd73d90b-8a76-4771-b1ca-1454715811f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a92417-f3f3-4493-9f09-da9fe3922f19",
        "cursor": {
          "ref": "2ce1831f-aaa8-416e-86da-b48973cd452e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fb6a8864-00ab-4168-9dca-bbd6f1d31be3"
        },
        "item": {
          "id": "d9a92417-f3f3-4493-9f09-da9fe3922f19",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "aab43dd3-b0b1-4154-b8cb-00be4460c6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d01848f-a71b-4778-95db-07095b0ddfb4",
        "cursor": {
          "ref": "a80e679e-103e-4927-b130-7c9acebe5d7d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bdaad52e-1a26-44c5-ae79-90e8732e37c0"
        },
        "item": {
          "id": "9d01848f-a71b-4778-95db-07095b0ddfb4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c842df2d-e16a-4afc-a61e-9ec1c82ac77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf8bad6-e361-4669-8b77-d07dd3eb9d81",
        "cursor": {
          "ref": "bab91071-9dd0-4812-80a2-d39884241692",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "61de2a0b-161b-41be-a003-b39b114bbad2"
        },
        "item": {
          "id": "9bf8bad6-e361-4669-8b77-d07dd3eb9d81",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "884fee68-80aa-4f3e-8697-a77f9ebe350e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dfc31b-5fd8-4144-9c70-ad71848c902f",
        "cursor": {
          "ref": "16ae4612-cc2f-4f8d-9098-8f814392bf33",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c0598fd6-2df0-493b-baf9-71163ab88d10"
        },
        "item": {
          "id": "35dfc31b-5fd8-4144-9c70-ad71848c902f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c43bc6c3-908e-4f67-95be-36ce3354ac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd91bf4c-ee03-4e68-93e2-3b22303036d1",
        "cursor": {
          "ref": "32b0c694-259e-4663-a510-4228522a3557",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3956d6cb-6f00-45a7-9c9d-16764c57c509"
        },
        "item": {
          "id": "cd91bf4c-ee03-4e68-93e2-3b22303036d1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4a9ed307-3c62-49d5-b7bf-e2f27b39951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5cbb2e-095e-4a0d-812d-1886d066f2fb",
        "cursor": {
          "ref": "19a6e220-6d08-464d-ac8e-60deed93f575",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f6046fd7-a3c6-4e03-8854-df1c5fae5ace"
        },
        "item": {
          "id": "0b5cbb2e-095e-4a0d-812d-1886d066f2fb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "39617e01-5276-4dce-bcbe-2bb0e16714a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b82db3-d4c4-43bb-8429-14bc3b7ac3d2",
        "cursor": {
          "ref": "60ab09f2-fbad-414a-8373-d5a17c0f71c0",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "08f205a3-f216-4252-87db-a83f23b83bc7"
        },
        "item": {
          "id": "17b82db3-d4c4-43bb-8429-14bc3b7ac3d2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9e4812ba-cc0d-43b1-835c-3b98c679d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728c7559-bd2d-4a13-b9ba-557f7d2f737c",
        "cursor": {
          "ref": "44064d5e-b57c-4368-8846-f926877d78d5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "11efdc07-20e8-4aec-9292-2c70ba2e721f"
        },
        "item": {
          "id": "728c7559-bd2d-4a13-b9ba-557f7d2f737c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4466d325-60d6-4aaf-ba02-88dd2c89074f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8184ae4-06a6-4278-a80a-3ab2ef6c2167",
        "cursor": {
          "ref": "0da74b63-56a7-419f-bc83-35f9cb906280",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "de85703a-5b50-4e41-9b3b-bcc0c7d8f7da"
        },
        "item": {
          "id": "b8184ae4-06a6-4278-a80a-3ab2ef6c2167",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6d0e659c-52da-48d3-b75a-175fc4f29a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bd9afb-26c6-444f-a7fb-f97d140b2f44",
        "cursor": {
          "ref": "cd3986a2-94a9-40f6-b8cf-237da484708f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "98cb40f3-b29b-4c31-9a51-cf82410664c8"
        },
        "item": {
          "id": "b2bd9afb-26c6-444f-a7fb-f97d140b2f44",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "aaf41696-e182-4724-8d52-e79c803a9ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47772c4e-d57b-4d9d-9722-da49dfd0308d",
        "cursor": {
          "ref": "777f449b-2a6e-4130-a1db-83679cb62ff4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "52cca19b-7c94-4169-a81a-c0069879a0fe"
        },
        "item": {
          "id": "47772c4e-d57b-4d9d-9722-da49dfd0308d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8057fb6d-ec90-4e91-8dca-ecfca6322ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcbeda7-3478-4088-b518-00b77fac309c",
        "cursor": {
          "ref": "a7e0efdf-b492-4c6c-9005-6625b582b157",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9d9c80be-fca0-4c09-8e3e-81cb94b09c98"
        },
        "item": {
          "id": "2dcbeda7-3478-4088-b518-00b77fac309c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "45faadf7-de1f-4591-8644-3b21f4f0801e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25250623-fdab-4b7d-99c4-42de04b650d2",
        "cursor": {
          "ref": "9e2917af-1b7c-4e69-8bb6-68f4edb52b4f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b289506d-5a7f-4b8e-9890-4c5901f87fbe"
        },
        "item": {
          "id": "25250623-fdab-4b7d-99c4-42de04b650d2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cc9e0a1c-dce4-482e-b4da-4223b64ec610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8b6cfc-d52e-4018-8de0-9f9783cdb506",
        "cursor": {
          "ref": "dd489a77-2718-44b9-a5f8-91dc6d13cd3a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d3b9ff8b-9fa0-4a84-82f4-c720d9a2f35d"
        },
        "item": {
          "id": "bc8b6cfc-d52e-4018-8de0-9f9783cdb506",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "992521e0-a691-4fe6-b91b-78522c2caa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be013465-cab9-42c9-b463-d251ef1800e7",
        "cursor": {
          "ref": "36f4eb5a-c3cf-40a6-82e9-b7c2dc088a32",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "49ccb26e-701c-4dc0-9ab0-977920f3bfeb"
        },
        "item": {
          "id": "be013465-cab9-42c9-b463-d251ef1800e7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c0f5c1c9-82a7-473a-a9ea-763eb307611c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe79b8b-f0e7-4838-ac20-8fda3d97d91e",
        "cursor": {
          "ref": "5a7f5a98-e325-4ada-8ba5-7e1d6ff9e460",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cac887b3-155d-4bbe-8a98-2b9543262714"
        },
        "item": {
          "id": "bfe79b8b-f0e7-4838-ac20-8fda3d97d91e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e623d2d4-e740-4d16-8df9-debf48e14434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8f2223-6976-4f2c-977b-3f48261c0360",
        "cursor": {
          "ref": "6df5f412-b88e-4ae1-87ef-011277888054",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "14931ea3-7e9d-4478-a2b0-ffab737b54ab"
        },
        "item": {
          "id": "4b8f2223-6976-4f2c-977b-3f48261c0360",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6ff5f1f7-76de-44ca-94ff-adb83b7ce737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669f7eb7-6bd9-407a-89f0-5e96471df2be",
        "cursor": {
          "ref": "903d80c9-19c7-46f0-b2b8-002451eba87c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3e88c805-23c7-48d3-9b2d-de0b610091f2"
        },
        "item": {
          "id": "669f7eb7-6bd9-407a-89f0-5e96471df2be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aa70229e-6418-4586-8919-bc80cd3e2da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fe9522-0dd2-47b9-b1bd-93506b4496d2",
        "cursor": {
          "ref": "a3a5b0be-3139-4951-af31-1b158b3b31a5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "910a9060-bc55-4be9-8d32-650c0c97b050"
        },
        "item": {
          "id": "b9fe9522-0dd2-47b9-b1bd-93506b4496d2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a4c17686-4146-4502-bf69-5de5ee068f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca99c68-f6c4-4f42-8dff-c39d1fe89b24",
        "cursor": {
          "ref": "879a9231-ef7b-4f81-a988-487c6d002e9d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2c1788cb-3757-4d3e-b800-9bff826d03f1"
        },
        "item": {
          "id": "2ca99c68-f6c4-4f42-8dff-c39d1fe89b24",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "53b9bd2b-4a32-4888-88dc-66b78450a9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb9cd5c-fd91-4af6-ad97-9d1efe1a4473",
        "cursor": {
          "ref": "846b8a26-b615-4a2e-be7e-65d0fa9fa8e2",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c1dde110-66af-42b6-a078-eec98b3eebdb"
        },
        "item": {
          "id": "7bb9cd5c-fd91-4af6-ad97-9d1efe1a4473",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "44a31535-b9fe-450e-bee8-3dad8313afb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a315c4d-048d-4ee4-b445-021c12114443",
        "cursor": {
          "ref": "929bbee5-f0f1-4760-b0ab-033bc21c5117",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "651c18cf-0f7e-4b85-b515-26abc083d9a1"
        },
        "item": {
          "id": "5a315c4d-048d-4ee4-b445-021c12114443",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7f0b2721-cb1a-4fea-911e-2fe3fa6841fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3298d6c9-8c5b-47fc-a03f-ac66cd9e1773",
        "cursor": {
          "ref": "d351dd38-135c-4645-b9d3-89eaebdfd4fd",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "37d42e8b-3ced-47c8-a19e-78e4be257d10"
        },
        "item": {
          "id": "3298d6c9-8c5b-47fc-a03f-ac66cd9e1773",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1e81e61f-71a7-426b-9d0c-72e2bb8aaebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a843750-eb33-418f-b983-490fa00c880b",
        "cursor": {
          "ref": "51e56f83-640b-4ebd-99d9-2f05bd552b60",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5b5a0d37-b57f-48de-9ab9-4600de5d0679"
        },
        "item": {
          "id": "2a843750-eb33-418f-b983-490fa00c880b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0b58bd0a-1082-423b-8cbf-69d4e1cc122a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b648ebb0-5e1a-465a-91fc-eb14fc9d2481",
        "cursor": {
          "ref": "14f44079-d2dd-4568-8ef6-92701a3e8a65",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ad7da558-c644-47de-9e88-a2bb415eebd2"
        },
        "item": {
          "id": "b648ebb0-5e1a-465a-91fc-eb14fc9d2481",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aa4cf9ea-1f20-42cd-8072-c9a412739d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff8cf99-aa82-4689-a655-375768d4a9c1",
        "cursor": {
          "ref": "59de7122-1689-4cbf-a00f-9a27262af60a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5f581f24-f3bc-4734-9688-e22363a7f9f5"
        },
        "item": {
          "id": "aff8cf99-aa82-4689-a655-375768d4a9c1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "17aabbf2-49c7-41fd-b177-337c042e0f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53954012-aa46-49eb-8262-6eba832261c2",
        "cursor": {
          "ref": "048d52e4-a1a1-4ccd-a16d-53aeb64d2459",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "484a918f-0c5b-4564-a58b-ad1c09a94fcf"
        },
        "item": {
          "id": "53954012-aa46-49eb-8262-6eba832261c2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9b35e4bb-7aae-4cde-9c3c-e2cc3a03fbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd5a85-6c01-4135-8fa3-234e47db6ef6",
        "cursor": {
          "ref": "733aae6e-af06-4189-b2fb-43a235e15ce3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4e984e41-f20b-4e9d-acf9-e5fb6f8c06a5"
        },
        "item": {
          "id": "79fd5a85-6c01-4135-8fa3-234e47db6ef6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "61333fc9-2312-4f3d-a880-658cc7b8e744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65e9e15-1e07-4d48-bf2a-7529c53afd19",
        "cursor": {
          "ref": "6b61778e-c844-45d3-8a94-d917f360980e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "311b0ffa-fef5-458a-a8a7-16c789f4bb57"
        },
        "item": {
          "id": "e65e9e15-1e07-4d48-bf2a-7529c53afd19",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "28d60129-de79-4e21-beb0-8e8e4ac2b280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ceaacc-3745-4572-b563-97f0a3aae80f",
        "cursor": {
          "ref": "6558474d-caca-40dd-942b-db025fd0842d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b6ec1491-c4b8-46d3-bc00-e74f56101457"
        },
        "item": {
          "id": "f6ceaacc-3745-4572-b563-97f0a3aae80f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1147d0c6-53c3-4eef-90d9-e607f18235a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0510d70-72f2-4f75-865d-8f0ee4b1d6dc",
        "cursor": {
          "ref": "180e0beb-1386-4fbb-813f-b9fdea75fb94",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bb4096dd-5aa5-4df5-b7ed-a188bf58f2b8"
        },
        "item": {
          "id": "d0510d70-72f2-4f75-865d-8f0ee4b1d6dc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9efb4ade-1f19-46b2-b1be-933a2cd49779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8905777f-424c-464d-90dd-07d78050db60",
        "cursor": {
          "ref": "0ef1c4ba-aeed-4c6c-a262-c3a72d736d25",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "af46bce5-da84-44a1-8d3a-e4aafe262d19"
        },
        "item": {
          "id": "8905777f-424c-464d-90dd-07d78050db60",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7628b253-98df-43fb-b841-9cd0877c3af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e40a24-646e-437d-9d48-1bbf0495bd47",
        "cursor": {
          "ref": "6c6b6b8f-18b8-45ce-bedb-5c857eea3709",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "475b7b81-8abb-4c49-8130-c525bef80295"
        },
        "item": {
          "id": "c5e40a24-646e-437d-9d48-1bbf0495bd47",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dc20e97d-620b-4dcd-88d2-32933e4964af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d9989f-0de4-4253-80ce-7452f323ce9f",
        "cursor": {
          "ref": "f213d333-3d92-4855-8863-3977937b2a87",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b78e703a-4b8a-46ed-a263-0bebe88ada8d"
        },
        "item": {
          "id": "60d9989f-0de4-4253-80ce-7452f323ce9f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bd4a0934-a77e-40f3-94ea-9720ebcdbc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f258d-3500-4d15-9bba-e54ff174f816",
        "cursor": {
          "ref": "e4051fbc-9cae-4641-ae7b-da78331664b0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "220017e6-be6d-4cff-ab90-386e2d1074e1"
        },
        "item": {
          "id": "a64f258d-3500-4d15-9bba-e54ff174f816",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "03cdb61e-55ab-44b3-9047-c18ccdfb6276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b797f6-2c35-4ec2-a9ec-49bc06d984b0",
        "cursor": {
          "ref": "225c7b49-f8e6-4e3e-81ae-7d8cc83cdf33",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8b21c5ce-82d8-4f14-9544-928c333c37cc"
        },
        "item": {
          "id": "52b797f6-2c35-4ec2-a9ec-49bc06d984b0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4eea5f94-6b81-4c44-95ad-8b82ad3bebe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5e465b-4b90-4df2-b95d-a649e78af0c7",
        "cursor": {
          "ref": "33f43cb2-b4ea-408e-9a8b-80fcc6b7433c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "85ffc6d0-c484-4f5d-9977-f9ada4b0edd2"
        },
        "item": {
          "id": "6b5e465b-4b90-4df2-b95d-a649e78af0c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bd7d7b49-5cd0-4103-869e-a799ca9a13e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0491f29a-e679-4994-8fa4-9ff75830b96c",
        "cursor": {
          "ref": "eb395af4-a981-4104-9297-09df2d590f45",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "72fbf3f3-25e4-4371-ba12-3ab60124990f"
        },
        "item": {
          "id": "0491f29a-e679-4994-8fa4-9ff75830b96c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3d55b379-fde2-415a-9464-b966fbead4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0580ed58-6fc9-4e97-869c-bae4457e906f",
        "cursor": {
          "ref": "e27a777e-19e4-4937-9a22-6c956b6c0481",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "75fd269c-df47-4e7d-87c2-a295c77f678b"
        },
        "item": {
          "id": "0580ed58-6fc9-4e97-869c-bae4457e906f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "add37a41-2312-45f9-a7fe-51a54df52b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0722d205-0c9b-45f7-aef6-e21a58abb16c",
        "cursor": {
          "ref": "b2bd34cb-737f-4c50-9260-ddf1c1361041",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "befda492-a236-4145-823c-9ffaeb959c2b"
        },
        "item": {
          "id": "0722d205-0c9b-45f7-aef6-e21a58abb16c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "05be0bcf-0189-4bde-ab91-8d206fe06c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c165e25-8a79-4c25-a042-6d8909f91d21",
        "cursor": {
          "ref": "767786cf-fc84-4d77-94f3-7942870c6311",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "07061353-fca8-47c9-8688-2130aa8f8314"
        },
        "item": {
          "id": "3c165e25-8a79-4c25-a042-6d8909f91d21",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "70fb655c-a7cd-4b4a-9d9f-253885f446c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7e4a90-eea4-46b2-ba49-b6270ac0037e",
        "cursor": {
          "ref": "7cc77b65-6915-4a21-9c8d-5dcdf69bf139",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "49663b94-f591-4ec6-9796-1ff2c3d6ba02"
        },
        "item": {
          "id": "3d7e4a90-eea4-46b2-ba49-b6270ac0037e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4ceec819-2b08-4584-b5a2-802c8f9e28ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59191ec9-70c1-4851-8b99-ee1560878128",
        "cursor": {
          "ref": "4cb66df0-7a8c-4512-8964-a640c2b4a1d8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "45c3ec1e-8c24-4b60-88c7-ed61525be0eb"
        },
        "item": {
          "id": "59191ec9-70c1-4851-8b99-ee1560878128",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "24b332e8-78c8-4ed1-9cf3-92b2edd04f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361860bd-3cc5-43cf-bb2a-6246d2799315",
        "cursor": {
          "ref": "b6bda9fe-1e29-46b5-b155-96d4902f9c00",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "927ca9e3-b61b-49ee-be4a-e82a5d57f60c"
        },
        "item": {
          "id": "361860bd-3cc5-43cf-bb2a-6246d2799315",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a791d628-a252-4358-bcb7-18b0a65f17c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d3db39-29fb-40a4-9b0d-e33e170e2d91",
        "cursor": {
          "ref": "b86a2337-c39c-4eb8-a8ac-fdb248d46e7f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3169ff94-be67-4dca-9216-6ba5ab74813f"
        },
        "item": {
          "id": "03d3db39-29fb-40a4-9b0d-e33e170e2d91",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4953c24a-f41a-49ff-90e3-0c67fa37292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84873849-384b-47d9-8b42-fbf4eb77eebe",
        "cursor": {
          "ref": "5a390858-0a5a-41d0-b3ac-02d9d7017604",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0cb49657-454b-468c-90e2-8ec1e5f87264"
        },
        "item": {
          "id": "84873849-384b-47d9-8b42-fbf4eb77eebe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "20abb1db-684f-4403-b260-90ba8b1080c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2670e072-58c7-4579-82e2-68f811586a8f",
        "cursor": {
          "ref": "6f41c094-cd44-4406-b73c-7d9d2c74f32e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fe83155e-d208-4146-ba83-feb79be1692e"
        },
        "item": {
          "id": "2670e072-58c7-4579-82e2-68f811586a8f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2196452c-fe58-490d-aa07-b05ec5af53e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173a161c-03c7-4a1e-8dc2-f27c6b5748c8",
        "cursor": {
          "ref": "511d0181-8aca-48b9-884e-e65233540c57",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1a19eb3f-0ec2-49a5-b14d-cca760bfb937"
        },
        "item": {
          "id": "173a161c-03c7-4a1e-8dc2-f27c6b5748c8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "70d826e2-d5aa-49f4-808b-93c0e8eb7694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3aef879-34d6-4080-ad47-05d2c0c28db3",
        "cursor": {
          "ref": "dd0f1869-7243-4889-89b6-253f7e73eb98",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e5016e15-0059-489c-a58b-f51b6f266c0c"
        },
        "item": {
          "id": "f3aef879-34d6-4080-ad47-05d2c0c28db3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3b0d43d2-c506-42f1-b669-e413dc3bfe34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f649b52-c119-4058-9277-4bbe532706e3",
        "cursor": {
          "ref": "7bfffbba-08ee-47ad-82f8-3a0bf9d3c7ed",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0dd883a8-73a1-4db6-be43-a39b0c12eb34"
        },
        "item": {
          "id": "9f649b52-c119-4058-9277-4bbe532706e3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "91d8cee4-3272-4151-ab0a-41b4dd47f0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93a9d33-5e25-4113-b59e-d44d32c525a2",
        "cursor": {
          "ref": "3c43d064-e612-465c-a392-5ebe6dff7ac6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5b2630f7-ecc5-4ff2-a587-d889b90c6b37"
        },
        "item": {
          "id": "f93a9d33-5e25-4113-b59e-d44d32c525a2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "10f88a9e-0564-49a6-9309-41f00738955b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47f6c4f-d6d7-48d4-be7f-9d6bfc8d03ce",
        "cursor": {
          "ref": "5c3093c2-b4bd-4a92-9e2c-e6890a0f3a8a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b922a6ad-9a32-4b23-b09b-931f1bb52792"
        },
        "item": {
          "id": "f47f6c4f-d6d7-48d4-be7f-9d6bfc8d03ce",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d36a1425-5c36-4616-b3c5-370b4bbf4615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9dda2679-80fa-4ade-ba6e-ccb85d27091e",
        "cursor": {
          "ref": "3f079bd4-eaa7-4394-8f39-687c9f11b849",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fcd77367-69cc-43c8-8476-3ccf35915797"
        },
        "item": {
          "id": "9dda2679-80fa-4ade-ba6e-ccb85d27091e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e8ebf8f3-610b-4a40-88f2-bd909b69d7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ba210ee6-a7e2-46d3-97a9-8da25057f854",
        "cursor": {
          "ref": "bbcf3702-1fc9-4192-b802-b124a3bb7035",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e76c1933-a14c-4eff-a2b8-6d8f2ad1571d"
        },
        "item": {
          "id": "ba210ee6-a7e2-46d3-97a9-8da25057f854",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c5aab664-233d-4c33-8ce1-274c3abce899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a5e63dbc-5d68-4847-a9af-bdb3366ff457",
        "cursor": {
          "ref": "92f70024-7a58-4018-9847-3e6ff4686238",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "320a16b8-a060-4714-af8b-2b58af83cd81"
        },
        "item": {
          "id": "a5e63dbc-5d68-4847-a9af-bdb3366ff457",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "428dd7f5-fca5-42df-8dea-4b84571a2428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b6c4d7d3-c580-4924-acf6-7b212723cea5",
        "cursor": {
          "ref": "99ad434c-2f4e-46d0-81dc-b6d2da0f0f31",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c94a5996-1495-4fb8-a25b-58519ea2acc2"
        },
        "item": {
          "id": "b6c4d7d3-c580-4924-acf6-7b212723cea5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "33b73246-e01f-4a6c-aa55-a0061eed2b00",
          "status": "Created",
          "code": 201,
          "responseTime": 12136,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "42caa591-8299-475b-a7f5-bf6647aab713",
        "cursor": {
          "ref": "f1b3502d-7d96-4fa6-882a-6817420a0278",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d4c569c6-e13c-476e-a7cb-afd94e91e087"
        },
        "item": {
          "id": "42caa591-8299-475b-a7f5-bf6647aab713",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "02199faf-b751-4648-8d9d-2779ea89b984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "49c420e2-6846-4eee-9bae-2d8f2a824d28",
        "cursor": {
          "ref": "55e4a7b7-234b-40cf-a9c9-3d02eb50b83e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d181c911-120f-4eb2-b347-368d960555bf"
        },
        "item": {
          "id": "49c420e2-6846-4eee-9bae-2d8f2a824d28",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f22e9fe2-e089-48e6-8375-d21740a3ff12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "63e84410-96f4-4e33-a923-c4105174870d",
        "cursor": {
          "ref": "21374662-0508-41f3-81b8-a0f5955765d2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "75bb2070-c920-4e97-a544-6af9617079d9"
        },
        "item": {
          "id": "63e84410-96f4-4e33-a923-c4105174870d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1215a071-3a07-4bd5-8fda-39fe652653f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076802ac-7dea-433f-a849-20a8148cc008",
        "cursor": {
          "ref": "4751cde0-4846-4098-b9c6-cd682814fe36",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1cdf5c4-c46c-4f41-b05f-e7f8e6132576"
        },
        "item": {
          "id": "076802ac-7dea-433f-a849-20a8148cc008",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5184eb6f-0945-4a47-85d0-4e8b50e64cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7924878-957e-4ce7-8092-4024ad4c3db0",
        "cursor": {
          "ref": "308c754a-2483-4de6-8ca8-25682aa92910",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "62136e52-b2b5-437c-a1f0-7a2f5688d366"
        },
        "item": {
          "id": "e7924878-957e-4ce7-8092-4024ad4c3db0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "82b5e7be-e510-480d-8610-d95eb1878c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e364357d-87ee-4757-8ec7-48377fa9572f",
        "cursor": {
          "ref": "84dd5ddd-695f-4084-8044-c6d874eb3ca3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e0110a16-8200-43e8-ae6a-38fbd753e245"
        },
        "item": {
          "id": "e364357d-87ee-4757-8ec7-48377fa9572f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c5fa824b-6a59-40a2-9b52-59aadc1fb361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48df1630-02de-47b3-9ee2-6056074dd952",
        "cursor": {
          "ref": "e90aa099-ff87-4c91-b756-5a4c32dfc581",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c98903c5-19cd-40d6-a287-bbee6a487b35"
        },
        "item": {
          "id": "48df1630-02de-47b3-9ee2-6056074dd952",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "afb8f691-dd54-4185-b5bd-c6463a2a68ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3e17b9-c96c-4db4-b34e-560a20258a0a",
        "cursor": {
          "ref": "1f501e52-869b-40ac-8707-05aa03117543",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "222a38a2-cdd0-4488-9c62-24738cb26d4c"
        },
        "item": {
          "id": "7b3e17b9-c96c-4db4-b34e-560a20258a0a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a7c1e2b5-f015-46be-9183-36fcdcbc3467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b098b602-e814-407c-aba1-6780f056f72b",
        "cursor": {
          "ref": "a3cfaba2-1c37-4b14-8ce9-2501e52da7b4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7ca47f0a-c9c1-443c-8a17-e33d6ba4fc2e"
        },
        "item": {
          "id": "b098b602-e814-407c-aba1-6780f056f72b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2f3ec4ea-cf13-4552-b3e0-32dbd3ae5b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30c7b85-1fc0-4c08-9764-648eea7476e1",
        "cursor": {
          "ref": "166d07b6-561e-42b2-b8ed-79312d3e78a7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c2e8b1af-e24b-48a7-93a4-4a0d42086be8"
        },
        "item": {
          "id": "f30c7b85-1fc0-4c08-9764-648eea7476e1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bf4f132b-bf85-4682-82d7-20afbf4e4f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b517f367-baaf-4940-a0b5-282b2d5229f4",
        "cursor": {
          "ref": "79ca307f-4900-477e-a791-1f05c0ea0430",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4a26dcd8-7f6e-41dc-b2c7-6a4d3542274b"
        },
        "item": {
          "id": "b517f367-baaf-4940-a0b5-282b2d5229f4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "51b9c94b-f632-4a36-9066-a4b6044ade8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17340078-7526-424c-ab70-6ff3302d85cc",
        "cursor": {
          "ref": "44ee4bfa-abde-4121-a06b-e5d4ce171314",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "df159fc1-df63-4122-8990-e89e5abbce30"
        },
        "item": {
          "id": "17340078-7526-424c-ab70-6ff3302d85cc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d246c64b-7d8e-4f99-94f0-5180c54f7751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9e8831-75e9-4106-9d1c-1ea35f6fc2ee",
        "cursor": {
          "ref": "81c74990-593b-4664-8d43-5a5af313a09a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fc6251a2-7f94-47f7-86a8-bdbd663b3326"
        },
        "item": {
          "id": "5b9e8831-75e9-4106-9d1c-1ea35f6fc2ee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e3eb2a1d-0d53-435f-afee-2cf60a7debee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6f772b-ecac-4ab2-9da6-ef50bbe26f5e",
        "cursor": {
          "ref": "127ddaf3-659e-4f9b-9157-ca1259750776",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8d38e50b-2115-4c0c-ab31-3f215e91457e"
        },
        "item": {
          "id": "4f6f772b-ecac-4ab2-9da6-ef50bbe26f5e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "57284080-383d-49d7-b834-c429fd242958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52c351a-8d95-464b-bb93-d0bf7028d069",
        "cursor": {
          "ref": "a844a025-9461-44ff-9325-826ab16cdb55",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f8f64d8f-46cc-4abc-834d-ad6dcc23ff6b"
        },
        "item": {
          "id": "d52c351a-8d95-464b-bb93-d0bf7028d069",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "849c28dd-0c66-499f-ac43-7e14892a0538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628783b7-718a-4932-9128-8d693f0f447e",
        "cursor": {
          "ref": "4cf2d833-f466-4b3b-abb8-a4316ce4928c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "02a5382b-a24f-40af-bfa8-2c323508cb93"
        },
        "item": {
          "id": "628783b7-718a-4932-9128-8d693f0f447e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3a9e197e-eb33-4deb-9134-6e9e7f19810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71988866-fab8-489c-8179-7195f41f12ee",
        "cursor": {
          "ref": "9e7c3675-5dda-4501-a7ec-6b5f0ec1d190",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ce6fc94e-b526-4edc-9e4b-ddd9c12bb6b5"
        },
        "item": {
          "id": "71988866-fab8-489c-8179-7195f41f12ee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a8ebc9df-23e0-4af2-ba6d-c42bc3108d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8946bb-8b9e-495d-ad31-1c7c041bc4a5",
        "cursor": {
          "ref": "0168ebfa-8d73-4147-a6e1-63f70bfdb9c6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "22725875-40d3-4dae-ad37-fa6bb8a0c70d"
        },
        "item": {
          "id": "4c8946bb-8b9e-495d-ad31-1c7c041bc4a5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2ed4a665-22e0-4da8-9db3-908d6b6ae806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c50945-caf8-4dfc-b0c1-89a2f3fe81d8",
        "cursor": {
          "ref": "a38ae510-fd80-47cf-97a2-e2bdbb85de30",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6ed56d6e-9c65-48f0-90cb-5a037ea1e274"
        },
        "item": {
          "id": "63c50945-caf8-4dfc-b0c1-89a2f3fe81d8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "309b4589-a5fe-44c3-967e-4e68b8510eaa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "04f5c282-5660-46b2-b1a6-666dd470911e",
        "cursor": {
          "ref": "9cea02ce-4d94-4018-861d-dda6828592a9",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fa2ffce3-3959-4280-9df9-64f21c81f41e"
        },
        "item": {
          "id": "04f5c282-5660-46b2-b1a6-666dd470911e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "606f13a5-0e2d-4aa9-9749-5b5676ed67b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17d2c9d-a10d-4263-9148-62d3184c6515",
        "cursor": {
          "ref": "cf3f6363-d8fe-4405-a9af-ada1f3f11f3c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "06a62292-b5f4-4faf-8a4e-7315a8af2bf6"
        },
        "item": {
          "id": "d17d2c9d-a10d-4263-9148-62d3184c6515",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "311e6489-2e0b-408a-ba24-cc14700eab06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cd56ab-dcf5-4206-93a0-491d4758b467",
        "cursor": {
          "ref": "333424d5-9b27-48f4-b987-bdf0b6743805",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ee9855cf-2c48-4023-966b-0296592ed909"
        },
        "item": {
          "id": "51cd56ab-dcf5-4206-93a0-491d4758b467",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f8e04127-d375-499c-9c58-e8c696ba8d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309b9ae9-8453-40f9-8580-4ab58d2c198a",
        "cursor": {
          "ref": "736c903b-7c7d-414b-81d0-abc03250eadf",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "776120aa-abb7-4025-8d93-4423380a941f"
        },
        "item": {
          "id": "309b9ae9-8453-40f9-8580-4ab58d2c198a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4faa225f-b14a-42fa-bd6e-657a63c61ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e202f6f6-9c90-48d2-b3b0-eb2c6752061c",
        "cursor": {
          "ref": "b237068a-e52d-48ba-b638-c2700a3348a4",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "85d1dca8-fd65-4c20-afaa-d9b43d0cd05d"
        },
        "item": {
          "id": "e202f6f6-9c90-48d2-b3b0-eb2c6752061c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e59ee31d-9bed-4c45-b513-b624b71b957e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa954f30-e379-4b26-b050-4d97128529bc",
        "cursor": {
          "ref": "b7303ff9-2f07-4f34-9896-c0ea682c88e3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "866ae946-3943-49c9-b304-93b55a04ef2a"
        },
        "item": {
          "id": "aa954f30-e379-4b26-b050-4d97128529bc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "843a1fa7-415d-4bbc-9b98-0863526707c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd982b5c-c7a1-425c-ad94-b27c991adb62",
        "cursor": {
          "ref": "20f57e97-ba37-4b52-975e-2bf1fcb0cbfa",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bcea535f-a281-4fdc-aac3-ea6be29e9bce"
        },
        "item": {
          "id": "bd982b5c-c7a1-425c-ad94-b27c991adb62",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "77bbb856-50dd-4237-a7f3-6a8a2c61abaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590b6c7c-731e-4300-9280-1bdd69c236ea",
        "cursor": {
          "ref": "18ec890c-4368-473a-9f8c-f34b2d3b233c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "af6f4a8b-1ace-498a-b8f6-7b55bef176b9"
        },
        "item": {
          "id": "590b6c7c-731e-4300-9280-1bdd69c236ea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cc9408c4-af75-4d5c-9478-e0dd6614f7dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2cbc5d2f-869c-4281-9792-b80325355675",
        "cursor": {
          "ref": "72381864-34a0-4fac-946d-4947977bd990",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "386120ba-1b07-41e6-bc9c-0d9f147edef5"
        },
        "item": {
          "id": "2cbc5d2f-869c-4281-9792-b80325355675",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8a6b14fd-1e55-44ea-b8b1-b700aca22d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dbea9f-0643-4012-93db-fb28bace22a6",
        "cursor": {
          "ref": "d276e100-83b6-4c79-88fb-9b0b8bff458c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0ce461da-4728-435b-983a-a82737a00074"
        },
        "item": {
          "id": "33dbea9f-0643-4012-93db-fb28bace22a6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ee76a92a-7680-4f1f-8d17-a4b3d6c11a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1502e197-a923-42a1-ad16-fd189c040df0",
        "cursor": {
          "ref": "015dbba4-79e1-4754-a539-df2951d36e4d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "524efaec-b489-4096-ba8e-facf07b30b6c"
        },
        "item": {
          "id": "1502e197-a923-42a1-ad16-fd189c040df0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b6f3e94-a877-4191-ba39-cd65138a8fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408e3035-88c0-4678-ada0-af3b66971a58",
        "cursor": {
          "ref": "ad5d842a-6243-4d85-9f8d-f9214990dc8c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c5119262-e3b7-4a3a-9fd0-9df6ffe734a7"
        },
        "item": {
          "id": "408e3035-88c0-4678-ada0-af3b66971a58",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "303b8bed-2500-4aca-ab78-f7a7dab4bdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406d9ca1-0a4d-427b-8a85-3af72378153c",
        "cursor": {
          "ref": "9036934c-4353-4b54-95e2-53af5bad6ff5",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "661e187d-5bdf-488a-93df-aeb7b772d486"
        },
        "item": {
          "id": "406d9ca1-0a4d-427b-8a85-3af72378153c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "570cbc44-2d90-4dc6-b126-77a9ce656551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e3d593-159b-4832-9c34-5e73e20652d3",
        "cursor": {
          "ref": "2a497e09-9de3-44cf-8a91-2a324090400f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2033e2af-5b1e-44e6-872d-0ea831b6ade7"
        },
        "item": {
          "id": "e5e3d593-159b-4832-9c34-5e73e20652d3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9fec8c3-b976-4c1e-b779-346462625018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64701e04-e526-46f6-9df4-d59e69dd39a2",
        "cursor": {
          "ref": "8bcc8a97-3e7e-47d5-bbae-78e02d8af311",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aaeb198b-2e6b-4b16-8fa6-5e345cdec27a"
        },
        "item": {
          "id": "64701e04-e526-46f6-9df4-d59e69dd39a2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "aa34496a-7ee4-4fb0-a92e-03ad0e73a3d5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "48059c4b-1eff-4188-90f1-7cde2fd12990",
        "cursor": {
          "ref": "1f18569a-33a7-48d7-8d0a-67bc8f9a5cae",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e7b2ca9b-49a8-46b2-8ccd-b8725ad6fc13"
        },
        "item": {
          "id": "48059c4b-1eff-4188-90f1-7cde2fd12990",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f9514936-4b0a-4874-b698-25563e89ccc2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "aa51719e-79a0-4f0b-bf64-c611b4cb3e1d",
        "cursor": {
          "ref": "3f03b9b3-d34a-4795-9c31-ee5216c74154",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4f8cbae0-4538-40ef-9e8b-bd4974dc4975"
        },
        "item": {
          "id": "aa51719e-79a0-4f0b-bf64-c611b4cb3e1d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c768a39a-a62a-4d5e-9597-ba77e1a03be2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f05e20b1-555d-4d31-aa65-57d07e0db1e7",
        "cursor": {
          "ref": "2b499f06-a467-4133-af92-7be75036532d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3151013c-c450-489b-b95f-81383bffa122"
        },
        "item": {
          "id": "f05e20b1-555d-4d31-aa65-57d07e0db1e7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6f5b21f5-9894-4f86-8f97-15be7a564796",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "e8448805-b4eb-4b97-b288-2c09b5852ded",
        "cursor": {
          "ref": "177bb7e6-66d4-4daf-a355-54cd3960e8e3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "97c04bfe-e3bf-49c6-b354-af7ffd0661a4"
        },
        "item": {
          "id": "e8448805-b4eb-4b97-b288-2c09b5852ded",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "429d750f-b162-4273-bbfa-5207db6e28a2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "fe00358c-2edc-4dbb-a07a-494137f12934",
        "cursor": {
          "ref": "f15e49e2-affe-49d6-a560-2a0e22042396",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "db5b9b8f-8e7c-430e-96ed-0aafb1bcbca4"
        },
        "item": {
          "id": "fe00358c-2edc-4dbb-a07a-494137f12934",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e7e5e4fb-69ea-4da7-8828-b811b41440a1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "471a8809-713a-40df-880b-651dd1087c2e",
        "cursor": {
          "ref": "64db26d9-ac47-454b-b397-8b93a9ae46ae",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b77fe550-69b5-4ff8-aa85-6183e574ba97"
        },
        "item": {
          "id": "471a8809-713a-40df-880b-651dd1087c2e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ec1d7bfc-ea62-4fe5-9b96-81b68122cd61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d548ca3c-163b-480f-85dd-7e611ca424f2",
        "cursor": {
          "ref": "114b7bcd-63a5-4186-831b-d82308d1f28d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e867bf4f-47de-41c9-9628-ed76e73e0e69"
        },
        "item": {
          "id": "d548ca3c-163b-480f-85dd-7e611ca424f2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e73c3269-2f16-4cd0-bac9-6d5cdf51ebfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6c1703-66b3-45bc-88cb-3ce9b6b107dd",
        "cursor": {
          "ref": "86bbbeb1-1f3b-4889-915e-1e6ecfca2081",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "391fb4f4-b25b-4f24-87ca-dd28999f2a61"
        },
        "item": {
          "id": "dc6c1703-66b3-45bc-88cb-3ce9b6b107dd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "033cea76-d8b8-4738-b658-3c7d756feefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a01099-bb88-4f45-9f6d-c2e9ef015491",
        "cursor": {
          "ref": "86e75e32-6a18-4e99-9592-0721e403938d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b8ea3460-3a13-424f-939c-a25a651ea92c"
        },
        "item": {
          "id": "d9a01099-bb88-4f45-9f6d-c2e9ef015491",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b7c3bb55-c0c0-4e45-b048-f6b7f45f6193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2661345e-e456-4dbb-b189-2fad5edbcf69",
        "cursor": {
          "ref": "c095e22a-5022-4b56-92d8-08f17cecc384",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "44907efc-5004-4520-b5a8-7b8fbcfd8b66"
        },
        "item": {
          "id": "2661345e-e456-4dbb-b189-2fad5edbcf69",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "38ab6e01-8ca7-49c5-87b6-b9d6c8cb4afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3983d992-82d9-4cc3-8f9a-b60573f34fea",
        "cursor": {
          "ref": "7be88353-f6bb-4c60-a684-9eb3e2220619",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4e384598-3940-4534-8df3-7fe765e9a688"
        },
        "item": {
          "id": "3983d992-82d9-4cc3-8f9a-b60573f34fea",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "86cc3b75-98a0-4c40-ad39-fac21f92cf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3cfcc6-46ad-46ce-916b-7f12b1f565a2",
        "cursor": {
          "ref": "76d8f00b-a416-4b54-a79d-361c81f6cdbc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "132077bf-49f8-4ab2-b500-c17a550edd39"
        },
        "item": {
          "id": "ae3cfcc6-46ad-46ce-916b-7f12b1f565a2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "740bb704-fb47-46f5-9f1c-d0a76dcdc9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1508087-156a-4be7-8150-b4151041cf4f",
        "cursor": {
          "ref": "0b829384-69e2-40d1-893e-e09e019f1b93",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "90165d2d-4cb6-48cf-9191-2d65a2d2a6fa"
        },
        "item": {
          "id": "d1508087-156a-4be7-8150-b4151041cf4f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d273c042-107f-4e13-ac70-3f6550143b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a2b134-51a3-407a-b9be-24d418f3284f",
        "cursor": {
          "ref": "e3519e0d-8034-4824-848f-309cb50a1202",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fcb581cc-506c-47ba-89e6-d17ba8b68b21"
        },
        "item": {
          "id": "97a2b134-51a3-407a-b9be-24d418f3284f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b933bae5-1c94-4801-bb35-408896000dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8691698c-efc7-4452-8d22-7d6712f6ccf7",
        "cursor": {
          "ref": "9ce20511-7f76-4afc-b1ed-2ca53515e7f6",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "82cfe4ff-674d-4ad8-bb1c-d96411157d68"
        },
        "item": {
          "id": "8691698c-efc7-4452-8d22-7d6712f6ccf7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0d292032-81df-4cfa-8d79-75ed81159f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9e923a-193c-4278-873b-f636bc222e2c",
        "cursor": {
          "ref": "616422a0-d409-43c8-8cdf-2332f9d04b04",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0015ddde-025e-407d-a9d2-3c9fac537835"
        },
        "item": {
          "id": "7b9e923a-193c-4278-873b-f636bc222e2c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "75103c86-4c56-4f42-9f7c-5a094c126a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adb60c0-a346-43ab-8c6d-0ee450ce3518",
        "cursor": {
          "ref": "adce48cc-6d35-4597-abc6-51f951ff627f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7ee40259-712b-4cce-9f52-6653aab17492"
        },
        "item": {
          "id": "8adb60c0-a346-43ab-8c6d-0ee450ce3518",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1ff046ac-9ff8-4c89-8f50-3c1bfe27c5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ca5ac7-d8cd-4da3-8f53-9dbe9ef5be7a",
        "cursor": {
          "ref": "32dfb0f1-0598-4d79-9623-3af810e7716d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cd611bd6-4f25-4a9e-b62c-5c31981cfbaa"
        },
        "item": {
          "id": "12ca5ac7-d8cd-4da3-8f53-9dbe9ef5be7a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9a4fd46c-52c7-4f48-9cc8-479ed55d1f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c350641-8dc6-4925-8f00-e155c24944ac",
        "cursor": {
          "ref": "0d88d74b-b5ab-4abe-b145-22eb10c9d269",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "23891e20-de32-4de7-8acc-82f1de83a3bc"
        },
        "item": {
          "id": "1c350641-8dc6-4925-8f00-e155c24944ac",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "65b08675-86dc-4b9b-aa79-22d32d973887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6321ef52-1afd-4aec-a0f1-33198848b77f",
        "cursor": {
          "ref": "96d984d1-e311-4c86-9c2b-eefa448ff877",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7ddd5c2d-d808-4e99-8eb0-382923a63664"
        },
        "item": {
          "id": "6321ef52-1afd-4aec-a0f1-33198848b77f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "54b105b1-71c2-42f9-bd20-975126cba2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73aa5905-ab91-4cba-a447-fad6d4aad5c7",
        "cursor": {
          "ref": "90da4a9b-0a16-446a-a8fc-f8763b0329e8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f6e0a733-3391-4bb3-905a-82f732f7b18c"
        },
        "item": {
          "id": "73aa5905-ab91-4cba-a447-fad6d4aad5c7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "62fb0622-73c3-4f87-b4d7-139e5385aa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6d5f83-276b-42b8-8073-733469e4c388",
        "cursor": {
          "ref": "fbfcb7b4-d025-4e78-81b3-f4d7acf5625a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "51188d6a-9cf1-4898-adf4-03daf44037fd"
        },
        "item": {
          "id": "0e6d5f83-276b-42b8-8073-733469e4c388",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cebf9eef-37b9-4fa0-af32-a178270b0953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f55bd2-b4d8-45bc-b8ce-bd556eeb3891",
        "cursor": {
          "ref": "7d7ef9f8-e80d-48b7-b814-00231656bc9e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "39963175-91b2-46de-9b53-abe242d5c6f5"
        },
        "item": {
          "id": "44f55bd2-b4d8-45bc-b8ce-bd556eeb3891",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9e09ef79-dbc6-4c39-a6c6-eff2f0a982e4",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "1f7b3bfe-450c-4ec0-9403-2c220f58bdfa",
        "cursor": {
          "ref": "9339dc41-4916-4fa1-9463-7b7355761f19",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9db8b746-283b-4637-afa8-b4e28b919fee"
        },
        "item": {
          "id": "1f7b3bfe-450c-4ec0-9403-2c220f58bdfa",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9acbaacb-6851-40b3-a0d2-d620b1b922b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706bdc71-7db8-47eb-8369-24dab25f0f1f",
        "cursor": {
          "ref": "6461ca1c-30b2-4f49-aed0-cb30f1569256",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "193a34c4-210e-4d62-b346-09d160e34ee1"
        },
        "item": {
          "id": "706bdc71-7db8-47eb-8369-24dab25f0f1f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "31038abc-f3e3-4836-9cec-76398ca1d586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a085190-8565-49c1-a59d-d74efdbd7a9b",
        "cursor": {
          "ref": "da7263c4-b4ea-4b0c-a86e-d7a25f3c7e15",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0e1def52-4b09-4171-b188-4789e03ee493"
        },
        "item": {
          "id": "0a085190-8565-49c1-a59d-d74efdbd7a9b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "61193412-4a91-483b-8c5c-73c53f1fda93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c566c413-1366-4dd9-9e78-14cbe7b4fc7a",
        "cursor": {
          "ref": "8f5f718f-62e3-4cde-9347-b7454f95c3ed",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5b9dc635-2c1d-4196-9681-0585adcc60e5"
        },
        "item": {
          "id": "c566c413-1366-4dd9-9e78-14cbe7b4fc7a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d832c8d3-8840-4e12-bc27-340318aceffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9b6201-d3b6-4d0e-bb61-edbd6859e46a",
        "cursor": {
          "ref": "610257c5-3692-4801-bd7c-23cc2a820ddf",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f71a2052-95c0-4d82-8cb1-4f63aaaa0457"
        },
        "item": {
          "id": "5e9b6201-d3b6-4d0e-bb61-edbd6859e46a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5ee3f032-1437-4e20-b8f1-73684d8fb351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75be12e4-35a2-4ba2-9707-bfe55aae7f0b",
        "cursor": {
          "ref": "9a4ec711-1753-46b7-90b2-70df87a4a625",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d0f6f47b-d596-4026-8795-e1b661b36eb7"
        },
        "item": {
          "id": "75be12e4-35a2-4ba2-9707-bfe55aae7f0b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "19b55f75-9f7a-4463-886c-0be0a9b51dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf0c413-7304-4904-8953-edb61c652da1",
        "cursor": {
          "ref": "fc33cfc8-db0e-41ff-8ce7-04252995e834",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0283759d-37cd-4d51-aee5-537c830d43e7"
        },
        "item": {
          "id": "3bf0c413-7304-4904-8953-edb61c652da1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cd868edc-7583-4200-bc6f-ea31f57826e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aec3fa-e795-44af-86f4-30269fbd9ccc",
        "cursor": {
          "ref": "6f34c57c-df78-435c-8ba3-29fa734df951",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4096c193-b7fc-492e-b495-bac0fcc866df"
        },
        "item": {
          "id": "90aec3fa-e795-44af-86f4-30269fbd9ccc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7efd607f-90f0-40c3-b04d-db8078d039f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2b6656-410c-4738-8ac5-63932f1d54eb",
        "cursor": {
          "ref": "993e1055-1f9c-492d-9bea-e61c030e66e8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "304bb53f-38ce-4d93-9973-d1a027343ead"
        },
        "item": {
          "id": "8c2b6656-410c-4738-8ac5-63932f1d54eb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e30e9e81-7152-4aa1-a1c2-e6079ad47909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281034c7-ec4f-4695-ace3-bb603217330d",
        "cursor": {
          "ref": "513da158-da88-4ac4-8e01-186575395e5d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bf1a85f3-46b1-405c-a5c8-0485053adb56"
        },
        "item": {
          "id": "281034c7-ec4f-4695-ace3-bb603217330d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "78745cd4-e616-43ba-b849-78115ebd10b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902538c4-1ab6-43f3-969a-41e3426049c4",
        "cursor": {
          "ref": "785f589d-4113-4661-8eb1-b606798566f3",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "163f90b5-4aed-4e69-808f-7fae88486179"
        },
        "item": {
          "id": "902538c4-1ab6-43f3-969a-41e3426049c4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e272cc21-31fc-45f8-840d-34d53a653db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802b3338-145c-485d-8dbc-0ded713fd132",
        "cursor": {
          "ref": "1bb99975-9a8e-4c02-b957-ca808d120136",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fb9904c7-2c9d-464f-bdcb-1899660fe8bf"
        },
        "item": {
          "id": "802b3338-145c-485d-8dbc-0ded713fd132",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9ac7d18f-101b-49a4-8df9-cb6fccba01bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0259ce11-8d1e-4de8-8095-af61889911bb",
        "cursor": {
          "ref": "faffc444-f427-4e1b-80f2-a1cd1ac66755",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "85bf9cb5-6e54-469d-a354-4796b7212bda"
        },
        "item": {
          "id": "0259ce11-8d1e-4de8-8095-af61889911bb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b72bc4dd-ee88-4857-90ac-872c27b4a0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f931f6f7-3949-4cc3-9706-8a17aae29fbe",
        "cursor": {
          "ref": "bc3a30da-d334-4abd-ab2e-32504fc3c354",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6bd9a4bc-3d61-412c-8031-a50a49d74ea9"
        },
        "item": {
          "id": "f931f6f7-3949-4cc3-9706-8a17aae29fbe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ebcc34f6-0700-4f61-8153-a693c56ffdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a00c1a1-ef21-4d18-b860-c367779ddc35",
        "cursor": {
          "ref": "de53bd70-eff5-4890-9ac1-15c3ec295fa4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cadd0e30-e4f6-4027-8a9b-84ef347de80e"
        },
        "item": {
          "id": "4a00c1a1-ef21-4d18-b860-c367779ddc35",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9729104d-5c70-4f9b-b409-83d5d83ed548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d2f8e1-1eaf-46ea-917c-9f3ee395cf3f",
        "cursor": {
          "ref": "c6c1d7d6-d8b3-4c85-a7be-de36532852ae",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f9c3b4d4-fb19-46aa-baa6-a2e89ea5c9f0"
        },
        "item": {
          "id": "86d2f8e1-1eaf-46ea-917c-9f3ee395cf3f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "03b5845f-b599-4f5e-a451-d8cd5c42299f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5835178e-1168-4e18-b5e6-e5c52aea2a79",
        "cursor": {
          "ref": "a8e96671-7525-409e-9d2a-efe449d93729",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "171a2daf-bcab-429d-ab57-9d42a2091a1e"
        },
        "item": {
          "id": "5835178e-1168-4e18-b5e6-e5c52aea2a79",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b2697ede-ff1f-4f2c-8b50-88e48a1fa543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609245a5-43b9-4a48-b5cf-32bafbddea92",
        "cursor": {
          "ref": "5877d089-10a8-45c1-bbc5-6f24fbbc02ac",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6c0f944e-045d-4a8c-974e-794dffe75438"
        },
        "item": {
          "id": "609245a5-43b9-4a48-b5cf-32bafbddea92",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "beccbc28-ed11-4724-b7d1-c3b59f188322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741bd171-3c54-4804-9d81-a65753c1257b",
        "cursor": {
          "ref": "5d0aa2f7-f7e5-4697-9dab-b0995f8be877",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f5d2e068-1eae-4c22-b206-74aced290578"
        },
        "item": {
          "id": "741bd171-3c54-4804-9d81-a65753c1257b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "64513f8e-56c0-49e6-910e-28a5d94605fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e2bd47-b64b-4037-ad89-b81d19d8395a",
        "cursor": {
          "ref": "6a914ccf-e449-421f-b201-8fc42f41110e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c7db0f34-c508-45c9-975a-da1080ea2a6a"
        },
        "item": {
          "id": "a0e2bd47-b64b-4037-ad89-b81d19d8395a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2efa55ab-8e21-410d-a7cb-1486c0f3022f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c845b30a-7064-4fff-bded-4ffe86287920",
        "cursor": {
          "ref": "19224248-7325-46e8-9e82-ee3b150e61d9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3b1c452a-88f2-46d6-b4e3-eae5e7efcf16"
        },
        "item": {
          "id": "c845b30a-7064-4fff-bded-4ffe86287920",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "066b14d9-5c39-4613-9a38-542b59554c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaf78c6-b278-446f-9aee-b1dcc59dd0a7",
        "cursor": {
          "ref": "a621f198-a2e8-4a19-8a03-308d3228ea43",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c7deec6e-49a8-41a9-9c71-d7a27a0e1cfc"
        },
        "item": {
          "id": "5eaf78c6-b278-446f-9aee-b1dcc59dd0a7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b5f8cfe8-26cb-47b8-bb9c-854ddeb1f4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02817bc-5577-4a6e-9f5c-c988acb7fbef",
        "cursor": {
          "ref": "9dff8745-7e2c-4e01-a768-7c17595082da",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "629ba371-31f1-4b43-b338-852d307a1668"
        },
        "item": {
          "id": "c02817bc-5577-4a6e-9f5c-c988acb7fbef",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "49ac2fd6-2988-4ad5-9fd9-44e05171bd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cb8e92-1f98-45ac-b1fc-e1e81709090f",
        "cursor": {
          "ref": "9dd73654-c25f-4ddb-9fe9-65d5d963bdf5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9ef5a0b9-0911-4d54-b656-9b8bdfb1585f"
        },
        "item": {
          "id": "e1cb8e92-1f98-45ac-b1fc-e1e81709090f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "40e0af0d-1ff5-48dd-86de-da8b8c20f344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f15b6b6-3cd8-42cd-b5fc-6458caf397ef",
        "cursor": {
          "ref": "e93bbb5d-8b13-4f7b-92c4-b618f362e5f0",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6348380f-3ebb-4bcc-b773-78d9a74a6742"
        },
        "item": {
          "id": "2f15b6b6-3cd8-42cd-b5fc-6458caf397ef",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6a5cea68-cf37-419b-9063-1fa80f4e520b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632955e5-344c-4b7e-8424-1b42655ddd26",
        "cursor": {
          "ref": "8ff17327-8d5d-48ec-aee0-0a91802615dd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3c46b838-d04d-47cb-a787-41b696ce9841"
        },
        "item": {
          "id": "632955e5-344c-4b7e-8424-1b42655ddd26",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "421aa903-563c-4eb3-b53a-930865b73883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f099f8d-533c-404c-a82f-80397daa5f21",
        "cursor": {
          "ref": "d1c21797-20ca-4e09-86a6-11272840c7af",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "46bd3b74-3d95-4a06-862d-3affae1323a8"
        },
        "item": {
          "id": "0f099f8d-533c-404c-a82f-80397daa5f21",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a40c5eff-1097-406d-a159-eecd671791eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e506ed-30fb-4595-b571-95a12937b6ff",
        "cursor": {
          "ref": "abed28f5-6d4e-4362-903d-083e470fc235",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bcdda981-3f81-4bbf-8f88-9f9061ef992b"
        },
        "item": {
          "id": "36e506ed-30fb-4595-b571-95a12937b6ff",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "947885f1-b4ef-471e-87b7-0866090d659e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de1b2e1-c154-4303-b799-15ca33110daf",
        "cursor": {
          "ref": "8e9d5e50-f2c3-4b27-994a-c703ba554adc",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3e204c14-2a9a-4ae2-a84a-89ecfb6f6e3c"
        },
        "item": {
          "id": "6de1b2e1-c154-4303-b799-15ca33110daf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0ccc65e2-ad9c-4393-8a96-cfa19647eebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b30a62-3e0a-4faa-9c73-dceff557fa98",
        "cursor": {
          "ref": "78f95eeb-ac37-4687-8178-fe363e2ca489",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dcbf7d70-fd5c-4177-9312-8c0841385381"
        },
        "item": {
          "id": "52b30a62-3e0a-4faa-9c73-dceff557fa98",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "79a0e02e-94ff-4314-a9f4-fa91e2f4de87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae696f67-2218-40e4-a4ec-04594511273a",
        "cursor": {
          "ref": "0fd00f3d-452c-4fff-a901-b7f724c8a6ab",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0c9592e4-0bfb-44de-8a96-59a34aba9ab2"
        },
        "item": {
          "id": "ae696f67-2218-40e4-a4ec-04594511273a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4eccea9a-024f-489c-bd1a-565faa984aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5891de0-5ccf-46a9-92b8-9585034f0554",
        "cursor": {
          "ref": "fe4c44ba-548a-4263-9a6d-b176e3ee3296",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "88291deb-4f7b-4b1e-a789-2cd40a8d7b97"
        },
        "item": {
          "id": "e5891de0-5ccf-46a9-92b8-9585034f0554",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7d995288-48d3-42dc-818f-88f9a709a161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8408a86-dece-4c7f-88b9-8ad4d4666703",
        "cursor": {
          "ref": "67d729ef-c752-4f68-8e08-78650537cb85",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8eaf8f0c-679a-4f00-a325-f18c477a2dce"
        },
        "item": {
          "id": "c8408a86-dece-4c7f-88b9-8ad4d4666703",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2a4dd937-acde-4828-94c4-5ab0f54da776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedeca68-d8ba-4682-9f71-901fba6df5c3",
        "cursor": {
          "ref": "d9b2f071-13bf-41b6-982d-ea62ae96acb2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0ad1a4f6-cf2e-428f-98cc-8908abc63fd2"
        },
        "item": {
          "id": "dedeca68-d8ba-4682-9f71-901fba6df5c3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "764dfe65-4867-423a-b410-17dc7c863a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbd2d28-661a-4c90-9d43-ef22d828f1a9",
        "cursor": {
          "ref": "179cc9f5-59ea-4b2d-9c2b-e1b9eef75be5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "653a6cab-3eec-45d1-b0f8-45b71fe2d626"
        },
        "item": {
          "id": "9dbd2d28-661a-4c90-9d43-ef22d828f1a9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1002cf9b-7273-46dc-be49-1739a2dcb26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cd35ca-5790-441b-81d2-97888baf4c32",
        "cursor": {
          "ref": "38dc96ac-8ae4-4501-89a5-8832d6785508",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f7b3520b-c80d-4073-9e34-737e68ae89d1"
        },
        "item": {
          "id": "37cd35ca-5790-441b-81d2-97888baf4c32",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "81f406eb-6105-458f-9779-9b9e502ee849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64aa4a0-82e3-4c0f-bd3c-220b5a298243",
        "cursor": {
          "ref": "901644ce-4a4b-4495-aa19-6851592a2276",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2848bdfd-f20d-4317-b6de-8fa176add7c1"
        },
        "item": {
          "id": "b64aa4a0-82e3-4c0f-bd3c-220b5a298243",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6fac85ff-98f6-4bd9-903f-e0955bdd452c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3256c60-3003-4ad0-a073-ed64be2d51ff",
        "cursor": {
          "ref": "7218af8f-182c-4afc-86a0-4469b7a9acff",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e4c8125a-eeed-4df7-b771-955c7bb828fc"
        },
        "item": {
          "id": "e3256c60-3003-4ad0-a073-ed64be2d51ff",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "45a89a6e-58be-473c-a541-5d8ceb9775b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f6c8fc-a19a-468e-ae46-10600e84d6fe",
        "cursor": {
          "ref": "9f46db31-3ff3-426c-992d-a34afc8bd667",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fa44ceeb-3843-4b52-9a55-864ba285b569"
        },
        "item": {
          "id": "99f6c8fc-a19a-468e-ae46-10600e84d6fe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "349107ab-d26c-4ad7-9a44-b63c10205e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cffe265-d220-490d-a8ab-2b64e53f7563",
        "cursor": {
          "ref": "9ffd2d4d-978b-422c-9ac6-b5a9957d5508",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5fb0ea20-4121-4ffc-a23e-15184ca37399"
        },
        "item": {
          "id": "3cffe265-d220-490d-a8ab-2b64e53f7563",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5990e6fc-0953-4a38-adb9-d4aa22d2f277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d7ca4f-327b-4c2e-bac8-2cc70b8c2cbc",
        "cursor": {
          "ref": "277f95ea-63ac-47e4-9ccc-2fa2c43d6595",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "15d62b18-02c6-489b-b97e-4164ad60e515"
        },
        "item": {
          "id": "00d7ca4f-327b-4c2e-bac8-2cc70b8c2cbc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0480d6cd-ceb8-4829-8190-45b7bfe90745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f02d442-eb81-4340-b7ad-9d9e37b93484",
        "cursor": {
          "ref": "64a6011a-b3ba-436b-9f3e-5a93c909b378",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "aff7de45-e479-47f5-ad25-e390e2356e48"
        },
        "item": {
          "id": "3f02d442-eb81-4340-b7ad-9d9e37b93484",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b4224bdf-c1c1-44c6-974b-a0caaed7093d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7861f3ca-fff7-4273-bce4-ce42ccf40c8d",
        "cursor": {
          "ref": "dafd5a29-e02b-4846-b314-d31e78651136",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b81093a9-2d06-43fd-971a-741332abf40a"
        },
        "item": {
          "id": "7861f3ca-fff7-4273-bce4-ce42ccf40c8d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "96369d01-06ab-4029-8c22-6557dc85df71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9233da-07cf-4fc1-83e1-52cd0707c20e",
        "cursor": {
          "ref": "ac60f8b6-9c74-4851-ab0c-dacc098a50e4",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a4f2aa53-4c1d-4324-9bc6-ac986eca461d"
        },
        "item": {
          "id": "ed9233da-07cf-4fc1-83e1-52cd0707c20e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "39e2fa4a-3fd1-49d9-8431-3a443a0607ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed20c02c-c476-4e39-af45-21351c1ee69b",
        "cursor": {
          "ref": "2d3a8464-5138-4015-90fe-2b5967edee0f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c337a7eb-7cc6-4d5e-a7f0-a29e9fcf18a4"
        },
        "item": {
          "id": "ed20c02c-c476-4e39-af45-21351c1ee69b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "47bf8a6e-d374-4ae3-8b12-6bbb70782844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7a9041-9590-4636-b0c2-5dfcb6ec51a7",
        "cursor": {
          "ref": "a216837e-f1a7-4cd8-88b5-fef682648a2b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a083e706-94d1-424d-89b6-87d9da508f48"
        },
        "item": {
          "id": "ab7a9041-9590-4636-b0c2-5dfcb6ec51a7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d6b415b3-9f00-40b0-891e-e267a853efc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e98cdc8-b512-491e-99a5-24e4b39d3f97",
        "cursor": {
          "ref": "8f2b0947-386a-4607-a8ef-c79afc139629",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "17d4e2be-874b-4dc9-a7e5-0a7be7352491"
        },
        "item": {
          "id": "7e98cdc8-b512-491e-99a5-24e4b39d3f97",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d4b22653-3aea-4876-ae4e-50503b1bafbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838fc1ca-ce82-47bf-bb60-edcbabb0c926",
        "cursor": {
          "ref": "9e301c0f-911c-49ad-878f-e1af0e7f9964",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6d3a8389-b266-451a-a9f2-56c0e3ab50ee"
        },
        "item": {
          "id": "838fc1ca-ce82-47bf-bb60-edcbabb0c926",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "51389746-1b68-42be-b6e5-8ef7012a8813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc20b9c5-9ec9-41b5-9a01-109ba811f6d8",
        "cursor": {
          "ref": "c50ba94d-5415-46de-a550-ff060c1eaa92",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "481669a0-3357-4e39-acba-0d7c29620556"
        },
        "item": {
          "id": "bc20b9c5-9ec9-41b5-9a01-109ba811f6d8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "89f50f60-405d-43b5-92de-aab9df50bd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792a5a78-4be5-4c57-a8a2-0aa29ae20c75",
        "cursor": {
          "ref": "94fdcb04-b882-4336-a2e5-c076e2df486a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2fcf2e88-3b1e-40f8-8efd-2e2b8dad8cba"
        },
        "item": {
          "id": "792a5a78-4be5-4c57-a8a2-0aa29ae20c75",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2480aa18-9c97-4fd7-afc2-9563a5c0530e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f84b8ec-3023-45c6-9819-c4155a34d7ff",
        "cursor": {
          "ref": "d67546c8-d42a-45f4-9515-e6d1a6aabaea",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2e59d911-3c02-4c4f-8f19-c8eee12ec886"
        },
        "item": {
          "id": "3f84b8ec-3023-45c6-9819-c4155a34d7ff",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4036334a-336e-48ee-a182-020361c22200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c98e2d-00fa-4cd6-bffb-053af8fe03e9",
        "cursor": {
          "ref": "f080adde-e769-489b-bd8a-c30957f904cb",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7385f383-b322-4ad0-8906-632eb4731593"
        },
        "item": {
          "id": "c3c98e2d-00fa-4cd6-bffb-053af8fe03e9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6f9c8030-dddb-4cd2-a07f-b50719ee60e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21731d67-e0ca-4123-8a70-34051635d51b",
        "cursor": {
          "ref": "0363bbb0-ec60-413a-adfd-b77f54b222ab",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a21778b1-d7b1-487e-b50d-de1eb5072813"
        },
        "item": {
          "id": "21731d67-e0ca-4123-8a70-34051635d51b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8a86c976-cfa9-4abd-885f-35bd881fec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2e91a2-f454-49d5-9539-cd79cc654389",
        "cursor": {
          "ref": "030ce705-7803-4547-a797-1c9037d780b9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ea92c08a-2ab3-4cd8-9511-9d0e5ff1bff9"
        },
        "item": {
          "id": "1a2e91a2-f454-49d5-9539-cd79cc654389",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "94b02f9b-140a-41bf-bb97-01e5e760fe0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac80cd48-9606-4bbd-9798-8980e474e4d0",
        "cursor": {
          "ref": "d7a7faea-b2a5-433a-8688-633f275189bc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c4c3b6cd-bc65-4160-88be-50a37cf0faa9"
        },
        "item": {
          "id": "ac80cd48-9606-4bbd-9798-8980e474e4d0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6cc95e2b-2791-4801-955f-5fdc655840f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e58a893-8956-43bd-8d79-e05b8eda5c5d",
        "cursor": {
          "ref": "03d53397-4d62-4618-ac20-185f4ddd8659",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "321e9471-a4fb-41b0-8265-4bb071c47e25"
        },
        "item": {
          "id": "4e58a893-8956-43bd-8d79-e05b8eda5c5d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "26664067-9865-4cb8-97f0-b04ecf7300fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb0b29e-e244-4a63-8fde-0e4fa518235e",
        "cursor": {
          "ref": "24b0eeda-db8d-44d6-bd2d-e5ea36f453d5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a3398d87-da26-4d53-8258-9a63235b3c2b"
        },
        "item": {
          "id": "2eb0b29e-e244-4a63-8fde-0e4fa518235e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "40924621-81af-463e-ba1a-c5fe60ba6911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f41772e-b1ec-4dab-b3ae-2e1a1528f036",
        "cursor": {
          "ref": "560b2f4b-4481-4995-90da-dc4c4c4bd4df",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a0171911-5eec-4e19-b583-b81ade554c45"
        },
        "item": {
          "id": "5f41772e-b1ec-4dab-b3ae-2e1a1528f036",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0bdf1919-3666-4ed0-8470-346252a2b185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f47eb99-171a-4ff6-afb2-a5e3a694f648",
        "cursor": {
          "ref": "182f89ae-2905-4904-b4a4-7880a4f25280",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "20df5789-5620-4824-b729-c8e4cca63931"
        },
        "item": {
          "id": "9f47eb99-171a-4ff6-afb2-a5e3a694f648",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3e434963-ff28-418e-984a-e50f62af7211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabe3960-d2ee-4c19-a408-411153eff383",
        "cursor": {
          "ref": "0b47e2ef-f285-479d-ad2c-060369944d6d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a82716e6-6b84-470f-8599-109562055ffd"
        },
        "item": {
          "id": "fabe3960-d2ee-4c19-a408-411153eff383",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f80eaab2-c6b2-4afa-ad72-66c1e1a779ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c779910-cd0d-4b32-9aab-4e40982828d8",
        "cursor": {
          "ref": "bab9d021-9a27-41b4-9d02-470308875963",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "32ad7b64-804f-4c19-b444-cffc725bfb9c"
        },
        "item": {
          "id": "0c779910-cd0d-4b32-9aab-4e40982828d8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8ab1f2ab-c846-4e26-a7b5-5ee4846fc96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d839447-fe75-4877-b715-fe4d77aa8932",
        "cursor": {
          "ref": "2fcb89e2-286d-4720-b6a4-b28087badf09",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a2927186-a0f4-4232-8d7f-5f13c8387f16"
        },
        "item": {
          "id": "2d839447-fe75-4877-b715-fe4d77aa8932",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bca93a5a-096d-411c-9c5a-907e0ffdddbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0136d9bd-e1f6-42cf-ab36-69136f65e3ec",
        "cursor": {
          "ref": "2299b157-0c89-4cf2-9dd5-ff011d8e4bcb",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bb30fecf-9f79-4b80-b5c6-9f7f2ad50627"
        },
        "item": {
          "id": "0136d9bd-e1f6-42cf-ab36-69136f65e3ec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "87a19e7e-d93f-4d64-bd96-9f6ee5c77dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57674f8f-ef59-493a-a8e9-ace2b6c35ff6",
        "cursor": {
          "ref": "f458690f-420d-4c48-9527-552e5a0de598",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "186f5b6f-6150-4e35-832a-f965f5165e90"
        },
        "item": {
          "id": "57674f8f-ef59-493a-a8e9-ace2b6c35ff6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cdf17f43-1434-4df9-bf27-f48da7e1e54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41eac23-9b42-4775-a0da-2081b2f1db24",
        "cursor": {
          "ref": "e8bba8fb-ecb6-4a31-8e35-4de48dddba91",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e2faff47-ff46-4eb3-b3b6-80c783f4d950"
        },
        "item": {
          "id": "a41eac23-9b42-4775-a0da-2081b2f1db24",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1978446a-6d19-4edc-ae32-2c0e649c8fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed5b1a3-90b3-4a63-9a04-4f6eef662b5b",
        "cursor": {
          "ref": "ff93db2a-6170-45f0-a821-99a03a8bcff5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "53de5b91-3a80-4dea-a386-a16d6cbf7878"
        },
        "item": {
          "id": "4ed5b1a3-90b3-4a63-9a04-4f6eef662b5b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1106091e-1e1c-4e9e-86cc-2442a8e31eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621c8683-2bf2-4822-a0d8-0bdba96d0b70",
        "cursor": {
          "ref": "ad4a7efa-85cd-48cd-b620-e6691ff12d20",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8b9afe8b-0869-4fe5-b287-50f37e941b8b"
        },
        "item": {
          "id": "621c8683-2bf2-4822-a0d8-0bdba96d0b70",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "649fbdc1-fc75-41ee-a269-5b13e09bd57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d40d35-63e9-4f85-8336-c57feab9b64c",
        "cursor": {
          "ref": "d5bb5707-6e88-480d-ba12-510298de9e80",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "84515bfa-ff68-4227-bded-0a3e0ab2f294"
        },
        "item": {
          "id": "16d40d35-63e9-4f85-8336-c57feab9b64c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f14ef924-7392-4fee-849a-9b5909d206b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27def112-5ce9-412c-b7d1-7dc7571a9972",
        "cursor": {
          "ref": "e2fa5e24-a58b-4dca-a2e6-a698f713e8f1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7ce8fc6e-964c-479b-96a4-1a30a8192702"
        },
        "item": {
          "id": "27def112-5ce9-412c-b7d1-7dc7571a9972",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d98445cb-b83b-4ac6-9315-8e19085a245e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63504b6-95c8-413b-8c3f-9b47dd0a51f3",
        "cursor": {
          "ref": "ffdc1818-d2ef-4eae-878f-467d24076bd4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4c8fbcb2-97f6-445a-81fc-72255ec0207d"
        },
        "item": {
          "id": "e63504b6-95c8-413b-8c3f-9b47dd0a51f3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "04dd4e38-9901-45b2-9e25-fcb72aed5304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9037305c-a4d5-4efb-933b-818202edc9fa",
        "cursor": {
          "ref": "6b75a03a-744d-4118-8ccd-bef916c1732b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "67c984dd-8d99-4809-b7c7-21ebbd63fe33"
        },
        "item": {
          "id": "9037305c-a4d5-4efb-933b-818202edc9fa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bf7aa47a-bcca-4b9d-a067-dc9b200da9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bb8301-0c0c-45fb-8c7b-d5690179d0b6",
        "cursor": {
          "ref": "b610a67c-faf9-40e7-8c17-2383149fad18",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2f65c675-08cc-4117-b354-e6bc5d934005"
        },
        "item": {
          "id": "11bb8301-0c0c-45fb-8c7b-d5690179d0b6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ba789f2f-7326-4b92-aba7-4adb63eb2505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7271b-9037-466a-876a-43350771466b",
        "cursor": {
          "ref": "b65309ba-726b-48b0-9ad2-c8a5c1cb5133",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "95e37515-7d60-48e0-ba08-14f183a46a4a"
        },
        "item": {
          "id": "17e7271b-9037-466a-876a-43350771466b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b87a869e-cf27-4e19-8f74-3095841a9925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497ce92a-1bb1-4ec5-a1e7-4287e8ad65e9",
        "cursor": {
          "ref": "33ffc9bf-cc2e-4b05-8de2-50eeb7c70cd4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "81f98486-b6c9-477b-9810-b09dbab7ac95"
        },
        "item": {
          "id": "497ce92a-1bb1-4ec5-a1e7-4287e8ad65e9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dc8c4a6d-d677-401c-8320-26c7378dc253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf3a90c-0d10-4b47-aab9-fbed919a2ecb",
        "cursor": {
          "ref": "0a4dd9f5-d812-4577-a16b-416c68c7b34a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f407eaed-5a38-4a1e-ac00-531d37ea1c8c"
        },
        "item": {
          "id": "dbf3a90c-0d10-4b47-aab9-fbed919a2ecb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c9580ee2-075a-4ddb-aa17-cd31a4dfec6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c927ddc-a1ec-4291-827b-948d47362c17",
        "cursor": {
          "ref": "5c798451-1dc9-4699-b877-0d19fda45cfb",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ab14484d-3bad-4840-955a-43b8dede4229"
        },
        "item": {
          "id": "6c927ddc-a1ec-4291-827b-948d47362c17",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9f123e31-6902-4e02-9b47-f0b6232bcd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570b4e28-f5e8-40b3-a299-6f498100f1fa",
        "cursor": {
          "ref": "660e148c-988a-4285-afca-8ce2a7cbfa0d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "271cb307-6dba-42f9-96a7-478857b3e304"
        },
        "item": {
          "id": "570b4e28-f5e8-40b3-a299-6f498100f1fa",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3ae1b438-76ec-4fde-81c8-facc1e10987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6851c119-6968-44cc-b6d0-633e2bdb9ceb",
        "cursor": {
          "ref": "c128cb87-98a7-4d97-95a5-5963ec6ad332",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dab75b51-a719-4f5c-a86a-720e0a491379"
        },
        "item": {
          "id": "6851c119-6968-44cc-b6d0-633e2bdb9ceb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "345c7919-4b9b-4561-838f-130f57ca2ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bff600-ee13-4c0d-b63b-b1c7e7001389",
        "cursor": {
          "ref": "a3be888d-3dd1-430e-b8b5-3cee2ff17492",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0a0590e6-f114-4b13-9d21-1797c20ddcd4"
        },
        "item": {
          "id": "52bff600-ee13-4c0d-b63b-b1c7e7001389",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0b5cf783-a7fc-4ad3-9677-4600417b95ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a55523-daab-46ce-a33c-c5a5f10271c2",
        "cursor": {
          "ref": "c0dc2642-6c33-46da-b90b-43388a7e288e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "87a30234-5f52-406d-b68e-f4bd5134e51f"
        },
        "item": {
          "id": "07a55523-daab-46ce-a33c-c5a5f10271c2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a546407d-398c-4c7c-b3e1-12411ecd8e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf701f5c-4560-4e39-9e67-64385d4d55a6",
        "cursor": {
          "ref": "81b9931b-85c1-4482-8481-5edff6bdd1b4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5f7392f4-05a1-431d-9808-4212ff18c8d4"
        },
        "item": {
          "id": "bf701f5c-4560-4e39-9e67-64385d4d55a6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9ec92501-1c86-4a99-b015-c94c8ad85f0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efa304a-feb5-44e5-be0c-9da736eeb491",
        "cursor": {
          "ref": "f50d5f43-83bd-4903-8f49-e914048c29b6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "57610ed1-8c7c-466a-bb17-b9f2ed3c3701"
        },
        "item": {
          "id": "2efa304a-feb5-44e5-be0c-9da736eeb491",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d7e1f3b1-2315-487f-b79c-2233db47ed69",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "748a6cb5-394e-4206-9b8a-128acfbe9090",
        "cursor": {
          "ref": "cd022ade-d731-453b-bcae-388a8c6c3e00",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cef136ab-b219-47e2-834b-333328605084"
        },
        "item": {
          "id": "748a6cb5-394e-4206-9b8a-128acfbe9090",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c42b81da-f812-4d0e-8a91-5e6d1b82f9f4",
          "status": "OK",
          "code": 200,
          "responseTime": 2891,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27f1b9a-e719-4d26-a5e6-623648316078",
        "cursor": {
          "ref": "2e75ac77-0dfe-4c9b-911d-cdc39160611d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f2f9df67-23f4-4834-ba07-48f76b983f93"
        },
        "item": {
          "id": "f27f1b9a-e719-4d26-a5e6-623648316078",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6a881274-29a1-4d46-a645-baddee518e5a",
          "status": "OK",
          "code": 200,
          "responseTime": 2643,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f573c7c1-ef76-46b2-b869-56785e9dabee",
        "cursor": {
          "ref": "535907df-edf0-4fcb-ac5a-f163a1a89805",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fb783892-712e-4753-9499-8ce50711362d"
        },
        "item": {
          "id": "f573c7c1-ef76-46b2-b869-56785e9dabee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe087f4d-59ae-42c2-9a29-1583ea4b8dfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f573c7c1-ef76-46b2-b869-56785e9dabee",
        "cursor": {
          "ref": "535907df-edf0-4fcb-ac5a-f163a1a89805",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fb783892-712e-4753-9499-8ce50711362d"
        },
        "item": {
          "id": "f573c7c1-ef76-46b2-b869-56785e9dabee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe087f4d-59ae-42c2-9a29-1583ea4b8dfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab8fada-6f7a-4b5d-be6e-de03b23079a3",
        "cursor": {
          "ref": "ab51c503-fb3e-44bc-849d-a2b26651afdb",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5b73ef89-30fc-411a-b167-3480b3cc2380"
        },
        "item": {
          "id": "fab8fada-6f7a-4b5d-be6e-de03b23079a3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b890bb8a-562d-4d50-a1bb-863f4e67f89c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce91522d-8120-47b6-89b7-b98969901ce4",
        "cursor": {
          "ref": "f0337dc1-d375-4d61-96f5-89003e3017cb",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f7dc520c-ed4a-4c64-8dd4-c38da2f186cd"
        },
        "item": {
          "id": "ce91522d-8120-47b6-89b7-b98969901ce4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b958087d-ff92-443f-bfa9-42932da6e297",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}